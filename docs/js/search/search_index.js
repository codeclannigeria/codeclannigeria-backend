var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControllerOptions.html",[0,1.04,1,2.932]],["body/interfaces/AbstractControllerOptions.html",[0,1.838,1,5.18,2,2.193,3,0.147,4,0.132,5,0.117,6,4.041,7,2.605,8,4.041,9,0.481,10,1.275,11,5.809,12,4.74,13,0.634,14,0.011,15,0.238,16,3.394,17,1.88,18,2.665,19,3.56,20,0.201,21,2.17,22,3.373,23,3.373,24,4.74,25,1.104,26,1.723,27,3.779,28,4.369,29,4.369,30,4.369,31,4.041,32,0.007,33,0.008,34,0.007]],["title/interfaces/AbstractControllerWithAuthOptions.html",[0,1.04,24,2.932]],["body/interfaces/AbstractControllerWithAuthOptions.html",[0,1.828,1,5.151,2,2.166,3,0.145,4,0.13,5,0.116,6,3.992,7,2.573,8,3.992,9,0.476,10,1.265,11,3.992,13,0.457,14,0.011,15,0.235,16,3.872,17,1.857,18,3.133,19,3.517,20,0.2,21,2.158,22,3.332,23,3.332,24,5.151,25,1.2,26,2.349,27,3.733,28,4.316,29,4.316,30,4.316,31,3.992,32,0.007,33,0.008,34,0.007]],["title/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.04,27,2.932]],["body/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.81,1,4.642,2,2.121,3,0.142,4,0.128,5,0.114,6,3.909,7,2.519,8,3.909,9,0.466,10,1.248,11,3.909,12,5.366,13,0.693,14,0.011,15,0.231,16,3.323,17,1.819,18,2.609,19,3.444,20,0.198,21,2.137,22,3.263,23,3.263,24,5.101,25,1.188,26,1.667,27,4.642,28,6.206,29,4.226,30,6.206,31,3.909,32,0.006,33,0.008,34,0.006]],["title/classes/AcctVerifyDto.html",[35,0.172,36,3.135]],["body/classes/AcctVerifyDto.html",[3,0.143,4,0.128,5,0.114,9,0.468,10,1.253,13,0.626,14,0.011,15,0.323,20,0.143,25,0.856,32,0.006,33,0.008,34,0.006,35,0.274,36,4.983,37,0.908,38,6.845,39,4.68,40,6.51,41,6.51,42,6.51,43,1.32,44,1.866,45,5.915,46,1.3,47,5.33,48,5.549,49,5.33,50,5.33,51,3.282,52,1.201,53,1.885,54,3.123,55,4.68,56,4.68,57,2.279]],["title/classes/ApiException.html",[35,0.172,58,2.184]],["body/classes/ApiException.html",[3,0.099,4,0.09,5,0.08,9,0.327,10,0.983,13,0.668,14,0.011,15,0.231,20,0.099,21,1.074,32,0.004,33,0.006,34,0.004,35,0.151,37,0.633,43,1.395,44,1.957,46,1.388,52,0.838,58,2.722,59,7.05,60,3.264,61,2.133,62,5.614,63,6.681,64,4.806,65,6.681,66,6.681,67,3.306,68,6.681,69,6.173,70,2.429,71,3.717,72,2.758,73,5.298,74,1.397,75,0.861,76,3.626,77,3.717,78,3.717,79,3.717,80,3.717,81,3.717,82,3.717,83,3.717,84,1.91,85,0.91,86,3.717,87,3.717,88,3.717,89,3.717,90,3.717,91,3.717,92,3.717,93,3.717,94,3.717,95,3.717]],["title/controllers/AppController.html",[7,2.021,96,3.135]],["body/controllers/AppController.html",[3,0.153,4,0.138,5,0.123,7,3.358,9,0.503,14,0.011,15,0.333,20,0.153,32,0.007,33,0.009,34,0.007,35,0.232,43,1.135,44,1.44,46,1.003,52,1.29,85,1.401,96,5.21,97,2.722,98,5.026,99,2.099,100,7.997,101,5.723,102,1.654,103,4.978,104,5.026,105,4.566,106,5.723,107,5.026,108,4.223,109,1.564,110,2.151,111,5.723]],["title/modules/AppModule.html",[112,1.299,113,3.135]],["body/modules/AppModule.html",[3,0.095,4,0.086,5,0.076,14,0.011,15,0.367,20,0.138,32,0.004,33,0.006,34,0.004,35,0.145,85,0.873,96,4.451,97,2.447,103,4.74,104,3.133,112,1.845,113,6.41,114,1.579,115,1.697,116,1.833,117,1.833,118,1.697,119,2.98,120,1.697,121,3.133,122,3.133,123,3.133,124,5.031,125,5.031,126,5.031,127,5.031,128,5.031,129,5.031,130,4.74,131,5.031,132,4.491,133,4.08,134,2.644,135,1.762,136,1.636,137,2.847,138,2.644,139,3.568,140,3.133,141,1.996,142,1.833,143,3.568,144,3.568,145,3.568,146,3.568,147,3.568,148,3.568,149,1.579,150,2.091,151,3.568,152,4.104,153,3.568,154,3.133,155,2.847,156,2.462,157,3.568,158,1.715,159,3.549,160,3.133,161,3.133,162,2.108,163,3.133,164,3.133,165,3.133,166,3.133,167,3.015,168,3.133,169,2.847,170,2.847,171,2.847,172,2.847,173,1.762]],["title/injectables/AppService.html",[103,2.762,174,1.758]],["body/injectables/AppService.html",[3,0.163,4,0.147,5,0.131,9,0.536,14,0.011,15,0.265,20,0.163,32,0.007,33,0.009,34,0.007,35,0.247,43,1.179,46,1.068,85,1.492,99,2.181,102,1.761,103,4.77,110,2.291,174,3.035,175,3.572,176,5.352,177,8.171,178,6.096,179,6.096,180,6.096]],["title/classes/AssignTasksDto.html",[35,0.172,181,3.39]],["body/classes/AssignTasksDto.html",[3,0.15,4,0.135,5,0.12,9,0.494,10,1.295,13,0.589,14,0.011,15,0.244,20,0.15,32,0.007,33,0.008,34,0.007,35,0.283,37,0.956,43,1.276,44,1.756,46,1.223,53,1.986,162,2.295,181,5.567,182,6.668,183,4.931,184,7.594,185,7.594,186,6.979,187,5.615,188,5.615,189,6.058,190,5.239,191,5.567]],["title/controllers/AuthController.html",[7,2.021,192,3.135]],["body/controllers/AuthController.html",[3,0.056,4,0.051,5,0.045,7,0.998,9,0.184,13,0.607,14,0.011,15,0.334,18,0.813,20,0.056,21,1.989,32,0.003,33,0.004,34,0.003,35,0.085,36,4.58,40,3.001,41,3.001,42,3.001,44,1.481,46,1.032,52,0.473,54,2.922,57,3.286,58,2.222,61,1.481,67,1.83,70,0.962,74,2.213,75,1.364,84,1.078,85,0.513,97,0.998,99,1.016,102,1.701,105,1.673,109,1.182,110,2.064,135,2.463,149,0.928,150,1.229,158,2.585,192,2.521,193,1.842,194,1.842,195,3.317,196,4.325,197,3.418,198,3.418,199,3.418,200,3.418,201,3.418,202,2.098,203,4.051,204,3.241,205,2.098,206,2.098,207,2.098,208,2.098,209,3.001,210,2.098,211,3.18,212,2.098,213,3.071,214,2.098,215,2.098,216,2.983,217,0.897,218,2.098,219,3.973,220,2.098,221,3.44,222,3.418,223,2.098,224,2.098,225,2.098,226,4.986,227,3.418,228,3.418,229,2.098,230,2.098,231,2.562,232,2.098,233,2.098,234,3.44,235,3.418,236,2.098,237,2.098,238,2.003,239,1.292,240,1.548,241,1.548,242,1.229,243,1.673,244,1.229,245,3.418,246,3.418,247,2.003,248,3.418,249,1.229,250,2.098,251,2.098,252,1.842,253,2.663,254,1.842,255,1.673,256,1.229,257,3.23,258,0.897,259,2.534,260,1.548,261,2.663,262,1.673,263,1.548,264,2.098,265,2.098,266,2.098,267,2.358,268,1.842,269,2.098,270,2.098,271,2.098,272,1.842,273,1.548,274,1.673,275,1.673,276,2.098,277,2.098,278,2.811,279,2.098,280,4.051,281,2.098,282,2.726,283,3.118,284,2.098,285,2.098,286,1.292,287,2.098,288,3.626,289,4.38,290,2.098,291,3.025,292,2.098,293,2.663,294,1.292,295,2.098,296,2.098,297,2.098,298,1.673,299,2.098,300,4.67,301,2.098,302,3.418,303,3.001,304,3.418,305,2.098,306,3.418,307,1.842,308,3.001,309,1.842,310,2.098,311,3.001,312,3.418,313,3.418,314,3.418,315,4.986,316,3.418,317,3.418,318,3.418,319,2.098,320,3.001,321,3.418,322,3.418,323,3.001,324,1.414,325,3.418,326,2.098,327,2.098,328,2.098,329,2.358,330,1.842,331,3.001,332,2.098,333,1.842,334,1.447,335,2.098,336,2.726,337,2.098,338,2.098,339,2.098,340,2.098]],["title/modules/AuthModule.html",[112,1.299,124,2.932]],["body/modules/AuthModule.html",[3,0.109,4,0.098,5,0.087,14,0.011,15,0.363,20,0.109,32,0.005,33,0.007,34,0.005,35,0.165,75,0.944,85,0.997,97,2.687,112,1.983,114,1.803,115,1.938,116,2.093,117,2.093,118,1.938,119,3.204,120,3.085,124,5.919,133,4.26,134,2.903,135,2.012,136,1.868,138,2.903,141,2.279,142,2.093,156,2.811,158,1.358,159,4.476,162,1.177,192,4.786,253,4.69,254,3.577,261,5.136,262,3.25,274,3.25,275,3.25,341,3.577,342,4.074,343,3.577,344,3.577,345,5.254,346,5.254,347,5.618,348,3.25,349,4.074,350,2.811,351,4.169,352,1.531,353,4.074,354,3.006,355,4.074,356,4.074,357,3.577,358,3.577,359,2.387,360,3.577,361,2.279,362,3.577,363,3.577,364,3.577,365,3.25]],["title/interfaces/AuthObj.html",[0,1.04,366,2.762]],["body/interfaces/AuthObj.html",[0,1.812,2,2.127,3,0.142,4,0.128,5,0.114,9,0.467,10,1.251,13,0.569,14,0.011,15,0.231,16,2.625,18,2.061,20,0.18,26,2.656,32,0.006,33,0.008,34,0.006,258,2.272,366,5.422,367,3.92,368,3.92,369,5.745,370,5.745,371,3.644,372,3.454,373,4.382,374,4.382,375,3.464,376,3.464,377,2.614]],["title/injectables/AuthService.html",[174,1.758,261,2.617]],["body/injectables/AuthService.html",[3,0.061,4,0.055,5,0.049,9,0.2,12,4.217,13,0.675,14,0.011,15,0.314,20,0.061,21,1.321,22,2.249,32,0.003,33,0.004,34,0.003,35,0.092,43,1.256,46,1.126,57,2.237,61,1.616,62,1.68,64,2.374,70,1.675,72,0.883,74,2.414,75,1.488,84,1.17,85,0.557,99,1.086,102,1.766,109,0.998,110,1.966,136,1.044,149,1.616,150,1.334,158,2.605,162,0.658,174,1.511,175,1.334,195,3.371,211,3.127,219,1.956,221,2.52,231,1.17,257,3.667,258,0.974,259,3.582,260,1.68,261,2.249,273,4.225,274,1.817,275,1.817,278,3.723,283,3.391,288,2.816,289,1.817,291,3.3,300,2.972,303,2,307,2,308,4.015,309,3.207,323,2,329,4.874,330,3.207,331,6.338,333,2,334,2.52,336,2.914,347,3.86,357,2,358,2,378,2,379,4.573,380,3.652,381,3.652,382,3.652,383,4.573,384,3.652,385,2,386,4.573,387,2.277,388,2.277,389,2.277,390,3.652,391,2.277,392,3.652,393,2.277,394,3.652,395,2.277,396,2.277,397,2.277,398,3.652,399,4.573,400,2.277,401,4.015,402,2.914,403,1.68,404,2,405,1.817,406,1.403,407,1.817,408,2.277,409,2.374,410,1.817,411,2.914,412,2.277,413,2.277,414,1.817,415,2.277,416,3.652,417,2.277,418,3.207,419,3.652,420,2.277,421,2.277,422,2.277,423,5.232,424,2.277,425,2.277,426,2.277,427,2.52,428,2.52,429,3.652,430,1.274,431,2.277,432,2.277,433,2.277,434,3.652,435,2.277,436,2.277,437,2,438,2,439,2.277,440,2.277,441,2.277,442,1.149,443,3.652,444,3.652,445,2,446,3.652,447,3.652,448,2.277,449,2.277,450,2.277,451,2.277,452,2.277,453,2,454,2.277,455,2.277,456,3.652,457,1.817]],["title/guards/AuthenticationGuard.html",[263,3.135,458,3.39]],["body/guards/AuthenticationGuard.html",[3,0.119,4,0.107,5,0.095,9,0.391,13,0.574,14,0.011,15,0.33,20,0.119,21,1.286,32,0.005,33,0.007,34,0.005,35,0.18,46,1.191,54,3.518,57,1.903,61,1.709,70,2.041,74,2.553,75,1.574,85,1.09,99,1.784,102,1.735,108,3.284,109,1.217,110,2.553,149,1.97,150,2.608,158,2.264,162,1.735,174,2.483,195,3.345,204,5.084,211,3.218,231,3.084,243,4.789,249,2.608,257,3.114,261,4.817,262,3.551,263,4.429,268,3.908,283,2.657,291,2.287,459,3.551,460,3.908,461,5.8,462,6.003,463,4.451,464,4.451,465,4.789,466,5.8,467,4.451,468,3.551,469,6.003,470,4.451,471,3.284,472,3.908,473,4.451,474,3.551,475,4.451,476,4.451,477,4.451,478,3.908]],["title/classes/AvatarUploadDto.html",[35,0.172,479,3.135]],["body/classes/AvatarUploadDto.html",[3,0.16,4,0.144,5,0.174,9,0.527,10,1.348,13,0.613,14,0.011,15,0.261,20,0.16,32,0.007,33,0.009,34,0.007,35,0.243,37,1.021,43,1.167,44,1.508,46,1.05,52,1.351,76,3.106,479,5.359,480,6.378,481,5.262,482,5.262,483,5.359,484,5.359,485,5.993]],["title/interfaces/BaseControllerOptions.html",[0,1.04,486,2.932]],["body/interfaces/BaseControllerOptions.html",[0,1.805,2,2.109,3,0.141,4,0.127,5,0.113,7,2.505,9,0.463,10,1.244,12,4.624,13,0.623,14,0.011,15,0.229,16,3.311,17,1.808,18,2.599,19,3.423,20,0.197,21,2.316,22,3.243,23,3.243,25,1.077,26,1.657,32,0.006,33,0.008,34,0.006,486,5.087,487,3.633,488,3.633,489,3.886,490,4.157,491,4.624,492,3.633,493,2.601,494,3.886,495,2.82,496,3.886,497,2.82,498,3.886,499,1.705,500,4.202]],["title/interfaces/BaseControllerWithAuthOptions.html",[0,1.04,491,2.932]],["body/interfaces/BaseControllerWithAuthOptions.html",[0,1.795,2,2.084,3,0.139,4,0.125,5,0.112,7,2.475,9,0.458,10,1.235,13,0.44,14,0.011,15,0.227,16,3.817,17,1.787,18,3.097,19,3.383,20,0.196,21,2.308,22,3.206,23,3.206,25,1.178,26,2.307,32,0.006,33,0.008,34,0.006,486,5.059,487,3.591,488,3.591,489,3.84,490,2.788,491,5.059,492,3.591,493,2.571,494,3.84,495,2.788,496,3.84,497,2.788,498,3.84,499,1.685,500,4.152]],["title/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.04,492,2.932]],["body/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.736,2,1.942,3,0.13,4,0.117,5,0.104,7,2.307,9,0.426,10,1.179,12,5.716,13,0.724,14,0.011,15,0.211,16,3.14,17,1.665,18,2.465,19,3.153,20,0.19,21,2.257,22,2.987,23,2.987,25,1.139,26,1.526,32,0.006,33,0.008,34,0.006,486,4.385,487,3.346,488,3.346,489,3.579,490,2.598,491,4.891,492,4.385,493,3.716,494,3.579,495,4.029,496,3.579,497,4.029,498,3.579,499,2.436,500,3.87]],["title/classes/BaseDto.html",[35,0.172,501,1.881]],["body/classes/BaseDto.html",[3,0.141,4,0.126,5,0.113,9,0.462,10,1.241,13,0.622,14,0.011,15,0.32,20,0.141,32,0.006,33,0.008,34,0.006,35,0.299,37,0.894,43,1.075,44,1.853,46,1.291,52,1.184,53,1.857,76,3.149,109,2.324,190,4.616,324,3.207,442,2.316,501,2.961,502,4.611,503,2.684,504,2.684,505,4.12,506,5.251,507,3.077,508,5.251,509,5.251,510,3.555,511,2.036]],["title/classes/BaseEntity.html",[35,0.172,512,2.276]],["body/classes/BaseEntity.html",[3,0.068,4,0.061,5,0.055,9,0.224,10,0.742,13,0.603,14,0.011,15,0.263,17,2.763,20,0.068,21,1.611,25,0.642,26,1.754,32,0.003,33,0.005,34,0.003,35,0.103,37,0.435,43,0.792,44,1.748,46,1.376,61,1.748,99,1.188,102,1.611,109,2.272,110,1.502,162,2.342,173,3.528,209,2.24,217,2.746,257,1.17,258,1.091,324,3.023,361,3.387,377,2.348,442,1.55,503,1.796,504,1.796,512,3.989,513,2.24,514,5.575,515,2.887,516,2.887,517,2.887,518,3.933,519,3.547,520,2.887,521,3.267,522,3.267,523,3.267,524,3.509,525,4.927,526,2.944,527,3.267,528,2.551,529,4.497,530,4.234,531,3.267,532,2.551,533,2.551,534,2.551,535,2.551,536,2.551,537,2.551,538,2.551,539,2.551,540,2.551,541,3.763,542,3.432,543,2.551,544,2.551,545,2.551,546,2.551,547,2.551,548,2.551,549,2.551,550,2.551,551,4.186,552,1.366,553,2.551,554,2.035,555,1.882,556,2.035,557,3.119,558,3.509,559,2.551,560,2.551,561,2.551,562,2.551,563,2.551,564,2.551,565,2.551,566,2.551,567,3.996,568,2.551,569,3.996,570,4.326,571,3.996]],["title/interfaces/BufferedFile.html",[0,1.04,572,2.49]],["body/interfaces/BufferedFile.html",[0,1.312,2,2.147,3,0.143,4,0.129,5,0.115,9,0.471,10,1.258,13,0.695,14,0.011,20,0.143,32,0.006,33,0.008,34,0.006,43,1.413,72,2.883,572,3.973,573,4.708,574,4.708,575,8.359,576,7.813,577,7.813,578,7.813,579,7.813,580,6.86]],["title/classes/CategoriesController.html",[35,0.172,581,3.135]],["body/classes/CategoriesController.html",[3,0.103,4,0.093,5,0.083,9,0.339,13,0.649,14,0.011,15,0.356,18,1.494,20,0.103,21,1.114,25,0.873,32,0.005,33,0.007,34,0.005,35,0.156,37,0.656,44,0.97,46,0.953,52,0.869,58,3.235,61,1.368,67,3.662,70,1.767,74,2.043,75,1.459,84,1.98,85,0.943,99,1.615,102,1.114,109,1.053,110,1.448,158,1.812,195,2.693,211,2.406,217,2.324,219,2.911,238,2.258,239,3.347,242,3.185,244,2.258,247,4.007,258,1.648,283,1.706,286,2.373,288,3.347,291,1.98,293,2.373,294,2.373,371,1.648,375,2.793,376,1.98,377,1.494,406,2.373,490,2.064,493,1.904,495,2.064,497,2.064,499,1.248,581,4.01,582,3.074,583,3.878,584,3.854,585,5.045,586,3.854,587,5.435,588,2.373,589,5.045,590,2.659,591,2.843,592,4.608,593,2.505,594,2.843,595,2.843,596,3.854,597,3.347,598,3.041,599,2.843,600,2.156,601,2.505,602,2.064,603,3.041,604,2.505,605,3.384,606,4.093,607,3.384,608,3.533,609,3.854,610,2.843,611,3.384,612,3.347,613,3.75,614,2.843,615,3.854,616,2.373,617,2.505,618,2.659,619,2.505,620,2.505,621,3.854,622,1.405,623,3.854,624,3.854,625,2.505]],["title/modules/CategoriesModule.html",[112,1.299,125,2.932]],["body/modules/CategoriesModule.html",[3,0.136,4,0.122,5,0.109,14,0.011,15,0.353,20,0.136,32,0.006,33,0.008,34,0.006,35,0.206,75,1.179,85,1.245,97,2.419,112,2.218,114,2.251,115,2.419,116,2.613,117,2.613,118,2.419,119,3.238,120,3.449,125,5.47,134,3.368,135,2.512,136,2.332,138,2.613,141,2.845,142,2.613,158,1.695,359,2.98,361,2.845,581,4.836,585,6.237,605,4.466,606,3.306,607,4.466,626,4.466,627,4.466,628,4.058,629,3.841,630,3.306,631,5.086,632,5.787,633,4.466,634,4.466,635,2.98,636,3.132]],["title/classes/Category.html",[35,0.172,606,2.762]],["body/classes/Category.html",[3,0.084,4,0.076,5,0.067,9,0.493,10,0.87,13,0.652,14,0.011,15,0.244,17,2.652,20,0.084,21,0.909,25,0.754,26,1.476,32,0.004,33,0.006,34,0.004,35,0.128,37,0.536,43,0.901,44,1.91,46,1.42,61,1.868,75,1.441,99,1.394,102,1.797,109,2.287,162,2.377,173,3.285,217,3.09,324,2.572,352,1.182,377,2.175,442,1.476,503,1.71,504,1.71,512,4.481,515,2.749,516,2.749,517,2.749,518,3.643,519,3.287,520,2.749,521,3.287,522,3.287,523,3.287,526,3.198,527,3.897,529,4.087,530,3.478,531,3.643,541,3.287,542,3.071,551,2.749,552,1.685,557,1.76,606,3.049,637,2.762,638,1.878,639,3.049,640,3.049,641,3.454,642,3.236,643,3.146,644,3.68,645,1.938,646,1.938,647,1.938,648,1.938,649,1.938,650,1.938,651,1.938,652,1.938,653,1.938,654,1.938,655,1.938,656,1.938,657,1.938,658,1.182,659,1.938,660,1.938,661,1.938]],["title/classes/CategoryDto.html",[35,0.172,592,2.617]],["body/classes/CategoryDto.html",[3,0.127,4,0.114,5,0.101,9,0.416,10,1.161,13,0.654,14,0.011,15,0.324,20,0.167,25,1.126,32,0.006,33,0.008,34,0.006,35,0.302,37,0.806,43,1.245,44,1.95,46,1.358,53,1.674,75,1.623,109,2.176,324,2.588,352,1.78,442,1.968,499,1.533,501,3.523,503,2.28,504,2.28,505,3.853,507,2.774,510,3.212,511,1.836,592,3.853,608,3.078,638,1.896,644,3.212,658,1.78,662,3.777,663,2.478,664,3.777,665,4.735,666,4.735,667,4.735,668,3.078,669,3.078,670,3.078,671,2.868,672,2.339,673,2.536,674,2.339,675,4.157]],["title/interfaces/Cloudinary.html",[0,1.04,676,2.49]],["body/interfaces/Cloudinary.html",[0,1.789,2,1.804,3,0.121,4,0.109,5,0.097,9,0.396,10,1.123,13,0.577,14,0.011,17,1.547,20,0.121,26,1.418,32,0.005,33,0.007,34,0.005,43,1.404,72,2.651,75,1.858,149,2.679,162,1.302,167,4.282,427,4.177,428,4.177,676,4.467,677,3.109,678,5.533,679,5.625,680,4.177,681,5.042,682,3.935,683,4.501,684,4.177,685,4.466,686,4.466,687,4.466,688,4.466,689,4.466,690,3.325,691,3.325,692,3.325,693,3.325,694,3.325,695,3.325,696,3.325,697,3.325,698,3.109,699,3.109,700,3.325,701,3.325,702,3.325,703,3.325,704,3.325,705,3.325,706,3.325]],["title/interfaces/Configuration.html",[0,1.04,149,1.881]],["body/interfaces/Configuration.html",[0,1.692,2,1.581,3,0.106,4,0.095,5,0.085,9,0.347,10,1.026,13,0.694,14,0.011,17,1.355,20,0.106,26,2.007,32,0.005,33,0.007,34,0.005,43,1.4,72,3.002,75,1.601,149,2.823,162,1.141,167,4.704,427,5.019,428,5.019,676,4.704,677,2.724,678,4.768,679,4.078,680,3.814,681,5.34,682,3.593,683,4.943,684,3.814,685,5.367,686,5.367,687,5.367,688,5.367,689,5.367,690,2.913,691,2.913,692,2.913,693,2.913,694,2.913,695,2.913,696,2.913,697,2.913,698,2.724,699,2.724,700,2.913,701,2.913,702,2.913,703,2.913,704,2.913,705,2.913,706,2.913]],["title/interfaces/ControllerAuth.html",[0,1.04,372,2.762]],["body/interfaces/ControllerAuth.html",[0,1.761,2,2.002,3,0.134,4,0.12,5,0.107,9,0.44,10,1.203,13,0.666,14,0.011,15,0.218,16,2.47,18,1.939,20,0.174,26,2.542,32,0.006,33,0.008,34,0.006,258,2.139,366,5.691,367,3.689,368,3.689,369,3.689,370,3.689,371,3.518,372,4.214,373,5.127,374,5.127,375,4.053,376,4.053,377,3.059]],["title/classes/Course.html",[35,0.172,707,2.932]],["body/classes/Course.html",[3,0.073,4,0.066,5,0.058,9,0.451,10,0.78,13,0.658,14,0.011,15,0.223,17,2.639,20,0.073,21,0.787,25,0.675,26,1.322,32,0.003,33,0.005,34,0.003,35,0.11,37,0.464,43,1.105,44,1.935,46,1.417,61,1.787,72,1.63,99,1.249,102,1.669,109,2.322,162,2.44,173,3.599,217,3.116,324,2.388,352,1.023,377,1.991,442,1.322,503,1.532,504,1.532,512,4.386,515,2.463,516,2.463,517,2.463,518,3.384,519,3.009,520,2.463,521,3.009,522,3.009,523,3.009,526,3.024,527,4.161,529,3.865,530,3.23,531,3.384,541,3.009,542,2.852,551,3.657,552,1.458,557,3.23,622,2.105,638,2.641,639,3.753,640,3.753,641,4.234,642,2.9,644,3.571,645,1.677,646,1.677,647,1.677,648,1.677,649,1.677,650,1.677,651,1.677,652,1.677,653,1.677,654,1.677,655,1.677,656,1.677,657,1.677,658,1.023,659,1.677,660,1.677,661,1.677,663,1.816,707,2.9,708,2.391,709,4.096,710,3.788,711,2.723,712,2.352,713,2.723,714,2.723,715,2.723,716,1.878,717,2.723]],["title/classes/CourseDto.html",[35,0.172,718,2.762]],["body/classes/CourseDto.html",[3,0.114,4,0.103,5,0.091,9,0.375,10,1.083,13,0.668,14,0.011,15,0.336,20,0.156,25,1.068,32,0.005,33,0.007,34,0.005,35,0.29,37,0.727,43,1.271,44,1.944,45,4.656,46,1.386,52,0.962,53,1.51,72,2.263,76,2.843,109,2.232,324,2.414,352,1.605,442,1.836,499,1.382,501,3.419,503,2.127,504,2.127,505,3.594,507,2.502,510,3.277,511,1.656,622,2.423,638,1.709,644,3.049,658,1.605,663,2.351,668,2.775,669,2.775,670,2.775,671,2.676,672,2.109,673,2.286,674,2.109,709,5.304,710,4.905,718,3.793,719,3.406,720,4.269,721,4.269,722,4.269,723,4.269,724,4.269,725,4.269,726,4.269,727,3.42,728,2.775,729,3.749,730,2.945,731,3.749]],["title/classes/CoursesController.html",[35,0.172,732,3.135]],["body/classes/CoursesController.html",[3,0.104,4,0.093,5,0.083,9,0.341,13,0.65,14,0.011,15,0.357,18,1.504,20,0.104,21,1.121,25,0.623,32,0.005,33,0.007,34,0.005,35,0.157,37,0.661,44,0.976,46,0.957,52,0.874,58,3.247,61,1.374,67,3.673,70,1.779,74,2.052,75,1.265,84,1.993,85,0.95,99,1.623,102,1.121,109,1.06,110,1.458,158,1.293,195,2.702,211,2.417,217,2.335,219,2.924,238,2.273,239,3.363,242,3.2,244,2.273,247,4.019,258,1.659,283,1.717,286,2.389,288,3.363,291,1.993,293,2.389,294,2.389,371,1.659,375,3.247,376,1.993,377,1.504,406,2.389,490,2.077,493,1.916,495,2.077,497,2.077,499,1.256,588,2.389,590,2.676,591,2.862,593,2.521,594,2.862,595,2.862,597,3.363,598,3.055,599,2.862,600,2.17,601,2.521,602,2.077,603,3.055,604,2.521,610,2.862,612,3.891,613,4.359,614,2.862,616,2.389,617,2.521,618,2.676,619,2.521,620,2.521,622,1.99,625,2.521,707,4.359,718,4.458,730,3.767,732,4.028,733,3.406,734,3.879,735,5.06,736,3.879,737,5.46,738,5.532,739,3.879,740,3.406,741,3.406,742,3.879,743,3.406,744,3.879,745,3.879,746,2.862,747,3.406]],["title/modules/CoursesModule.html",[112,1.299,126,2.932]],["body/modules/CoursesModule.html",[3,0.133,4,0.119,5,0.106,14,0.011,15,0.351,20,0.133,32,0.006,33,0.008,34,0.006,35,0.201,75,1.149,85,1.214,97,2.358,112,2.191,114,2.195,115,2.358,116,2.548,117,2.548,118,2.358,119,3.539,120,3.408,126,5.664,134,3.313,135,2.449,136,2.274,138,2.548,141,2.774,142,2.548,158,1.653,359,2.906,361,2.774,629,3.779,630,3.223,635,2.906,636,3.054,707,3.421,732,4.757,735,6.379,740,4.354,741,4.354,748,4.354,749,4.354,750,4.354,751,3.956,752,4.959,753,5.717,754,4.354,755,4.354]],["title/classes/CreateCategoryDto.html",[35,0.172,589,3.135]],["body/classes/CreateCategoryDto.html",[3,0.168,4,0.151,5,0.134,14,0.011,15,0.325,20,0.168,25,1.007,32,0.008,33,0.009,34,0.008,35,0.254,37,1.067,51,3.86,52,1.413,75,1.452,589,5.505,592,3.86,611,5.503,663,2.216,756,5.503,757,5.503,758,6.267]],["title/classes/CreateCourseDto.html",[35,0.172,738,3.135]],["body/classes/CreateCourseDto.html",[3,0.167,4,0.15,5,0.134,14,0.011,15,0.324,20,0.167,25,1.003,32,0.008,33,0.009,34,0.008,35,0.253,37,1.064,51,3.846,52,1.408,622,2.276,663,2.208,710,4.608,718,4.059,738,5.493,743,5.484,759,5.484,760,5.484,761,6.245]],["title/classes/CreateStageDto.html",[35,0.172,762,2.932]],["body/classes/CreateStageDto.html",[3,0.151,4,0.136,5,0.121,9,0.495,10,1.297,13,0.476,14,0.011,15,0.346,20,0.151,25,0.905,32,0.007,33,0.008,34,0.007,35,0.308,37,0.959,43,1.123,44,1.417,46,0.987,51,3.469,52,1.27,53,1.992,190,4.824,507,3.301,510,3.206,511,2.184,622,2.053,663,1.992,762,4.824,763,6.14,764,4.946,765,3.252,766,5.633,767,3.301,768,4.946,769,5.633,770,4.156]],["title/classes/CreateTaskDto.html",[35,0.172,771,2.932]],["body/classes/CreateTaskDto.html",[3,0.163,4,0.147,5,0.131,14,0.011,15,0.343,20,0.163,25,0.979,32,0.007,33,0.009,34,0.007,35,0.298,37,1.038,52,1.374,442,1.918,503,2.222,504,2.222,511,2.364,671,3.365,771,5.062,772,5.352,773,5.352,774,3.754,775,3.754,776,5.352,777,6.096]],["title/classes/CreateTrackDto.html",[35,0.172,778,2.762]],["body/classes/CreateTrackDto.html",[3,0.151,4,0.136,5,0.121,13,0.477,14,0.011,15,0.331,20,0.187,25,1.126,32,0.007,33,0.008,34,0.007,35,0.284,37,0.962,43,0.908,52,1.274,76,2.996,442,2.204,483,4.169,484,4.169,503,2.554,504,2.554,572,4.106,774,3.48,778,4.554,779,4.508,780,4.508,781,4.962,782,4.962,783,2.791,784,4.508,785,6.152,786,4.554,787,3.898,788,4.508]],["title/classes/CreateUserDto.html",[35,0.172,789,2.762]],["body/classes/CreateUserDto.html",[3,0.166,4,0.149,5,0.133,14,0.011,15,0.323,20,0.166,25,0.996,32,0.007,33,0.009,34,0.007,35,0.251,37,1.056,52,1.398,256,3.634,442,1.951,503,2.26,504,2.26,774,3.819,789,4.82,790,5.445,791,4.575,792,3.321,793,4.947,794,4.031]],["title/classes/CreateWithThumbnailTrackDto.html",[35,0.172,787,2.932]],["body/classes/CreateWithThumbnailTrackDto.html",[3,0.143,4,0.129,5,0.115,9,0.471,10,1.258,13,0.573,14,0.011,15,0.324,20,0.181,25,1.089,32,0.006,33,0.008,34,0.006,35,0.275,37,0.913,43,1.089,44,1.349,46,0.94,52,1.209,76,2.899,442,2.133,482,4.708,483,5.002,484,5.002,503,2.471,504,2.471,572,4.357,774,3.302,778,3.485,779,5.409,780,4.277,781,4.708,782,4.708,783,2.648,784,4.277,785,5.953,786,4.407,787,4.677,788,5.931,795,5.362]],["title/interfaces/Database.html",[0,1.04,167,2.49]],["body/interfaces/Database.html",[0,1.776,2,1.773,3,0.119,4,0.107,5,0.095,9,0.389,10,1.11,13,0.613,14,0.011,17,1.52,20,0.119,26,1.393,32,0.005,33,0.007,34,0.005,43,1.401,72,2.939,75,1.85,149,2.648,162,1.28,167,4.441,427,4.127,428,4.127,676,4.252,677,3.055,678,5.006,679,4.414,680,5.228,681,5.508,682,4.926,683,4.469,684,4.127,685,4.414,686,4.414,687,4.414,688,4.414,689,4.414,690,3.267,691,3.267,692,3.267,693,3.267,694,3.267,695,3.267,696,3.267,697,3.267,698,3.055,699,3.055,700,3.267,701,3.267,702,3.267,703,3.267,704,3.267,705,3.267,706,3.267]],["title/modules/DbTest.html",[112,1.299,796,3.39]],["body/modules/DbTest.html",[3,0.141,4,0.127,5,0.113,14,0.011,15,0.321,20,0.179,21,1.522,32,0.006,33,0.008,34,0.006,35,0.214,85,1.289,110,1.979,112,2.049,114,2.331,120,2.505,138,2.706,141,2.946,142,2.706,158,2.587,162,2.131,169,4.202,170,4.202,171,4.202,172,4.202,173,2.601,195,2.252,283,2.331,682,4.357,698,3.633,699,3.633,796,5.348,797,4.202,798,4.202,799,5.886,800,5.267,801,5.267,802,5.267,803,5.267,804,5.267,805,5.267,806,5.267,807,5.348,808,4.202,809,5.882,810,4.624,811,4.624,812,4.624]],["title/interfaces/DefaultAuthObject.html",[0,1.04,16,2.099]],["body/interfaces/DefaultAuthObject.html",[0,1.693,2,1.846,3,0.123,4,0.111,5,0.099,9,0.405,10,1.141,13,0.649,14,0.011,15,0.201,16,3.037,18,1.789,20,0.165,26,2.729,32,0.006,33,0.007,34,0.006,61,2.109,258,1.972,366,5.137,367,3.403,368,3.403,369,3.403,370,3.403,371,3.723,372,2.998,373,4.994,374,4.994,375,3.948,376,3.948,377,2.979]],["title/classes/FindDto.html",[35,0.172,813,3.39]],["body/classes/FindDto.html",[3,0.135,4,0.122,5,0.108,9,0.445,10,1.212,13,0.646,14,0.011,15,0.22,17,2.242,20,0.135,32,0.006,33,0.008,34,0.006,35,0.265,37,0.861,43,1.228,44,1.924,46,1.34,53,1.788,61,2.103,72,2.965,488,4.99,526,2.995,712,3.654,813,5.21,814,4.441,815,6.352,816,7.234,817,7.234,818,6.531,819,4.614,820,5.057,821,5.057,822,5.057,823,5.057,824,5.057,825,5.057,826,7.234]],["title/classes/HttpExceptionFilter.html",[35,0.172,827,3.39]],["body/classes/HttpExceptionFilter.html",[3,0.121,4,0.109,5,0.097,9,0.396,13,0.381,14,0.011,15,0.297,20,0.121,21,1.302,32,0.005,33,0.007,34,0.005,35,0.183,37,0.768,43,0.724,46,0.79,58,3.111,61,1.134,62,3.325,63,5.316,65,5.316,68,6.002,74,1.694,75,1.044,84,2.316,85,1.103,99,1.799,102,1.302,158,2.753,203,4.466,249,2.641,252,5.316,401,3.958,418,3.958,457,5.453,471,4.466,530,3.387,542,2.226,680,4.716,827,4.83,828,5.316,829,3.958,830,6.836,831,6.054,832,7.308,833,4.507,834,6.054,835,4.507,836,4.507,837,4.507,838,4.507,839,4.507,840,4.507,841,4.507,842,4.507,843,6.054,844,4.507,845,6.054,846,4.507,847,4.507,848,4.507,849,4.507,850,4.507,851,3.958,852,4.507,853,6.836,854,3.958,855,4.507,856,4.507,857,4.507]],["title/interfaces/IBaseController.html",[0,1.04,858,3.39]],["body/interfaces/IBaseController.html",[0,1.095,2,1.791,3,0.12,4,0.108,5,0.096,9,0.393,13,0.642,14,0.011,20,0.12,32,0.005,33,0.007,34,0.005,43,1.325,46,1.333,61,1.913,74,2.858,75,1.762,99,1.79,102,2.197,211,3.688,219,4.195,374,3.915,375,3.095,376,3.095,377,2.336,442,1.895,487,5.404,494,5.779,496,5.024,498,5.024,542,2.975,588,3.709,858,4.805,859,3.928,860,6.023,861,4.473,862,6.023,863,4.473,864,6.023,865,6.81,866,4.473,867,6.023,868,6.023,869,4.473,870,6.023,871,4.473]],["title/interfaces/IPagedListDto.html",[0,1.04,872,3.39]],["body/interfaces/IPagedListDto.html",[0,1.32,2,2.16,3,0.144,4,0.13,5,0.116,9,0.474,10,1.263,13,0.682,14,0.011,15,0.324,20,0.182,23,4.972,32,0.007,33,0.008,34,0.007,35,0.219,52,1.216,72,3.036,76,2.91,85,1.32,110,2.027,471,3.98,493,3.361,499,1.746,872,5.948,873,4.303,874,4.303,875,8.073,876,8.073,877,4.736,878,5.394,879,3.98,880,6.806]],["title/injectables/JwtAuthGuard.html",[174,1.758,602,2.276]],["body/injectables/JwtAuthGuard.html",[3,0.141,4,0.126,5,0.113,9,0.462,13,0.443,14,0.011,15,0.348,20,0.141,25,0.844,26,2.105,32,0.006,33,0.008,34,0.006,35,0.213,46,0.92,61,1.321,74,1.974,75,1.217,85,1.285,99,1.989,102,1.517,110,1.974,149,2.324,150,3.077,162,1.517,174,2.767,175,3.077,211,2.961,350,3.623,351,3.874,352,1.974,461,5.874,465,4.189,466,6.185,468,5.337,474,4.189,602,3.583,881,5.875,882,4.611,883,5.251,884,7.363,885,5.251,886,4.611,887,5.251,888,5.251,889,5.251]],["title/interfaces/JwtPayload.html",[0,1.04,409,2.762]],["body/interfaces/JwtPayload.html",[0,1.433,2,2.344,3,0.157,4,0.141,5,0.125,9,0.515,10,1.329,13,0.653,14,0.01,15,0.255,20,0.157,32,0.007,33,0.009,34,0.007,43,1.352,57,3.447,258,2.504,329,5.561,371,3.447,409,4.655,430,4.509,890,5.141,891,5.141]],["title/injectables/JwtStrategy.html",[174,1.758,345,2.932]],["body/injectables/JwtStrategy.html",[3,0.136,4,0.123,5,0.109,9,0.448,13,0.431,14,0.011,15,0.345,20,0.136,25,0.82,32,0.006,33,0.008,34,0.006,35,0.207,46,1.151,61,1.283,70,3.33,74,1.917,75,1.182,85,1.249,99,1.952,102,1.474,110,1.917,149,2.258,150,2.989,173,2.519,174,2.716,175,2.989,195,3.106,211,2.907,345,4.531,350,3.519,403,3.763,409,4.985,410,4.069,411,6.119,892,4.479,893,6.378,894,5.101,895,5.101,896,7.263,897,5.101,898,5.101,899,5.101,900,5.101,901,4.479,902,5.101,903,5.101,904,5.101,905,5.101,906,5.101,907,5.101,908,5.101]],["title/classes/LoginReqDto.html",[35,0.172,54,2.49]],["body/classes/LoginReqDto.html",[3,0.164,4,0.147,5,0.131,14,0.011,15,0.32,20,0.197,25,0.983,32,0.007,33,0.009,34,0.007,35,0.298,37,1.042,43,0.983,51,3.767,52,1.379,54,4.309,57,2.616,213,3.767,231,3.143,255,4.879,256,3.584,267,4.22,282,4.879,909,4.879,910,5.371]],["title/classes/LoginResDto.html",[35,0.172,267,2.932]],["body/classes/LoginResDto.html",[3,0.158,4,0.142,5,0.127,9,0.52,10,1.337,13,0.499,14,0.011,15,0.314,20,0.193,25,0.95,32,0.007,33,0.009,34,0.007,35,0.292,37,1.007,43,1.158,46,1.037,51,3.642,52,1.333,54,3.465,57,2.529,213,3.642,231,3.039,255,4.718,256,3.465,267,4.97,282,6.199,909,4.718,910,5.192,911,5.913]],["title/modules/MailModule.html",[112,1.299,127,2.932]],["body/modules/MailModule.html",[3,0.151,4,0.136,5,0.121,14,0.01,15,0.305,20,0.151,32,0.007,33,0.008,34,0.007,35,0.229,85,1.383,112,2.328,114,2.501,115,2.687,116,2.904,117,2.904,118,2.687,119,3.761,120,3.621,127,5.833,134,3.6,135,2.791,136,2.591,253,5.393,912,4.962,913,4.962,914,5.651,915,5.651,916,5.651]],["title/injectables/MailService.html",[174,1.758,253,2.617]],["body/injectables/MailService.html",[3,0.157,4,0.104,5,0.093,9,0.38,10,1.092,13,0.497,14,0.011,15,0.327,17,1.483,18,1.676,20,0.116,32,0.005,33,0.007,34,0.005,35,0.175,46,1.317,61,1.087,70,3.068,74,1.624,75,1.001,85,1.058,99,1.749,102,1.7,109,1.829,149,2.961,150,2.532,158,1.961,159,4.616,174,2.434,175,2.532,195,2.861,253,3.624,278,5.321,283,1.913,311,5.167,526,1.981,542,2.134,683,2.661,684,2.981,917,3.794,918,6.69,919,7.183,920,5.884,921,5.884,922,4.321,923,5.884,924,6.69,925,4.321,926,4.321,927,4.321,928,6.69,929,3.794,930,5.875,931,5.884,932,3.794,933,3.794,934,4.321,935,4.321,936,4.321,937,4.321,938,4.321,939,3.794,940,4.321,941,4.321,942,4.321,943,4.321,944,4.321,945,4.321,946,5.884,947,3.794,948,4.321,949,4.321,950,4.321,951,4.321,952,4.321,953,4.321,954,4.321]],["title/interfaces/Mailer.html",[0,1.04,683,2.617]],["body/interfaces/Mailer.html",[0,1.802,2,1.837,3,0.123,4,0.11,5,0.098,9,0.403,10,1.137,13,0.517,14,0.011,17,1.575,20,0.123,26,1.443,32,0.006,33,0.007,34,0.006,43,1.398,72,2.675,75,1.706,149,2.712,162,1.326,167,4.313,427,4.227,428,4.227,676,4.313,677,3.165,678,5.558,679,4.52,680,4.227,681,5.078,682,3.982,683,4.723,684,5.291,685,4.52,686,4.52,687,4.52,688,4.52,689,4.52,690,3.385,691,3.385,692,3.385,693,3.385,694,3.385,695,3.385,696,3.385,697,3.385,698,3.165,699,3.165,700,3.385,701,3.385,702,3.385,703,3.385,704,3.385,705,3.385,706,3.385]],["title/classes/PagedCategoryOutDto.html",[35,0.172,608,2.762]],["body/classes/PagedCategoryOutDto.html",[3,0.154,4,0.139,5,0.123,14,0.011,15,0.349,20,0.19,25,1.139,32,0.007,33,0.009,34,0.007,35,0.325,37,0.981,43,1.139,53,2.037,75,1.335,352,2.165,499,1.865,501,3.138,510,3.522,511,2.234,592,3.548,608,4.609,638,2.306,658,2.165,662,4.595,663,2.037,671,3.251,672,2.845,673,3.085,674,2.845,675,5.058]],["title/classes/PagedCourseOutputDto.html",[35,0.172,730,2.932]],["body/classes/PagedCourseOutputDto.html",[3,0.144,4,0.129,5,0.115,14,0.011,15,0.358,20,0.182,25,1.091,32,0.006,33,0.008,34,0.006,35,0.317,37,0.916,43,1.196,45,5.419,52,1.212,53,1.902,72,2.085,76,3.184,109,1.47,352,2.021,499,1.741,501,3.006,510,3.586,511,2.085,622,1.96,638,2.153,658,2.021,663,1.902,671,3.114,672,2.656,673,2.88,674,2.656,709,4.29,710,3.968,718,3.496,719,4.29,727,3.98,728,3.496,729,4.722,730,4.686,731,4.722]],["title/classes/PagedListStageDto.html",[35,0.172,955,2.762]],["body/classes/PagedListStageDto.html",[3,0.136,4,0.122,5,0.109,13,0.612,14,0.011,15,0.359,20,0.175,25,1.051,32,0.006,33,0.008,34,0.006,35,0.31,37,0.864,43,1.051,52,1.143,53,1.794,72,1.967,76,2.798,109,1.788,162,1.466,352,1.906,499,1.642,501,2.896,510,3.632,511,1.967,622,1.849,638,2.03,658,1.906,663,1.794,671,3,672,2.505,673,2.716,674,2.505,712,2.837,727,3.834,728,3.297,765,2.169,767,2.972,770,3.742,783,3.78,819,3.66,955,4.253,956,4.046,957,5.745,958,4.453,959,3.742,960,4.453,961,4.453]],["title/classes/PagedListTaskDto.html",[35,0.172,962,2.762]],["body/classes/PagedListTaskDto.html",[3,0.137,4,0.123,5,0.11,13,0.614,14,0.011,15,0.346,20,0.176,25,1.057,32,0.006,33,0.008,34,0.006,35,0.311,37,0.871,43,1.234,52,1.153,53,1.809,64,3.325,76,2.814,190,5.018,324,3.286,352,1.923,499,1.656,501,2.912,510,3.728,511,1.984,622,1.864,638,2.048,658,1.923,663,1.809,671,3.017,672,2.527,673,2.74,674,2.527,727,3.855,765,2.188,775,3.15,819,3.681,962,4.277,963,4.081,964,5.777,965,4.492,966,2.527,967,4.492,968,4.081,969,4.081,970,4.492]],["title/classes/PagedTrackOutputDto.html",[35,0.172,971,2.762]],["body/classes/PagedTrackOutputDto.html",[3,0.143,4,0.129,5,0.115,14,0.011,15,0.358,20,0.181,25,1.087,32,0.006,33,0.008,34,0.006,35,0.316,37,0.91,43,1.193,48,4.668,52,1.205,53,1.89,76,2.894,109,1.85,162,1.545,352,2.009,499,1.731,501,2.995,510,3.578,511,2.073,622,1.948,638,2.14,658,2.009,663,1.89,671,3.103,672,2.64,673,2.863,674,2.64,727,3.965,728,3.475,783,2.64,786,3.475,819,3.786,971,4.398,972,4.265,973,4.694]],["title/classes/PagedUserOutputDto.html",[35,0.172,974,2.762]],["body/classes/PagedUserOutputDto.html",[3,0.116,4,0.105,5,0.093,13,0.608,14,0.011,15,0.346,20,0.158,25,0.949,32,0.005,33,0.007,34,0.005,35,0.292,37,0.74,43,1.299,52,0.979,53,1.536,57,1.857,64,2.823,72,2.289,76,3.219,109,1.967,162,2.175,189,5.742,191,3.464,352,1.632,371,2.868,430,2.429,499,1.406,501,2.613,510,3.8,511,1.684,638,1.738,658,1.632,661,2.674,663,1.536,671,2.707,672,2.145,674,2.145,783,3.555,792,2.326,794,2.823,819,4.211,959,3.204,974,3.837,975,3.464,976,5.184,977,3.813,978,3.813,979,3.813,980,3.813,981,6.32,982,3.464,983,3.464,984,3.813,985,2.996,986,3.464,987,3.813,988,3.813,989,5.184,990,3.813,991,3.813,992,3.813,993,3.464,994,3.813,995,3.464,996,2.674,997,3.813]],["title/controllers/ProfileController.html",[7,2.021,998,3.135]],["body/controllers/ProfileController.html",[3,0.082,4,0.074,5,0.132,7,1.46,9,0.27,13,0.623,14,0.011,15,0.344,20,0.082,21,1.597,32,0.004,33,0.006,34,0.004,35,0.187,44,1.391,46,0.969,52,0.692,61,1.391,67,3.701,74,2.078,75,1.281,84,1.578,85,0.752,97,1.46,99,1.369,102,1.597,105,2.449,108,2.265,109,0.839,110,1.731,158,2.047,162,1.775,194,2.696,195,3.225,203,5.753,204,4.992,211,3.059,217,1.97,219,2.96,238,1.799,240,2.265,242,1.799,244,1.799,247,3.599,249,2.699,257,2.816,259,2.699,260,2.265,278,1.996,280,2.265,283,2.719,291,2.84,442,1.739,479,3.398,511,1.191,572,3.599,597,3.783,602,1.644,616,3.404,663,1.086,792,3.838,998,3.398,999,2.696,1000,3.07,1001,4.606,1002,4.606,1003,4.606,1004,3.07,1005,3.07,1006,3.07,1007,3.07,1008,4.532,1009,3.07,1010,3.07,1011,3.07,1012,3.07,1013,3.07,1014,4.606,1015,4.606,1016,4.606,1017,3.07,1018,3.07,1019,3.07,1020,2.696,1021,4.044,1022,2.696,1023,2.696,1024,2.696,1025,2.696,1026,2.449,1027,4.044,1028,2.696,1029,2.696,1030,2.696,1031,3.07,1032,3.07,1033,3.07,1034,3.07,1035,3.07,1036,3.07,1037,3.07,1038,3.593,1039,2.696,1040,3.07,1041,3.07,1042,3.07,1043,4.41,1044,3.07,1045,3.07,1046,4.606,1047,4.044,1048,4.044,1049,3.07,1050,4.044,1051,3.07,1052,3.07,1053,3.07,1054,2.696,1055,2.696,1056,3.07,1057,4.044,1058,4.854,1059,2.696,1060,3.07,1061,2.696,1062,3.07,1063,2.449,1064,2.696,1065,2.696,1066,2.696,1067,3.07,1068,3.07]],["title/modules/ProfileModule.html",[112,1.299,128,2.932]],["body/modules/ProfileModule.html",[3,0.135,4,0.121,5,0.108,14,0.011,15,0.344,20,0.135,32,0.006,33,0.008,34,0.006,35,0.204,85,1.231,97,3.095,112,2.206,114,2.226,115,2.391,116,2.584,117,2.584,118,2.391,119,3.563,120,3.431,128,5.911,133,4.528,134,3.344,135,2.484,136,2.306,138,3.344,156,3.469,259,4.743,260,3.71,998,5.323,1038,5.602,1039,4.416,1069,4.416,1070,5.029,1071,4.416,1072,4.416,1073,5.029,1074,5.029]],["title/injectables/ProfileService.html",[174,1.758,1038,2.762]],["body/injectables/ProfileService.html",[3,0.133,4,0.119,5,0.138,9,0.436,13,0.545,14,0.011,15,0.342,20,0.133,32,0.006,33,0.008,34,0.006,35,0.201,43,1.151,46,1.13,61,1.622,70,2.274,74,2.424,75,1.494,85,1.214,99,1.917,102,1.433,109,1.355,142,2.548,158,1.653,174,2.667,175,2.906,195,3.065,211,2.854,257,2.274,258,2.121,283,2.854,329,5.427,552,2.656,996,3.971,1038,4.192,1075,4.354,1076,6.448,1077,4.959,1078,6.663,1079,4.959,1080,6.448,1081,6.448,1082,4.959,1083,4.959,1084,3.658,1085,4.354,1086,4.354,1087,4.959,1088,4.354,1089,4.959,1090,4.354,1091,4.959,1092,4.959]],["title/classes/RegisterUserDto.html",[35,0.172,213,2.617]],["body/classes/RegisterUserDto.html",[3,0.149,4,0.134,5,0.119,9,0.489,10,1.287,13,0.47,14,0.011,15,0.329,20,0.186,25,0.894,26,1.75,32,0.007,33,0.008,34,0.007,35,0.307,37,0.947,43,1.115,44,1.4,46,0.975,52,1.254,53,1.967,109,1.52,213,4.273,216,3.838,231,3.885,256,3.26,298,4.438,430,3.112,442,1.75,503,2.027,504,2.027,774,3.426,791,4.104,792,2.979,793,4.438,794,3.616,996,3.426,1093,5.535,1094,6.092,1095,5.563,1096,4.884]],["title/classes/RegisterUserResDto.html",[35,0.172,216,2.932]],["body/classes/RegisterUserResDto.html",[3,0.149,4,0.134,5,0.12,9,0.491,10,1.29,13,0.471,14,0.011,15,0.33,20,0.186,25,0.897,26,2.187,32,0.007,33,0.008,34,0.007,35,0.307,37,0.95,43,0.897,46,0.978,52,1.258,53,1.973,109,2.07,213,3.436,216,4.796,231,2.867,256,3.27,298,6.041,430,3.122,442,1.755,503,2.034,504,2.034,774,3.436,791,4.117,792,2.988,793,4.452,794,3.627,996,3.436,1093,5.546,1094,4.9,1096,4.9,1097,5.58]],["title/classes/ResetPassInput.html",[35,0.172,221,2.932]],["body/classes/ResetPassInput.html",[3,0.152,4,0.136,5,0.121,9,0.498,10,1.303,13,0.593,14,0.011,15,0.305,20,0.152,25,1.128,32,0.007,33,0.008,34,0.007,35,0.285,37,0.965,43,1.225,44,1.766,46,1.231,48,5.498,53,2.005,221,4.843,234,5.498,272,4.978,300,4.563,336,6.084,644,2.599,893,4.978,1098,6.164,1099,4.978,1100,5.669,1101,5.669]],["title/guards/RolesGuard.html",[458,3.39,603,2.377]],["body/guards/RolesGuard.html",[3,0.13,4,0.117,5,0.104,9,0.426,13,0.537,14,0.011,15,0.349,20,0.13,26,2,32,0.006,33,0.008,34,0.006,35,0.197,46,1.114,61,1.599,70,2.224,74,2.389,75,1.473,85,1.187,99,1.889,102,1.402,108,3.579,110,2.389,149,2.147,150,2.842,158,2.363,162,1.402,174,2.629,204,4.132,249,2.842,258,2.074,371,2.718,409,4.132,410,3.87,411,3.87,430,2.714,459,3.87,461,6.002,465,5.071,466,6.002,468,3.87,471,3.579,472,4.259,474,3.87,478,4.259,600,3.556,603,3.556,1102,4.259,1103,4.851,1104,8.015,1105,4.851,1106,4.851,1107,4.259,1108,4.851,1109,4.851,1110,4.851]],["title/injectables/SessionSerializer.html",[174,1.758,346,2.932]],["body/injectables/SessionSerializer.html",[3,0.131,4,0.117,5,0.105,9,0.429,13,0.539,14,0.011,15,0.309,20,0.131,25,1.025,32,0.006,33,0.008,34,0.006,35,0.198,46,1.118,61,1.605,62,4.706,74,2.398,75,1.478,85,1.194,99,1.896,102,1.843,174,2.639,175,2.858,257,4.016,258,2.086,346,4.401,350,3.365,542,3.724,879,4.706,929,4.283,1111,4.283,1112,7.109,1113,6.379,1114,6.379,1115,6.379,1116,8.027,1117,7.54,1118,6.379,1119,4.877,1120,6.379,1121,4.877,1122,6.379,1123,4.877]],["title/modules/SharedModule.html",[112,1.299,129,2.932]],["body/modules/SharedModule.html",[3,0.169,4,0.152,5,0.135,14,0.011,15,0.275,20,0.169,32,0.008,33,0.009,34,0.008,35,0.256,85,1.545,112,2.291,114,2.793,119,3.117,120,3.001,129,5.169,138,3.243,1124,6.311,1125,7.492]],["title/classes/Stage.html",[35,0.172,966,2.099]],["body/classes/Stage.html",[3,0.071,4,0.064,5,0.057,9,0.446,10,0.768,13,0.655,14,0.011,15,0.269,17,2.627,20,0.071,21,0.772,25,0.665,26,1.302,32,0.003,33,0.005,34,0.003,35,0.108,37,0.455,43,0.994,44,1.926,46,1.412,61,1.775,72,1.606,99,1.231,102,1.651,109,2.316,162,2.449,173,3.372,217,3.017,324,2.363,352,1.003,377,1.967,442,1.302,503,1.509,504,1.509,512,4.372,515,2.426,516,2.426,517,2.426,518,3.348,519,2.972,520,2.426,521,2.972,522,2.972,523,2.972,526,3,527,4,529,4.337,530,3.197,531,3.348,541,2.972,542,2.822,551,3.624,552,1.43,554,2.13,557,3.46,622,2.083,638,2.288,639,3.714,640,3.714,641,3.809,642,2.856,644,3.555,645,1.644,646,1.644,647,1.644,648,1.644,649,1.644,650,1.644,651,1.644,652,1.644,653,1.644,654,1.644,655,1.644,656,1.644,657,1.644,658,1.003,659,1.644,660,1.644,661,1.644,663,1.793,712,2.316,716,1.842,765,2.798,770,3.742,966,2.045,1126,2.344,1127,2.67,1128,2.67,1129,2.67,1130,1.842,1131,5.017,1132,2.67,1133,2.67,1134,2.13,1135,2.67]],["title/classes/StageDto.html",[35,0.172,767,2.49]],["body/classes/StageDto.html",[3,0.106,4,0.095,5,0.085,9,0.349,10,1.029,13,0.687,14,0.011,15,0.337,17,1.361,20,0.148,25,1.027,32,0.005,33,0.007,34,0.005,35,0.281,37,0.675,43,1.171,44,1.95,46,1.359,52,0.894,53,1.402,61,1.395,72,2.15,76,2.371,109,2.249,162,1.146,324,2.294,352,1.49,442,1.744,499,1.284,501,3.342,503,2.021,504,2.021,505,3.415,507,2.324,510,3.341,511,1.538,526,1.818,622,2.331,638,1.588,644,2.932,658,1.49,663,2.261,664,3.163,668,2.578,669,2.578,670,2.578,671,2.542,672,1.959,673,2.124,674,1.959,712,3.102,727,3.249,728,2.578,765,2.735,767,3.249,770,4.718,783,3.729,819,3.102,955,2.578,956,3.163,957,4.869,958,3.482,959,2.926,960,3.482,961,3.482,1136,3.965,1137,3.965,1138,3.965,1139,3.163,1140,3.965,1141,3.965,1142,3.965,1143,3.965]],["title/classes/StagesController.html",[35,0.172,1144,3.135]],["body/classes/StagesController.html",[3,0.096,4,0.087,5,0.077,9,0.316,13,0.636,14,0.011,15,0.355,18,1.395,20,0.096,21,1.495,25,0.831,32,0.004,33,0.006,34,0.004,35,0.146,37,0.613,44,0.905,46,0.907,52,0.811,58,3.114,61,1.302,67,3.55,70,2.373,74,1.945,75,1.199,84,1.848,85,0.881,99,1.538,102,1.039,110,1.352,158,2.02,195,2.592,211,2.29,217,2.213,219,2.771,238,2.108,239,3.187,241,3.818,242,3.032,244,2.108,247,3.884,258,1.538,278,2.338,283,2.682,286,2.215,288,2.215,291,2.659,293,2.215,294,2.215,371,1.538,375,2.659,376,1.848,377,1.395,406,2.215,442,1.132,490,1.926,493,1.777,495,1.926,497,1.926,499,1.165,583,3.733,588,2.215,590,2.482,591,2.654,593,2.338,594,2.654,595,2.654,597,3.187,598,2.895,599,2.654,600,2.012,601,2.338,602,1.926,603,2.895,604,2.338,610,2.654,612,3.187,616,2.215,617,2.338,618,2.482,619,2.338,620,2.338,622,1.886,625,2.338,746,2.654,762,5.045,765,2.592,767,3.884,768,3.158,955,3.364,966,3.469,1088,3.158,1144,3.818,1145,2.87,1146,3.597,1147,4.308,1148,4.835,1149,4.082,1150,3.597,1151,4.544,1152,3.597,1153,3.158,1154,3.158,1155,3.597,1156,3.158,1157,3.158,1158,3.158,1159,3.597,1160,3.158,1161,3.158,1162,3.597,1163,3.597]],["title/modules/StagesModule.html",[112,1.299,130,2.762]],["body/modules/StagesModule.html",[3,0.126,4,0.113,5,0.101,14,0.011,15,0.353,20,0.126,32,0.006,33,0.008,34,0.006,35,0.191,75,1.091,85,1.153,97,2.24,112,2.136,114,2.084,115,2.24,116,2.42,117,2.42,118,2.24,119,3.452,120,3.323,130,5.415,132,4.896,134,3.203,135,2.326,136,2.159,138,3.203,141,2.635,142,2.42,155,3.757,158,2.078,359,2.76,361,2.635,629,4.533,630,3.061,635,2.76,636,2.9,966,2.326,1144,4.599,1147,5.58,1156,4.135,1157,4.135,1164,4.135,1165,4.71,1166,4.135,1167,4.135,1168,3.757,1169,4.71,1170,5.575,1171,4.135,1172,4.135]],["title/classes/Task.html",[35,0.172,1173,2.762]],["body/classes/Task.html",[3,0.061,4,0.055,5,0.049,9,0.403,10,0.68,13,0.666,14,0.011,15,0.267,17,2.661,20,0.098,21,1.516,25,0.589,26,1.154,32,0.003,33,0.004,34,0.003,35,0.093,37,0.39,43,1.034,44,1.907,46,1.403,61,1.683,67,2.457,99,1.09,102,1.659,109,2.313,162,2.42,173,3.178,217,3.026,324,2.534,352,0.86,377,1.779,438,4.029,442,1.154,503,1.337,504,1.337,512,4.258,515,2.149,516,2.149,517,2.149,518,3.075,519,2.689,520,2.149,521,2.689,522,2.689,523,2.689,526,3.066,527,3.771,529,4.381,530,2.935,531,3.075,541,2.689,542,3.026,551,3.771,552,1.226,555,1.689,556,1.826,557,3.859,622,1.912,638,2.101,639,3.411,640,3.411,641,3.536,642,2.53,644,3.428,645,1.41,646,1.41,647,1.41,648,1.41,649,1.41,650,1.41,651,1.41,652,1.41,653,1.41,654,1.41,655,1.41,656,1.41,657,1.41,658,0.86,659,1.41,660,1.41,661,1.41,663,1.623,716,1.579,765,2.62,966,3.026,969,3.66,985,2.53,1130,2.53,1134,1.826,1173,2.384,1174,1.826,1175,4.607,1176,4.588,1177,4.588,1178,4.029,1179,2.289,1180,2.289,1181,2.289,1182,5.042,1183,4.588,1184,1.826,1185,2.289,1186,2.289,1187,2.289,1188,2.289,1189,2.01,1190,2.706,1191,3.22,1192,3.22,1193,2.289,1194,2.289]],["title/classes/TaskDto.html",[35,0.172,775,2.617]],["body/classes/TaskDto.html",[3,0.105,4,0.095,5,0.084,9,0.346,10,1.024,13,0.694,14,0.011,15,0.316,20,0.148,25,1.024,32,0.005,33,0.007,34,0.005,35,0.28,37,0.671,43,1.289,44,1.986,46,1.384,52,0.888,53,1.393,61,1.389,64,3.588,76,2.36,109,2.059,190,4.396,324,3.362,352,1.481,442,1.736,499,1.275,501,3.335,503,2.012,504,2.012,505,3.399,507,3.734,510,3.455,511,1.528,622,2.322,638,1.577,644,2.921,658,1.481,663,2.253,664,3.142,668,2.56,669,2.56,670,2.56,671,2.531,672,1.946,673,2.11,674,1.946,727,3.234,765,2.725,775,3.399,819,3.088,962,2.56,963,3.142,964,4.846,965,3.459,966,3.147,967,3.459,968,3.142,969,5.083,970,3.459,1139,3.142,1195,3.939,1196,3.939,1197,3.939,1198,3.939,1199,3.939,1200,3.939,1201,3.939,1202,3.939]],["title/classes/TasksController.html",[35,0.172,1203,3.135]],["body/classes/TasksController.html",[3,0.083,4,0.075,5,0.067,9,0.273,13,0.625,14,0.011,15,0.348,18,1.205,20,0.083,21,1.786,25,0.747,32,0.004,33,0.006,34,0.004,35,0.126,37,0.529,43,0.895,44,1.17,46,0.976,52,0.701,58,3.399,61,1.401,67,3.543,70,2.131,74,2.093,75,1.29,84,1.597,85,0.761,99,1.381,102,1.343,110,1.168,158,2.205,195,2.969,211,2.735,217,1.988,219,2.489,238,1.821,239,2.863,240,2.293,241,2.293,242,2.724,244,1.821,247,3.877,258,1.329,278,3.619,280,2.293,283,3.073,286,1.914,291,3.175,293,1.914,294,1.914,371,1.329,375,2.388,376,1.597,377,1.205,406,1.914,490,1.664,493,1.535,495,1.664,497,1.664,499,1.006,583,3.429,588,1.914,593,2.02,597,3.429,598,2.6,599,2.293,600,1.739,601,2.02,602,1.664,603,3.115,604,2.02,610,2.293,612,2.863,613,3.841,616,2.863,617,2.02,619,3.021,620,2.02,622,1.694,625,2.02,746,2.293,765,1.988,771,4.789,775,3.806,776,2.729,962,3.021,966,2.296,1043,2.479,1147,4.017,1148,4.442,1149,3.806,1151,4.889,1153,2.729,1154,2.729,1158,2.729,1160,2.729,1161,2.729,1173,4.678,1203,3.429,1204,2.479,1205,4.648,1206,3.108,1207,4.789,1208,3.108,1209,3.108,1210,2.729,1211,2.729,1212,3.108,1213,3.108,1214,3.108,1215,3.108,1216,3.108,1217,3.108,1218,5.568,1219,2.729,1220,3.108,1221,3.108,1222,2.729,1223,2.729,1224,3.108,1225,3.108,1226,3.108,1227,3.108,1228,3.108,1229,3.108,1230,3.108,1231,4.889,1232,4.081,1233,3.108,1234,3.108,1235,3.108,1236,3.108,1237,3.108]],["title/modules/TasksModule.html",[112,1.299,131,2.932]],["body/modules/TasksModule.html",[3,0.118,4,0.106,5,0.094,14,0.011,15,0.358,20,0.118,32,0.005,33,0.007,34,0.005,35,0.179,75,1.021,85,1.079,97,2.096,112,2.066,114,1.95,115,2.096,116,2.264,117,2.264,118,2.096,119,3.338,120,3.214,130,5.069,131,5.866,132,4.803,133,4.363,134,3.064,135,2.177,136,2.021,138,3.064,141,2.465,142,2.264,154,3.869,155,3.516,156,3.04,158,1.987,359,2.582,361,2.465,629,4.433,630,2.864,635,2.582,636,2.714,1173,2.864,1203,4.399,1207,5.866,1222,3.869,1223,3.869,1238,3.869,1239,4.407,1240,3.869,1241,3.869,1242,3.516,1243,4.407,1244,5.391,1245,3.869,1246,3.869]],["title/classes/TemporaryToken.html",[35,0.172,354,3.135]],["body/classes/TemporaryToken.html",[3,0.071,4,0.064,5,0.057,9,0.501,10,0.766,13,0.697,14,0.011,15,0.22,17,2.539,20,0.111,21,0.769,25,0.664,26,1.299,32,0.003,33,0.005,34,0.003,35,0.108,37,0.453,43,0.992,44,1.924,46,1.411,57,1.138,61,1.924,99,1.228,102,1.649,109,2.316,162,2.308,173,3.368,217,2.795,231,1.368,257,3.126,258,1.138,273,4.556,300,3.29,324,2.915,354,3.048,377,1.963,437,5.009,442,1.299,503,1.506,504,1.506,512,4.37,515,2.421,516,2.421,517,2.421,518,3.343,519,2.966,520,2.421,521,2.966,522,2.966,523,2.966,526,2.996,527,3.829,529,4.334,530,3.191,531,3.343,541,2.966,542,2.818,551,3.619,552,1.426,557,3.656,641,3.803,644,3.553,645,1.639,646,1.639,647,1.639,648,1.639,649,1.639,650,1.639,651,1.639,652,1.639,653,1.639,654,1.639,655,1.639,656,1.639,657,1.639,659,1.639,660,3.117,712,1.489,985,2.85,1130,1.836,1184,2.124,1247,4.927,1248,2.124,1249,2.662,1250,2.662,1251,2.662,1252,2.662,1253,4.131,1254,2.337,1255,2.337,1256,2.124,1257,2.662,1258,2.662,1259,2.662]],["title/classes/Track.html",[35,0.172,765,1.817]],["body/classes/Track.html",[3,0.072,4,0.065,5,0.057,9,0.447,10,0.771,13,0.655,14,0.011,15,0.249,17,2.722,20,0.072,21,0.775,25,0.668,26,1.307,32,0.003,33,0.005,34,0.003,35,0.109,37,0.457,43,1.099,44,1.928,46,1.413,61,1.778,99,1.235,102,1.655,109,2.318,162,2.398,173,3.377,217,3.17,324,2.369,352,1.008,377,1.972,442,1.307,503,1.514,504,1.514,512,4.375,515,2.435,516,2.435,517,2.435,518,3.356,519,2.98,520,2.435,521,2.98,522,2.98,523,2.98,526,3.239,527,3.841,529,4.343,530,3.952,531,3.631,541,2.98,542,2.829,551,3.631,552,1.436,557,2.324,622,2.088,638,2.293,639,3.723,640,3.723,641,3.816,642,2.866,644,3.559,645,1.652,646,1.652,647,1.652,648,1.652,649,1.652,650,1.652,651,1.652,652,1.652,653,1.652,654,1.652,655,1.652,656,1.652,657,1.652,658,1.008,659,1.652,660,1.652,661,1.652,663,1.799,716,1.85,765,1.777,786,3.306,966,2.512,1130,1.85,1189,2.355,1260,2.355,1261,4.466,1262,2.682,1263,2.682,1264,2.682,1265,2.682]],["title/classes/TrackDto.html",[35,0.172,783,2.099]],["body/classes/TrackDto.html",[3,0.115,4,0.103,5,0.092,9,0.377,10,1.086,13,0.653,14,0.011,15,0.337,20,0.157,25,1.071,32,0.005,33,0.007,34,0.005,35,0.29,37,0.731,43,1.272,44,1.947,46,1.356,48,4.039,52,0.967,53,1.517,61,1.473,76,2.504,109,2.26,162,1.24,324,2.422,352,1.612,442,1.842,499,1.389,501,3.424,503,2.134,504,2.134,505,3.606,507,2.514,510,3.283,511,1.664,622,2.429,638,1.718,644,3.056,658,1.612,663,2.357,668,2.789,669,2.789,670,2.789,671,2.685,672,2.119,673,2.298,674,2.119,727,3.431,728,2.789,783,2.892,786,4.333,819,3.275,971,2.789,972,3.422,973,3.767,1139,3.422,1266,4.29,1267,4.29,1268,3.767,1269,3.767,1270,4.29,1271,4.29]],["title/classes/TracksController.html",[35,0.172,1272,3.135]],["body/classes/TracksController.html",[3,0.062,4,0.056,5,0.05,9,0.204,13,0.649,14,0.011,15,0.341,18,0.898,20,0.062,21,1.868,25,0.595,32,0.003,33,0.004,34,0.003,35,0.15,37,0.394,43,0.989,44,1.329,46,1.012,52,0.522,58,3.451,61,1.453,67,3.803,70,1.062,74,2.171,75,1.338,84,1.19,85,0.567,99,1.1,102,1.526,110,1.738,158,2.367,162,1.07,195,3.158,203,4.261,204,3.433,211,2.972,217,2.259,219,3.093,238,1.357,239,2.848,240,1.709,241,1.709,242,2.169,244,1.357,247,4.058,249,2.169,258,0.99,280,2.731,283,3.065,286,2.28,288,3.253,291,3.322,293,2.28,294,2.28,329,2.554,371,0.99,375,1.902,376,1.19,377,1.435,406,1.426,442,0.729,490,1.24,493,1.144,495,1.24,497,1.24,499,0.75,511,0.898,572,3.095,583,2.848,588,1.426,590,1.598,593,2.406,597,3.557,598,2.071,600,1.296,601,1.505,602,1.24,603,2.587,604,1.505,612,2.28,613,3.644,614,1.709,616,3.253,617,2.406,618,2.554,619,3.006,620,1.505,622,1.925,625,1.505,746,2.731,747,3.25,765,2.872,767,1.357,778,4.003,783,3.042,784,1.847,786,2.406,787,3.644,788,4.214,971,2.406,1020,2.033,1022,2.033,1023,3.25,1024,2.033,1025,2.033,1026,1.847,1028,2.033,1029,2.033,1030,2.033,1043,1.847,1047,2.033,1048,2.033,1050,2.033,1054,2.033,1055,2.033,1057,2.033,1058,4.06,1059,2.033,1061,2.033,1063,1.847,1064,2.033,1065,2.033,1066,2.033,1084,1.709,1085,2.033,1086,2.033,1090,2.033,1148,2.953,1149,3.253,1210,3.25,1211,3.25,1219,2.033,1231,3.25,1232,3.25,1261,3.25,1272,2.731,1273,1.847,1274,3.702,1275,3.702,1276,3.702,1277,2.316,1278,2.316,1279,2.316,1280,2.316,1281,2.316,1282,2.316,1283,6.158,1284,2.316,1285,2.316,1286,2.316,1287,2.316,1288,2.316,1289,2.316,1290,2.316,1291,2.316,1292,2.316,1293,2.316,1294,2.033,1295,2.316,1296,2.033,1297,2.316,1298,2.033,1299,2.033,1300,2.953,1301,2.316,1302,3.702,1303,2.316,1304,2.316,1305,2.316,1306,2.316,1307,2.316,1308,2.316,1309,2.316,1310,2.316,1311,2.316,1312,2.316,1313,2.316,1314,2.316,1315,2.316,1316,3.702,1317,2.316,1318,2.316,1319,2.316,1320,2.316,1321,2.316]],["title/modules/TracksModule.html",[112,1.299,132,2.617]],["body/modules/TracksModule.html",[3,0.126,4,0.113,5,0.101,14,0.011,15,0.353,20,0.126,32,0.006,33,0.008,34,0.006,35,0.191,75,1.091,85,1.153,97,2.24,112,2.136,114,2.084,115,2.24,116,2.42,117,2.42,118,2.24,119,3.452,120,3.323,132,5.131,133,4.447,134,3.203,135,2.326,136,2.159,138,3.203,141,2.635,142,2.42,156,3.249,158,2.078,359,2.76,361,2.635,629,4.533,630,3.061,635,2.76,636,2.9,765,2.014,1149,5.287,1272,4.599,1298,4.135,1299,4.135,1322,4.135,1323,4.71,1324,4.135,1325,4.135,1326,3.757,1327,4.71,1328,5.575,1329,4.135,1330,4.135]],["title/classes/UpdateProfileDto.html",[35,0.172,1008,3.135]],["body/classes/UpdateProfileDto.html",[3,0.167,4,0.15,5,0.134,14,0.011,15,0.324,20,0.167,25,1.003,32,0.008,33,0.009,34,0.008,35,0.253,37,1.064,52,1.408,57,2.671,256,3.66,430,3.494,774,3.846,789,4.059,996,3.846,1008,5.493,1331,5.484,1332,5.484,1333,6.245,1334,6.245]],["title/classes/User.html",[35,0.172,257,1.948]],["body/classes/User.html",[3,0.044,4,0.04,5,0.035,9,0.321,10,0.521,11,2.697,13,0.658,14,0.011,15,0.266,17,2.758,20,0.075,21,0.812,25,0.451,26,1.354,32,0.002,33,0.003,34,0.002,35,0.114,37,0.282,43,1.236,44,1.921,46,1.408,57,1.841,61,1.592,72,1.67,75,0.651,85,0.406,99,0.835,102,1.612,109,2.338,110,1.056,162,2.418,173,2.756,195,0.709,217,3.178,231,1.879,257,1.676,283,0.733,291,0.851,324,2.165,334,1.143,352,0.623,371,1.564,377,1.418,402,1.322,430,2.045,442,0.884,445,3.21,453,1.455,457,1.322,503,1.024,504,1.024,511,0.642,512,3.98,515,1.646,516,1.646,517,1.646,518,2.523,519,2.142,520,1.646,521,2.142,522,2.142,523,2.142,524,2.466,526,2.902,527,3.709,529,3.709,530,3.541,531,3.068,541,2.142,542,2.899,551,4.141,552,0.887,555,1.222,556,1.322,557,3.283,558,1.455,570,1.455,638,2.534,639,4.114,640,4.114,641,2.252,644,3.128,645,1.02,646,1.02,647,1.02,648,1.02,649,1.02,650,1.02,651,1.02,652,1.02,653,1.02,654,1.02,655,1.02,656,1.02,657,1.02,658,0.623,659,1.02,660,1.02,663,1.293,671,1.676,712,2.409,716,1.143,765,1.564,794,2.376,879,1.222,982,2.917,983,2.917,985,1.938,986,2.917,993,2.917,995,2.917,996,2.252,1078,2.466,1130,1.143,1134,1.322,1184,1.322,1335,1.322,1336,3.656,1337,3.656,1338,3.656,1339,4.305,1340,4.305,1341,3.656,1342,2.809,1343,1.657,1344,2.809,1345,1.657,1346,1.657,1347,1.657,1348,1.657,1349,1.657,1350,1.657,1351,1.657,1352,1.657,1353,1.657,1354,1.657,1355,1.657,1356,1.657,1357,1.657,1358,1.657,1359,1.657,1360,1.657,1361,1.657,1362,1.657,1363,1.657,1364,1.657,1365,2.809,1366,2.466,1367,1.657,1368,1.657,1369,1.657,1370,1.657,1371,1.657,1372,1.657,1373,3.656,1374,2.466,1375,2.466,1376,2.466,1377,1.657,1378,2.809,1379,1.657,1380,1.657,1381,1.657,1382,4.819,1383,1.657,1384,1.657,1385,1.657,1386,1.657,1387,1.657,1388,1.657]],["title/classes/UserDto.html",[35,0.172,792,2.276]],["body/classes/UserDto.html",[3,0.081,4,0.073,5,0.065,9,0.267,10,0.847,13,0.699,14,0.011,15,0.311,17,1.041,20,0.122,25,0.882,32,0.004,33,0.006,34,0.004,35,0.248,37,0.517,43,1.314,44,1.982,46,1.381,52,0.684,53,1.073,57,2.347,61,1.926,64,2.967,72,2.368,76,2.8,109,2.199,162,2.063,189,5.224,191,3.642,324,1.888,352,1.14,371,2.8,430,3.07,442,1.436,499,0.982,501,3.045,503,1.664,504,1.664,505,2.811,507,1.778,510,3.511,511,1.176,526,1.391,638,1.214,644,2.516,658,1.14,661,2.811,663,1.941,668,1.972,669,1.972,670,1.972,671,2.093,672,1.498,674,1.498,783,3.398,792,2.445,794,3.567,819,3.663,959,2.238,974,1.972,975,2.42,976,4.008,977,2.664,978,2.664,979,2.664,980,2.664,981,5.361,982,4.378,983,4.378,984,2.664,985,2.093,986,3.642,987,2.664,988,4.008,989,5.361,990,4.008,991,4.008,992,2.664,993,4.378,994,2.664,995,4.378,996,3.38,997,2.664,1268,4.008,1269,2.664,1389,3.034,1390,3.034,1391,3.034,1392,3.034,1393,4.565,1394,3.034,1395,3.034,1396,3.034,1397,3.034,1398,3.034,1399,3.034,1400,3.034,1401,3.034,1402,3.034,1403,3.034,1404,3.034,1405,3.034,1406,3.034,1407,3.034]],["title/classes/UsersController.html",[35,0.172,1408,3.135]],["body/classes/UsersController.html",[3,0.103,4,0.093,5,0.083,9,0.339,13,0.649,14,0.011,15,0.352,18,1.494,20,0.103,21,1.114,25,0.873,32,0.005,33,0.007,34,0.005,35,0.156,37,0.656,44,0.97,46,0.953,52,0.869,57,1.648,58,3.235,61,1.368,67,3.662,70,1.767,74,2.043,75,1.259,84,1.98,85,0.943,99,1.615,102,1.114,109,1.053,110,1.448,158,1.812,195,2.693,211,2.406,217,2.324,219,2.911,238,2.258,239,3.347,242,3.185,244,2.258,247,4.007,256,2.258,257,2.887,259,4.384,283,1.706,286,2.373,288,3.347,289,3.074,291,1.98,293,2.373,294,2.373,371,1.648,373,2.505,374,2.505,375,2.793,376,1.98,377,1.494,385,3.384,406,2.373,490,2.064,493,1.904,495,2.064,497,2.064,499,1.248,583,3.878,588,2.373,590,2.659,591,2.843,593,2.505,594,2.843,595,2.843,597,3.347,598,3.041,600,2.156,601,2.505,602,2.064,603,3.041,604,2.505,612,4.211,614,2.843,616,2.373,617,2.505,618,2.659,619,2.505,620,2.505,622,1.405,625,2.505,789,4.863,792,3.662,974,3.533,1294,3.384,1296,3.384,1408,4.01,1409,3.074,1410,3.854,1411,3.854,1412,3.854,1413,3.384,1414,3.384,1415,3.854,1416,3.854,1417,3.854]],["title/modules/UsersModule.html",[112,1.299,133,2.377]],["body/modules/UsersModule.html",[3,0.133,4,0.119,5,0.106,14,0.011,15,0.351,20,0.173,32,0.006,33,0.008,34,0.006,35,0.201,75,1.149,85,1.214,97,2.358,112,2.191,114,2.195,115,2.358,116,2.548,117,2.548,118,2.358,119,3.539,120,3.408,133,4.593,134,3.313,135,2.449,136,2.274,138,2.548,141,2.774,142,2.548,158,1.653,257,2.274,259,5.066,359,2.906,361,2.774,629,3.779,630,3.223,635,2.906,636,3.054,1408,4.757,1413,4.354,1414,4.354,1418,4.354,1419,4.354,1420,4.959,1421,3.956,1422,4.959,1423,5.717,1424,4.354,1425,4.354]],["title/classes/ValidateTokenInput.html",[35,0.172,234,2.932]],["body/classes/ValidateTokenInput.html",[3,0.156,4,0.141,5,0.125,9,0.513,10,1.326,13,0.493,14,0.011,15,0.336,20,0.156,25,0.938,32,0.007,33,0.009,34,0.007,35,0.29,37,0.994,43,1.148,44,1.468,46,1.023,48,5.33,51,3.594,52,1.316,53,2.064,54,3.42,55,5.124,56,5.124,57,2.496,234,4.93,300,5.021,1426,6.275,1427,5.124,1428,5.836]],["title/coverage.html",[1429,5.108]],["body/coverage.html",[0,1.787,1,1.162,5,0.036,6,2.731,7,2.929,8,2.731,13,0.142,14,0.011,16,0.832,18,1.887,21,0.487,24,1.162,27,1.162,32,0.002,33,0.003,34,0.002,35,0.343,36,1.243,38,1.48,39,1.48,54,0.987,58,0.866,59,1.48,60,1.48,96,1.243,98,1.48,103,1.095,112,0.515,118,0.801,137,2.273,149,0.746,152,1.344,159,1.966,167,1.67,174,2.837,176,1.48,181,1.344,182,1.48,183,1.48,192,1.243,193,1.48,213,1.038,216,1.162,221,1.162,234,1.162,253,1.038,257,0.773,259,0.987,261,1.038,263,1.243,267,1.162,334,1.162,345,1.162,346,1.162,347,1.243,348,1.344,351,1.243,354,1.243,366,1.095,367,2.731,368,2.731,372,1.095,378,1.48,405,1.344,407,1.344,409,1.095,458,2.273,460,1.48,479,1.243,480,1.48,481,1.48,486,1.162,487,3.003,488,2.554,489,2.731,491,1.162,492,1.162,499,0.546,501,0.746,502,1.48,512,0.902,513,1.48,572,0.987,573,1.48,574,1.48,581,1.243,582,2.273,583,2.997,585,1.243,589,1.243,592,1.038,598,0.943,600,0.943,602,0.902,603,0.943,606,1.095,608,1.095,628,1.344,629,2.551,632,1.344,637,1.48,658,0.633,662,2.273,676,0.987,677,3.003,683,1.038,707,1.162,708,1.48,712,4.962,718,1.095,719,2.273,730,1.162,732,1.243,733,1.48,735,1.243,738,1.243,751,1.344,753,1.344,756,1.48,757,1.48,759,1.48,760,1.48,762,1.162,763,1.48,764,1.48,765,0.721,767,0.987,771,1.162,772,1.48,773,1.48,775,1.038,778,1.095,779,2.273,780,2.273,783,0.832,787,1.162,789,1.095,790,1.48,791,2.731,792,0.902,797,2.953,798,2.953,807,1.344,808,1.344,809,1.344,813,1.344,814,1.48,827,1.344,828,1.48,829,1.48,858,1.344,859,1.48,872,1.344,873,2.273,874,2.273,879,3.211,881,1.48,882,1.48,890,1.48,891,1.48,892,1.48,909,2.273,917,1.48,955,1.095,956,2.273,962,1.095,963,2.273,966,0.832,971,1.095,972,2.273,974,1.095,975,2.273,998,1.243,999,1.48,1008,1.243,1038,1.095,1075,1.48,1084,1.243,1093,2.273,1098,1.48,1099,1.48,1102,1.48,1111,1.48,1126,1.48,1144,1.243,1145,2.273,1147,1.095,1149,1.038,1168,2.273,1170,1.344,1173,1.095,1174,1.344,1203,1.243,1204,2.273,1207,1.162,1242,2.273,1244,1.344,1247,1.344,1248,1.344,1260,1.48,1272,1.243,1273,2.953,1300,1.344,1326,2.273,1328,1.344,1331,1.48,1332,1.48,1335,1.344,1408,1.243,1409,2.273,1421,1.344,1423,1.344,1426,1.48,1427,1.48,1429,1.48,1430,1.344,1431,1.685,1432,1.685,1433,1.344,1434,1.48,1435,1.48,1436,8.474,1437,7.101,1438,8.146,1439,3.702,1440,3.702,1441,5.625,1442,6.986,1443,4.353,1444,4.353,1445,1.685,1446,1.685,1447,4.353,1448,1.685,1449,1.685,1450,1.685,1451,5.282,1452,1.685,1453,2.273,1454,1.685,1455,3.702,1456,2.502,1457,1.48,1458,1.48,1459,1.344,1460,1.48,1461,1.48,1462,1.48,1463,1.48,1464,1.48,1465,1.48,1466,1.48,1467,1.48,1468,1.685,1469,1.48,1470,1.685,1471,1.685,1472,1.685,1473,2.502,1474,2.502,1475,1.48,1476,1.48,1477,1.48,1478,1.48,1479,1.48,1480,1.48,1481,1.48,1482,1.685,1483,2.849,1484,1.685,1485,1.685,1486,1.685,1487,1.685,1488,1.685,1489,2.849,1490,1.685,1491,1.685,1492,1.685,1493,1.685,1494,1.685]],["title/dependencies.html",[115,2.433,1495,3.54]],["body/dependencies.html",[14,0.011,32,0.005,33,0.007,34,0.005,35,0.243,52,1.003,53,1.574,85,1.09,115,2.117,140,3.908,142,2.287,249,4.26,350,3.071,365,4.789,402,3.551,403,3.284,404,3.908,511,1.726,552,2.384,554,4.789,676,2.608,815,3.908,886,3.908,901,5.964,930,5.271,932,3.908,933,3.908,1026,3.551,1107,3.908,1131,3.908,1459,3.551,1496,4.451,1497,4.451,1498,4.451,1499,4.451,1500,7.591,1501,4.451,1502,4.451,1503,4.451,1504,4.451,1505,4.451,1506,4.451,1507,4.451,1508,4.451,1509,4.451,1510,4.451,1511,4.451,1512,4.451,1513,4.451,1514,4.451,1515,6.003,1516,4.451,1517,4.451,1518,4.451,1519,4.451,1520,4.451,1521,4.451,1522,6.003,1523,4.451,1524,4.451,1525,4.451,1526,3.908,1527,4.451,1528,4.451,1529,4.451,1530,4.451,1531,4.451,1532,4.451,1533,4.451,1534,4.451,1535,4.451,1536,4.451,1537,4.451,1538,4.451,1539,3.908,1540,4.451,1541,4.451,1542,4.451,1543,4.451,1544,6.003,1545,4.451,1546,4.451,1547,4.451,1548,4.451,1549,4.451,1550,4.451,1551,4.451,1552,4.451,1553,4.451,1554,4.451]],["title/miscellaneous/enumerations.html",[1555,2.075,1556,4.492]],["body/miscellaneous/enumerations.html",[9,0.511,14,0.011,32,0.007,33,0.009,34,0.007,57,2.488,231,2.989,273,5.262,371,3.05,526,3.938,1174,4.641,1182,6.263,1190,5.262,1191,6.263,1192,6.263,1247,4.641,1248,5.69,1254,5.108,1255,5.108,1335,4.641,1374,6.263,1375,6.263,1376,6.263,1555,3.409,1556,5.108,1557,5.817,1558,5.817,1559,5.817]],["title/miscellaneous/functions.html",[1555,2.075,1560,4.492]],["body/miscellaneous/functions.html",[9,0.522,13,0.61,14,0.01,32,0.007,33,0.009,34,0.007,61,1.816,74,2.713,75,1.673,102,2.086,118,3.701,493,2.931,499,2.337,598,4.039,873,4.733,874,5.759,1256,4.733,1433,5.759,1434,6.339,1435,6.833,1453,4.733,1457,5.21,1555,3.477,1560,5.21,1561,5.933,1562,5.21,1563,5.933,1564,5.933,1565,5.933]],["title/index.html",[9,0.311,1190,2.612,1566,3.109]],["body/index.html",[4,0.114,14,0.008,32,0.006,33,0.008,34,0.006,66,4.169,107,4.169,136,2.873,204,3.086,320,5.503,373,3.086,635,2.782,966,2.345,968,3.787,1021,4.169,1175,4.169,1366,4.169,1430,3.787,1539,4.169,1567,7.015,1568,6.267,1569,6.267,1570,4.747,1571,6.267,1572,7.967,1573,4.747,1574,4.747,1575,4.747,1576,4.747,1577,6.267,1578,4.747,1579,6.267,1580,4.747,1581,4.747,1582,4.169,1583,4.747,1584,4.747,1585,4.747,1586,6.16,1587,4.747,1588,4.747,1589,4.747,1590,4.747,1591,4.747,1592,4.747,1593,4.747,1594,4.747,1595,4.747,1596,4.747,1597,4.169,1598,4.747,1599,4.747,1600,4.747,1601,4.747,1602,4.747,1603,6.267,1604,4.747,1605,4.747,1606,6.267,1607,4.747,1608,4.747,1609,4.747,1610,4.747,1611,4.747,1612,4.747,1613,4.747,1614,4.169,1615,4.747,1616,4.169,1617,4.747,1618,4.747,1619,4.747,1620,4.747,1621,4.747,1622,4.747,1623,4.747,1624,4.747,1625,4.747,1626,4.747,1627,4.747,1628,6.267,1629,4.747,1630,4.747,1631,4.747,1632,4.747,1633,4.747,1634,4.747,1635,4.747,1636,4.747,1637,4.747,1638,4.747,1639,4.747,1640,4.747,1641,4.747,1642,4.747,1643,4.747,1644,4.747,1645,4.747,1646,4.747,1647,4.747,1648,4.747,1649,4.747,1650,4.747]],["title/license.html",[1190,2.612,1566,3.109,1651,3.109]],["body/license.html",[14,0.008,31,3.752,32,0.006,33,0.008,34,0.006,136,2.332,249,2.98,854,5.756,1430,4.058,1433,4.058,1582,7.423,1597,4.466,1614,4.466,1651,4.466,1652,5.086,1653,7.253,1654,5.086,1655,5.086,1656,5.086,1657,5.086,1658,5.086,1659,5.086,1660,5.086,1661,5.086,1662,6.555,1663,5.086,1664,5.086,1665,5.086,1666,7.253,1667,5.086,1668,6.555,1669,5.086,1670,5.086,1671,6.555,1672,5.086,1673,5.086,1674,5.086,1675,5.086,1676,5.086,1677,5.086,1678,6.555,1679,5.086,1680,5.086,1681,5.086,1682,5.086,1683,5.086,1684,5.086,1685,6.555,1686,6.555,1687,5.086,1688,5.086,1689,5.086,1690,5.086,1691,5.086,1692,5.086,1693,5.086,1694,5.086,1695,5.086,1696,5.086,1697,5.086,1698,5.086,1699,5.086,1700,5.086,1701,5.086,1702,5.086,1703,5.086,1704,5.086,1705,5.086,1706,5.086,1707,5.086,1708,5.086,1709,5.086,1710,5.086,1711,5.086,1712,5.086,1713,5.086,1714,5.086,1715,5.086]],["title/modules.html",[114,2.575]],["body/modules.html",[14,0.008,32,0.007,33,0.008,34,0.007,113,4.156,114,2.493,124,3.886,125,3.886,126,3.886,127,3.886,128,3.886,129,3.886,130,3.661,131,3.886,132,3.469,133,3.151,796,4.494,947,6.14,1586,7.609,1716,8.666,1717,8.666,1718,8.753,1719,6.993]],["title/overview.html",[1720,5.108]],["body/overview.html",[2,1.34,14,0.011,32,0.004,33,0.006,34,0.004,37,0.57,97,1.592,103,3.781,112,1.023,113,6.337,114,1.481,115,1.592,116,1.72,117,1.72,118,1.592,119,1.653,120,1.592,121,2.939,122,2.939,123,2.939,124,5.731,125,4.421,126,4.92,127,4.92,128,5.41,129,4.013,130,5.014,131,5.548,132,4.829,133,4.387,134,2.523,135,1.653,136,1.535,175,1.961,253,4.656,259,4.43,261,4.539,341,2.939,343,2.939,344,2.939,345,4.013,346,4.013,347,4.291,414,2.67,459,2.67,585,4.727,626,2.939,627,2.939,735,5.438,748,2.939,749,2.939,750,2.939,912,2.939,913,2.939,1038,4.791,1069,2.939,1071,2.939,1072,2.939,1147,4.791,1149,4.539,1164,2.939,1166,2.939,1167,2.939,1207,5.085,1238,2.939,1240,2.939,1241,2.939,1322,2.939,1324,2.939,1325,2.939,1418,2.939,1419,2.939,1720,2.939,1721,3.347,1722,3.347,1723,3.347,1724,2.939,1725,3.347]],["title/miscellaneous/typealiases.html",[1555,2.075,1726,5.116]],["body/miscellaneous/typealiases.html",[9,0.541,13,0.52,14,0.01,32,0.007,33,0.009,34,0.007,555,5.448,877,6.484,1555,3.609,1727,6.159,1728,7.384,1729,8.607,1730,7.384,1731,7.384,1732,7.384,1733,7.384,1734,6.159,1735,7.384,1736,7.384]],["title/miscellaneous/variables.html",[1555,2.075,1737,4.492]],["body/miscellaneous/variables.html",[5,0.054,9,0.128,10,0.271,13,0.539,14,0.011,16,0.721,17,2.725,18,2.148,21,1.291,26,1.823,32,0.002,33,0.003,34,0.002,43,1.026,57,0.624,72,0.977,75,1.214,110,2.082,112,0.771,137,1.165,149,0.646,152,2.653,158,1.746,159,3.083,160,1.282,161,1.282,162,2.081,163,1.282,164,1.282,165,1.282,166,1.282,167,1.477,168,1.282,169,2.011,170,2.011,171,2.011,172,2.011,173,2.736,195,1.078,211,0.646,231,0.75,243,1.165,257,0.669,283,1.116,300,0.949,334,1.007,348,1.165,351,2.454,359,3.07,360,1.282,361,3.098,362,1.282,363,1.282,364,1.282,365,1.165,366,2.573,369,3.297,370,3.297,371,0.624,372,1.638,373,1.638,374,1.638,375,0.75,376,2.512,377,1.896,403,1.077,405,2.011,407,2.011,414,1.165,483,1.077,484,1.077,490,2.393,493,2.207,495,2.393,497,2.393,499,1.447,526,3.669,557,1.41,572,0.855,580,1.282,582,1.165,583,3.707,592,2.048,598,2.5,600,3.367,606,0.949,608,0.949,612,3.934,613,3.372,622,0.532,628,1.165,629,3.396,632,2.011,633,1.282,634,1.282,635,1.949,636,2.048,658,0.947,663,1.176,676,0.855,678,1.739,681,1.007,682,1.638,712,0.817,751,1.165,753,2.011,754,1.282,755,1.282,762,1.739,765,0.624,767,0.855,771,1.739,775,0.899,778,1.638,783,0.721,789,1.638,792,0.782,797,1.165,798,3.158,799,1.282,807,2.653,808,2.011,809,2.011,810,1.282,811,1.282,812,1.282,851,4.292,939,1.282,955,0.949,962,0.949,966,0.721,971,0.949,974,0.949,1027,1.282,1063,1.165,1084,1.86,1145,1.165,1147,0.949,1149,0.899,1168,1.165,1170,2.011,1171,1.282,1172,1.282,1173,0.949,1178,1.282,1204,1.165,1207,1.007,1242,1.165,1244,2.011,1245,1.282,1246,1.282,1256,2.011,1273,1.165,1300,2.011,1326,1.165,1328,2.011,1329,1.282,1330,1.282,1409,1.165,1421,1.165,1423,2.011,1424,1.282,1425,1.282,1453,1.165,1456,1.282,1458,1.282,1459,2.011,1460,2.213,1461,2.213,1462,1.282,1463,2.213,1464,1.282,1465,2.213,1466,2.213,1467,1.282,1469,1.282,1473,1.282,1474,2.921,1475,3.924,1476,2.213,1477,1.282,1478,2.213,1479,1.282,1480,2.213,1481,1.282,1526,1.282,1555,0.855,1562,1.282,1616,1.282,1724,4.863,1737,1.282,1738,1.46,1739,1.46,1740,2.521,1741,1.46,1742,1.46,1743,1.46,1744,1.46,1745,1.46,1746,1.46,1747,2.521,1748,2.521,1749,2.521,1750,2.521,1751,1.46,1752,2.521,1753,1.46,1754,1.46,1755,3.326,1756,2.521,1757,1.46,1758,1.46,1759,1.46,1760,1.46,1761,1.46,1762,2.521,1763,3.959,1764,4.469,1765,3.959,1766,3.959,1767,2.521,1768,4.888,1769,2.521,1770,1.46,1771,1.46,1772,1.46,1773,1.46,1774,1.46,1775,1.46,1776,1.46,1777,1.46,1778,1.46,1779,1.46,1780,1.46,1781,1.46,1782,1.46,1783,1.46,1784,1.46,1785,1.46,1786,1.46,1787,1.46,1788,1.46,1789,1.46,1790,2.521,1791,1.46,1792,1.46,1793,1.46,1794,1.46,1795,1.46,1796,1.46,1797,1.46,1798,1.46,1799,1.46,1800,1.46,1801,1.46,1802,2.521,1803,2.521,1804,2.521,1805,2.521,1806,2.521,1807,2.521,1808,2.521,1809,2.521,1810,2.521,1811,2.521,1812,1.46,1813,2.521,1814,1.46,1815,1.46,1816,2.521,1817,1.46,1818,1.46,1819,2.521,1820,1.46,1821,1.46,1822,2.521,1823,1.46,1824,1.46,1825,2.521,1826,1.46,1827,1.46,1828,1.46,1829,1.46,1830,1.46,1831,1.46,1832,1.46,1833,1.46,1834,1.46,1835,5.539,1836,1.46,1837,1.46,1838,1.46,1839,1.46,1840,1.46,1841,1.46,1842,1.46,1843,1.46,1844,1.46,1845,1.46,1846,1.46,1847,1.46,1848,1.46,1849,1.46,1850,1.46,1851,1.46,1852,1.46,1853,1.46,1854,1.46,1855,1.46,1856,1.46,1857,1.46,1858,1.46,1859,1.46,1860,1.46,1861,1.46,1862,2.521,1863,1.46,1864,1.46,1865,1.46,1866,1.46,1867,1.46,1868,1.46,1869,1.46,1870,1.46,1871,1.46,1872,1.46,1873,2.521,1874,1.46,1875,1.46,1876,1.46,1877,1.46,1878,1.46]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":712,"title":{},"body":{"classes/Course.html":{},"classes/FindDto.html":{},"classes/PagedListStageDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1547,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1447,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1455,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":660,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["1.0.0",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["1.22.0",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":818,"title":{},"body":{"classes/FindDto.html":{}}}],["1024",{"_index":1063,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":1721,"title":{},"body":{"overview.html":{}}}],["13",{"_index":1722,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1725,"title":{},"body":{"overview.html":{}}}],["17.1.1",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1724,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1064,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["200kb",{"_index":1066,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["2020",{"_index":1654,"title":{},"body":{"license.html":{}}}],["21",{"_index":1470,"title":{},"body":{"coverage.html":{}}}],["2347063644568",{"_index":992,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["2347063644568'})@maxlength(columnsize.length64)@isoptional",{"_index":1397,"title":{},"body":{"classes/UserDto.html":{}}}],["24",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["3",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["3.23.0",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1554,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1471,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["3/21",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["3/30",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1551,"title":{},"body":{"dependencies.html":{}}}],["4.5.10",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["49",{"_index":1723,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["5.9.18",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.8",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1549,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["60000",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":1178,"title":{},"body":{"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseEntity.html":{}}}],["_${propertykey",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":1092,"title":{},"body":{"injectables/ProfileService.html":{}}}],["abortearly",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":1597,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstractcontrolleroptions",{"_index":1,"title":{"interfaces/AbstractControllerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithauthoptions",{"_index":24,"title":{"interfaces/AbstractControllerWithAuthOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithswaggeroptions",{"_index":27,"title":{"interfaces/AbstractControllerWithSwaggerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractdocument",{"_index":1728,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["access",{"_index":855,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["accessors",{"_index":524,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["account",{"_index":951,"title":{},"body":{"injectables/MailService.html":{}}}],["acctverifydto",{"_index":36,"title":{"classes/AcctVerifyDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["achieving",{"_index":1594,"title":{},"body":{"index.html":{}}}],["action",{"_index":1709,"title":{},"body":{"license.html":{}}}],["activate",{"_index":521,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["admin",{"_index":1376,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1727,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["amazing",{"_index":1601,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1676,"title":{},"body":{"license.html":{}}}],["api_auth_enabled",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":939,"title":{},"body":{"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["api_key_mailgun",{"_index":803,"title":{},"body":{"modules/DbTest.html":{}}}],["api_secret",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":597,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apibody",{"_index":1027,"title":{},"body":{"controllers/ProfileController.html":{},"miscellaneous/variables.html":{}}}],["apiconflictresponse",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":1028,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["apiconsumes('multipart/form",{"_index":1054,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["apiexception",{"_index":58,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["apiexception})@apibearerauth",{"_index":595,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["apiexception})@apiresponse({status",{"_index":594,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["apiexception})@apiresponse({type",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(authenticationguard",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1288,"title":{},"body":{"classes/TracksController.html":{}}}],["apifile",{"_index":1466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":76,"title":{},"body":{"classes/ApiException.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/CourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/IPagedListDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@expose",{"_index":505,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({readonly",{"_index":1268,"title":{},"body":{"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({type",{"_index":482,"title":{},"body":{"classes/AvatarUploadDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{}}}],["apiresponse",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apiswaggeroperation",{"_index":1461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["apitags(\"health",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(\"profile",{"_index":1040,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('auth",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiunauthorizedresponse",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_email",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":96,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appemail",{"_index":689,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["applicable",{"_index":1621,"title":{},"body":{"index.html":{}}}],["application",{"_index":1606,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":113,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":103,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectural",{"_index":1610,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":832,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":1713,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1648,"title":{},"body":{"index.html":{}}}],["assignedtasks",{"_index":1274,"title":{},"body":{"classes/TracksController.html":{}}}],["assignedtasks(@param(\"trackid",{"_index":1315,"title":{},"body":{"classes/TracksController.html":{}}}],["assignedtasks(trackid",{"_index":1279,"title":{},"body":{"classes/TracksController.html":{}}}],["assigntasksdto",{"_index":181,"title":{"classes/AssignTasksDto.html":{}},"body":{"classes/AssignTasksDto.html":{},"coverage.html":{}}}],["associated",{"_index":1663,"title":{},"body":{"license.html":{}}}],["async",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":18,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/MailService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":55,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["auth.guard",{"_index":1032,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth.guard.ts",{"_index":882,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:9",{"_index":883,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{}}}],["auth/auth.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards",{"_index":604,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["auth/guards/jwt",{"_index":1031,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth/models/dto/auth.dto",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_guard_type",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":192,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":263,"title":{"guards/AuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["autherrors",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherrors.expired_token",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_login_attempt",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_token",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":885,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(auth_guard_type",{"_index":887,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":124,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobj",{"_index":366,"title":{"interfaces/AuthObj.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authobj.create",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.delete",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.find",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.findbyid",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.update",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create?.length",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete?.length",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find?.length",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid?.length",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update?.length",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1702,"title":{},"body":{"license.html":{}}}],["authroles",{"_index":369,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":261,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["autopopulate",{"_index":1131,"title":{},"body":{"classes/Stage.html":{},"dependencies.html":{}}}],["available",{"_index":947,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["avatar",{"_index":1015,"title":{},"body":{"controllers/ProfileController.html":{}}}],["avatars",{"_index":1090,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["avataruploaddto",{"_index":479,"title":{"classes/AvatarUploadDto.html":{}},"body":{"classes/AvatarUploadDto.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["avataruploaddto})@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":1017,"title":{},"body":{"controllers/ProfileController.html":{}}}],["await",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["badrequestexception",{"_index":1020,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["badrequestexception(\"file",{"_index":1057,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["badrequestexception(\"thumbnail",{"_index":1306,"title":{},"body":{"classes/TracksController.html":{}}}],["basecontrolleroptions",{"_index":486,"title":{"interfaces/BaseControllerOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithauthoptions",{"_index":491,"title":{"interfaces/BaseControllerWithAuthOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithswaggeropts",{"_index":492,"title":{"interfaces/BaseControllerWithSwaggerOpts.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecrudcontroller",{"_index":598,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["basecrudcontroller(options",{"_index":1564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["basectrl",{"_index":583,"title":{},"body":{"classes/CategoriesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basedto",{"_index":501,"title":{"classes/BaseDto.html":{}},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["basedto:11",{"_index":670,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:14",{"_index":668,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:8",{"_index":669,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["baseentity",{"_index":512,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentity:12",{"_index":651,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:14",{"_index":646,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:16",{"_index":653,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:18",{"_index":650,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:20",{"_index":648,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:22",{"_index":647,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:24",{"_index":645,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:26",{"_index":652,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:44",{"_index":656,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:53",{"_index":657,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:62",{"_index":655,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:71",{"_index":654,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:9",{"_index":649,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseservice",{"_index":629,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintoken",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pw",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(plaintoken",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["binary",{"_index":484,"title":{},"body":{"classes/AvatarUploadDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1639,"title":{},"body":{"index.html":{}}}],["bring",{"_index":1599,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1718,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1716,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":575,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["bufferedfile",{"_index":572,"title":{"interfaces/BufferedFile.html":{}},"body":{"interfaces/BufferedFile.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buildschema",{"_index":550,"title":{},"body":{"classes/BaseEntity.html":{}}}],["buildschema(this",{"_index":559,"title":{},"body":{"classes/BaseEntity.html":{}}}],["built",{"_index":1604,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":31,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"license.html":{}}}],["cache",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":461,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":465,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canlogin",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["career",{"_index":1589,"title":{},"body":{"index.html":{}}}],["catch",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/User.html":{}}}],["catch(error",{"_index":831,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":836,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories.controller",{"_index":631,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":605,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":581,"title":{"classes/CategoriesController.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":125,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":585,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":606,"title":{"classes/Category.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category.dto",{"_index":611,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{}}}],["category.dto.ts",{"_index":757,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.modelname",{"_index":633,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["category.schema",{"_index":634,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["categorydto",{"_index":592,"title":{"classes/CategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorymodel",{"_index":632,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryservice",{"_index":587,"title":{},"body":{"classes/CategoriesController.html":{}}}],["ccn",{"_index":180,"title":{},"body":{"injectables/AppService.html":{}}}],["ccn/${foldername",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charge",{"_index":1659,"title":{},"body":{"license.html":{}}}],["check",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["claim",{"_index":1705,"title":{},"body":{"license.html":{}}}],["clan",{"_index":1568,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AssignTasksDto.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"modules/DbTest.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":37,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AssignTasksDto.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"overview.html":{}}}],["classtype",{"_index":877,"title":{},"body":{"interfaces/IPagedListDto.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":1612,"title":{},"body":{"index.html":{}}}],["clientbaseurl",{"_index":40,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["cloud_name",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary",{"_index":676,"title":{"interfaces/Cloudinary.html":{}},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cloudinary.v2.config",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary.v2.uploader.upload(content",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary_api_key",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary_api_secret",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary_name",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":626,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_exports",{"_index":627,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":748,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_exports",{"_index":749,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_providers",{"_index":750,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":912,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":913,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":914,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_profilemodule",{"_index":1069,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":1071,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1070,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":1072,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_stagesmodule",{"_index":1164,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_exports",{"_index":1166,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_imports",{"_index":1165,"title":{},"body":{"modules/StagesModule.html":{}}}],["cluster_stagesmodule_providers",{"_index":1167,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":1238,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":1240,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":1239,"title":{},"body":{"modules/TasksModule.html":{}}}],["cluster_tasksmodule_providers",{"_index":1241,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule",{"_index":1322,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_exports",{"_index":1324,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_imports",{"_index":1323,"title":{},"body":{"modules/TracksModule.html":{}}}],["cluster_tracksmodule_providers",{"_index":1325,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1418,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1419,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1420,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1567,"title":{},"body":{"index.html":{}}}],["codeclannigeria",{"_index":1622,"title":{},"body":{"index.html":{}}}],["codeclannigeria.dev",{"_index":1590,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1588,"title":{},"body":{"index.html":{}}}],["columnsize",{"_index":658,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsize.length128",{"_index":716,"title":{},"body":{"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["columnsize.length256",{"_index":717,"title":{},"body":{"classes/Course.html":{}}}],["columnsize.length32",{"_index":661,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/UserDto.html":{}}}],["columnsize.length64",{"_index":1382,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":1609,"title":{},"body":{"index.html":{}}}],["community",{"_index":1572,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1175,"title":{},"body":{"classes/Task.html":{},"index.html":{}}}],["completed",{"_index":1192,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["compression",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["comprised",{"_index":1573,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1625,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1684,"title":{},"body":{"license.html":{}}}],["config",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.key",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.name",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.secret",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":149,"title":{"interfaces/Configuration.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration().appemail",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{}}}],["configuration().isauthenabled",{"_index":474,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["configuration().jwtsecret",{"_index":908,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmation",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmed",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail",{"_index":1339,"title":{},"body":{"classes/User.html":{}}}],["conflictexception",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["conflictexception('email",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('user",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["connect",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":1714,"title":{},"body":{"license.html":{}}}],["console.log(context.switchtohttp().getrequest().sessionid",{"_index":888,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["const",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(@injectmodel(user.modelname",{"_index":1087,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor(authservice",{"_index":463,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(categoryservice",{"_index":584,"title":{},"body":{"classes/CategoriesController.html":{}}}],["constructor(courseservice",{"_index":734,"title":{},"body":{"classes/CoursesController.html":{}}}],["constructor(message",{"_index":71,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(private",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["constructor(protected",{"_index":614,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(reflector",{"_index":1103,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(stageservice",{"_index":1146,"title":{},"body":{"classes/StagesController.html":{}}}],["constructor(tasksservice",{"_index":1206,"title":{},"body":{"classes/TasksController.html":{}}}],["constructor(trackservice",{"_index":1277,"title":{},"body":{"classes/TracksController.html":{}}}],["constructor(userentity",{"_index":1077,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor(usersservice",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["content",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":468,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1109,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":472,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["contract",{"_index":1710,"title":{},"body":{"license.html":{}}}],["controller",{"_index":7,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('profile",{"_index":1041,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller.interface.ts",{"_index":859,"title":{},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["controller.interface.ts:10",{"_index":869,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:11",{"_index":871,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:12",{"_index":863,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:8",{"_index":861,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:9",{"_index":866,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controllerauth",{"_index":372,"title":{"interfaces/ControllerAuth.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controllername",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.indexof('controller",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.substr",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":1678,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1662,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1653,"title":{},"body":{"license.html":{}}}],["course",{"_index":707,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["course.dto",{"_index":743,"title":{},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{}}}],["course.dto.ts",{"_index":760,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["course.modelname",{"_index":754,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["course.schema",{"_index":755,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["coursedto",{"_index":718,"title":{"classes/CourseDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["coursemodel",{"_index":753,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courses.controller",{"_index":752,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses.service",{"_index":740,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["courses/courses.module",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["coursescontroller",{"_index":732,"title":{"classes/CoursesController.html":{}},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["courseservice",{"_index":737,"title":{},"body":{"classes/CoursesController.html":{}}}],["coursesmodule",{"_index":126,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesservice",{"_index":735,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1429,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverage.ts",{"_index":1434,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["create",{"_index":375,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":620,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["create(input",{"_index":588,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["createcategorydto",{"_index":589,"title":{"classes/CreateCategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcoursedto",{"_index":738,"title":{"classes/CreateCourseDto.html":{}},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["created",{"_index":1583,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":503,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["createdby",{"_index":515,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["createdto",{"_index":495,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createstagedto",{"_index":762,"title":{"classes/CreateStageDto.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtaskdto",{"_index":771,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtrack",{"_index":1275,"title":{},"body":{"classes/TracksController.html":{}}}],["createtrack(@body",{"_index":1305,"title":{},"body":{"classes/TracksController.html":{}}}],["createtrack(input",{"_index":1286,"title":{},"body":{"classes/TracksController.html":{}}}],["createtrackdto",{"_index":778,"title":{"classes/CreateTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtransport",{"_index":919,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":789,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createwiththumbnailtrackdto",{"_index":787,"title":{"classes/CreateWithThumbnailTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{}}}],["crypto",{"_index":1373,"title":{},"body":{"classes/User.html":{}}}],["ctx",{"_index":837,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":841,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":840,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":1632,"title":{},"body":{"index.html":{}}}],["customdecorator",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customname",{"_index":1257,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["damages",{"_index":1706,"title":{},"body":{"license.html":{}}}],["data",{"_index":1055,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["data')@apibearerauth",{"_index":1289,"title":{},"body":{"classes/TracksController.html":{}}}],["data')@apibody({description",{"_index":1013,"title":{},"body":{"controllers/ProfileController.html":{}}}],["database",{"_index":167,"title":{"interfaces/Database.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_host",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datauri",{"_index":1526,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["datauri.format(`.${file.originalname.split('.')[0",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datauriparser",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedListTaskDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["date().getdate",{"_index":1177,"title":{},"body":{"classes/Task.html":{}}}],["date().gettime",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().setdate(new",{"_index":1176,"title":{},"body":{"classes/Task.html":{}}}],["date().toisostring",{"_index":92,"title":{},"body":{"classes/ApiException.html":{}}}],["date(date.now",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(new",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"classes/Task.html":{}}}],["date})@type(undefined",{"_index":1197,"title":{},"body":{"classes/TaskDto.html":{}}}],["dbfactory",{"_index":809,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver",{"_index":807,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver.geturi",{"_index":812,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["dbtest",{"_index":796,"title":{"modules/DbTest.html":{}},"body":{"modules/DbTest.html":{},"modules.html":{}}}],["deactivate",{"_index":522,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deadline",{"_index":969,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{}}}],["deal",{"_index":1665,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1715,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator(target",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":44,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["default",{"_index":17,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth",{"_index":1475,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultauth.create.authroles",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.create.enableauth",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.authroles",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.enableauth",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.authroles",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.enableauth",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.authroles",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.enableauth",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.authroles",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.enableauth",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthobject",{"_index":16,"title":{"interfaces/DefaultAuthObject.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":364,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":46,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["delete",{"_index":377,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["delete(id",{"_index":862,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["deletedat",{"_index":516,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deletedby",{"_index":517,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deleteresulttype",{"_index":1730,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":115,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":663,"title":{},"body":{"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":1113,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(user",{"_index":1115,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["desire",{"_index":1584,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1638,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1577,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1578,"title":{},"body":{"index.html":{}}}],["discard_original_filename",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1674,"title":{},"body":{"license.html":{}}}],["doc",{"_index":22,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["documentation",{"_index":1430,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentquery",{"_index":1735,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":1736,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["domain",{"_index":684,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{}}}],["done",{"_index":1116,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":1122,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["dto",{"_index":1310,"title":{},"body":{"classes/TracksController.html":{}}}],["dto.thumbnail",{"_index":1312,"title":{},"body":{"classes/TracksController.html":{}}}],["dto.thumbnailurl",{"_index":1311,"title":{},"body":{"classes/TracksController.html":{}}}],["dto/avatar",{"_index":1034,"title":{},"body":{"controllers/ProfileController.html":{}}}],["dto/update",{"_index":1036,"title":{},"body":{"controllers/ProfileController.html":{}}}],["e",{"_index":1380,"title":{},"body":{"classes/User.html":{}}}],["each",{"_index":191,"title":{},"body":{"classes/AssignTasksDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["email",{"_index":57,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TemporaryToken.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email')@httpcode(httpstatus.ok",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["email?.tolowercase",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["email_token",{"_index":1255,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["emailparamname",{"_index":41,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["empty",{"_index":1059,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["enableauth",{"_index":370,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["enableimplicitconversion",{"_index":1048,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["encoding",{"_index":576,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["encryptedtoken",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1576,"title":{},"body":{"index.html":{}}}],["engineers",{"_index":1579,"title":{},"body":{"index.html":{}}}],["enroll",{"_index":1276,"title":{},"body":{"classes/TracksController.html":{}}}],["enroll(@param(\"trackid",{"_index":1320,"title":{},"body":{"classes/TracksController.html":{}}}],["enroll(trackid",{"_index":1291,"title":{},"body":{"classes/TracksController.html":{}}}],["enrollmentcount",{"_index":709,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["entity",{"_index":490,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["entitydto",{"_index":493,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IPagedListDto.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":985,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["enumerations",{"_index":1556,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":685,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["envvalidation",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1117,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error",{"_index":62,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":1118,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error.getstatus",{"_index":842,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.name",{"_index":848,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response",{"_index":852,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.error",{"_index":847,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.errors",{"_index":849,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.message",{"_index":853,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.name",{"_index":846,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.stack",{"_index":844,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorname",{"_index":845,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":63,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["errors/api",{"_index":835,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errortype",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["ethereal",{"_index":950,"title":{},"body":{"injectables/MailService.html":{}}}],["event",{"_index":1701,"title":{},"body":{"license.html":{}}}],["exception",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":829,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":833,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.ts",{"_index":60,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["exception.ts:10",{"_index":81,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:12",{"_index":77,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:14",{"_index":78,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:16",{"_index":83,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:18",{"_index":80,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:20",{"_index":73,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:6",{"_index":82,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:8",{"_index":79,"title":{},"body":{"classes/ApiException.html":{}}}],["exceptionfilter",{"_index":830,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":671,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["exclude()@prop({default",{"_index":1351,"title":{},"body":{"classes/User.html":{}}}],["excludeextraneousvalues",{"_index":1047,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["executioncontext",{"_index":466,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["exist",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["exist.email",{"_index":1417,"title":{},"body":{"classes/UsersController.html":{}}}],["exist.id",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.name",{"_index":624,"title":{},"body":{"classes/CategoriesController.html":{}}}],["exist.title",{"_index":747,"title":{},"body":{"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["exist.token",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["expandvariables",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["expireafterseconds",{"_index":1259,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["expireat",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"classes/TemporaryToken.html":{}}}],["expired",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired_token",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinmins",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["exports",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":510,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@apiproperty({type",{"_index":1141,"title":{},"body":{"classes/StageDto.html":{}}}],["expose()@isarray()@length(1",{"_index":1402,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isdate()@mindate(new",{"_index":1195,"title":{},"body":{"classes/TaskDto.html":{}}}],["expose()@isenum(userrole)@apiproperty({enum",{"_index":1400,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isoptional()@maxlength(columnsize.length128",{"_index":1389,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isphonenumber('zz",{"_index":1396,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length128)@apiproperty",{"_index":720,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length32)@apiproperty()@isalphanumeric",{"_index":725,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length64",{"_index":1393,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length64)@isemail",{"_index":1391,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@min(0)@isint()@isoptional",{"_index":1137,"title":{},"body":{"classes/StageDto.html":{}}}],["express",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["extractjwt",{"_index":899,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":905,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["failedsigninattempts",{"_index":1336,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false').default('true",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":1641,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1613,"title":{},"body":{"index.html":{}}}],["fieldname",{"_index":577,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.buffer",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.interface",{"_index":782,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{}}}],["file.interface.ts",{"_index":574,"title":{},"body":{"interfaces/BufferedFile.html":{},"coverage.html":{}}}],["file.mimetype.split('/')[0",{"_index":1060,"title":{},"body":{"controllers/ProfileController.html":{}}}],["file.size",{"_index":1062,"title":{},"body":{"controllers/ProfileController.html":{}}}],["fileinterceptor",{"_index":1025,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["filename",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1664,"title":{},"body":{"license.html":{}}}],["find",{"_index":373,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"classes/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":860,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findall(input",{"_index":864,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findbyid",{"_index":374,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["findbyid(input",{"_index":868,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["finddto",{"_index":813,"title":{"classes/FindDto.html":{}},"body":{"classes/FindDto.html":{},"coverage.html":{}}}],["findone",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstname",{"_index":982,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["fitness",{"_index":1697,"title":{},"body":{"license.html":{}}}],["folder",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foldername",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["follow",{"_index":1619,"title":{},"body":{"index.html":{}}}],["following",{"_index":1683,"title":{},"body":{"license.html":{}}}],["forbiddenexception('invalid",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":1623,"title":{},"body":{"index.html":{}}}],["format",{"_index":483,"title":{},"body":{"classes/AvatarUploadDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"miscellaneous/variables.html":{}}}],["fortune",{"_index":1655,"title":{},"body":{"license.html":{}}}],["found",{"_index":1231,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["free",{"_index":1614,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":1575,"title":{},"body":{"index.html":{}}}],["full",{"_index":1366,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fullname",{"_index":1341,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":879,"title":{},"body":{"interfaces/IPagedListDto.html":{},"injectables/SessionSerializer.html":{},"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":1560,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1681,"title":{},"body":{"license.html":{}}}],["future",{"_index":968,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"index.html":{}}}],["future'})@isoptional()@apiproperty({type",{"_index":1196,"title":{},"body":{"classes/TaskDto.html":{}}}],["generaterandomtoken",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterandomtoken(64",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken(undefined",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':trackid/stages",{"_index":1314,"title":{},"body":{"classes/TracksController.html":{}}}],["get(':trackid/stages')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1280,"title":{},"body":{"classes/TracksController.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":1005,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getauthobj",{"_index":1476,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getauthtoken",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthtoken(user",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfullname",{"_index":1363,"title":{},"body":{"classes/User.html":{}}}],["gethello",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":1367,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass",{"_index":1370,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass(this",{"_index":1388,"title":{},"body":{"classes/User.html":{}}}],["getmodelname",{"_index":548,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getprofile",{"_index":1001,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":1044,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(req",{"_index":1004,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getschema",{"_index":546,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getters",{"_index":561,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getting",{"_index":1566,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwelcome",{"_index":177,"title":{},"body":{"injectables/AppService.html":{}}}],["global",{"_index":1125,"title":{},"body":{"modules/SharedModule.html":{}}}],["goal",{"_index":1595,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1658,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1719,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":458,"title":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":459,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["hapi/joi",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["hash",{"_index":1372,"title":{},"body":{"classes/User.html":{}}}],["hash(this.password",{"_index":1379,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1657,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1703,"title":{},"body":{"license.html":{}}}],["host",{"_index":680,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Mailer.html":{}}}],["host.switchtohttp",{"_index":838,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["httpcode(httpstatus.ok",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["httpexception",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":827,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ethereal.email/message/waqkmgkddxqdoou",{"_index":954,"title":{},"body":{"injectables/MailService.html":{}}}],["httpstatus",{"_index":84,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.bad_request",{"_index":619,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.created",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.forbidden",{"_index":618,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.ok",{"_index":1043,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["httpstatus.unauthorized",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpstatus[statuscode",{"_index":95,"title":{},"body":{"classes/ApiException.html":{}}}],["ibasecontroller",{"_index":858,"title":{"interfaces/IBaseController.html":{}},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["id",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/IBaseController.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":906,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1058,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["img.util",{"_index":1086,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["img.util.ts",{"_index":1480,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":471,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"guards/RolesGuard.html":{}}}],["implied",{"_index":1693,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1687,"title":{},"body":{"license.html":{}}}],["including",{"_index":1668,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["info.messageid",{"_index":945,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":644,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["inject",{"_index":1153,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["inject(stagesservice",{"_index":1224,"title":{},"body":{"classes/TasksController.html":{}}}],["inject(tracksservice",{"_index":1158,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["injectable",{"_index":174,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["injectables",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"overview.html":{}}}],["injectmodel",{"_index":1083,"title":{},"body":{"injectables/ProfileService.html":{}}}],["inmemorydb",{"_index":808,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["innovators",{"_index":1574,"title":{},"body":{"index.html":{}}}],["input",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["input.email",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.email.tolowercase",{"_index":1416,"title":{},"body":{"classes/UsersController.html":{}}}],["input.name.touppercase",{"_index":623,"title":{},"body":{"classes/CategoriesController.html":{}}}],["input.stage",{"_index":1230,"title":{},"body":{"classes/TasksController.html":{}}}],["input.title.touppercase",{"_index":746,"title":{},"body":{"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["input.track",{"_index":1161,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["interface.ts",{"_index":489,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":1369,"title":{},"body":{"classes/User.html":{}}}],["internalservererrorexception(e",{"_index":1381,"title":{},"body":{"classes/User.html":{}}}],["invalid",{"_index":988,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["invalid_login_attempt",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_token",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ipagedlistdto",{"_index":872,"title":{"interfaces/IPagedListDto.html":{}},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{}}}],["isactive",{"_index":518,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isalphanumeric",{"_index":727,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["isarray",{"_index":189,"title":{},"body":{"classes/AssignTasksDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isarray()@ismongoid({each",{"_index":186,"title":{},"body":{"classes/AssignTasksDto.html":{}}}],["isauthenabled",{"_index":688,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["isauthenticationenabled",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdate",{"_index":964,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["isdeleted",{"_index":519,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isemail",{"_index":976,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isemailverified",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["isenum",{"_index":977,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isenum(userrole",{"_index":984,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isglobal",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":957,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["isjson",{"_index":826,"title":{},"body":{"classes/FindDto.html":{}}}],["isjson()@isoptional",{"_index":821,"title":{},"body":{"classes/FindDto.html":{}}}],["ismongoid",{"_index":190,"title":{},"body":{"classes/AssignTasksDto.html":{},"classes/BaseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["ismongoid()@expose",{"_index":507,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["isnotempty",{"_index":48,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/ResetPassInput.html":{},"classes/TrackDto.html":{},"classes/ValidateTokenInput.html":{}}}],["isoptional",{"_index":819,"title":{},"body":{"classes/FindDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["isoptional()@isjson",{"_index":823,"title":{},"body":{"classes/FindDto.html":{}}}],["isphonenumber",{"_index":978,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isphonenumber(\"zz",{"_index":987,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["issue",{"_index":1628,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1626,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":45,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["isurl()@maxlength(columnsize.length256)@expose",{"_index":723,"title":{},"body":{"classes/CourseDto.html":{}}}],["isvalid",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":875,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["joi.number().default(27017",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().default('redis://localhost:6379",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().required",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('true",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1646,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign(payload",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_secret",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_validity_hours",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":602,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":904,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtpayload",{"_index":409,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["jwtstrategy",{"_index":345,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidityhrs",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["key",{"_index":678,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1692,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1065,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["lastname",{"_index":983,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["legend",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":979,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["length(1",{"_index":994,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["length1024",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length128",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length16",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length256",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length32",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length512",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length64",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length8",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":1634,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1707,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1704,"title":{},"body":{"license.html":{}}}],["license",{"_index":1651,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":815,"title":{},"body":{"classes/FindDto.html":{},"dependencies.html":{}}}],["limitation",{"_index":1669,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1694,"title":{},"body":{"license.html":{}}}],["list.dto.ts",{"_index":874,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["local",{"_index":1539,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["locked",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["lockoutenddate",{"_index":1337,"title":{},"body":{"classes/User.html":{}}}],["logger",{"_index":929,"title":{},"body":{"injectables/MailService.html":{},"injectables/SessionSerializer.html":{}}}],["logger.debug(`message",{"_index":943,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`preview",{"_index":952,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.log(user",{"_index":1123,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["login",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(_",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginattemptcount",{"_index":1338,"title":{},"body":{"classes/User.html":{}}}],["loginreqdto",{"_index":54,"title":{"classes/LoginReqDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["loginresdto",{"_index":267,"title":{"classes/LoginResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["loginresdto})@apiunauthorizedresponse({type",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":1344,"title":{},"body":{"classes/User.html":{}}}],["mail",{"_index":928,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.options",{"_index":924,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":916,"title":{},"body":{"modules/MailModule.html":{}}}],["mailer",{"_index":683,"title":{"interfaces/Mailer.html":{}},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["mailer.domain",{"_index":941,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer.key",{"_index":940,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer_api_key",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain_mailgun",{"_index":806,"title":{},"body":{"modules/DbTest.html":{}}}],["mailgun",{"_index":932,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["mailmodule",{"_index":127,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":926,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":253,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":1435,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["make",{"_index":1636,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":1631,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":638,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128",{"_index":674,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128)@expose",{"_index":664,"title":{},"body":{"classes/CategoryDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{}}}],["maxlength(columnsize.length128)@expose()@isnotempty",{"_index":1266,"title":{},"body":{"classes/TrackDto.html":{}}}],["maxlength(columnsize.length256",{"_index":729,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["maxlength(columnsize.length32",{"_index":673,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length32)@expose",{"_index":666,"title":{},"body":{"classes/CategoryDto.html":{}}}],["maxlength(columnsize.length32)@isalphanumeric()@expose",{"_index":1139,"title":{},"body":{"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length64",{"_index":981,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["measures",{"_index":1592,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":570,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["members",{"_index":1603,"title":{},"body":{"index.html":{}}}],["memory",{"_index":801,"title":{},"body":{"modules/DbTest.html":{}}}],["mentee",{"_index":1374,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentor",{"_index":1375,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":1696,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1433,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["message",{"_index":64,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TaskDto.html":{},"classes/UserDto.html":{}}}],["metadata",{"_index":1546,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["mg",{"_index":931,"title":{},"body":{"injectables/MailService.html":{}}}],["mimetype",{"_index":578,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["min",{"_index":958,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["min(0",{"_index":960,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["mindate",{"_index":965,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["mindate(new",{"_index":967,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["minlength",{"_index":1096,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["minlength(6",{"_index":1094,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["miscellaneous",{"_index":1555,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1652,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1605,"title":{},"body":{"index.html":{}}}],["model",{"_index":11,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/User.html":{}}}],["modelcreate",{"_index":30,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modelname",{"_index":525,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modeloptions",{"_index":1253,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["models/category.entity",{"_index":607,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["models/course.entity",{"_index":741,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["models/dto/acct",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/auth.dto",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["models/dto/create",{"_index":1296,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["models/dto/reset",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/track.dto",{"_index":1297,"title":{},"body":{"classes/TracksController.html":{}}}],["models/dto/user.dto",{"_index":1412,"title":{},"body":{"classes/UsersController.html":{}}}],["models/dto/validate",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dtos/category.dto",{"_index":609,"title":{},"body":{"classes/CategoriesController.html":{}}}],["models/dtos/course.dto",{"_index":742,"title":{},"body":{"classes/CoursesController.html":{}}}],["models/dtos/create",{"_index":610,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["models/dtos/stage.dto",{"_index":1155,"title":{},"body":{"classes/StagesController.html":{}}}],["models/dtos/task.dto",{"_index":1221,"title":{},"body":{"classes/TasksController.html":{}}}],["models/jwt",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["models/stage.entity",{"_index":1156,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{}}}],["models/task.entity",{"_index":1222,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{}}}],["models/temporary",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["models/track.entity",{"_index":1298,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["models/user.entity",{"_index":1413,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["modelvm",{"_index":28,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modify",{"_index":1672,"title":{},"body":{"license.html":{}}}],["module",{"_index":112,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":114,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":800,"title":{},"body":{"modules/DbTest.html":{}}}],["mongodb_uri",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongomemoryserver",{"_index":799,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":554,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Stage.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":359,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forroot(configuration().database.uri",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forrootasync",{"_index":810,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1645,"title":{},"body":{"index.html":{}}}],["name",{"_index":75,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":1629,"title":{},"body":{"index.html":{}}}],["nestjs/bull",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":85,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1107,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"injectables/ProfileService.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1026,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":52,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/CategoriesController.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/IPagedListDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["new",{"_index":21,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{}}}],["nigeria",{"_index":1569,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":930,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":938,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":953,"title":{},"body":{"injectables/MailService.html":{}}}],["noninfringement",{"_index":1700,"title":{},"body":{"license.html":{}}}],["note",{"_index":1620,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["notfoundexception('token",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception('user",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception(`stage",{"_index":1229,"title":{},"body":{"classes/TasksController.html":{}}}],["notfoundexception(`track",{"_index":1232,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["notice",{"_index":1685,"title":{},"body":{"license.html":{}}}],["null",{"_index":530,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["number",{"_index":72,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["obj.util.ts",{"_index":1474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.interface",{"_index":19,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["object.interface.ts",{"_index":368,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["object.values(userrole",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":884,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["obtaining",{"_index":1661,"title":{},"body":{"license.html":{}}}],["ochi",{"_index":1656,"title":{},"body":{"license.html":{}}}],["official",{"_index":1570,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":774,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UpdateProfileDto.html":{}}}],["omittype(createuserdto",{"_index":1334,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["omittype(taskdto",{"_index":777,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["omittype(trackdto",{"_index":785,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{}}}],["omittype(userdto",{"_index":793,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["one_kb",{"_index":1300,"title":{},"body":{"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ongoing",{"_index":1585,"title":{},"body":{"index.html":{}}}],["operation.decorator.ts",{"_index":1460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationid",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":61,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1256,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["opts",{"_index":488,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/FindDto.html":{},"coverage.html":{}}}],["originalname",{"_index":579,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["otherwise",{"_index":1712,"title":{},"body":{"license.html":{}}}],["out",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1720,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1495,"title":{"dependencies.html":{}},"body":{}}],["paged",{"_index":880,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["pagedcategoryoutdto",{"_index":608,"title":{"classes/PagedCategoryOutDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedcourseoutputdto",{"_index":730,"title":{"classes/PagedCourseOutputDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["pagedlistdto",{"_index":499,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"interfaces/IPagedListDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["pagedlistdto(categorydto",{"_index":675,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{}}}],["pagedlistdto(coursedto",{"_index":731,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["pagedlistdto(entitydto",{"_index":1565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pagedlistdto(stagedto",{"_index":961,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["pagedlistdto(taskdto",{"_index":970,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["pagedlistdto(trackdto",{"_index":973,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["pagedlistdto(userdto",{"_index":997,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["pagedliststagedto",{"_index":955,"title":{"classes/PagedListStageDto.html":{}},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedlisttaskdto",{"_index":962,"title":{"classes/PagedListTaskDto.html":{}},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedtrackoutputdto",{"_index":971,"title":{"classes/PagedTrackOutputDto.html":{}},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pageduseroutputdto",{"_index":974,"title":{"classes/PagedUserOutputDto.html":{}},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1627,"title":{},"body":{"index.html":{}}}],["param",{"_index":1219,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["parameters",{"_index":74,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1591,"title":{},"body":{"index.html":{}}}],["particular",{"_index":1698,"title":{},"body":{"license.html":{}}}],["passport",{"_index":901,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":363,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["passportserializer",{"_index":1112,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":898,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":902,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password')@httpcode(httpstatus.ok",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["password_token",{"_index":1254,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["passwordhash",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":65,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["paths",{"_index":1553,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["payload.ts",{"_index":891,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["permission",{"_index":854,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"license.html":{}}}],["permit",{"_index":1679,"title":{},"body":{"license.html":{}}}],["person",{"_index":1660,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1680,"title":{},"body":{"license.html":{}}}],["phone",{"_index":989,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["phonenumber",{"_index":993,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["photo",{"_index":1016,"title":{},"body":{"controllers/ProfileController.html":{}}}],["photourl",{"_index":996,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["picktype",{"_index":51,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(categorydto",{"_index":758,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["picktype(coursedto",{"_index":761,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["picktype(loginreqdto",{"_index":56,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(registeruserdto",{"_index":910,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["picktype(stagedto",{"_index":769,"title":{},"body":{"classes/CreateStageDto.html":{}}}],["plaintoclass",{"_index":1029,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["plaintoclass(stagedto",{"_index":1318,"title":{},"body":{"classes/TracksController.html":{}}}],["plaintoclass(userdto",{"_index":1046,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoken",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["playlisturl",{"_index":710,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["please",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["plugin",{"_index":1133,"title":{},"body":{"classes/Stage.html":{}}}],["plugin(autopopulate",{"_index":1135,"title":{},"body":{"classes/Stage.html":{}}}],["pluralize",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["populate('user",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":681,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1689,"title":{},"body":{"license.html":{}}}],["post",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["post(\":trackid/enroll",{"_index":1319,"title":{},"body":{"classes/TracksController.html":{}}}],["post(\"create_with_thumbnail",{"_index":1303,"title":{},"body":{"classes/TracksController.html":{}}}],["post(':taskid/submit",{"_index":1233,"title":{},"body":{"classes/TasksController.html":{}}}],["post(':taskid/submit')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1214,"title":{},"body":{"classes/TasksController.html":{}}}],["post(':trackid/enroll')@useguards(jwtauthguard)@httpcode(httpstatus.ok)@apibearerauth()@apiresponse({status",{"_index":1292,"title":{},"body":{"classes/TracksController.html":{}}}],["post('confirm",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create_with_thumbnail')@useguards(jwtauthguard",{"_index":1287,"title":{},"body":{"classes/TracksController.html":{}}}],["post('login",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiconflictresponse({type",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload_profile_photo",{"_index":1052,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post('upload_profile_photo')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1012,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post()@apibearerauth()@useguards(jwtauthguard",{"_index":1209,"title":{},"body":{"classes/TasksController.html":{}}}],["post()@useguards(jwtauthguard",{"_index":590,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["pre",{"_index":1371,"title":{},"body":{"classes/User.html":{}}}],["pre('save",{"_index":1377,"title":{},"body":{"classes/User.html":{}}}],["prefix",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["preview",{"_index":946,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["process",{"_index":1643,"title":{},"body":{"index.html":{}}}],["process.env.api_auth_enabled",{"_index":696,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.app_email",{"_index":697,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_api_key",{"_index":705,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_api_secret",{"_index":704,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_name",{"_index":706,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_host",{"_index":700,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_name",{"_index":702,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_port",{"_index":701,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_secret",{"_index":692,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_validity_hours",{"_index":693,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_api_key",{"_index":698,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_domain",{"_index":699,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongodb_uri",{"_index":703,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongoms_system_binary",{"_index":804,"title":{},"body":{"modules/DbTest.html":{}}}],["process.env.node_env",{"_index":691,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.port",{"_index":690,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.redis_server_url",{"_index":695,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.root_url",{"_index":694,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["production",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1000,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":1074,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":1037,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.dto.ts",{"_index":1332,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.service",{"_index":1039,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":998,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":128,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":1038,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["promiselike",{"_index":896,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["prop",{"_index":551,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({default",{"_index":531,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({enum",{"_index":1184,"title":{},"body":{"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({maxlength",{"_index":1342,"title":{},"body":{"classes/User.html":{}}}],["prop({ref",{"_index":1130,"title":{},"body":{"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({required",{"_index":527,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({type",{"_index":1358,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AssignTasksDto.html":{},"interfaces/AuthObj.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["propertydescriptor",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propose",{"_index":1598,"title":{},"body":{"index.html":{}}}],["protected",{"_index":1088,"title":{},"body":{"injectables/ProfileService.html":{},"classes/StagesController.html":{}}}],["provide",{"_index":635,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1690,"title":{},"body":{"license.html":{}}}],["providers",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public_id",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":1673,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1637,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1699,"title":{},"body":{"license.html":{}}}],["put",{"_index":1021,"title":{},"body":{"controllers/ProfileController.html":{},"index.html":{}}}],["put()@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":1009,"title":{},"body":{"controllers/ProfileController.html":{}}}],["pw",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["pw.dto",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["pw.dto.ts",{"_index":1099,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["pw.dto.ts:7",{"_index":1100,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["queryitem",{"_index":1731,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":1732,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["questions",{"_index":1649,"title":{},"body":{"index.html":{}}}],["randombytes(columnsize.length32",{"_index":1385,"title":{},"body":{"classes/User.html":{}}}],["randombytes(size).tostring('hex",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"injectables/MailService.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{}}}],["redis",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["redis_server_url",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisurl",{"_index":687,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["ref",{"_index":529,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["reflect",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1104,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(input",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":213,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["registeruserresdto",{"_index":216,"title":{"classes/RegisterUserResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["repeat",{"_index":1642,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1624,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1607,"title":{},"body":{"index.html":{}}}],["req",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["req.url",{"_index":850,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["req.user['userid",{"_index":1050,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["request",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"index.html":{}}}],["request.body",{"_index":475,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["request.user",{"_index":478,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["require('nodemailer/lib/mailer",{"_index":934,"title":{},"body":{"injectables/MailService.html":{}}}],["required",{"_index":557,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":839,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.status(statuscode).json(exception",{"_index":857,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassinput",{"_index":221,"title":{"classes/ResetPassInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"coverage.html":{}}}],["resetpassword",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(@body",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(input",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":856,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":834,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restore",{"_index":523,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["restriction",{"_index":1667,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":565,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret._id",{"_index":567,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret.id",{"_index":566,"title":{},"body":{"classes/BaseEntity.html":{}}}],["return",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returnmodeltype",{"_index":1078,"title":{},"body":{"injectables/ProfileService.html":{},"classes/User.html":{}}}],["returns",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1670,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1548,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["roles",{"_index":600,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(userrole.admin",{"_index":617,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["roles(userrole.mentee",{"_index":1234,"title":{},"body":{"classes/TasksController.html":{}}}],["roles.includes(role",{"_index":1110,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":603,"title":{"guards/RolesGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["rolesguard)@roles(userrole.admin",{"_index":1210,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["rolesguard)@roles(userrole.admin)@apiresponse({type",{"_index":591,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["rolesguard)@roles(userrole.mentee)@apibearerauth()@apiresponse({status",{"_index":1216,"title":{},"body":{"classes/TasksController.html":{}}}],["root_url",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooturl",{"_index":686,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["rxjs",{"_index":886,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["sample",{"_index":991,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["saved",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved.isemailverified",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["schema",{"_index":361,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":816,"title":{},"body":{"classes/FindDto.html":{}}}],["secret",{"_index":679,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["secretorkey",{"_index":907,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure_url",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sell",{"_index":1677,"title":{},"body":{"license.html":{}}}],["sendemailverifytoken",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(@body",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(input",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(@body",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(input",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["sending",{"_index":948,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync",{"_index":920,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync(mailoptions",{"_index":923,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":944,"title":{},"body":{"injectables/MailService.html":{}}}],["serializeuser",{"_index":1114,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":1120,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":802,"title":{},"body":{"modules/DbTest.html":{}}}],["session",{"_index":365,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.serializer",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{}}}],["sessionserializer",{"_index":346,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["setmetadata(userrole",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setrandompass",{"_index":1340,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":541,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shall",{"_index":1686,"title":{},"body":{"license.html":{}}}],["shared",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/config/configuration",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["shared/constants",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["shared/controllers",{"_index":599,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["shared/controllers/base.controller",{"_index":1294,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/decorators/roles.decorator",{"_index":601,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors/api",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["shared/interfaces",{"_index":1030,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["shared/interfaces/buffer",{"_index":781,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{}}}],["shared/mail/mail.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/mail/mail.service",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["shared/models/base.entity",{"_index":659,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shared/models/dto",{"_index":672,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["shared/models/dto/base.dto",{"_index":728,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TrackDto.html":{}}}],["shared/services",{"_index":630,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["shared/types/abstract.type",{"_index":556,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["shared/utils/random",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/utils/upload",{"_index":1085,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["shared/validations/env.validation",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":129,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":580,"title":{},"body":{"interfaces/BufferedFile.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":1633,"title":{},"body":{"index.html":{}}}],["skills",{"_index":1615,"title":{},"body":{"index.html":{}}}],["skip",{"_index":817,"title":{},"body":{"classes/FindDto.html":{}}}],["slack",{"_index":1647,"title":{},"body":{"index.html":{}}}],["software",{"_index":1582,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1635,"title":{},"body":{"index.html":{}}}],["solved",{"_index":1630,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"index.html":{}}}],["src/.../abstract.type.ts",{"_index":1729,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.errors.ts",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticate.decorator.ts",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.controller.ts",{"_index":1561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../categories.controller.ts",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../categories.module.ts",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../courses.module.ts",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1562,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../paged",{"_index":1563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../random",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stages.controller.ts",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stages.module.ts",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.entity.ts",{"_index":1557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tasks.controller.ts",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tasks.module.ts",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temporary",{"_index":1558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tracks.controller.ts",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tracks.module.ts",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../upload",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.controller.ts",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.module.ts",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":178,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:101",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:114",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:139",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:54",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:64",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:111",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:15",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:46",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:58",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:78",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:94",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":460,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":464,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:17",{"_index":467,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:21",{"_index":470,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/jwt",{"_index":881,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":1102,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":1105,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:13",{"_index":1106,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/models/dto/acct",{"_index":38,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts",{"_index":909,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts:11",{"_index":911,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/reset",{"_index":1098,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["src/auth/models/dto/validate",{"_index":1426,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["src/auth/models/jwt",{"_index":890,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/models/temporary",{"_index":1247,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/session.serializer.ts",{"_index":1111,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:11",{"_index":1119,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:8",{"_index":1121,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":892,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":897,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":894,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/temp",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["src/categories/categories.controller.ts",{"_index":582,"title":{},"body":{"classes/CategoriesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.controller.ts:32",{"_index":586,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:44",{"_index":596,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":628,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.service.ts",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["src/categories/models/category.entity.ts",{"_index":637,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/categories/models/category.entity.ts:15",{"_index":643,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/dtos/category.dto.ts",{"_index":662,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{}}}],["src/categories/models/dtos/category.dto.ts:10",{"_index":667,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/category.dto.ts:13",{"_index":665,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/create",{"_index":756,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts",{"_index":733,"title":{},"body":{"classes/CoursesController.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts:36",{"_index":736,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.controller.ts:47",{"_index":739,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.module.ts",{"_index":751,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/courses/courses.service.ts",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["src/courses/models/course.entity.ts",{"_index":708,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/courses/models/course.entity.ts:15",{"_index":715,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:23",{"_index":711,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:30",{"_index":714,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:35",{"_index":713,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/dtos/course.dto.ts",{"_index":719,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["src/courses/models/dtos/course.dto.ts:14",{"_index":726,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:18",{"_index":721,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:22",{"_index":724,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:24",{"_index":722,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/create",{"_index":759,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1453,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/profile/dto/avatar",{"_index":480,"title":{},"body":{"classes/AvatarUploadDto.html":{},"coverage.html":{}}}],["src/profile/dto/update",{"_index":1331,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts",{"_index":999,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:37",{"_index":1006,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:48",{"_index":1010,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:63",{"_index":1019,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":1073,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":1075,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:15",{"_index":1082,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:9",{"_index":1079,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/shared/config/configuration.ts",{"_index":677,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["src/shared/constants.ts",{"_index":1456,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/controllers/base.controller.ts",{"_index":1457,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/decorators/api",{"_index":1458,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authenticate.decorator.ts",{"_index":1462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/file",{"_index":1464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/roles.decorator.ts",{"_index":1467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/errors/api",{"_index":59,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/shared/errors/auth.errors.ts",{"_index":1469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/http",{"_index":828,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interfaces/abstract",{"_index":6,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/base",{"_index":487,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{},"coverage.html":{}}}],["src/shared/interfaces/buffer",{"_index":573,"title":{},"body":{"interfaces/BufferedFile.html":{},"coverage.html":{}}}],["src/shared/interfaces/default",{"_index":367,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["src/shared/mail/mail.module.ts",{"_index":915,"title":{},"body":{"modules/MailModule.html":{}}}],["src/shared/mail/mail.service.ts",{"_index":917,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/shared/mail/mail.service.ts:10",{"_index":927,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:11",{"_index":921,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:16",{"_index":922,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:28",{"_index":925,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/models/base.entity.ts",{"_index":513,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts:12",{"_index":537,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:14",{"_index":532,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:16",{"_index":539,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:18",{"_index":536,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:20",{"_index":534,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:22",{"_index":533,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:24",{"_index":528,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:26",{"_index":538,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:27",{"_index":547,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:41",{"_index":549,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:44",{"_index":544,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:53",{"_index":545,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:62",{"_index":543,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:71",{"_index":540,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:9",{"_index":535,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/dto/base.dto.ts",{"_index":502,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/base.dto.ts:11",{"_index":509,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:14",{"_index":506,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:8",{"_index":508,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/find.dto.ts",{"_index":814,"title":{},"body":{"classes/FindDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/find.dto.ts:10",{"_index":824,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:13",{"_index":822,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:5",{"_index":825,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:7",{"_index":820,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/paged",{"_index":873,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/services/base.service.ts",{"_index":1472,"title":{},"body":{"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":1124,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/types/abstract.type.ts",{"_index":1734,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/shared/utils/get",{"_index":1473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/random",{"_index":1477,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/upload",{"_index":1479,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/validations/env.validation.ts",{"_index":1481,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/models/dtos/create",{"_index":763,"title":{},"body":{"classes/CreateStageDto.html":{},"coverage.html":{}}}],["src/stages/models/dtos/stage.dto.ts",{"_index":956,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"coverage.html":{}}}],["src/stages/models/dtos/stage.dto.ts:15",{"_index":1140,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts:18",{"_index":1136,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts:23",{"_index":1138,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts:27",{"_index":1143,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/stage.entity.ts",{"_index":1126,"title":{},"body":{"classes/Stage.html":{},"coverage.html":{}}}],["src/stages/models/stage.entity.ts:19",{"_index":1129,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts:28",{"_index":1127,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts:33",{"_index":1128,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts:40",{"_index":1132,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/stages.controller.ts",{"_index":1145,"title":{},"body":{"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/stages.controller.ts:27",{"_index":1150,"title":{},"body":{"classes/StagesController.html":{}}}],["src/stages/stages.controller.ts:43",{"_index":1152,"title":{},"body":{"classes/StagesController.html":{}}}],["src/stages/stages.module.ts",{"_index":1168,"title":{},"body":{"modules/StagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/stages.service.ts",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["src/tasks/models/dtos/assign",{"_index":182,"title":{},"body":{"classes/AssignTasksDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/create",{"_index":772,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/task.dto.ts",{"_index":963,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/task.dto.ts:19",{"_index":1201,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:22",{"_index":1199,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:25",{"_index":1202,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:28",{"_index":1200,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:35",{"_index":1198,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/task.entity.ts",{"_index":1174,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/tasks/models/task.entity.ts:25",{"_index":1186,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:34",{"_index":1180,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:41",{"_index":1179,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:49",{"_index":1185,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:52",{"_index":1187,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:55",{"_index":1181,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:57",{"_index":1188,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":1204,"title":{},"body":{"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/tasks.controller.ts:38",{"_index":1208,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:55",{"_index":1212,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:81",{"_index":1217,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.module.ts",{"_index":1242,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/tasks.service.ts",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["src/tracks/models/dto/create",{"_index":779,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/track.dto.ts",{"_index":972,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/track.dto.ts:13",{"_index":1271,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/track.dto.ts:17",{"_index":1267,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/track.dto.ts:21",{"_index":1270,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/track.entity.ts",{"_index":1260,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/tracks/models/track.entity.ts:17",{"_index":1265,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:26",{"_index":1262,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:29",{"_index":1263,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:34",{"_index":1264,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/tracks.controller.ts",{"_index":1273,"title":{},"body":{"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.controller.ts:110",{"_index":1282,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:127",{"_index":1293,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:47",{"_index":1278,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:59",{"_index":1285,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:78",{"_index":1290,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.module.ts",{"_index":1326,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.service.ts",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["src/users/models/dto/create",{"_index":790,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/register",{"_index":1093,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts",{"_index":975,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts:14",{"_index":1394,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:18",{"_index":1395,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:23",{"_index":1392,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:28",{"_index":1401,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:33",{"_index":1390,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:39",{"_index":1398,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:46",{"_index":1405,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:51",{"_index":1399,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:56",{"_index":1407,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/user.entity.ts",{"_index":1335,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/models/user.entity.ts:100",{"_index":1364,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:103",{"_index":1362,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:108",{"_index":1361,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:112",{"_index":1368,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:33",{"_index":1347,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:40",{"_index":1349,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:49",{"_index":1345,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:56",{"_index":1355,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:60",{"_index":1356,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:67",{"_index":1343,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:69",{"_index":1359,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:72",{"_index":1354,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:77",{"_index":1352,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:84",{"_index":1357,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:87",{"_index":1348,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:89",{"_index":1350,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:91",{"_index":1346,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:93",{"_index":1360,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1409,"title":{},"body":{"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts:33",{"_index":1410,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":1411,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1421,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["stack",{"_index":66,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["stacktrace",{"_index":843,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stage",{"_index":966,"title":{"classes/Stage.html":{}},"body":{"classes/PagedListTaskDto.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stage.dto",{"_index":768,"title":{},"body":{"classes/CreateStageDto.html":{},"classes/StagesController.html":{}}}],["stage.dto.ts",{"_index":764,"title":{},"body":{"classes/CreateStageDto.html":{},"coverage.html":{}}}],["stage.dto.ts:14",{"_index":766,"title":{},"body":{"classes/CreateStageDto.html":{}}}],["stage.modelname",{"_index":1171,"title":{},"body":{"modules/StagesModule.html":{},"miscellaneous/variables.html":{}}}],["stage.schema",{"_index":1172,"title":{},"body":{"modules/StagesModule.html":{},"miscellaneous/variables.html":{}}}],["stage.title",{"_index":1163,"title":{},"body":{"classes/StagesController.html":{}}}],["stagedto",{"_index":767,"title":{"classes/StageDto.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stagemodel",{"_index":1170,"title":{},"body":{"modules/StagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stages",{"_index":1261,"title":{},"body":{"classes/Track.html":{},"classes/TracksController.html":{}}}],["stages.controller",{"_index":1169,"title":{},"body":{"modules/StagesModule.html":{}}}],["stages.service",{"_index":1157,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{}}}],["stages/models/dtos/stage.dto",{"_index":1295,"title":{},"body":{"classes/TracksController.html":{}}}],["stages/models/stage.entity",{"_index":1189,"title":{},"body":{"classes/Task.html":{},"classes/Track.html":{}}}],["stages/stages.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["stages/stages.service",{"_index":1220,"title":{},"body":{"classes/TasksController.html":{}}}],["stagescontroller",{"_index":1144,"title":{"classes/StagesController.html":{}},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{},"coverage.html":{}}}],["stageservice",{"_index":1151,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["stagesmodule",{"_index":130,"title":{"modules/StagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["stagesservice",{"_index":1147,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":1608,"title":{},"body":{"index.html":{}}}],["started",{"_index":1190,"title":{"index.html":{},"license.html":{}},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["stated",{"_index":1596,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":558,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["status",{"_index":67,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["statuscode",{"_index":68,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["strategies/jwt.strategy",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":900,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":43,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"injectables/AuthService.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["string})@isoptional",{"_index":1404,"title":{},"body":{"classes/UserDto.html":{}}}],["structure",{"_index":1611,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1682,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1675,"title":{},"body":{"license.html":{}}}],["submittask",{"_index":1205,"title":{},"body":{"classes/TasksController.html":{}}}],["submittask(@param('taskid",{"_index":1235,"title":{},"body":{"classes/TasksController.html":{}}}],["submittask(taskid",{"_index":1213,"title":{},"body":{"classes/TasksController.html":{}}}],["substantial",{"_index":1688,"title":{},"body":{"license.html":{}}}],["suggested",{"_index":1617,"title":{},"body":{"index.html":{}}}],["super",{"_index":903,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super(categoryservice",{"_index":615,"title":{},"body":{"classes/CategoriesController.html":{}}}],["super(courseservice",{"_index":744,"title":{},"body":{"classes/CoursesController.html":{}}}],["super(stageservice",{"_index":1159,"title":{},"body":{"classes/StagesController.html":{}}}],["super(tasksservice",{"_index":1225,"title":{},"body":{"classes/TasksController.html":{}}}],["super(trackservice",{"_index":1301,"title":{},"body":{"classes/TracksController.html":{}}}],["super(usersservice",{"_index":1415,"title":{},"body":{"classes/UsersController.html":{}}}],["super.canactivate(context",{"_index":889,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.create(dto",{"_index":1313,"title":{},"body":{"classes/TracksController.html":{}}}],["super.create(input",{"_index":625,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["support",{"_index":1586,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1717,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1459,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["symbol",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":23,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IPagedListDto.html":{}}}],["table",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["talents",{"_index":1602,"title":{},"body":{"index.html":{}}}],["target",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor.name",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["task",{"_index":1173,"title":{"classes/Task.html":{}},"body":{"classes/Task.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.dto",{"_index":776,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/TasksController.html":{}}}],["task.dto.ts",{"_index":773,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["task.modelname",{"_index":1245,"title":{},"body":{"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["task.schema",{"_index":1246,"title":{},"body":{"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["task.title",{"_index":1227,"title":{},"body":{"classes/TasksController.html":{}}}],["taskcount",{"_index":770,"title":{},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{}}}],["taskdto",{"_index":775,"title":{"classes/TaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskid",{"_index":1218,"title":{},"body":{"classes/TasksController.html":{}}}],["taskidlist",{"_index":184,"title":{},"body":{"classes/AssignTasksDto.html":{}}}],["taskmodel",{"_index":1244,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasks.controller",{"_index":1243,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.dto.ts",{"_index":183,"title":{},"body":{"classes/AssignTasksDto.html":{},"coverage.html":{}}}],["tasks.dto.ts:6",{"_index":187,"title":{},"body":{"classes/AssignTasksDto.html":{}}}],["tasks.dto.ts:9",{"_index":188,"title":{},"body":{"classes/AssignTasksDto.html":{}}}],["tasks.service",{"_index":1223,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":1203,"title":{"classes/TasksController.html":{}},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":131,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":1207,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["taskstatus",{"_index":1182,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.completed",{"_index":1194,"title":{},"body":{"classes/Task.html":{}}}],["taskstatus.started",{"_index":1183,"title":{},"body":{"classes/Task.html":{}}}],["tcreatedto",{"_index":496,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["technical",{"_index":1580,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":995,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["temp",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["temporarytoken",{"_index":354,"title":{"classes/TemporaryToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/TemporaryToken.html":{},"coverage.html":{}}}],["temporarytoken.modelname",{"_index":360,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temporarytoken.schema",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temptokens",{"_index":1258,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["temptokensservice",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["tentitydto",{"_index":494,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["test",{"_index":1616,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":798,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/.../db",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/helpers/db",{"_index":797,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":640,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["thanks",{"_index":1650,"title":{},"body":{"index.html":{}}}],["this.appservice.getwelcome",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetemptoken",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getauthtoken(req.user",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateemailtoken",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatepasswordtoken",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":476,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.categoryservice.findoneasync",{"_index":621,"title":{},"body":{"classes/CategoriesController.html":{}}}],["this.config",{"_index":936,"title":{},"body":{"injectables/MailService.html":{}}}],["this.courseservice.findoneasync",{"_index":745,"title":{},"body":{"classes/CoursesController.html":{}}}],["this.createtransport",{"_index":935,"title":{},"body":{"injectables/MailService.html":{}}}],["this.error",{"_index":87,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":89,"title":{},"body":{"classes/ApiException.html":{}}}],["this.firstname",{"_index":1383,"title":{},"body":{"classes/User.html":{}}}],["this.lastname",{"_index":1384,"title":{},"body":{"classes/User.html":{}}}],["this.mailservice.sendmailasync",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.message",{"_index":86,"title":{},"body":{"classes/ApiException.html":{}}}],["this.name",{"_index":568,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.path",{"_index":90,"title":{},"body":{"classes/ApiException.html":{}}}],["this.profileservice.uploadavatar(file",{"_index":1067,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.reflector.get",{"_index":1108,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.stack",{"_index":88,"title":{},"body":{"classes/ApiException.html":{}}}],["this.stageservice.findbyidasync(input.stage",{"_index":1228,"title":{},"body":{"classes/TasksController.html":{}}}],["this.stageservice.findoneasync",{"_index":1162,"title":{},"body":{"classes/StagesController.html":{}}}],["this.status",{"_index":94,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":93,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tasksservice.findbyidasync(taskid",{"_index":1236,"title":{},"body":{"classes/TasksController.html":{}}}],["this.tasksservice.findoneasync",{"_index":1226,"title":{},"body":{"classes/TasksController.html":{}}}],["this.tasksservice.submittask(task",{"_index":1237,"title":{},"body":{"classes/TasksController.html":{}}}],["this.timestamp",{"_index":91,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tokenservice",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.createentity",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.harddeletebyid(id",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.insertasync(token",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackservice.enroll(track.id",{"_index":1321,"title":{},"body":{"classes/TracksController.html":{}}}],["this.trackservice.findbyidasync(input.track",{"_index":1160,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["this.trackservice.findbyidasync(trackid",{"_index":1316,"title":{},"body":{"classes/TracksController.html":{}}}],["this.trackservice.findoneasync",{"_index":1302,"title":{},"body":{"classes/TracksController.html":{}}}],["this.trackservice.getstages(trackid",{"_index":1317,"title":{},"body":{"classes/TracksController.html":{}}}],["this.transporter",{"_index":937,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":942,"title":{},"body":{"injectables/MailService.html":{}}}],["this.userentity.updateone",{"_index":1091,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.userservice.findbyidasync(id",{"_index":1068,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.findbyidasync(req.user['userid",{"_index":1045,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.updateasync(id",{"_index":1051,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.usersservice.createentity(input",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findoneasync",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["this.usersservice.incrementloginattempt(user.id",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.insertasync(user",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.resetloginattempt(user.id",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateasync(doc.id",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validaterequest(request",{"_index":473,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validatetoken",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":949,"title":{},"body":{"injectables/MailService.html":{}}}],["throw",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["thumbnail",{"_index":788,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/TracksController.html":{}}}],["thumbnail.mimetype.split('/')[0",{"_index":1307,"title":{},"body":{"classes/TracksController.html":{}}}],["thumbnail.size",{"_index":1308,"title":{},"body":{"classes/TracksController.html":{}}}],["thumbnailurl",{"_index":786,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{}}}],["timestamp",{"_index":69,"title":{},"body":{"classes/ApiException.html":{}}}],["timestamps",{"_index":514,"title":{},"body":{"classes/BaseEntity.html":{}}}],["title",{"_index":622,"title":{},"body":{"classes/CategoriesController.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":1600,"title":{},"body":{"index.html":{}}}],["tojson",{"_index":560,"title":{},"body":{"classes/BaseEntity.html":{}}}],["token",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["token')@httpcode(httpstatus.ok",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{}}}],["token.dto.ts",{"_index":1427,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["token.dto.ts:8",{"_index":1428,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.entity",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.entity.ts",{"_index":1248,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["token.entity.ts:16",{"_index":1250,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:19",{"_index":1249,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:27",{"_index":1251,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:30",{"_index":1252,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.service",{"_index":358,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.service.ts",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["token.ts",{"_index":1478,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenparamname",{"_index":42,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["tokenservice",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.email",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokentype.password",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tort",{"_index":1711,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1386,"title":{},"body":{"classes/User.html":{}}}],["totalcount",{"_index":876,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["towards",{"_index":1593,"title":{},"body":{"index.html":{}}}],["tpagedentityoutputdto",{"_index":500,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["tpagedinputdto",{"_index":865,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["tpagedoutputdto",{"_index":867,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["track",{"_index":765,"title":{"classes/Track.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["track.dto",{"_index":784,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/TracksController.html":{}}}],["track.dto.ts",{"_index":780,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"coverage.html":{}}}],["track.dto.ts:23",{"_index":795,"title":{},"body":{"classes/CreateWithThumbnailTrackDto.html":{}}}],["track.modelname",{"_index":1329,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["track.schema",{"_index":1330,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["trackdto",{"_index":783,"title":{"classes/TrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["trackid",{"_index":1283,"title":{},"body":{"classes/TracksController.html":{}}}],["trackmodel",{"_index":1328,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tracks",{"_index":794,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["tracks.controller",{"_index":1327,"title":{},"body":{"modules/TracksModule.html":{}}}],["tracks.service",{"_index":1299,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["tracks/models/dto/track.dto",{"_index":959,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/UserDto.html":{}}}],["tracks/models/track.entity",{"_index":1134,"title":{},"body":{"classes/Stage.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["tracks/tracks.module",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{}}}],["tracks/tracks.service",{"_index":1154,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["trackscontroller",{"_index":1272,"title":{"classes/TracksController.html":{}},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["trackservice",{"_index":1148,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["tracksmodule",{"_index":132,"title":{"modules/TracksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["tracksservice",{"_index":1149,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["transform",{"_index":564,"title":{},"body":{"classes/BaseEntity.html":{}}}],["transformer",{"_index":511,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transport",{"_index":933,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["transporter",{"_index":918,"title":{},"body":{"injectables/MailService.html":{}}}],["trim",{"_index":639,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["true",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"classes/AssignTasksDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["true})@apiproperty({isarray",{"_index":1403,"title":{},"body":{"classes/UserDto.html":{}}}],["true})@expose()@isoptional",{"_index":1269,"title":{},"body":{"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["true})@expose()@type(undefined",{"_index":1406,"title":{},"body":{"classes/UserDto.html":{}}}],["true})@type(undefined",{"_index":1142,"title":{},"body":{"classes/StageDto.html":{}}}],["try",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["tsconfig",{"_index":1552,"title":{},"body":{"dependencies.html":{}}}],["tupdatedto",{"_index":498,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1726,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose/typegoose",{"_index":552,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"injectables/ProfileService.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":553,"title":{},"body":{"classes/BaseEntity.html":{}}}],["typeof",{"_index":851,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["types/abstract.type",{"_index":878,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["ui",{"_index":1550,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('password",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["uncompleted",{"_index":1191,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["unconfirmed",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["unconfirmed_email",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["undefined})@apibearerauth()@apiresponse({status",{"_index":1284,"title":{},"body":{"classes/TracksController.html":{}}}],["undefined})@apiresponse({status",{"_index":593,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["undefined})@exclude",{"_index":1353,"title":{},"body":{"classes/User.html":{}}}],["undefined})@httpcode(httpstatus.ok",{"_index":1018,"title":{},"body":{"controllers/ProfileController.html":{}}}],["undefined})@useguards(jwtauthguard",{"_index":1215,"title":{},"body":{"classes/TasksController.html":{}}}],["undefined})@useguards(jwtauthguard)@apibearerauth()@apiresponse({status",{"_index":1281,"title":{},"body":{"classes/TracksController.html":{}}}],["uniqid",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unique",{"_index":641,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["unsupportedmediatypeexception",{"_index":1022,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["unsupportedmediatypeexception(\"file",{"_index":1061,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["update",{"_index":376,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":870,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["updatedat",{"_index":504,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["updatedby",{"_index":520,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["updatedto",{"_index":497,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["updateprofile",{"_index":1002,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(@body",{"_index":1049,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(input",{"_index":1007,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofiledto",{"_index":1008,"title":{"classes/UpdateProfileDto.html":{}},"body":{"controllers/ProfileController.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updateresulttype",{"_index":1733,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["upload",{"_index":1014,"title":{},"body":{"controllers/ProfileController.html":{}}}],["upload.decorator.ts",{"_index":1465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload.dto",{"_index":1035,"title":{},"body":{"controllers/ProfileController.html":{}}}],["upload.dto.ts",{"_index":481,"title":{},"body":{"classes/AvatarUploadDto.html":{},"coverage.html":{}}}],["upload.dto.ts:5",{"_index":485,"title":{},"body":{"classes/AvatarUploadDto.html":{}}}],["uploadavatar",{"_index":1076,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadavatar(file",{"_index":1081,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadedfile",{"_index":1023,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["uploadfile",{"_index":1003,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploadfile(@uploadedfile",{"_index":1056,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploadfile(file",{"_index":1011,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploadimg",{"_index":1084,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadimg(file",{"_index":1089,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadimg(thumbnail",{"_index":1309,"title":{},"body":{"classes/TracksController.html":{}}}],["uppercase",{"_index":642,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{}}}],["uri",{"_index":682,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["url(clientbaseurl",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(emailparamname",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(tokenparamname",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1671,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":636,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["usecreateindex",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":811,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["useguards(authenticationguard",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":616,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["useinterceptors",{"_index":1024,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["useinterceptors(fileinterceptor(\"thumbnail",{"_index":1304,"title":{},"body":{"classes/TracksController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":1053,"title":{},"body":{"controllers/ProfileController.html":{}}}],["usenewurlparser",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":257,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1365,"title":{},"body":{"classes/User.html":{}}}],["user.dto",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UsersController.html":{}}}],["user.dto.ts",{"_index":791,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":1095,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:19",{"_index":1097,"title":{},"body":{"classes/RegisterUserResDto.html":{}}}],["user.email",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":980,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["user.fullname",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.isactive",{"_index":477,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["user.isemailverified",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.loginattemptcount",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.modelname",{"_index":1424,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user.password",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1425,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user_locked_out",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":792,"title":{"classes/UserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userentity",{"_index":1080,"title":{},"body":{"injectables/ProfileService.html":{}}}],["userid",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["useridlist",{"_index":185,"title":{},"body":{"classes/AssignTasksDto.html":{}}}],["usermodel",{"_index":1423,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrole",{"_index":371,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":612,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentee",{"_index":986,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["userrole.mentor",{"_index":613,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentor)@apiresponse({type",{"_index":1211,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["users.controller",{"_index":1422,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1414,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/models/dto/create",{"_index":1333,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["users/models/dto/register",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["users/models/dto/user.dto",{"_index":1033,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users/models/user.entity",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/TracksController.html":{}}}],["users/users.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{}}}],["users/users.service",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["userscontroller",{"_index":1408,"title":{"classes/UsersController.html":{}},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":1042,"title":{},"body":{"controllers/ProfileController.html":{}}}],["usersmodule",{"_index":133,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usr/local/bin/mongod",{"_index":805,"title":{},"body":{"modules/DbTest.html":{}}}],["valid",{"_index":990,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["valid('development",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":893,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/ResetPassInput.html":{}}}],["validate(payload",{"_index":895,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateemailtoken",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken(input",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken(resetpassinput",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":462,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validaterequest(request",{"_index":469,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validatetoken",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(userid",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetokeninput",{"_index":234,"title":{"classes/ValidateTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["validatetokeninput:8",{"_index":1101,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validateuser",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":53,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/AssignTasksDto.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/FindDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["value",{"_index":526,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1737,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification.dto",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["verification.dto.ts",{"_index":39,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["verification.dto.ts:10",{"_index":50,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:12",{"_index":49,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:8",{"_index":47,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verified",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(@body",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(input",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["versionkey",{"_index":563,"title":{},"body":{"classes/BaseEntity.html":{}}}],["virtuals",{"_index":562,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vm",{"_index":29,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["void",{"_index":542,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["wait",{"_index":1640,"title":{},"body":{"index.html":{}}}],["want",{"_index":1644,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1695,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1691,"title":{},"body":{"license.html":{}}}],["website",{"_index":1571,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":179,"title":{},"body":{"injectables/AppService.html":{}}}],["wherever",{"_index":1587,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1708,"title":{},"body":{"license.html":{}}}],["without",{"_index":1666,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1618,"title":{},"body":{"index.html":{}}}],["writable",{"_index":555,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Task.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["writable).isactive",{"_index":571,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isdeleted",{"_index":569,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isemailverified",{"_index":1387,"title":{},"body":{"classes/User.html":{}}}],["writable).password",{"_index":1378,"title":{},"body":{"classes/User.html":{}}}],["writable).status",{"_index":1193,"title":{},"body":{"classes/Task.html":{}}}],["writers",{"_index":1581,"title":{},"body":{"index.html":{}}}],["yes",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["zoom",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControllerOptions.html":{"url":"interfaces/AbstractControllerOptions.html","title":"interface - AbstractControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithAuthOptions.html":{"url":"interfaces/AbstractControllerWithAuthOptions.html","title":"interface - AbstractControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithSwaggerOptions.html":{"url":"interfaces/AbstractControllerWithSwaggerOptions.html","title":"interface - AbstractControllerWithSwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithSwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        modelCreate\n                                \n                                \n                                        modelVm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        modelCreate\n                                    \n                                \n                                \n                                    \n                                        modelCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelVm\n                                    \n                                \n                                \n                                    \n                                        modelVm:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctVerifyDto.html":{"url":"classes/AcctVerifyDto.html","title":"class - AcctVerifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctVerifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/acct-verification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBaseUrl\n                            \n                            \n                                emailParamName\n                            \n                            \n                                tokenParamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty, IsUrl } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class AcctVerifyDto extends PickType(LoginReqDto, ['email']) {\n  @IsUrl()\n  clientBaseUrl: string;\n  @IsNotEmpty()\n  tokenParamName: string;\n  @IsNotEmpty()\n  emailParamName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/errors/api-exception.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: any, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ApiException {\n  @ApiProperty()\n  statusCode?: number;\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  status?: string;\n  @ApiProperty()\n  error?: string;\n  @ApiProperty()\n  errors?: any;\n  @ApiProperty()\n  timestamp?: string;\n  @ApiProperty()\n  path?: string;\n  @ApiProperty()\n  stack?: string;\n\n  constructor(\n    message: string,\n    error: string,\n    stack: string,\n    errors: any,\n    path: string,\n    statusCode: number\n  ) {\n    this.message = message;\n    this.error = error;\n    this.stack = stack;\n    this.errors = errors;\n    this.path = path;\n    this.timestamp = new Date().toISOString();\n    this.statusCode = statusCode;\n    this.status = HttpStatus[statusCode];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags(\"Health-Check\")\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  @Get()\n  getHello(): string {\n    return this.appService.getWelcome();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            StagesModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { CoursesModule } from './courses/courses.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { SharedModule } from './shared';\nimport configuration from './shared/config/configuration';\nimport { MailModule } from './shared/mail/mail.module';\nimport { envValidation } from './shared/validations/env.validation';\nimport { StagesModule } from './stages/stages.module';\nimport { TracksModule } from './tracks/tracks.module';\nimport { UsersModule } from './users/users.module';\nimport { TasksModule } from './tasks/tasks.module';\n\nexport const Config = ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n});\nconst Database = MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n});\n@Module({\n  imports: [\n    SharedModule,\n    AuthModule,\n    UsersModule,\n    Config,\n    Database,\n    MailModule,\n    ProfileModule,\n    TracksModule,\n    CoursesModule,\n    CategoriesModule,\n    StagesModule,\n    TasksModule\n  ],\n\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWelcome\n                        \n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcome(): string {\n    return 'Welcome to CCN!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssignTasksDto.html":{"url":"classes/AssignTasksDto.html","title":"class - AssignTasksDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssignTasksDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/assign-tasks.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                taskIdList\n                            \n                            \n                                userIdList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskIdList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsArray()@IsMongoId({each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/assign-tasks.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userIdList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsArray()@IsMongoId({each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/assign-tasks.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsMongoId } from 'class-validator';\n\nexport class AssignTasksDto {\n  @IsArray()\n  @IsMongoId({ each: true })\n  taskIdList: string[];\n  @IsArray()\n  @IsMongoId({ each: true })\n  userIdList: string[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                sendEmailVerifyToken\n                            \n                            \n                                    Async\n                                sendForgotPwToken\n                            \n                            \n                                    Async\n                                verifyEmailToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(_: LoginReqDto, req?: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginResDto})@ApiUnauthorizedResponse({type: ApiException})@UseGuards(AuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                LoginReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(input: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiConflictResponse({type: ApiException})@ApiResponse({type: RegisterUserResDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(input: ResetPassInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPassInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailVerifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerifyToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email-confirmation-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendForgotPwToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendForgotPwToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-password-reset-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmailToken(input: ValidateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ValidateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Post,\n  Req,\n  UnauthorizedException,\n  UseGuards\n} from '@nestjs/common';\nimport {\n  ApiConflictResponse,\n  ApiOkResponse,\n  ApiResponse,\n  ApiTags,\n  ApiUnauthorizedResponse\n} from '@nestjs/swagger';\nimport { Request } from 'express';\n\nimport { LoginReqDto } from '../auth/models/dto/auth.dto';\nimport configuration from '../shared/config/configuration';\nimport { ApiException } from '../shared/errors/api-exception';\nimport { MailService } from '../shared/mail/mail.service';\nimport {\n  RegisterUserDto,\n  RegisterUserResDto\n} from '../users/models/dto/register-user.dto';\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { AuthenticationGuard } from './guards/auth.guard';\nimport { AcctVerifyDto } from './models/dto/acct-verification.dto';\nimport { LoginResDto } from './models/dto/auth.dto';\nimport { ResetPassInput } from './models/dto/reset-pw.dto';\nimport { ValidateTokenInput } from './models/dto/validate-token.dto';\nimport { TokenType } from './models/temporary-token.entity';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly mailService: MailService\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: LoginResDto })\n  @ApiUnauthorizedResponse({ type: ApiException })\n  @UseGuards(AuthenticationGuard)\n  async login(\n    @Body() _: LoginReqDto,\n    @Req() req?: Request\n  ): Promise {\n    const accessToken = await this.authService.getAuthToken(req.user as User);\n    return { accessToken };\n  }\n  @Post('register')\n  @ApiConflictResponse({ type: ApiException })\n  @ApiResponse({ type: RegisterUserResDto, status: HttpStatus.CREATED })\n  async register(@Body() input: RegisterUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    const saved = await this.usersService.insertAsync(user);\n\n    return { canLogin: saved.isEmailVerified };\n  }\n\n  @Post('send-email-confirmation-token')\n  @HttpCode(HttpStatus.OK)\n  async sendEmailVerifyToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User with email does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email has already been confirmed');\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.EMAIL,\n      expiresInMins: 60 * 24\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please confirm your email here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n  @Post('confirm-email')\n  @HttpCode(HttpStatus.OK)\n  async verifyEmailToken(@Body() input: ValidateTokenInput): Promise {\n    const { email, token } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email already verified');\n    await this.authService.validateEmailToken({\n      userId: user.id,\n      plainToken: token\n    });\n  }\n  @Post('send-password-reset-token')\n  @HttpCode(HttpStatus.OK)\n  async sendForgotPwToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) return;\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.PASSWORD,\n      expiresInMins: 10\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please reset your password here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n\n  @Post('reset-password')\n  @HttpCode(HttpStatus.OK)\n  async resetPassword(@Body() input: ResetPassInput): Promise {\n    const { email, token, newPassword } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new UnauthorizedException('Password reset failed');\n    await this.authService.validatePasswordToken({\n      userId: exist.id,\n      plainToken: token,\n      newPassword\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            TempTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\nimport { MailService } from '../shared/mail/mail.service';\nimport { UsersModule } from '../users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { TemporaryToken } from './models/temporary-token.entity';\nimport { SessionSerializer } from './session.serializer';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { TempTokensService } from './temp-token.service';\n\nconst Config = [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n];\n@Module({\n  imports: [UsersModule, ...Config],\n  providers: [\n    AuthService,\n    JwtStrategy,\n    SessionSerializer,\n    MailService,\n    TempTokensService\n  ],\n  controllers: [AuthController],\n  exports: [AuthService, ...Config]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthObj.html":{"url":"interfaces/AuthObj.html","title":"interface - AuthObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authRoles\n                                \n                                \n                                        enableAuth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authRoles\n                                    \n                                \n                                \n                                    \n                                        authRoles:         UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableAuth\n                                    \n                                \n                                \n                                    \n                                        enableAuth:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTempToken\n                            \n                            \n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Async\n                                validateEmailToken\n                            \n                            \n                                    Async\n                                validatePasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, tokenService: TempTokensService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TempTokensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateTempToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTempToken(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmailToken(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePasswordToken(resetPassInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPassInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(userId: string, type: TokenType, plainToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport configuration from '~shared/config/configuration';\nimport { authErrors } from '~shared/errors';\nimport { generateRandomToken } from '~shared/utils/random-token';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { JwtPayload } from './models/jwt-payload';\nimport { TokenType } from './models/temporary-token.entity';\nimport { TempTokensService } from './temp-token.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly tokenService: TempTokensService\n  ) { }\n  async validateUser(email: string, pw: string): Promise {\n    const user = await this.usersService.findOneAsync({\n      email: email?.toLowerCase()\n    });\n    if (user.loginAttemptCount >= 3) {\n      throw new HttpException(\n        { message: 'User is locked out', errorType: 'USER_LOCKED_OUT' },\n        HttpStatus.UNAUTHORIZED\n      );\n    }\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    if (!user.isEmailVerified) {\n      throw new HttpException(\n        { message: 'Unconfirmed Email', errorType: 'UNCONFIRMED_EMAIL' },\n        HttpStatus.UNAUTHORIZED\n      );\n    }\n    await this.usersService.incrementLoginAttempt(user.id);\n    const isValid = await bcrypt.compare(pw, user.password);\n    if (!isValid) {\n      throw authErrors.INVALID_LOGIN_ATTEMPT;\n    }\n    await this.usersService.resetLoginAttempt(user.id)\n    return user;\n  }\n\n  async getAuthToken(user: User): Promise {\n    const { jwtValidityHrs, jwtSecret } = configuration();\n    const expiresIn = 60 * 60 * jwtValidityHrs;\n    const payload: JwtPayload = {\n      email: user.email,\n      userId: user.id,\n      role: user.role\n    };\n    return jwt.sign(payload, jwtSecret, { expiresIn });\n  }\n\n\n  async generateTempToken({\n    user,\n    type,\n    expiresInMins\n  }: {\n    user: User;\n    type: TokenType;\n    expiresInMins: number;\n  }): Promise {\n    const plainToken = generateRandomToken(64);\n    const encryptedToken = await bcrypt.hash(plainToken, 10);\n    const token = this.tokenService.createEntity({\n      token: encryptedToken,\n      expireAt: new Date(new Date().getTime() + expiresInMins * 60000),\n      type,\n      user: user.id as any\n    });\n    await this.tokenService.insertAsync(token);\n    return plainToken;\n  }\n  async validateEmailToken(input: {\n    userId: string;\n    plainToken: string;\n  }): Promise {\n    const { userId, plainToken } = input;\n\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.EMAIL,\n      plainToken\n    );\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { isEmailVerified: true });\n    await this.tokenService.hardDeleteById(id);\n  }\n  async validatePasswordToken(resetPassInput: {\n    userId: string;\n    plainToken: string;\n    newPassword: string;\n  }): Promise {\n    const { userId, plainToken, newPassword } = resetPassInput;\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.PASSWORD,\n      plainToken\n    );\n    const passwordHash = await bcrypt.hash(newPassword, 10);\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { password: passwordHash });\n    await this.tokenService.hardDeleteById(id);\n  }\n  private async validateToken(\n    userId: string,\n    type: TokenType,\n    plainToken: string\n  ) {\n    const exist = await this.tokenService\n      .findOne({ user: userId, type })\n      .populate('user');\n\n    if (!exist) throw authErrors.EXPIRED_TOKEN;\n    try {\n      const isValid = await bcrypt.compare(plainToken, exist.token);\n      if (!isValid) throw authErrors.INVALID_TOKEN;\n    } catch (error) {\n      throw authErrors.INVALID_TOKEN;\n    }\n    return exist;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nimport configuration from '../../shared/config/configuration';\nimport { AuthService } from '../auth.service';\nimport { LoginReqDto } from '../models/dto/auth.dto';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    return await this.validateRequest(request);\n  }\n  async validateRequest(request: Request): Promise {\n    if (!configuration().isAuthEnabled) return true;\n    const { email, password }: LoginReqDto = request.body;\n    const user = await this.authService.validateUser(email, password);\n\n    if (!user || !user.isActive) throw new UnauthorizedException();\n    request.user = user;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AvatarUploadDto.html":{"url":"classes/AvatarUploadDto.html","title":"class - AvatarUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AvatarUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/avatar-upload.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'binary'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/avatar-upload.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class AvatarUploadDto {\n    @ApiProperty({ type: 'string', format: 'binary' })\n    file: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerOptions.html":{"url":"interfaces/BaseControllerOptions.html","title":"interface - BaseControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithAuthOptions.html":{"url":"interfaces/BaseControllerWithAuthOptions.html","title":"interface - BaseControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithSwaggerOpts.html":{"url":"interfaces/BaseControllerWithSwaggerOpts.html","title":"interface - BaseControllerWithSwaggerOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithSwaggerOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createDto\n                                \n                                \n                                        entityDto\n                                \n                                \n                                        pagedListDto\n                                \n                                \n                                        updateDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDto\n                                    \n                                \n                                \n                                    \n                                        createDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDto\n                                    \n                                \n                                \n                                    \n                                        entityDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagedListDto\n                                    \n                                \n                                \n                                    \n                                        pagedListDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDto\n                                    \n                                \n                                \n                                    \n                                        updateDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/base.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nexport class BaseDto {\n  @IsMongoId()\n  @Expose()\n  readonly id: string;\n  @ApiProperty()\n  @Expose()\n  readonly updatedAt: Date;\n  @ApiProperty()\n  @Expose()\n  readonly createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:71\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:62\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:53\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop, Ref } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { Schema } from 'mongoose';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { User } from '../../users/models/user.entity';\n\nexport class BaseEntity extends TimeStamps {\n  id: string;\n\n  @prop({ required: true, default: false })\n  readonly isDeleted!: boolean;\n  @prop({ default: null, ref: BaseEntity })\n  readonly createdBy?: Ref = null;\n  @prop({ default: null, ref: BaseEntity })\n  readonly updatedBy?: Ref = null;\n  @prop({ required: true, default: true })\n  readonly isActive: boolean = true;\n  @prop({ default: null, ref: BaseEntity })\n  readonly deletedBy?: Ref = null;\n  @prop({ default: null })\n  readonly deletedAt?: Date;\n  @prop({ required: true, default: new Date() })\n  readonly createdAt: Date = new Date();\n  @prop({ required: true, default: new Date() })\n  readonly updatedAt: Date = null;\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true,\n        versionKey: false,\n        transform: (_, ret) => {\n          ret.id = ret._id;\n          delete ret._id;\n        }\n      }\n    });\n  }\n  static get modelName(): string {\n    return this.name;\n  }\n  delete(): void {\n    (this as Writable).isDeleted = true;\n  }\n\n  /**\n   * Sets {isDeleted} to false\n   *\n   * @memberof BaseEntity\n   */\n  restore(): void {\n    (this as Writable).isDeleted = false;\n  }\n\n  /**\n   * Sets {isActive} to true\n   *\n   * @memberof BaseEntity\n   */\n  deactivate(): void {\n    (this as Writable).isActive = false;\n  }\n\n  /**\n   * Sets isActive to false\n   *\n   * @memberof BaseEntity\n   */\n  activate(): void {\n    (this as Writable).isActive = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BufferedFile.html":{"url":"interfaces/BufferedFile.html","title":"interface - BufferedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BufferedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/buffer-file.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        buffer\n                                \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        mimetype\n                                \n                                \n                                        originalname\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BufferedFile {\n    fieldname: string;\n    originalname: string;\n    encoding: string;\n    mimetype: string;\n    size: number;\n    buffer: Buffer | string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoriesController.html":{"url":"classes/CategoriesController.html","title":"class - CategoriesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.controller.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: CategoryDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\nimport { CategoryDto, PagedCategoryOutDto } from './models/dtos/category.dto';\nimport { CreateCategoryDto } from './models/dtos/create-category.dto';\n\nconst BaseCtrl = BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedListDto: PagedCategoryOutDto\n});\n\nexport class CategoriesController extends BaseCtrl {\n  constructor(protected readonly categoryService: CategoriesService) {\n    super(categoryService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: CategoryDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateCategoryDto): Promise {\n    const exist = await this.categoryService.findOneAsync({\n      title: input.name.toUpperCase()\n    });\n\n    if (exist)\n      throw new ConflictException(\n        `Category with the name \"${exist.name}\" already exists`\n      );\n\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\n\nCategoriesService \n\nCategoriesService \n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CategoriesController } from './categories.controller';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\n\nconst CategoryModel = MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n]);\n@Module({\n  imports: [CategoryModel],\n  providers: [\n    CategoriesService,\n    { provide: BaseService, useClass: CategoriesService }\n  ],\n  controllers: [CategoriesController],\n  exports: [CategoriesService, CategoryModel]\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/category.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false, uppercase: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/category.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ name: 1 }, { unique: true })\nexport class Category extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false,\n    uppercase: true\n  })\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cloudinary.html":{"url":"interfaces/Cloudinary.html","title":"interface - Cloudinary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cloudinary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        name\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appEmail\n                                \n                                \n                                        cloudinary\n                                \n                                \n                                        database\n                                \n                                \n                                        environment\n                                \n                                \n                                        isAuthEnabled\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        jwtValidityHrs\n                                \n                                \n                                        mailer\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUrl\n                                \n                                \n                                        rootUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appEmail\n                                    \n                                \n                                \n                                    \n                                        appEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cloudinary\n                                    \n                                \n                                \n                                    \n                                        cloudinary:         Cloudinary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Cloudinary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         Database\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Database\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthEnabled\n                                    \n                                \n                                \n                                    \n                                        isAuthEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtValidityHrs\n                                    \n                                \n                                \n                                    \n                                        jwtValidityHrs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                    \n                                \n                                \n                                    \n                                        mailer:         Mailer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Mailer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUrl\n                                    \n                                \n                                \n                                    \n                                        redisUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControllerAuth.html":{"url":"interfaces/ControllerAuth.html","title":"interface - ControllerAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ControllerAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        create\n                                \n                                \n                                        delete\n                                \n                                \n                                        find\n                                \n                                \n                                        findById\n                                \n                                \n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                    Readonly\n                                playlistUrl\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Course extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    unique: false\n  })\n  readonly playlistUrl!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly enrollmentCount!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseDto.html":{"url":"classes/CourseDto.html","title":"class - CourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                playlistUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length128)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()@MaxLength(columnSize.length256)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @Expose()\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoursesController.html":{"url":"classes/CoursesController.html","title":"class - CoursesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CoursesService)\n                    \n                \n                        \n                            \n                                Defined in src/courses/courses.controller.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CoursesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCourseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: CourseDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCourseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\nimport { CourseDto, PagedCourseOutputDto } from './models/dtos/course.dto';\nimport { CreateCourseDto } from './models/dtos/create-course.dto';\n\nexport class CoursesController extends BaseCrudController({\n  entity: Course,\n  entityDto: CourseDto,\n  createDto: CreateCourseDto,\n  updateDto: CreateCourseDto,\n  pagedListDto: PagedCourseOutputDto,\n  auth: {\n    create: [UserRole.MENTOR, UserRole.ADMIN],\n    update: [UserRole.MENTOR, UserRole.ADMIN],\n    delete: [UserRole.MENTOR, UserRole.ADMIN]\n  }\n}) {\n  constructor(protected readonly courseService: CoursesService) {\n    super(courseService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: CourseDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateCourseDto): Promise {\n    const exist = await this.courseService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Course with the title \"${exist.title}\" already exists`\n      );\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nCoursesService \n\nCoursesService \n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CoursesController } from './courses.controller';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\n\nconst CourseModel = MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n]);\n@Module({\n  imports: [CourseModel],\n  providers: [\n    CoursesService,\n    { provide: BaseService, useClass: CoursesService }\n  ],\n  controllers: [CoursesController],\n  exports: [CoursesService, CourseModel]\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/create-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CategoryDto } from './category.dto';\n\nexport class CreateCategoryDto extends PickType(CategoryDto, [\n  'name',\n  'description'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDto.html":{"url":"classes/CreateCourseDto.html","title":"class - CreateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/create-course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CourseDto } from './course.dto';\n\nexport class CreateCourseDto extends PickType(CourseDto, [\n  'title',\n  'description',\n  'playlistUrl'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStageDto.html":{"url":"classes/CreateStageDto.html","title":"class - CreateStageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/create-stage.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                track\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/create-stage.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nimport { StageDto } from './stage.dto';\n\nexport class CreateStageDto extends PickType(StageDto, [\n  'title',\n  'description',\n  'taskCount'\n]) {\n  @IsMongoId()\n  @Expose()\n  track: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/create-task.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\n\nimport { TaskDto } from './task.dto';\n\n@Exclude()\nexport class CreateTaskDto extends OmitType(TaskDto, [\n  'createdAt',\n  'updatedAt',\n  'id'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrackDto.html":{"url":"classes/CreateTrackDto.html","title":"class - CreateTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType } from '@nestjs/swagger';\nimport { BufferedFile } from '~shared/interfaces/buffer-file.interface';\n\nimport { TrackDto } from './track.dto';\n\nexport class CreateTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl'\n]) {\n\n}\n\n\nexport class CreateWithThumbnailTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl'\n]) {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  thumbnail: BufferedFile;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto extends OmitType(UserDto, [\n  'id',\n  'updatedAt',\n  'createdAt',\n  'tracks'\n]) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWithThumbnailTrackDto.html":{"url":"classes/CreateWithThumbnailTrackDto.html","title":"class - CreateWithThumbnailTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWithThumbnailTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                thumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BufferedFile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'binary'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/create-track.dto.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType } from '@nestjs/swagger';\nimport { BufferedFile } from '~shared/interfaces/buffer-file.interface';\n\nimport { TrackDto } from './track.dto';\n\nexport class CreateTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl'\n]) {\n\n}\n\n\nexport class CreateWithThumbnailTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl'\n]) {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  thumbnail: BufferedFile;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Database.html":{"url":"interfaces/Database.html","title":"interface - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        name\n                                \n                                \n                                        port\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DbTest.html":{"url":"modules/DbTest.html","title":"module - DbTest","body":"\n                   \n\n\n\n\n    Modules\n    DbTest\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/helpers/db-test.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nprocess.env.MAILER_API_KEY = 'api_key_mailgun';\nprocess.env.MONGOMS_SYSTEM_BINARY = '/usr/local/bin/mongod';\nprocess.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\nconst dbServer = new MongoMemoryServer();\nexport const inMemoryDb = dbServer;\n\nconst dbFactory = MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n});\n\n@Module({\n  imports: [dbFactory],\n  exports: [dbFactory]\n})\nexport class DbTest {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultAuthObject.html":{"url":"interfaces/DefaultAuthObject.html","title":"interface - DefaultAuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultAuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        create\n                                \n                                \n                                            Optional\n                                        delete\n                                \n                                \n                                            Optional\n                                        find\n                                \n                                \n                                            Optional\n                                        findById\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindDto.html":{"url":"classes/FindDto.html","title":"class - FindDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/find.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                opts\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            opts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsJSON()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsJSON()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsJSON, IsOptional } from 'class-validator';\n\nexport class FindDto {\n  @IsOptional()\n  skip?: number = 0;\n  @IsOptional()\n  limit?: number = 100;\n  @IsOptional()\n  @IsJSON()\n  search?: string;\n  @IsJSON()\n  @IsOptional()\n  opts?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiException } from '../errors/api-exception';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(error: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse() as Response;\n    const req = ctx.getRequest();\n    const statusCode = error.getStatus();\n    const stacktrace = error.stack;\n    const errorName = error.response.name || error.response.error || error.name;\n    const errors = error.response.errors || null;\n    const path = req ? req.url : null;\n\n    if (statusCode === HttpStatus.UNAUTHORIZED) {\n      if (typeof error.response !== 'string') {\n        error.response.message =\n          error.response.message ||\n          'You do not have permission to access this resource';\n      }\n    }\n\n    const exception = new ApiException(\n      error.response.message,\n      errorName,\n      stacktrace,\n      errors,\n      path,\n      statusCode\n    );\n    res.status(statusCode).json(exception);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseController.html":{"url":"interfaces/IBaseController.html","title":"interface - IBaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    create\n                                \n                                \n                                    delete\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findById\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(input: TCreateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(input: TPagedInputDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TPagedInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPagedOutputDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, input: TUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                            TUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IBaseController {\n  create(input: TCreateDto): TEntityDto | Promise;\n  findAll(input: TPagedInputDto): TPagedOutputDto | Promise;\n  findById(input: string): TEntityDto | Promise;\n  update(id: string, input: TUpdateDto): TEntityDto | Promise;\n  delete(id: string): void | Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagedListDto.html":{"url":"interfaces/IPagedListDto.html","title":"interface - IPagedListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagedListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-list.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        totalCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { ClassType } from '../../types/abstract.type';\n\nexport interface IPagedListDto {\n  totalCount: number;\n  items: T[];\n}\n\nexport function PagedListDto(\n  entityDto: T\n): Type> {\n  class Paged implements IPagedListDto {\n    totalCount: number;\n    @ApiProperty({ type: entityDto })\n    items: T[];\n  }\n\n  return Paged;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport configuration from '~shared/config/configuration';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(AUTH_GUARD_TYPE) {\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise | Observable {\n    // console.log(context.switchToHttp().getRequest().sessionID);\n    return configuration().isAuthEnabled ? super.canActivate(context) : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        role\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\nexport interface JwtPayload {\n  email: string;\n  role: UserRole;\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload | PromiseLike)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload | PromiseLike\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport configuration from '../../shared/config/configuration';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().jwtSecret\n    });\n  }\n\n  async validate(\n    payload: JwtPayload | PromiseLike\n  ): Promise {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReqDto.html":{"url":"classes/LoginReqDto.html","title":"class - LoginReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResDto.html":{"url":"classes/LoginResDto.html","title":"class - LoginResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTransport\n                            \n                            \n                                    Async\n                                sendMailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/mail/mail.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTransport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMailAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailAsync(mailOptions: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : configuration()\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Mail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as mg from 'nodemailer-mailgun-transport';\nimport Mail = require('nodemailer/lib/mailer');\nimport configuration from '~shared/config/configuration';\n\n@Injectable()\nexport class MailService {\n  private readonly config = configuration();\n  private transporter: Mail;\n  constructor() {\n    this.createTransport();\n  }\n\n  private createTransport() {\n    const { mailer } = this.config;\n    this.transporter = nodemailer.createTransport(\n      mg({\n        auth: {\n          api_key: mailer.key,\n          domain: mailer.domain\n        }\n      })\n    );\n  }\n\n  async sendMailAsync(mailOptions: Mail.Options) {\n    const info = await this.transporter.sendMail(mailOptions);\n    Logger.debug(`Message sent: ${info.messageId}`);\n\n    // Preview only available when sending through an Ethereal account\n    // Logger.debug(`Preview URL: ${nodemailer.getTestMessageUrl(info)}`);\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mailer.html":{"url":"interfaces/Mailer.html","title":"interface - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCategoryOutDto.html":{"url":"classes/PagedCategoryOutDto.html","title":"class - PagedCategoryOutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCategoryOutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCourseOutputDto.html":{"url":"classes/PagedCourseOutputDto.html","title":"class - PagedCourseOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCourseOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @Expose()\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListStageDto.html":{"url":"classes/PagedListStageDto.html","title":"class - PagedListStageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/stage.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsAlphanumeric, IsInt, IsOptional, MaxLength, Min } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\n\n@Exclude()\nexport class StageDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  @IsOptional()\n  taskCount?: number = 0;\n  @Expose()\n  @ApiProperty({ type: TrackDto, readOnly: true })\n  @Type(() => TrackDto)\n  readonly track: TrackDto;\n}\nexport class PagedListStageDto extends PagedListDto(StageDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListTaskDto.html":{"url":"classes/PagedListTaskDto.html","title":"class - PagedListTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/task.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport {\n  IsAlphanumeric,\n  IsDate,\n  IsMongoId,\n  IsOptional,\n  MaxLength,\n  MinDate\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TaskDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @IsMongoId()\n  @Expose()\n  track: string;\n  @IsMongoId()\n  @Expose()\n  stage: string;\n  @Expose()\n  @IsDate()\n  @MinDate(new Date(), { message: 'Date must be in future' })\n  @IsOptional()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  deadline?: Date;\n}\nexport class PagedListTaskDto extends PagedListDto(TaskDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedTrackOutputDto.html":{"url":"classes/PagedTrackOutputDto.html","title":"class - PagedTrackOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedTrackOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsNotEmpty, IsOptional, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  @IsNotEmpty()\n  description: string;\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly thumbnailUrl?: string;\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedUserOutputDto.html":{"url":"classes/PagedUserOutputDto.html","title":"class - PagedUserOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedUserOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsArray, IsEmail, IsEnum, IsOptional, IsPhoneNumber, Length, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\nimport { UserRole } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  lastName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  email: string;\n\n  @Expose()\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  role?: UserRole = UserRole.MENTEE;\n\n  @Expose()\n  @IsOptional()\n  @MaxLength(columnSize.length128)\n  description?: string;\n\n  @Expose()\n  @IsPhoneNumber(\"ZZ\", { message: 'Invalid phone number. Valid phone number sample +2347063644568' })\n  @MaxLength(columnSize.length64)\n  @IsOptional()\n  phoneNumber?: string;\n\n  @Expose()\n  @IsArray()\n  @Length(1, columnSize.length32, { each: true })\n  @ApiProperty({ isArray: true, type: String })\n  @IsOptional()\n  technologies?: string[];\n\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly photoUrl?: string;\n\n  @ApiProperty({ readOnly: true, type: TrackDto, isArray: true })\n  @Expose()\n  @Type(() => TrackDto)\n  readonly tracks: TrackDto[];\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(input: UpdateProfileDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: BufferedFile, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload_profile_photo')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({description: 'Upload avatar photo', type: AvatarUploadDto})@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                BufferedFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Put,\n  Req,\n  UnsupportedMediaTypeException,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\nimport { BufferedFile } from '~shared/interfaces';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { UserDto } from '../users/models/dto/user.dto';\nimport { UsersService } from '../users/users.service';\nimport { AvatarUploadDto } from './dto/avatar-upload.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { ProfileService } from './profile.service';\n\n@ApiTags(\"Profile\")\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly userService: UsersService, private profileService: ProfileService) { }\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  async getProfile(@Req() req: Request): Promise {\n    const user = await this.userService.findByIdAsync(req.user['userId']);\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n  @Put()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  async updateProfile(@Body() input: UpdateProfileDto, @Req() req: Request): Promise {\n    const id = req.user['userId'];\n    await this.userService.updateAsync(id, input);\n  }\n  @Post('upload_profile_photo')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    description: 'Upload avatar photo',\n    type: AvatarUploadDto,\n  })\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  @HttpCode(HttpStatus.OK)\n  async uploadFile(@UploadedFile() file: BufferedFile, @Req() req: Request): Promise {\n    if (!file)\n      throw new BadRequestException(\"File image cannot be empty\")\n\n    if (file.mimetype.split('/')[0] !== \"image\")\n      throw new UnsupportedMediaTypeException(\"File is not an image\");\n\n    if (file.size / 1024 > 200)\n      throw new BadRequestException(\"File cannot be larger than 200KB\")\n\n    const id = req.user['userId'];\n    await this.profileService.uploadAvatar(file, id);\n    const user = await this.userService.findByIdAsync(id)\n\n    return plainToClass(UserDto, user, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { UsersModule } from '../users/users.module';\nimport { UsersService } from '../users/users.service';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\n\n@Module({\n  imports: [UsersModule],\n  providers: [UsersService, ProfileService],\n  controllers: [ProfileController],\n  exports: [ProfileService]\n})\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(file: any, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { uploadImg } from '~shared/utils/upload-img.util';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class ProfileService {\n\n\n    constructor(@InjectModel(User.modelName)\n    protected readonly userEntity: ReturnModelType) { }\n\n    async uploadAvatar(file: any, userId: string): Promise {\n        const photoUrl = await uploadImg(file, \"avatars\", userId);\n        await this.userEntity.updateOne({ _id: userId }, { photoUrl })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt',\n  'tracks',\n  'photoUrl'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserResDto.html":{"url":"classes/RegisterUserResDto.html","title":"class - RegisterUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                canLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            canLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt',\n  'tracks',\n  'photoUrl'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassInput.html":{"url":"classes/ResetPassInput.html","title":"class - ResetPassInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/reset-pw.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ValidateTokenInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/reset-pw.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nimport { ValidateTokenInput } from './validate-token.dto';\n\nexport class ResetPassInput extends ValidateTokenInput {\n  @IsNotEmpty()\n  newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport configuration from '~shared/config/configuration';\n\nimport { UserRole } from '../../users/models/user.entity';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      UserRole,\n      context.getHandler()\n    );\n    if (!roles || !configuration().isAuthEnabled) return true;\n\n    const request = context.switchToHttp().getRequest();\n    const { role } = request.user as JwtPayload;\n    return roles.includes(role);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n  deserializeUser(user: User, done: (err: Error, user: User) => void): any {\n    //Logger.log(user);\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\n@Global()\n@Module({\n  imports: [],\n  providers: [],\n  exports: []\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stage.html":{"url":"classes/Stage.html","title":"class - Stage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/stage.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                taskCount\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            taskCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Track', required: true, autopopulate: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref, plugin } from '@typegoose/typegoose';\nimport * as autopopulate from 'mongoose-autopopulate';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { Track } from '../../tracks/models/track.entity';\n\n@plugin(autopopulate as any)\n@index({ title: 1 }, { unique: true })\nexport class Stage extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly taskCount!: number;\n\n  @prop({\n    ref: 'Track',\n    required: true,\n    autopopulate: true\n  })\n  readonly track!: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StageDto.html":{"url":"classes/StageDto.html","title":"class - StageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/stage.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Optional\n                                taskCount\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            taskCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@Min(0)@IsInt()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TrackDto\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty({type: TrackDto, readOnly: true})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsAlphanumeric, IsInt, IsOptional, MaxLength, Min } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\n\n@Exclude()\nexport class StageDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  @IsOptional()\n  taskCount?: number = 0;\n  @Expose()\n  @ApiProperty({ type: TrackDto, readOnly: true })\n  @Type(() => TrackDto)\n  readonly track: TrackDto;\n}\nexport class PagedListStageDto extends PagedListDto(StageDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StagesController.html":{"url":"classes/StagesController.html","title":"class - StagesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/stages.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stageService: StagesService, trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/stages/stages.controller.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stageService\n                                                  \n                                                        \n                                                                        StagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateStageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: StageDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/stages/stages.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateStageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Body, ConflictException, HttpStatus, Inject, NotFoundException, Post, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { TracksService } from '../tracks/tracks.service';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateStageDto } from './models/dtos/create-stage.dto';\nimport { PagedListStageDto, StageDto } from './models/dtos/stage.dto';\nimport { Stage } from './models/stage.entity';\nimport { StagesService } from './stages.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Stage,\n  entityDto: StageDto,\n  createDto: CreateStageDto,\n  updateDto: CreateStageDto,\n  pagedListDto: PagedListStageDto,\n  auth: {\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n});\n\nexport class StagesController extends BaseCtrl {\n  constructor(\n    protected stageService: StagesService,\n    @Inject(TracksService)\n    private trackService: TracksService\n  ) {\n    super(stageService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: StageDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateStageDto): Promise {\n    const track = await this.trackService.findByIdAsync(input.track);\n    if (!track) {\n      throw new NotFoundException(\n        `Track with id ${input.track} does not exist`\n      );\n    }\n\n    const stage = await this.stageService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n\n    if (stage) {\n      throw new ConflictException(\n        `Stage with the title \"${stage.title}\" already exists`\n      );\n    }\n    return await super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StagesModule.html":{"url":"modules/StagesModule.html","title":"module - StagesModule","body":"\n                   \n\n\n\n\n    Modules\n    StagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_imports\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_providers\n\n\n\n\nTracksModule\n\nTracksModule\n\n\n\nStagesModule\n\nStagesModule\n\nStagesModule -->\n\nTracksModule->StagesModule\n\n\n\n\n\nStagesService \n\nStagesService \n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stages/stages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StagesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TracksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { TracksModule } from '../tracks/tracks.module';\nimport { Stage } from './models/stage.entity';\nimport { StagesController } from './stages.controller';\nimport { StagesService } from './stages.service';\n\nconst StageModel = MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n]);\nconst baseService = { provide: BaseService, useClass: StagesService };\n@Module({\n  imports: [StageModel, TracksModule],\n  providers: [StagesService, baseService],\n  controllers: [StagesController],\n  exports: [StageModel, StagesService, baseService]\n})\nexport class StagesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                deadline\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                stage\n                            \n                            \n                                    Readonly\n                                status\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                complete\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date(new Date().setDate(new Date().getDate() + 7))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Stage, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskStatus\n\n                        \n                    \n                    \n                        \n                            Default value : TaskStatus.STARTED\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TaskStatus, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Track, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \ncomplete()\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/models/task.entity.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { Stage } from '../../stages/models/stage.entity';\nimport { Track } from '../../tracks/models/track.entity';\n\nexport enum TaskStatus {\n  STARTED = 'STARTED',\n  UNCOMPLETED = 'UNCOMPLETED',\n  COMPLETED = 'COMPLETED'\n}\n\n@index({ title: 1 }, { unique: true })\nexport class Task extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    type: Date,\n    default: new Date(new Date().setDate(new Date().getDate() + 7))\n  })\n  readonly deadline = new Date(new Date().setDate(new Date().getDate() + 7));\n\n  @prop({\n    enum: TaskStatus,\n    type: String,\n    required: true,\n    default: TaskStatus.STARTED\n  })\n  readonly status: TaskStatus = TaskStatus.STARTED;\n\n  @prop({ ref: Track, required: true })\n  readonly track!: Ref;\n\n  @prop({ ref: Stage, required: true })\n  readonly stage!: Ref;\n\n  complete(): void {\n    (this as Writable).status = TaskStatus.COMPLETED;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskDto.html":{"url":"classes/TaskDto.html","title":"class - TaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/task.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                deadline\n                            \n                            \n                                description\n                            \n                            \n                                stage\n                            \n                            \n                                title\n                            \n                            \n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsDate()@MinDate(new Date(), {message: 'Date must be in future'})@IsOptional()@ApiProperty({type: Date})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport {\n  IsAlphanumeric,\n  IsDate,\n  IsMongoId,\n  IsOptional,\n  MaxLength,\n  MinDate\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TaskDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @IsMongoId()\n  @Expose()\n  track: string;\n  @IsMongoId()\n  @Expose()\n  stage: string;\n  @Expose()\n  @IsDate()\n  @MinDate(new Date(), { message: 'Date must be in future' })\n  @IsOptional()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  deadline?: Date;\n}\nexport class PagedListTaskDto extends PagedListDto(TaskDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TasksController.html":{"url":"classes/TasksController.html","title":"class - TasksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                submitTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksService: TasksService, stageService: StagesService, trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/tasks.controller.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stageService\n                                                  \n                                                        \n                                                                        StagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiBearerAuth()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({type: TaskDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submitTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitTask(taskId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':taskId/submit')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.MENTEE)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  NotFoundException,\n  Param,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { StagesService } from '../stages/stages.service';\nimport { TracksService } from '../tracks/tracks.service';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateTaskDto } from './models/dtos/create-task.dto';\nimport { PagedListTaskDto, TaskDto } from './models/dtos/task.dto';\nimport { Task } from './models/task.entity';\nimport { TasksService } from './tasks.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Task,\n  createDto: CreateTaskDto,\n  pagedListDto: PagedListTaskDto,\n  entityDto: TaskDto,\n  updateDto: CreateTaskDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n});\n\nexport class TasksController extends BaseCtrl {\n  constructor(\n    private tasksService: TasksService,\n    @Inject(StagesService)\n    private stageService: StagesService,\n    @Inject(TracksService)\n    private trackService: TracksService,\n  ) {\n    super(tasksService);\n  }\n\n  @Post()\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ type: TaskDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTaskDto): Promise {\n    const task = await this.tasksService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (task) {\n      throw new ConflictException(\n        `Task with the title \"${task.title}\" already exists`\n      );\n    }\n    const stage = await this.stageService.findByIdAsync(input.stage);\n    if (!stage)\n      throw new NotFoundException(`Stage with ${input.stage} not found`);\n    const track = await this.trackService.findByIdAsync(input.track);\n    if (!track)\n      throw new NotFoundException(`Track with ${input.track} not found`);\n    return await super.create(input);\n  }\n\n\n  @Post(':taskId/submit')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.MENTEE)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async submitTask(@Param('taskId') taskId: string): Promise {\n\n    const task = await this.tasksService.findByIdAsync(taskId);\n    if (!task) throw new NotFoundException(`Track with ${taskId} not found`);\n    await this.tasksService.submitTask(task);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nStagesModule\n\nStagesModule\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nStagesModule->TasksModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nTasksModule -->\n\nTracksModule->TasksModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTasksModule -->\n\nUsersModule->TasksModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StagesModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { StagesModule } from '../stages/stages.module';\nimport { TracksModule } from '../tracks/tracks.module';\nimport { UsersModule } from '../users/users.module';\nimport { Task } from './models/task.entity';\nimport { TasksController } from './tasks.controller';\nimport { TasksService } from './tasks.service';\n\nconst TaskModel = MongooseModule.forFeature([\n  { name: Task.modelName, schema: Task.schema }\n]);\nconst baseService = { provide: BaseService, useClass: TasksService };\n@Module({\n  imports: [TaskModel, StagesModule, TracksModule, UsersModule],\n  providers: [TasksService, baseService],\n  controllers: [TasksController],\n  exports: [TaskModel, TasksService, baseService]\n})\nexport class TasksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemporaryToken.html":{"url":"classes/TemporaryToken.html","title":"class - TemporaryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemporaryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/temporary-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions, prop, Ref } from '@typegoose/typegoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { BaseEntity } from '../../shared/models/base.entity';\n\nexport enum TokenType {\n  PASSWORD = 'PASSWORD_TOKEN',\n  EMAIL = 'EMAIL_TOKEN'\n}\n\n@index({ user: 1, type: 1 }, { unique: true })\n@modelOptions({ options: { customName: 'temptokens' } })\n@index({ expireAt: 1 }, { expireAfterSeconds: 0 })\nexport class TemporaryToken extends BaseEntity {\n  @prop({ required: true })\n  readonly token!: string;\n\n  @prop({ required: true, type: Date })\n  readonly expireAt!: Date;\n\n  @prop({\n    enum: TokenType,\n    type: String,\n    unique: false,\n    required: true\n  })\n  readonly type?: TokenType;\n\n  @prop({ ref: User, unique: false, required: true })\n  readonly user?: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/track.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                stages\n                            \n                            \n                                    Readonly\n                                thumbnailUrl\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Stage', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thumbnailUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { Stage } from '../../stages/models/stage.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Track extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({ ref: 'Stage', default: null })\n  readonly stages: Ref[] = [];\n\n  @prop({\n    default: null\n  })\n  readonly thumbnailUrl: string = null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackDto.html":{"url":"classes/TrackDto.html","title":"class - TrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/track.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                    Optional\n                                thumbnailUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/track.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            thumbnailUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true})@Expose()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/track.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/track.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsNotEmpty, IsOptional, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  @IsNotEmpty()\n  description: string;\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly thumbnailUrl?: string;\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TracksController.html":{"url":"classes/TracksController.html","title":"class - TracksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TracksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                assignedTasks\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createTrack\n                            \n                            \n                                    Async\n                                enroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/tracks/tracks.controller.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            assignedTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignedTasks(trackId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':trackId/stages')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined})@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trackId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTrackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({type: TrackDto, status: undefined})@ApiResponse({status: undefined})@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTrack\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTrack(input: CreateWithThumbnailTrackDto, thumbnail: BufferedFile, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create_with_thumbnail')@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({type: TrackDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateWithThumbnailTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thumbnail\n                                    \n                                                BufferedFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            enroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enroll(trackId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':trackId/enroll')@UseGuards(JwtAuthGuard)@HttpCode(HttpStatus.OK)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trackId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  ConflictException,\n  Get,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Param,\n  Post,\n  Req,\n  UnsupportedMediaTypeException,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiConsumes, ApiResponse } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\nimport { BaseCrudController } from '~shared/controllers/base.controller';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\nimport { BufferedFile } from '~shared/interfaces';\nimport { uploadImg } from '~shared/utils/upload-img.util';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { StageDto } from '../stages/models/dtos/stage.dto';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateTrackDto, CreateWithThumbnailTrackDto } from './models/dto/create-track.dto';\nimport { PagedTrackOutputDto, TrackDto } from './models/dto/track.dto';\nimport { Track } from './models/track.entity';\nimport { TracksService } from './tracks.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedListDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n});\nconst ONE_KB = 1024;\nexport class TracksController extends BaseCtrl {\n  constructor(protected trackService: TracksService) {\n    super(trackService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ type: TrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTrackDto): Promise {\n    const exist = await this.trackService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Track with the title \"${exist.title}\" already exists`\n      );\n    return await super.create(input);\n  }\n\n  @Post(\"create_with_thumbnail\")\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ type: TrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @UseInterceptors(FileInterceptor(\"thumbnail\"))\n  @ApiConsumes('multipart/form-data')\n  @ApiBearerAuth()\n  async createTrack(@Body() input: CreateWithThumbnailTrackDto, @UploadedFile() thumbnail: BufferedFile, @Req() req: Request): Promise {\n    if (!thumbnail)\n      throw new BadRequestException(\"Thumbnail image cannot be empty\")\n\n    if (thumbnail.mimetype.split('/')[0] !== \"image\")\n      throw new UnsupportedMediaTypeException(\"File is not an image\");\n    if (thumbnail.size / ONE_KB > 200)\n      throw new BadRequestException(\"File cannot be larger than 200KB\")\n\n\n    const exist = await this.trackService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Track with the title \"${exist.title}\" already exists`\n      );\n    const userId = req.user['userId'];\n\n    const thumbnailUrl = await uploadImg(thumbnail, \"avatars\", userId);\n    const dto = input as any;\n    dto.thumbnailUrl = thumbnailUrl;\n    delete dto.thumbnail\n    return await super.create(dto);\n  }\n\n  @Get(':trackId/stages')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK })\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async assignedTasks(@Param(\"trackId\") trackId: string): Promise {\n    const track = await this.trackService.findByIdAsync(trackId);\n    if (!track) throw new NotFoundException(`Track with Id ${trackId} not found`)\n    const stages = await this.trackService.getStages(trackId);\n\n    return plainToClass(StageDto, stages, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    });\n\n  }\n\n  @Post(\":trackId/enroll\")\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async enroll(@Param(\"trackId\") trackId: string): Promise {\n    const track = await this.trackService.findByIdAsync(trackId);\n    if (!track) throw new NotFoundException(`Track with ${trackId} not found`);\n    await this.trackService.enroll(track.id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TracksModule.html":{"url":"modules/TracksModule.html","title":"module - TracksModule","body":"\n                   \n\n\n\n\n    Modules\n    TracksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_imports\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nTracksModule\n\nTracksModule\n\nTracksModule -->\n\nUsersModule->TracksModule\n\n\n\n\n\nTracksService \n\nTracksService \n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tracks/tracks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TracksService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TracksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { UsersModule } from '../users/users.module';\nimport { Track } from './models/track.entity';\nimport { TracksController } from './tracks.controller';\nimport { TracksService } from './tracks.service';\n\nconst TrackModel = MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n]);\nconst baseService = { provide: BaseService, useClass: TracksService };\n@Module({\n  imports: [TrackModel, UsersModule],\n  providers: [TracksService, baseService],\n  controllers: [TracksController],\n  exports: [TrackModel, TracksService, baseService]\n})\nexport class TracksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { CreateUserDto } from '../../users/models/dto/create-user.dto';\n\nexport class UpdateProfileDto extends OmitType(CreateUserDto, ['email', 'role', 'photoUrl']) { }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                failedSignInAttempts\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isEmailVerified\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lockOutEndDate\n                            \n                            \n                                    Readonly\n                                loginAttemptCount\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                photoUrl\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                technologies\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                setRandomPass\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, trim: true, text: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, lowercase: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            failedSignInAttempts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lockOutEndDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            loginAttemptCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()@prop({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, trim: true, text: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            photoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: UserRole, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            technologies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({type: String, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tracks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Track', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRandomPass\n                        \n                        \n                    \n                \n            \n            \n                \nsetRandomPass()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:100\n                                \n                            \n                    \n                        \n                                Get User's full name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:112\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport { getModelForClass, index, pre, prop, Ref, ReturnModelType } from '@typegoose/typegoose';\nimport { hash } from 'bcrypt';\nimport { Exclude } from 'class-transformer';\nimport * as crypto from 'crypto';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { columnSize } from '../../shared/constants';\nimport { BaseEntity } from '../../shared/models/base.entity';\nimport { Track } from '../../tracks/models/track.entity';\n\nexport enum UserRole {\n  MENTEE = 'MENTEE',\n  MENTOR = 'MENTOR',\n  ADMIN = 'ADMIN'\n}\n\n@pre('save', async function () {\n  try {\n    (this as Writable).password = await hash(this.password, 10);\n  } catch (e) {\n    throw new InternalServerErrorException(e);\n  }\n})\n@index({ email: 1 }, { unique: true })\nexport class User extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n  })\n  readonly firstName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n  })\n  readonly lastName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: false\n  })\n  readonly email!: string;\n  @prop({\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    default: null\n  })\n  readonly phoneNumber!: string;\n  @prop({\n    default: null\n  })\n  readonly photoUrl: string = null;\n  @prop({\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    default: null\n  })\n  readonly description!: string;\n  @prop({ type: String, default: null })\n  readonly technologies: string[] = [];\n  @prop({ required: true, maxlength: columnSize.length64 })\n  @Exclude()\n  readonly password!: string;\n  @Exclude()\n  @prop({\n    default: 0\n  })\n  readonly loginAttemptCount!: number;\n  @prop({\n    enum: UserRole,\n    type: String,\n    required: true,\n    default: UserRole.MENTEE\n  })\n  readonly role = UserRole.MENTEE;\n\n  @prop({ required: true, default: false })\n  readonly isEmailVerified: boolean;\n  @prop({ default: undefined })\n  readonly lockOutEndDate?: Date;\n  @prop({ required: true, default: 0 })\n  readonly failedSignInAttempts!: number;\n  @prop({ ref: 'Track', default: [] })\n  readonly tracks: Ref[] = [];\n  /**\n   * Get User's full name\n   *\n   * @readonly\n   * @memberof User\n   */\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  setRandomPass(): void {\n    (this as Writable).password = crypto\n      .randomBytes(columnSize.length32)\n      .toString();\n  }\n  confirmEmail(): void {\n    (this as Writable).isEmailVerified = true;\n  }\n\n  static get model(): ReturnModelType {\n    return getModelForClass(this);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                    Optional\n                                photoUrl\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                technologies\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsOptional()@MaxLength(columnSize.length128)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsPhoneNumber('ZZ', {message: 'Invalid phone number. Valid phone number sample +2347063644568'})@MaxLength(columnSize.length64)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            photoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true})@Expose()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsEnum(UserRole)@ApiProperty({enum: UserRole})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            technologies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsArray()@Length(1, columnSize.length32, {each: true})@ApiProperty({isArray: true, type: String})@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tracks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TrackDto[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true, type: TrackDto, isArray: true})@Expose()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsArray, IsEmail, IsEnum, IsOptional, IsPhoneNumber, Length, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\nimport { UserRole } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  lastName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  email: string;\n\n  @Expose()\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  role?: UserRole = UserRole.MENTEE;\n\n  @Expose()\n  @IsOptional()\n  @MaxLength(columnSize.length128)\n  description?: string;\n\n  @Expose()\n  @IsPhoneNumber(\"ZZ\", { message: 'Invalid phone number. Valid phone number sample +2347063644568' })\n  @MaxLength(columnSize.length64)\n  @IsOptional()\n  phoneNumber?: string;\n\n  @Expose()\n  @IsArray()\n  @Length(1, columnSize.length32, { each: true })\n  @ApiProperty({ isArray: true, type: String })\n  @IsOptional()\n  technologies?: string[];\n\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly photoUrl?: string;\n\n  @ApiProperty({ readOnly: true, type: TrackDto, isArray: true })\n  @Expose()\n  @Type(() => TrackDto)\n  readonly tracks: TrackDto[];\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersController.html":{"url":"classes/UsersController.html","title":"class - UsersController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.controller.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: UserDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { BaseCrudController } from '../shared/controllers/base.controller';\nimport { CreateUserDto } from './models/dto/create-user.dto';\nimport { PagedUserOutputDto, UserDto } from './models/dto/user.dto';\nimport { User, UserRole } from './models/user.entity';\nimport { UsersService } from './users.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedListDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n});\n\nexport class UsersController extends BaseCtrl {\n  constructor(protected readonly usersService: UsersService) {\n    super(usersService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: UserDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({\n      title: input.email.toLowerCase()\n    });\n    if (exist) {\n      throw new ConflictException(\n        `User with the email \"${exist.email}\" already exists`\n      );\n    }\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { User } from './models/user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\nexport const UserModel = MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n]);\n@Module({\n  imports: [UserModel],\n  providers: [UsersService, { provide: BaseService, useClass: UsersService }],\n  controllers: [UsersController],\n  exports: [UsersService, UserModel]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateTokenInput.html":{"url":"classes/ValidateTokenInput.html","title":"class - ValidateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/validate-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class ValidateTokenInput extends PickType(LoginReqDto, ['email']) {\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                merge-coverage.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Database\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/acct-verification.dto.ts\n            \n            class\n            AcctVerifyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginReqDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/reset-pw.dto.ts\n            \n            class\n            ResetPassInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/validate-token.dto.ts\n            \n            class\n            ValidateTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/temporary-token.entity.ts\n            \n            class\n            TemporaryToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/temp-token.service.ts\n            \n            injectable\n            TempTokensService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            class\n            CategoriesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.module.ts\n            \n            variable\n            CategoryModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            class\n            CategoriesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/models/category.entity.ts\n            \n            class\n            Category\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            PagedCategoryOutDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.controller.ts\n            \n            class\n            CoursesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/courses.module.ts\n            \n            variable\n            CourseModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.service.ts\n            \n            injectable\n            CoursesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/courses/models/course.entity.ts\n            \n            class\n            Course\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            CourseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            PagedCourseOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/create-course.dto.ts\n            \n            class\n            CreateCourseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/dto/avatar-upload.dto.ts\n            \n            class\n            AvatarUploadDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Cloudinary\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Configuration\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Database\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Mailer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            AUTH_GUARD_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            columnSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/base.controller.ts\n            \n            function\n            BaseCrudController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/api-swagger-operation.decorator.ts\n            \n            variable\n            ApiSwaggerOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authenticate.decorator.ts\n            \n            variable\n            Authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/file-upload.decorator.ts\n            \n            variable\n            ApiFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/errors/api-exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/errors/auth.errors.ts\n            \n            variable\n            authErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithSwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithSwaggerOpts\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller.interface.ts\n            \n            interface\n            IBaseController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/buffer-file.interface.ts\n            \n            interface\n            BufferedFile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            AuthObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            ControllerAuth\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            DefaultAuthObject\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/shared/models/dto/base.dto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/dto/find.dto.ts\n            \n            class\n            FindDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            interface\n            IPagedListDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            function\n            PagedListDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            defaultAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            getAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/random-token.ts\n            \n            variable\n            generateRandomToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/upload-img.util.ts\n            \n            variable\n            uploadImg\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/validations/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/create-stage.dto.ts\n            \n            class\n            CreateStageDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/stage.dto.ts\n            \n            class\n            PagedListStageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/stage.dto.ts\n            \n            class\n            StageDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/stages/models/stage.entity.ts\n            \n            class\n            Stage\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/stages/stages.controller.ts\n            \n            class\n            StagesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stages/stages.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.module.ts\n            \n            variable\n            StageModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.service.ts\n            \n            injectable\n            StagesService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/assign-tasks.dto.ts\n            \n            class\n            AssignTasksDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/task.dto.ts\n            \n            class\n            PagedListTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/task.dto.ts\n            \n            class\n            TaskDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/tasks/models/task.entity.ts\n            \n            class\n            Task\n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            class\n            TasksController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            TaskModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateTrackDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateWithThumbnailTrackDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/track.dto.ts\n            \n            class\n            PagedTrackOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/track.dto.ts\n            \n            class\n            TrackDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tracks/models/track.entity.ts\n            \n            class\n            Track\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            class\n            TracksController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            variable\n            ONE_KB\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            TrackModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.service.ts\n            \n            injectable\n            TracksService\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/users/models/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            PagedUserOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/users/models/user.entity.ts\n            \n            class\n            User\n            \n                10 %\n                (3/30)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            class\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.module.ts\n            \n            variable\n            UserModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            dbFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            dbServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            inMemoryDb\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.1\n        \n            @nestjs/common : ^7.2.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.2.0\n        \n            @nestjs/microservices : ^7.2.0\n        \n            @nestjs/mongoose : ^7.0.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.2.0\n        \n            @nestjs/schedule : ^0.4.0\n        \n            @nestjs/swagger : ^4.5.10\n        \n            @typegoose/typegoose : ^7.2.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.14.0\n        \n            cache-manager : ^3.3.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            cloudinary : ^1.22.0\n        \n            compression : ^1.7.4\n        \n            connect-mongo : ^3.2.0\n        \n            cookie-parser : ^1.4.5\n        \n            cookie-session : ^1.4.0\n        \n            datauri : ^3.0.0\n        \n            express-rate-limit : ^5.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.9.18\n        \n            mongoose-autopopulate : ^0.12.2\n        \n            nodemailer : ^6.4.8\n        \n            nodemailer-mailgun-transport : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pluralize : ^8.0.0\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n        \n            tsconfig-paths : ^3.9.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../task.entity.ts)\n                        \n                        \n                            TokenType   (src/.../temporary-token.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tasks/models/task.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 STARTED\n                            \n                        \n                        \n                            \n                                Value : STARTED\n                            \n                        \n                        \n                            \n                                 UNCOMPLETED\n                            \n                        \n                        \n                            \n                                Value : UNCOMPLETED\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n            \n        \n\n    src/auth/models/temporary-token.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : PASSWORD_TOKEN\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL_TOKEN\n                            \n                        \n            \n        \n\n    src/users/models/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MENTEE\n                            \n                        \n                        \n                            \n                                Value : MENTEE\n                            \n                        \n                        \n                            \n                                 MENTOR\n                            \n                        \n                        \n                            \n                                Value : MENTOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BaseCrudController   (src/.../base.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            main   (merge-coverage.ts)\n                        \n                        \n                            PagedListDto   (src/.../paged-list.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/controllers/base.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            BaseCrudController\n                        \n                        \n                    \n                \n            \n            \n                \nBaseCrudController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    merge-coverage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            main\n                        \n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    src/shared/models/dto/paged-list.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PagedListDto\n                        \n                        \n                    \n                \n            \n            \n                \nPagedListDto(entityDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCode Clan Nigeria\n \nThe official website for code clan nigeria community\nWe are a community comprised of future innovators.\nFront-end developers, DevOps engineers, full stack developers, technical\nwriters, software engineers.\nThis community was created out of a desire to provide ongoing support\nto you wherever stage you are in your coding career.\nThis is codeclannigeria.dev\nAs part of the measures towards achieving out goal stated above, we propose to bring together the amazing talents of our community members to built a website and a mobile application that represents all that we\nstand for.\nHow You Come In\nTo get a complete documentation of the source code and the architectural structure of the application, click here.\nFeel free to put your skills to the test. Here is a suggested workflow for you to follow:\nNote: This is applicable to codeclannigeria community members only.\n\nFork this repository into your local computer\nCheck the issues pane for an issue that needs to be solved\nFind an issue that matches your current skill level and solve it\nMake your pull request to the develop branch\nWait for some feedback.\nRepeat the process\n\nWant more support? Join our slack\ncommunity and ask questions.\nThanks for your support\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Fortune Ochi\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DbTest\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TracksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nCoursesService \n\nCoursesService \n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nStagesModule->TasksModule\n\n\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nStagesService \n\nStagesService \n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTracksModule\n\nTracksModule\n\nStagesModule -->\n\nTracksModule->StagesModule\n\n\n\nTasksModule -->\n\nTracksModule->TasksModule\n\n\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nTracksService \n\nTracksService \n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nTasksModule -->\n\nUsersModule->TasksModule\n\n\n\nTracksModule -->\n\nUsersModule->TracksModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    49 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractDocument   (src/.../abstract.type.ts)\n                        \n                        \n                            ClassType   (src/.../abstract.type.ts)\n                        \n                        \n                            DeleteResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryItem   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryList   (src/.../abstract.type.ts)\n                        \n                        \n                            UpdateResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            Writable   (src/.../abstract.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/types/abstract.type.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Writable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiFile   (src/.../file-upload.decorator.ts)\n                        \n                        \n                            ApiSwaggerOperation   (src/.../api-swagger-operation.decorator.ts)\n                        \n                        \n                            AUTH_GUARD_TYPE   (src/.../constants.ts)\n                        \n                        \n                            Authenticate   (src/.../authenticate.decorator.ts)\n                        \n                        \n                            authErrors   (src/.../auth.errors.ts)\n                        \n                        \n                            BaseCtrl   (src/.../categories.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../tasks.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../stages.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../users.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../tracks.controller.ts)\n                        \n                        \n                            baseService   (src/.../tasks.module.ts)\n                        \n                        \n                            baseService   (src/.../stages.module.ts)\n                        \n                        \n                            baseService   (src/.../tracks.module.ts)\n                        \n                        \n                            CategoryModel   (src/.../categories.module.ts)\n                        \n                        \n                            columnSize   (src/.../constants.ts)\n                        \n                        \n                            Config   (src/.../app.module.ts)\n                        \n                        \n                            Config   (src/.../auth.module.ts)\n                        \n                        \n                            CourseModel   (src/.../courses.module.ts)\n                        \n                        \n                            Database   (src/.../app.module.ts)\n                        \n                        \n                            dbFactory   (test/.../db-test.module.ts)\n                        \n                        \n                            dbServer   (test/.../db-test.module.ts)\n                        \n                        \n                            defaultAuth   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            generateRandomToken   (src/.../random-token.ts)\n                        \n                        \n                            getAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            inMemoryDb   (test/.../db-test.module.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            ONE_KB   (src/.../tracks.controller.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            StageModel   (src/.../stages.module.ts)\n                        \n                        \n                            TaskModel   (src/.../tasks.module.ts)\n                        \n                        \n                            TrackModel   (src/.../tracks.module.ts)\n                        \n                        \n                            uploadImg   (src/.../upload-img.util.ts)\n                        \n                        \n                            UserModel   (src/.../users.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/file-upload.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fileName = 'file', description?: string): MethodDecorator => (\n    target: any,\n    propertyKey: string,\n    descriptor: PropertyDescriptor,\n) => {\n    ApiBody({\n        required: true,\n        description,\n        schema: {\n            type: 'object',\n            required: ['true'],\n            properties: {\n                [fileName]: {\n                    type: 'string',\n                    format: 'binary',\n                },\n            },\n        },\n    })(target, propertyKey, descriptor);\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/api-swagger-operation.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiSwaggerOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: {\n  title: string;\n  description?: string;\n  operationId?: string;\n  deprecated?: boolean;\n}): MethodDecorator => {\n  return (target, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const controllerName = target.constructor.name;\n    ApiOperation({\n      ...options,\n      operationId: `${controllerName.substr(\n        0,\n        controllerName.indexOf('Controller'),\n      )}_${propertyKey}`,\n    })(target, propertyKey, descriptor);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  length8: 2 ** 3,\n  length16: 2 ** 4,\n  length32: 2 ** 5,\n  length64: 2 ** 6,\n  length128: 2 ** 7,\n  length256: 2 ** 8,\n  length512: 2 ** 9,\n  length1024: 2 ** 10\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authenticate.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthenticationEnabled: boolean,\n  decorator: MethodDecorator\n): MethodDecorator => {\n  return (target, key: string | symbol, value: any): any => {\n    if (isAuthenticationEnabled) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/errors/auth.errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  INVALID_LOGIN_ATTEMPT: new UnauthorizedException(\n    'Email or Password is incorrect'\n  ),\n  INVALID_TOKEN: new ForbiddenException('Invalid token'),\n  EXPIRED_TOKEN: new NotFoundException('Token expired')\n}\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedListDto: PagedCategoryOutDto\n})\n                        \n                    \n\n\n            \n        \n\n    src/tasks/tasks.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Task,\n  createDto: CreateTaskDto,\n  pagedListDto: PagedListTaskDto,\n  entityDto: TaskDto,\n  updateDto: CreateTaskDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/stages/stages.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Stage,\n  entityDto: StageDto,\n  createDto: CreateStageDto,\n  updateDto: CreateStageDto,\n  pagedListDto: PagedListStageDto,\n  auth: {\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/users/users.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedListDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedListDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ONE_KB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1024\n                        \n                    \n\n\n            \n        \n\n    src/tasks/tasks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: TasksService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Task.modelName, schema: Task.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/stages/stages.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: StagesService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            StageModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: TracksService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TrackModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CategoryModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Database\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n})\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n]\n                        \n                    \n\n\n            \n        \n\n    src/courses/courses.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    test/helpers/db-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbServer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoMemoryServer()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inMemoryDb\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : dbServer\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/get-auth-obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ControllerAuth\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  create: {\n    enableAuth: true,\n    authRoles: []\n  },\n  update: {\n    enableAuth: true,\n    authRoles: []\n  },\n  find: {\n    enableAuth: true,\n    authRoles: []\n  },\n  findById: {\n    enableAuth: true,\n    authRoles: []\n  },\n  delete: {\n    enableAuth: true,\n    authRoles: []\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  authObj: DefaultAuthObject | boolean\n): ControllerAuth => {\n  const roles = Object.values(UserRole);\n  defaultAuth.create.authRoles = roles;\n  defaultAuth.update.authRoles = roles;\n  defaultAuth.find.authRoles = roles;\n  defaultAuth.findById.authRoles = roles;\n  defaultAuth.delete.authRoles = roles;\n\n  if (typeof authObj === 'boolean') {\n    if (authObj === false) {\n      defaultAuth.create.enableAuth = false;\n      defaultAuth.update.enableAuth = false;\n      defaultAuth.find.enableAuth = false;\n      defaultAuth.findById.enableAuth = false;\n      defaultAuth.delete.enableAuth = false;\n      return defaultAuth;\n    }\n    if (authObj === true) return defaultAuth;\n  }\n\n  if (typeof authObj?.find === 'boolean') {\n    defaultAuth.find.enableAuth = authObj.find;\n  } else if (!!authObj?.find?.length) {\n    defaultAuth.find.authRoles = authObj.find;\n  }\n\n  if (typeof authObj?.findById === 'boolean') {\n    defaultAuth.findById.enableAuth = authObj.findById;\n  } else if (!!authObj?.findById?.length) {\n    defaultAuth.findById.authRoles = authObj.findById;\n  }\n\n  if (typeof authObj?.update === 'boolean') {\n    defaultAuth.update.enableAuth = authObj.update;\n  } else if (!!authObj?.update?.length) {\n    defaultAuth.update.authRoles = authObj.update;\n  }\n\n  if (typeof authObj?.create === 'boolean') {\n    defaultAuth.create.enableAuth = authObj.create;\n  } else if (!!authObj?.create?.length) {\n    defaultAuth.create.authRoles = authObj.create;\n  }\n\n  if (typeof authObj?.delete === 'boolean') {\n    defaultAuth.delete.enableAuth = authObj.delete;\n  } else if (!!authObj?.delete?.length) {\n    defaultAuth.delete.authRoles = authObj.delete;\n  }\n\n  return defaultAuth;\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/validations/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): any => {\n  return Joi.object({\n    NODE_ENV: Joi.string()\n      .valid('development', 'production', 'test')\n      .default('development'),\n    PORT: Joi.number().default(3000),\n    JWT_SECRET: Joi.string().required(),\n    JWT_VALIDITY_HOURS: Joi.number().required(),\n    ROOT_URL: Joi.string().uri().required(),\n    REDIS_SERVER_URL: Joi.string().uri().default('redis://localhost:6379'),\n    DATABASE_PORT: Joi.number().default(27017),\n    DATABASE_HOST: Joi.string().default('localhost'),\n    DATABASE_NAME: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n    MAILER_API_KEY: Joi.string().required(),\n    MAILER_DOMAIN: Joi.string().required(),\n    API_AUTH_ENABLED: Joi.string().valid('true', 'false').default('true'),\n    APP_EMAIL: Joi.string().email().required(),\n    CLOUDINARY_API_KEY: Joi.string().required(),\n    CLOUDINARY_API_SECRET: Joi.string().required(),\n    CLOUDINARY_NAME: Joi.string().required()\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/random-token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandomToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n  randomBytes(size).toString('hex')\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: UserRole[]): CustomDecorator =>\n  SetMetadata(UserRole, roles)\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/upload-img.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uploadImg\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (file: BufferedFile, folderName: string, uniqId?: string): Promise => {\n\n    const { cloudinary: config } = configuration();\n    cloudinary.v2.config({\n        cloud_name: config.name,\n        api_key: config.key,\n        api_secret: config.secret\n    })\n\n    const dataUri = new DataURIParser()\n    const { content } = dataUri.format(`.${file.originalname.split('.')[0]}`, file.buffer)\n    const { secure_url } = await cloudinary.v2.uploader.upload(content,\n        { discard_original_filename: true, folder: `ccn/${folderName}`, public_id: uniqId });\n\n    return secure_url;\n}\n                        \n                    \n\n\n            \n        \n\n    src/users/users.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
