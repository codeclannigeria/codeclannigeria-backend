var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControllerOptions.html",[0,0.973,1,2.749]],["body/interfaces/AbstractControllerOptions.html",[0,1.697,1,4.794,2,2.051,3,0.175,4,0.158,5,0.158,6,3.713,7,2.308,8,3.713,9,0.454,10,1.309,11,5.412,12,4.371,13,0.725,14,0.013,15,0.249,16,3.043,17,1.773,18,2.499,19,3.243,20,0.243,21,2.072,22,3.06,23,3.06,24,4.371,25,1.182,26,1.545,27,3.456,28,4.034,29,4.034,30,4.034,31,3.713,32,0.008,33,0.01,34,0.008]],["title/interfaces/AbstractControllerWithAuthOptions.html",[0,0.973,24,2.749]],["body/interfaces/AbstractControllerWithAuthOptions.html",[0,1.687,1,4.765,2,2.024,3,0.173,4,0.155,5,0.155,6,3.665,7,2.278,8,3.665,9,0.448,10,1.299,11,3.665,13,0.516,14,0.013,15,0.246,16,3.49,17,1.75,18,2.959,19,3.2,20,0.242,21,2.06,22,3.02,23,3.02,24,4.765,25,1.288,26,2.13,27,3.411,28,3.982,29,3.982,30,3.982,31,3.665,32,0.008,33,0.01,34,0.008]],["title/interfaces/AbstractControllerWithSwaggerOptions.html",[0,0.973,27,2.749]],["body/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.669,1,4.273,2,1.979,3,0.169,4,0.152,5,0.152,6,3.583,7,2.227,8,3.583,9,0.438,10,1.28,11,3.583,12,4.972,13,0.795,14,0.013,15,0.24,16,2.975,17,1.711,18,2.443,19,3.129,20,0.239,21,2.038,22,2.952,23,2.952,24,4.715,25,1.275,26,1.491,27,4.273,28,5.804,29,3.893,30,5.804,31,3.583,32,0.008,33,0.01,34,0.008]],["title/classes/AcctVerifyDto.html",[35,0.118,36,2.953]],["body/classes/AcctVerifyDto.html",[3,0.17,4,0.153,5,0.153,9,0.441,10,1.285,13,0.715,14,0.013,15,0.341,20,0.17,25,0.907,32,0.008,33,0.01,34,0.008,35,0.184,36,4.609,37,1.04,38,6.438,39,4.336,40,6.109,41,6.109,42,6.109,43,1.632,44,1.912,45,5.52,46,1.323,47,4.971,48,6.012,49,4.971,50,4.971,51,2.971,52,1.501,53,1.992,54,2.816,55,4.336,56,4.336,57,1.992]],["title/classes/ApiException.html",[35,0.118,58,2.091]],["body/classes/ApiException.html",[3,0.115,4,0.104,5,0.104,9,0.299,10,0.986,13,0.762,14,0.013,15,0.279,20,0.115,21,0.984,32,0.005,33,0.007,34,0.005,35,0.098,37,0.705,43,1.726,44,2.001,46,1.411,52,1.018,58,2.505,59,6.614,60,2.941,61,2.124,62,5.191,63,6.243,64,6.054,65,6.243,66,6.243,67,3.629,68,6.243,69,5.728,70,2.394,71,3.372,72,3.13,73,4.876,74,1.255,75,0.78,76,4.807,77,3.372,78,3.372,79,3.372,80,3.372,81,3.372,82,3.372,83,3.372,84,1.91,85,0.806,86,1.46,87,3.372,88,3.372,89,3.372,90,3.372,91,3.372,92,3.372,93,3.372,94,3.372,95,3.372,96,3.372,97,3.372]],["title/controllers/AppController.html",[7,1.835,98,2.953]],["body/controllers/AppController.html",[3,0.189,4,0.17,5,0.17,7,3.059,9,0.49,14,0.013,15,0.33,20,0.189,32,0.008,33,0.01,34,0.008,35,0.16,43,1.419,44,1.507,46,1.043,85,1.32,98,4.922,99,2.709,100,4.814,101,1.98,102,7.663,103,5.519,104,1.558,105,4.654,106,4.814,107,4.004,108,1.666,109,1.981,110,5.519]],["title/modules/AppModule.html",[111,1.271,112,2.953]],["body/modules/AppModule.html",[3,0.118,4,0.106,5,0.106,14,0.013,15,0.388,20,0.169,32,0.005,33,0.008,34,0.005,35,0.1,85,0.822,86,1.489,98,4.202,99,2.428,105,4.426,106,3,111,1.809,112,5.963,113,1.551,114,1.688,115,1.853,116,1.853,117,1.688,118,2.975,119,1.688,120,3,121,3,122,3,123,4.718,124,4.718,125,4.718,126,4.718,127,4.718,128,4.718,129,4.718,130,4.176,131,2.664,132,1.767,133,1.688,134,2.711,135,2.664,136,3.439,137,3,138,2.056,139,1.948,140,3.439,141,3.439,142,3.439,143,3.439,144,3.439,145,3.439,146,1.948,147,3.899,148,3.439,149,3.439,150,2.711,151,3.439,152,1.775,153,3.34,154,3,155,3,156,2.508,157,3,158,3,159,3,160,3,161,2.956,162,3,163,2.711,164,2.711,165,2.711,166,2.711,167,1.688]],["title/injectables/AppService.html",[105,2.579,168,1.571]],["body/injectables/AppService.html",[3,0.197,4,0.177,5,0.177,9,0.509,14,0.013,15,0.279,20,0.197,32,0.009,33,0.011,34,0.009,35,0.167,43,1.454,46,1.085,85,1.373,101,2.029,104,1.621,105,4.404,109,2.062,168,2.683,169,3.254,170,5.01,171,7.768,172,5.744,173,5.744,174,5.744]],["title/controllers/AuthController.html",[7,1.835,175,2.953]],["body/controllers/AuthController.html",[3,0.064,4,0.058,5,0.058,7,0.846,9,0.166,13,0.687,14,0.013,15,0.352,18,0.724,20,0.064,21,1.877,32,0.003,33,0.005,34,0.003,35,0.054,36,4.18,40,2.698,41,2.698,42,2.698,44,1.488,46,1.03,52,0.566,54,2.593,57,2.898,58,2.027,61,1.439,67,1.959,70,0.921,74,2.028,75,1.26,84,1.063,85,0.448,86,0.812,99,0.921,101,0.903,104,1.538,108,1.191,109,1.817,132,2.351,146,1.063,152,2.622,175,2.243,176,1.636,177,1.636,178,3.163,179,3.946,180,3.092,181,3.092,182,3.092,183,3.092,184,3.092,185,1.876,186,3.991,187,3.091,188,1.876,189,1.876,190,1.876,191,1.876,192,4.275,193,1.876,194,3.305,195,1.876,196,2.736,197,1.876,198,1.876,199,2.664,200,0.846,201,1.876,202,1.876,203,3.091,204,3.092,205,1.876,206,1.876,207,1.876,208,4.577,209,3.092,210,3.092,211,1.876,212,1.876,213,2.247,214,1.876,215,1.876,216,3.091,217,3.092,218,1.876,219,1.876,220,2.854,221,0.846,222,2.088,223,1.267,224,1.876,225,1.876,226,1.267,227,1.361,228,1.188,229,3.092,230,3.092,231,2.088,232,1.876,233,3.092,234,1.121,235,1.876,236,1.636,237,1.478,238,2.359,239,1.636,240,1.478,241,1.121,242,2.235,243,1.361,244,2.359,245,1.478,246,1.361,247,1.876,248,1.876,249,1.876,250,2.088,251,1.636,252,1.876,253,1.876,254,1.876,255,1.636,256,1.267,257,1.478,258,1.361,259,1.876,260,1.876,261,3.11,262,1.876,263,5.063,264,1.876,265,2.438,266,3.098,267,1.876,268,1.876,269,1.267,270,1.876,271,3.452,272,3.991,273,1.876,274,3.087,275,1.876,276,2.664,277,1.267,278,1.876,279,1.876,280,1.876,281,1.478,282,1.876,283,4.024,284,1.876,285,3.092,286,2.698,287,3.092,288,1.876,289,3.092,290,1.636,291,2.698,292,1.636,293,1.876,294,2.698,295,3.092,296,3.092,297,3.092,298,4.577,299,3.092,300,3.092,301,3.092,302,1.876,303,2.698,304,3.092,305,3.092,306,2.698,307,1.394,308,3.092,309,1.876,310,1.876,311,1.876,312,2.438,313,1.636,314,2.698,315,1.876,316,1.636,317,1.267,318,1.876,319,2.438,320,1.876,321,1.876,322,1.876,323,1.876]],["title/injectables/AuthHandler.html",[168,1.571,324,2.749]],["body/injectables/AuthHandler.html",[3,0.177,4,0.159,5,0.159,9,0.459,13,0.528,14,0.013,15,0.347,20,0.177,32,0.008,33,0.01,34,0.008,35,0.15,44,1.411,46,0.977,61,1.365,74,1.924,75,1.196,85,1.236,101,1.901,104,1.459,109,1.856,168,2.514,169,2.928,178,3.088,324,4.399,325,4.509,326,6.514,327,6.514,328,7.132,329,6.514,330,5.169,331,6.514,332,3.75,333,5.169,334,4.075,335,4.075,336,4.509,337,5.169,338,5.169,339,5.169,340,5.169]],["title/modules/AuthModule.html",[111,1.271,123,2.749]],["body/modules/AuthModule.html",[3,0.124,4,0.112,5,0.112,14,0.013,15,0.386,20,0.124,32,0.006,33,0.008,34,0.006,35,0.105,75,0.838,85,0.866,99,2.521,111,1.862,113,1.634,114,1.779,115,1.952,116,1.952,117,1.779,118,3.063,119,2.927,123,5.528,130,4.25,131,2.766,132,1.861,133,1.779,135,2.766,138,2.166,139,2.053,150,2.856,152,1.301,153,4.026,156,1.301,175,4.325,238,4.25,239,3.161,244,4.702,245,2.856,257,2.856,258,2.629,324,4.801,341,3.161,342,3.624,343,3.161,344,3.161,345,4.801,346,4.801,347,5.157,348,2.856,349,3.624,350,2.447,351,3.724,352,1.569,353,3.624,354,3.624,355,2.447,356,3.624,357,3.624,358,3.161,359,3.161,360,2.296,361,3.161,362,2.166,363,3.161,364,3.161,365,3.161,366,2.856]],["title/interfaces/AuthObj.html",[0,0.973,367,2.579]],["body/interfaces/AuthObj.html",[0,1.672,2,1.985,3,0.17,4,0.152,5,0.152,9,0.44,10,1.283,13,0.647,14,0.013,15,0.241,16,2.329,18,1.913,20,0.217,26,2.423,32,0.008,33,0.01,34,0.008,221,2.234,367,5.02,368,3.594,369,3.594,370,5.348,371,5.348,372,3.509,373,3.139,374,4.017,375,4.017,376,3.416,377,3.416,378,2.541]],["title/injectables/AuthService.html",[168,1.571,244,2.433]],["body/injectables/AuthService.html",[3,0.064,4,0.058,5,0.058,9,0.166,10,0.626,12,3.68,13,0.764,14,0.013,15,0.339,20,0.064,21,0.903,22,1.849,32,0.003,33,0.005,34,0.003,35,0.054,43,1.513,44,0.512,46,1.215,57,2.029,58,0.963,61,1.522,62,2.243,64,1.636,70,1.518,72,0.882,74,2.144,75,1.333,84,1.063,85,0.448,86,1.339,101,0.903,104,1.7,108,0.934,109,1.643,146,1.063,152,2.596,156,0.673,168,1.194,169,1.063,178,3.303,192,1.849,194,3.42,200,0.846,203,2.088,213,0.921,220,3.191,221,0.846,227,1.361,236,1.636,237,1.478,242,3.087,243,1.361,244,1.849,256,3.419,257,1.478,258,1.361,261,4.747,266,3.274,271,2.5,272,1.478,274,3.087,283,2.359,286,1.636,290,1.636,291,3.442,292,2.698,306,1.636,312,5.067,313,2.698,314,5.749,316,1.636,317,2.088,319,2.438,332,1.361,334,1.478,335,1.478,336,1.636,347,3.32,358,1.636,359,1.636,379,1.636,380,5.449,381,3.946,382,3.092,383,5.449,384,4.577,385,3.092,386,3.092,387,3.946,388,3.092,389,1.636,390,3.946,391,1.876,392,1.876,393,1.876,394,3.092,395,1.876,396,1.876,397,1.876,398,3.092,399,1.876,400,3.092,401,1.876,402,1.876,403,1.876,404,3.092,405,3.946,406,1.876,407,3.946,408,1.876,409,1.876,410,2.698,411,2.438,412,2.438,413,1.361,414,1.636,415,1.478,416,1.267,417,1.478,418,1.876,419,1.959,420,1.478,421,2.438,422,1.267,423,1.876,424,1.636,425,1.636,426,1.636,427,1.876,428,2.698,429,1.876,430,2.438,431,1.876,432,1.876,433,3.092,434,1.876,435,1.876,436,1.876,437,1.636,438,4.577,439,1.876,440,1.876,441,2.243,442,2.243,443,3.092,444,1.063,445,1.876,446,1.876,447,1.876,448,1.876,449,3.092,450,1.876,451,1.876,452,1.478,453,1.876,454,1.876,455,1.876,456,1.876,457,1.194,458,3.092,459,3.092,460,1.636,461,3.092,462,3.092,463,1.876,464,1.876,465,1.876,466,1.876,467,1.876,468,1.876,469,1.876,470,3.092]],["title/guards/AuthenticationGuard.html",[246,2.953,471,3.208]],["body/guards/AuthenticationGuard.html",[3,0.141,4,0.126,5,0.126,9,0.364,13,0.65,14,0.013,15,0.348,20,0.141,21,1.198,32,0.006,33,0.009,34,0.006,35,0.119,46,1.204,54,3.171,57,1.644,61,1.683,70,2.014,74,2.371,75,1.473,85,0.981,86,1.777,101,1.634,104,1.58,107,2.976,108,1.239,109,2.287,146,2.324,152,2.287,156,2.009,168,2.161,178,3.201,187,4.991,194,3.36,213,2.748,220,2.758,227,4.06,234,2.453,244,4.418,245,3.234,246,4.06,251,3.579,266,2.631,274,2.324,422,2.771,472,3.234,473,3.579,474,5.394,475,5.597,476,4.103,477,4.103,478,4.412,479,5.394,480,4.103,481,3.234,482,5.597,483,4.103,484,3.579,485,4.103,486,3.234,487,4.103,488,4.103,489,4.103,490,3.579]],["title/interfaces/BaseControllerOptions.html",[0,0.973,491,2.749]],["body/interfaces/BaseControllerOptions.html",[0,1.664,2,1.967,3,0.168,4,0.151,5,0.151,7,2.213,9,0.435,10,1.275,12,4.256,13,0.711,14,0.013,15,0.239,16,2.963,17,1.7,18,2.433,19,3.109,20,0.238,21,2.218,22,2.934,23,2.934,25,1.15,26,1.482,32,0.008,33,0.01,34,0.008,491,4.701,492,3.314,493,3.314,494,3.56,495,4.161,496,4.256,497,3.314,498,2.521,499,3.56,500,2.78,501,3.56,502,2.78,503,3.56,504,2.78,505,3.869]],["title/interfaces/BaseControllerWithAuthOptions.html",[0,0.973,496,2.749]],["body/interfaces/BaseControllerWithAuthOptions.html",[0,1.655,2,1.942,3,0.166,4,0.149,5,0.149,7,2.185,9,0.43,10,1.265,13,0.495,14,0.013,15,0.236,16,3.437,17,1.679,18,2.921,19,3.07,20,0.237,21,2.209,22,2.897,23,2.897,25,1.263,26,2.089,32,0.007,33,0.01,34,0.007,491,4.673,492,3.273,493,3.273,494,3.516,495,2.745,496,4.673,497,3.273,498,2.489,499,3.516,500,2.745,501,3.516,502,2.745,503,3.516,504,2.745,505,3.82]],["title/interfaces/BaseControllerWithSwaggerOpts.html",[0,0.973,497,2.749]],["body/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.595,2,1.801,3,0.154,4,0.138,5,0.138,7,2.027,9,0.399,10,1.204,12,5.309,13,0.832,14,0.013,15,0.219,16,2.798,17,1.557,18,2.297,19,2.848,20,0.228,21,2.156,22,2.687,23,2.687,25,1.218,26,1.357,32,0.007,33,0.009,34,0.007,491,4.019,492,3.036,493,3.036,494,3.261,495,2.547,496,4.505,497,4.019,498,3.648,499,3.261,500,4.023,501,3.261,502,4.023,503,3.261,504,4.023,505,3.543]],["title/classes/BaseDto.html",[35,0.118,506,1.998]],["body/classes/BaseDto.html",[3,0.168,4,0.151,5,0.151,9,0.434,10,1.272,13,0.71,14,0.013,15,0.338,20,0.168,32,0.007,33,0.01,34,0.007,35,0.202,37,1.024,43,1.316,44,1.898,46,1.313,52,1.477,53,1.96,76,4.155,108,2.441,307,3.308,457,2.683,506,3.088,507,4.268,508,2.894,509,2.894,510,4.247,511,4.892,512,3.304,513,4.892,514,4.892,515,3.952,516,2.3,517,6.289]],["title/classes/BaseEntity.html",[35,0.118,518,2.193]],["body/classes/BaseEntity.html",[3,0.079,4,0.071,5,0.071,9,0.204,10,0.736,13,0.683,14,0.013,15,0.273,17,2.635,20,0.079,21,1.504,25,0.665,26,1.555,32,0.004,33,0.006,34,0.004,35,0.067,37,0.48,43,0.947,44,1.774,46,1.399,61,1.716,101,1.063,104,1.454,108,2.377,109,1.307,156,2.749,167,3.286,200,2.695,220,0.994,221,1.035,307,3.092,362,3.357,378,2.251,457,1.747,508,1.884,509,1.884,518,3.77,519,2.002,520,5.151,521,2.705,522,2.705,523,2.705,524,3.745,525,3.357,526,2.705,527,3.079,528,3.079,529,3.079,530,3.176,531,4.525,532,2.81,533,3.079,534,2.295,535,4.32,536,4.033,537,3.079,538,2.295,539,2.295,540,2.295,541,2.295,542,2.295,543,2.295,544,2.295,545,2.295,546,2.295,547,3.573,548,3.19,549,2.295,550,2.295,551,2.295,552,2.295,553,2.295,554,2.295,555,2.295,556,2.295,557,4.24,558,1.3,559,2.295,560,2.002,561,1.809,562,2.295,563,3.079,564,3.176,565,2.295,566,2.295,567,2.295,568,2.295,569,2.295,570,2.295,571,2.295,572,2.295,573,2.295,574,3.64,575,2.295,576,3.64,577,3.947,578,3.64]],["title/classes/CategoriesController.html",[35,0.118,579,2.953]],["body/classes/CategoriesController.html",[3,0.121,4,0.108,5,0.108,9,0.313,13,0.74,14,0.013,15,0.377,18,1.361,20,0.121,21,1.029,25,0.919,32,0.005,33,0.008,34,0.005,35,0.102,37,0.738,44,0.962,46,0.951,52,1.064,58,3.29,61,1.33,67,4.058,70,1.731,74,1.873,75,1.358,84,1.997,85,0.843,101,1.47,104,0.995,108,1.064,109,1.265,152,1.807,178,2.543,192,3.009,194,2.471,200,2.27,221,1.589,222,2.38,223,3.399,226,3.399,228,2.233,231,4.325,266,1.657,269,2.38,271,3.189,274,1.997,276,2.38,277,2.38,372,1.526,376,2.712,377,1.899,378,1.413,416,2.38,495,1.997,498,1.811,500,1.997,502,1.997,504,1.997,579,3.652,580,2.779,581,3.965,582,3.525,583,4.647,584,3.525,585,5.034,586,2.38,587,4.647,588,2.557,589,4.211,590,2.557,591,2.557,592,2.779,593,3.075,594,3.525,595,3.009,596,3.075,597,2.107,598,2.557,599,1.997,600,3.009,601,2.557,602,3.075,603,3.72,604,3.075,605,3.189,606,3.525,607,3.075,608,3.075,609,3.399,610,4.26,611,2.557,612,3.525,613,2.557,614,2.38,615,2.557,616,2.557,617,2.557,618,3.525,619,1.589,620,3.525,621,3.525,622,2.557]],["title/modules/CategoriesModule.html",[111,1.271,124,2.749]],["body/modules/CategoriesModule.html",[3,0.162,4,0.146,5,0.146,14,0.013,15,0.374,20,0.162,32,0.007,33,0.009,34,0.007,35,0.137,75,1.094,85,1.131,99,2.321,111,2.136,113,2.132,114,2.321,115,2.547,116,2.547,117,2.321,118,3.16,119,3.357,124,5.07,131,3.314,132,2.429,133,2.321,135,2.547,138,2.826,139,2.678,152,1.697,360,2.996,362,2.826,579,4.463,583,5.828,602,4.125,603,2.996,604,4.125,623,4.125,624,4.125,625,3.727,626,4.154,627,3.43,628,4.728,629,5.39,630,4.125,631,4.125,632,3.193,633,3.43]],["title/classes/Category.html",[35,0.118,603,2.579]],["body/classes/Category.html",[3,0.098,4,0.088,5,0.088,9,0.46,10,0.871,13,0.744,14,0.013,15,0.252,17,2.523,20,0.098,21,0.832,25,0.786,26,1.3,32,0.004,33,0.007,34,0.004,35,0.083,37,0.597,43,1.086,44,1.951,46,1.448,61,1.844,75,1.338,101,1.257,104,1.633,108,2.395,156,2.795,167,3.049,200,3.057,307,2.608,352,1.235,378,2.08,457,1.663,508,1.793,509,1.793,518,4.273,521,2.575,522,2.575,523,2.575,524,3.458,525,3.103,526,2.575,527,3.103,528,3.103,529,3.103,532,3.07,533,3.712,535,3.904,536,3.277,537,3.458,547,3.103,548,2.84,557,2.729,558,1.615,563,1.704,603,2.729,634,2.487,635,2.025,636,3.125,637,3.125,638,3.289,639,3.395,640,2.851,641,3.724,642,1.806,643,1.806,644,1.806,645,1.806,646,1.806,647,1.806,648,1.806,649,1.806,650,1.806,651,1.806,652,1.806,653,1.806,654,1.806,655,1.235,656,1.925,657,1.806,658,2.247]],["title/classes/CategoryDto.html",[35,0.118,589,2.433]],["body/classes/CategoryDto.html",[3,0.15,4,0.135,5,0.135,9,0.389,10,1.183,13,0.748,14,0.013,15,0.342,20,0.2,25,1.202,32,0.007,33,0.009,34,0.007,35,0.204,37,0.917,43,1.532,44,2,46,1.384,53,1.756,75,1.524,108,2.275,307,2.638,352,1.897,457,2.258,506,3.699,508,2.436,509,2.436,510,3.951,512,2.958,515,3.548,516,2.06,589,3.497,605,2.776,635,2.06,641,3.234,655,1.897,659,3.453,660,3.096,661,3.822,662,4.381,663,4.381,664,4.381,665,3.178,666,3.178,667,3.178,668,3.152,669,2.151,670,2.482,671,2.776,672,2.776,673,3.822]],["title/interfaces/Configuration.html",[0,0.973,86,1.762]],["body/interfaces/Configuration.html",[0,1.477,2,1.55,3,0.132,4,0.119,5,0.119,9,0.343,10,1.087,13,0.797,14,0.013,17,1.34,20,0.132,26,1.865,32,0.006,33,0.008,34,0.006,43,1.731,72,3.5,75,1.243,86,2.674,156,1.388,161,4.609,441,5.088,442,5.088,674,2.806,675,5.528,676,5.528,677,5.528,678,4.884,679,5.401,680,5.528,681,5.528,682,3.899,683,3.629,684,3.899,685,3.899,686,3.049,687,3.049,688,3.049,689,3.049,690,3.049,691,3.049,692,3.049,693,3.049,694,2.806,695,2.806,696,3.049,697,3.049,698,3.049,699,3.049]],["title/interfaces/ControllerAuth.html",[0,0.973,373,2.579]],["body/interfaces/ControllerAuth.html",[0,1.621,2,1.861,3,0.159,4,0.143,5,0.143,9,0.412,10,1.23,13,0.762,14,0.013,15,0.226,16,2.183,18,1.792,20,0.208,26,2.312,32,0.007,33,0.009,34,0.007,221,2.094,367,5.281,368,3.368,369,3.368,370,3.368,371,3.368,372,3.379,373,3.852,374,4.73,375,4.73,376,4.021,377,4.021,378,2.991]],["title/classes/Course.html",[35,0.118,700,2.749]],["body/classes/Course.html",[3,0.084,4,0.076,5,0.076,9,0.419,10,0.776,13,0.75,14,0.013,15,0.23,17,2.509,20,0.084,21,0.716,25,0.701,26,1.159,32,0.004,33,0.006,34,0.004,35,0.071,37,0.514,43,1.345,44,1.977,46,1.444,61,1.757,72,1.804,101,1.121,104,1.509,108,2.433,156,2.874,167,3.357,200,3.083,307,2.41,352,1.063,378,1.894,457,1.482,508,1.598,509,1.598,518,4.174,521,2.294,522,2.294,523,2.294,524,3.196,525,2.826,526,2.294,527,2.826,528,2.826,529,2.826,532,2.892,533,3.976,535,3.677,536,3.028,537,3.196,547,2.826,548,2.624,557,3.675,558,1.39,563,3.196,619,2.41,635,2.892,636,3.878,637,3.878,638,4.072,639,3.026,641,3.604,642,1.555,643,1.555,644,1.555,645,1.555,646,1.555,647,1.555,648,1.555,649,1.555,650,1.555,651,1.555,652,1.555,653,1.555,654,1.555,655,1.063,656,1.657,657,1.555,658,1.935,660,2.222,700,2.592,701,2.141,702,3.726,703,3.429,704,2.454,705,2.432,706,2.454,707,2.454,708,2.454,709,2.141,710,2.454]],["title/classes/CourseDto.html",[35,0.118,711,2.579]],["body/classes/CourseDto.html",[3,0.134,4,0.121,5,0.121,9,0.348,10,1.099,13,0.763,14,0.013,15,0.355,20,0.186,25,1.136,32,0.006,33,0.008,34,0.006,35,0.195,37,0.822,43,1.564,44,1.991,45,4.281,46,1.413,52,1.185,53,1.573,72,2.553,76,3.721,108,2.335,307,2.448,352,1.7,457,2.096,506,3.581,508,2.261,509,2.261,510,3.667,512,2.651,515,3.618,516,1.846,619,2.807,635,1.846,641,3.056,655,1.7,660,2.927,665,2.848,666,2.848,667,2.848,668,2.925,669,1.928,670,2.224,671,2.488,672,2.488,702,4.907,703,4.516,711,3.44,712,3.095,713,3.926,714,3.926,715,3.926,716,3.926,717,3.926,718,3.926,719,3.926,720,3.94,721,2.848,722,3.425,723,2.651,724,3.425]],["title/classes/CoursesController.html",[35,0.118,725,2.953]],["body/classes/CoursesController.html",[3,0.122,4,0.109,5,0.109,9,0.315,13,0.742,14,0.013,15,0.377,18,1.37,20,0.122,21,1.036,25,0.648,32,0.005,33,0.008,34,0.005,35,0.103,37,0.743,44,0.969,46,0.956,52,1.072,58,3.3,61,1.336,67,4.071,70,1.742,74,1.882,75,1.17,84,2.011,85,0.849,101,1.477,104,1.002,108,1.072,109,1.274,152,1.274,178,2.552,192,3.024,194,2.484,200,2.281,221,1.6,222,2.397,223,3.416,226,3.416,228,2.249,231,4.339,266,1.668,269,2.397,271,3.205,274,2.011,276,2.397,277,2.397,372,1.537,376,3.175,377,1.912,378,1.422,416,2.397,495,2.011,498,1.823,500,2.011,502,2.011,504,2.011,586,2.397,588,2.575,590,2.575,591,2.575,592,2.798,593,3.096,595,3.024,596,3.096,597,2.122,598,2.575,599,2.011,600,3.024,601,2.575,607,3.096,609,3.98,610,4.661,611,2.575,613,2.575,614,2.397,615,2.575,616,2.575,617,2.575,619,2.281,622,2.575,700,3.98,711,4.071,723,3.416,725,3.67,726,3.096,727,3.549,728,4.661,729,3.549,730,5.059,731,5.122,732,3.549,733,3.096,734,3.096,735,3.549,736,3.096,737,3.549,738,3.549,739,3.096,740,3.096]],["title/modules/CoursesModule.html",[111,1.271,125,2.749]],["body/modules/CoursesModule.html",[3,0.158,4,0.142,5,0.142,14,0.013,15,0.372,20,0.158,32,0.007,33,0.009,34,0.007,35,0.133,75,1.064,85,1.1,99,2.259,111,2.108,113,2.075,114,2.259,115,2.479,116,2.479,117,2.259,118,3.467,119,3.313,125,5.259,131,3.256,132,2.364,133,2.259,135,2.479,138,2.751,139,2.607,152,1.652,360,2.916,362,2.751,626,4.082,627,3.338,632,3.108,633,3.338,700,3.108,725,4.385,728,5.967,733,4.015,734,4.015,741,4.015,742,4.015,743,4.015,744,3.628,745,4.602,746,5.32,747,4.015,748,4.015]],["title/classes/CreateCategoryDto.html",[35,0.118,587,2.953]],["body/classes/CreateCategoryDto.html",[3,0.203,4,0.182,5,0.182,14,0.013,15,0.344,20,0.203,25,1.08,32,0.009,33,0.011,34,0.009,35,0.172,37,1.238,51,3.538,52,1.787,75,1.369,587,5.135,589,3.538,608,5.163,660,2.782,749,5.163,750,5.163,751,5.919]],["title/classes/CreateCourseDto.html",[35,0.118,731,2.953]],["body/classes/CreateCourseDto.html",[3,0.202,4,0.181,5,0.181,14,0.013,15,0.343,20,0.202,25,1.076,32,0.009,33,0.011,34,0.009,35,0.171,37,1.234,51,3.525,52,1.78,619,2.658,660,2.772,703,4.277,711,3.736,731,5.123,736,5.144,752,5.144,753,5.144,754,5.896]],["title/classes/CreateTrackDto.html",[35,0.118,755,2.749]],["body/classes/CreateTrackDto.html",[3,0.203,4,0.182,5,0.182,14,0.013,15,0.344,20,0.203,25,1.08,32,0.009,33,0.011,34,0.009,35,0.172,37,1.238,51,3.538,52,1.787,619,2.669,660,2.782,755,4.78,756,5.163,757,5.163,758,3.353,759,5.919,760,5.919]],["title/classes/CreateUserDto.html",[35,0.118,761,2.749]],["body/classes/CreateUserDto.html",[3,0.202,4,0.181,5,0.181,14,0.013,15,0.343,20,0.202,25,1.076,32,0.009,33,0.011,34,0.009,35,0.171,37,1.234,52,1.78,241,3.525,457,2.276,508,2.455,509,2.455,761,4.769,762,5.144,763,4.277,764,4.648,765,3.029,766,4.648]],["title/interfaces/Database.html",[0,0.973,161,2.433]],["body/interfaces/Database.html",[0,1.564,2,1.731,3,0.148,4,0.133,5,0.133,9,0.383,10,1.172,13,0.714,14,0.013,17,1.497,20,0.148,26,1.304,32,0.007,33,0.009,34,0.007,43,1.73,72,3.427,75,1.686,86,2.51,156,1.551,161,4.358,441,4.204,442,4.204,674,3.134,675,4.569,676,4.569,677,4.569,678,4.428,679,5.561,680,4.569,681,4.569,682,5.288,683,4.923,684,4.204,685,4.204,686,3.405,687,3.405,688,3.405,689,3.405,690,3.405,691,3.405,692,3.405,693,3.405,694,3.134,695,3.134,696,3.405,697,3.405,698,3.405,699,3.405]],["title/modules/DbTest.html",[111,1.271,767,3.208]],["body/modules/DbTest.html",[3,0.168,4,0.151,5,0.151,14,0.013,15,0.339,20,0.216,21,1.433,32,0.008,33,0.01,34,0.008,35,0.142,85,1.173,109,1.762,111,1.968,113,2.213,119,2.409,135,2.644,138,2.934,139,2.78,152,2.637,156,2.499,163,3.869,164,3.869,165,3.869,166,3.869,167,2.409,178,2.125,266,2.307,426,4.281,683,4.256,694,3.56,695,3.56,767,4.967,768,3.869,769,3.869,770,5.497,771,4.908,772,4.281,773,4.908,774,4.908,775,4.908,776,4.908,777,4.967,778,3.869,779,5.487,780,4.281,781,4.281,782,4.281]],["title/interfaces/DefaultAuthObject.html",[0,0.973,16,1.913]],["body/interfaces/DefaultAuthObject.html",[0,1.553,2,1.707,3,0.146,4,0.131,5,0.131,9,0.378,10,1.162,13,0.741,14,0.013,15,0.207,16,2.699,18,1.645,20,0.197,26,2.492,32,0.007,33,0.009,34,0.007,61,2.101,221,1.921,367,4.735,368,3.091,369,3.091,370,3.091,371,3.091,372,3.587,373,2.699,374,4.597,375,4.597,376,3.909,377,3.909,378,2.908]],["title/classes/FindDto.html",[35,0.118,783,3.208]],["body/classes/FindDto.html",[3,0.161,4,0.145,5,0.145,9,0.417,10,1.24,13,0.738,14,0.013,15,0.229,17,2.123,20,0.161,32,0.007,33,0.009,34,0.007,35,0.178,37,0.983,43,1.512,44,1.973,46,1.365,53,1.883,61,2.096,72,3.397,493,4.604,532,2.881,705,3.882,783,4.83,784,4.1,785,5.948,786,6.818,787,6.818,788,6.128,789,7.827,790,4.7,791,4.7,792,4.7,793,4.7,794,4.7,795,4.7,796,6.818]],["title/classes/HttpExceptionFilter.html",[35,0.118,797,3.208]],["body/classes/HttpExceptionFilter.html",[3,0.142,4,0.128,5,0.128,9,0.369,13,0.425,14,0.013,15,0.312,20,0.142,21,1.214,32,0.006,33,0.009,34,0.006,35,0.121,37,0.87,43,0.87,46,0.786,58,2.901,61,1.098,62,3.016,63,4.927,65,4.927,68,5.595,74,1.547,75,0.962,84,2.355,85,0.994,101,1.649,104,1.174,152,2.811,186,4.452,234,2.486,237,4.452,410,3.627,422,3.814,430,5.056,437,3.627,536,3.2,548,2.041,682,4.653,797,4.452,798,4.927,799,3.627,800,6.414,801,5.648,802,6.881,803,4.158,804,5.648,805,4.158,806,4.158,807,4.158,808,4.158,809,4.158,810,4.158,811,4.158,812,4.158,813,5.648,814,4.158,815,5.648,816,4.158,817,4.158,818,4.158,819,4.158,820,4.158,821,3.627,822,4.158,823,6.414,824,3.627,825,4.158,826,4.158,827,4.158]],["title/interfaces/IBaseController.html",[0,0.973,828,3.208]],["body/interfaces/IBaseController.html",[0,0.986,2,1.653,3,0.141,4,0.127,5,0.127,9,0.366,13,0.733,14,0.013,20,0.141,32,0.006,33,0.009,34,0.006,43,1.636,46,1.356,61,1.895,74,2.67,75,1.66,101,1.64,104,2.026,192,4.426,194,3.881,375,3.559,376,3.026,377,3.026,378,2.251,457,2.168,492,4.999,499,5.371,501,4.634,503,4.634,548,2.758,586,3.793,828,4.428,829,3.598,830,5.617,831,4.125,832,5.617,833,4.125,834,5.617,835,6.388,836,4.125,837,5.617,838,5.617,839,4.125,840,5.617,841,4.125]],["title/interfaces/IPagedListDto.html",[0,0.973,842,3.208]],["body/interfaces/IPagedListDto.html",[0,1.204,2,2.018,3,0.172,4,0.155,5,0.155,9,0.447,10,1.296,13,0.782,14,0.013,15,0.343,20,0.219,23,4.577,32,0.008,33,0.01,34,0.008,35,0.146,52,1.52,72,3.486,76,3.829,85,1.204,109,1.807,422,3.4,498,3.291,669,2.472,842,5.554,843,3.969,844,3.969,845,7.657,846,7.657,847,4.392,848,5.035,849,3.653,850,6.406]],["title/injectables/JwtAuthGuard.html",[168,1.571,599,2.306]],["body/injectables/JwtAuthGuard.html",[3,0.168,4,0.151,5,0.151,9,0.434,13,0.499,14,0.013,15,0.369,20,0.168,25,0.893,26,1.899,32,0.007,33,0.01,34,0.007,35,0.142,46,0.924,61,1.292,74,1.821,75,1.132,85,1.17,86,2.118,101,1.836,104,1.381,109,1.756,146,2.771,156,1.756,168,2.428,169,2.771,194,3.088,350,3.304,351,3.549,352,2.118,474,5.479,478,3.856,479,5.783,481,4.957,486,3.856,599,3.563,851,5.486,852,4.268,853,4.892,854,6.951,855,4.892,856,4.268,857,4.892,858,4.892,859,4.892]],["title/interfaces/JwtPayload.html",[0,0.973,419,2.579]],["body/interfaces/JwtPayload.html",[0,1.315,2,2.204,3,0.188,4,0.169,5,0.169,9,0.488,10,1.369,13,0.749,14,0.013,15,0.267,20,0.188,32,0.008,33,0.01,34,0.008,43,1.674,57,3.067,221,2.479,312,6.033,372,3.314,419,4.289,444,4.336,860,4.797,861,4.797]],["title/injectables/JwtStrategy.html",[168,1.571,345,2.749]],["body/injectables/JwtStrategy.html",[3,0.162,4,0.146,5,0.146,9,0.421,13,0.484,14,0.013,15,0.366,20,0.162,25,0.866,32,0.007,33,0.009,34,0.007,35,0.137,46,1.165,61,1.253,70,3.362,74,1.765,75,1.097,85,1.134,86,2.054,101,1.799,104,1.339,109,1.702,146,2.687,167,2.328,168,2.379,169,2.687,178,2.965,194,3.026,345,4.163,350,3.203,413,3.441,419,4.594,420,3.738,421,5.716,862,4.137,863,5.974,864,4.743,865,4.743,866,6.849,867,4.743,868,4.743,869,4.743,870,4.743,871,4.137,872,4.743,873,4.743,874,4.743,875,4.743,876,4.743,877,4.743,878,4.743]],["title/classes/LoginReqDto.html",[35,0.118,54,2.306]],["body/classes/LoginReqDto.html",[3,0.197,4,0.177,5,0.177,14,0.013,15,0.339,20,0.239,25,1.052,32,0.009,33,0.011,34,0.009,35,0.202,37,1.206,43,1.206,51,3.446,52,1.741,54,3.947,57,2.31,196,3.446,213,2.83,240,4.544,241,3.446,250,3.893,265,4.544,879,4.544,880,5.029]],["title/classes/LoginResDto.html",[35,0.118,250,2.749]],["body/classes/LoginResDto.html",[3,0.19,4,0.171,5,0.171,9,0.493,10,1.378,13,0.567,14,0.013,15,0.331,20,0.233,25,1.015,32,0.008,33,0.01,34,0.008,35,0.198,37,1.163,43,1.426,46,1.05,51,3.323,52,1.678,54,3.149,57,2.227,196,3.323,213,2.729,240,4.381,241,3.323,250,4.601,265,5.809,879,4.381,880,4.849,881,5.558]],["title/modules/MailModule.html",[111,1.271,126,2.749]],["body/modules/MailModule.html",[3,0.181,4,0.163,5,0.163,14,0.013,15,0.322,20,0.181,32,0.008,33,0.01,34,0.008,35,0.153,85,1.266,111,2.252,113,2.386,114,2.598,115,2.851,116,2.851,117,2.598,118,3.703,119,3.539,126,5.43,131,3.561,132,2.719,133,2.598,238,4.986,882,4.617,883,4.617,884,5.293,885,5.293,886,5.293]],["title/injectables/MailService.html",[168,1.571,238,2.433]],["body/injectables/MailService.html",[3,0.188,4,0.122,5,0.122,9,0.353,10,1.108,13,0.559,14,0.013,15,0.344,17,1.378,18,1.535,20,0.136,32,0.006,33,0.008,34,0.006,35,0.115,46,1.338,61,1.05,70,3.077,74,1.48,75,0.92,85,0.951,86,2.714,101,1.599,104,1.547,108,1.892,146,2.253,152,1.967,153,4.232,168,2.115,169,2.253,178,2.714,238,3.275,261,6.114,266,1.87,294,4.779,332,2.885,411,3.135,532,1.87,548,1.952,678,2.519,685,2.885,887,3.469,888,6.268,889,6.754,890,5.479,891,5.479,892,3.977,893,5.479,894,6.268,895,3.977,896,3.977,897,3.977,898,6.268,899,5.467,900,5.479,901,3.469,902,3.977,903,3.977,904,3.977,905,3.977,906,3.977,907,3.977,908,3.977,909,3.977,910,3.977,911,3.977,912,3.977,913,3.977,914,5.479,915,3.469,916,3.977,917,3.977,918,3.977,919,3.977,920,3.977,921,3.977,922,3.977]],["title/interfaces/Mailer.html",[0,0.973,678,2.579]],["body/interfaces/Mailer.html",[0,1.595,2,1.801,3,0.154,4,0.138,5,0.138,9,0.399,10,1.204,13,0.608,14,0.013,17,1.557,20,0.154,26,1.357,32,0.007,33,0.009,34,0.007,43,1.724,72,3.136,75,1.377,86,2.577,156,1.614,161,4.245,441,4.317,442,4.317,674,3.261,675,4.691,676,4.691,677,4.691,678,4.68,679,5.152,680,4.691,681,4.691,682,4.317,683,4.019,684,5.359,685,5.359,686,3.543,687,3.543,688,3.543,689,3.543,690,3.543,691,3.543,692,3.543,693,3.543,694,3.261,695,3.261,696,3.543,697,3.543,698,3.543,699,3.543]],["title/classes/PagedCategoryOutDto.html",[35,0.118,605,2.579]],["body/classes/PagedCategoryOutDto.html",[3,0.185,4,0.166,5,0.166,14,0.013,15,0.37,20,0.229,25,1.222,32,0.008,33,0.01,34,0.008,35,0.221,37,1.131,43,1.401,53,2.165,75,1.25,352,2.34,506,3.288,515,3.92,516,2.54,589,3.23,605,4.242,635,2.54,655,2.34,659,4.259,660,2.54,668,3.607,669,2.653,670,3.061,671,3.423,672,3.423,673,4.714]],["title/classes/PagedCourseOutputDto.html",[35,0.118,723,2.749]],["body/classes/PagedCourseOutputDto.html",[3,0.172,4,0.154,5,0.154,14,0.013,15,0.38,20,0.219,25,1.167,32,0.008,33,0.01,34,0.008,35,0.215,37,1.05,43,1.472,45,5.039,52,1.515,53,2.011,72,2.359,76,4.205,108,1.515,352,2.173,506,3.139,515,3.99,516,2.359,619,2.263,635,2.359,655,2.173,660,2.359,668,3.444,669,2.464,670,2.843,671,3.18,672,3.18,702,3.956,703,3.641,711,3.18,712,3.956,720,4.638,721,3.641,722,4.378,723,4.317,724,4.378]],["title/classes/PagedTrackOutputDto.html",[35,0.118,923,2.579]],["body/classes/PagedTrackOutputDto.html",[3,0.181,4,0.163,5,0.163,14,0.013,15,0.378,20,0.226,25,1.207,32,0.008,33,0.01,34,0.008,35,0.219,37,1.107,43,1.383,53,2.121,352,2.292,506,3.246,515,3.884,516,2.488,619,2.386,635,2.488,655,2.292,660,2.488,668,3.561,669,2.598,670,2.998,671,3.353,672,3.353,720,4.796,721,3.84,758,2.998,923,4.188,924,4.172,925,4.617]],["title/classes/PagedUserOutputDto.html",[35,0.118,926,2.579]],["body/classes/PagedUserOutputDto.html",[3,0.169,4,0.152,5,0.152,14,0.013,15,0.379,20,0.217,25,1.155,32,0.008,33,0.01,34,0.008,35,0.213,37,1.033,43,1.461,52,1.491,53,1.979,57,1.979,76,3.782,352,2.139,372,3.023,444,2.798,506,3.107,515,4.1,516,2.322,635,2.322,655,2.139,668,3.409,669,2.425,670,2.798,765,2.537,926,4.009,927,3.893,928,5.52,929,4.308,930,4.308,931,6.091,932,3.893,933,3.893,934,4.308,935,3.583,936,3.893,937,4.308]],["title/classes/PasswordToken.html",[35,0.118,938,3.208]],["body/classes/PasswordToken.html",[3,0.091,4,0.082,5,0.082,9,0.441,10,0.827,13,0.791,14,0.013,15,0.199,17,2.478,20,0.091,21,0.777,25,0.746,26,1.234,32,0.004,33,0.006,34,0.004,35,0.077,37,0.557,43,1.041,44,2.016,46,1.464,61,1.95,101,1.193,104,1.576,108,2.424,156,2.612,167,2.957,200,2.866,220,2.154,256,2.759,258,1.93,283,2.443,307,2.866,355,4.47,378,1.993,452,3.221,457,1.577,508,2.071,509,1.701,518,4.144,521,2.443,522,2.443,523,2.443,524,3.336,525,2.974,526,2.443,527,2.974,528,2.974,529,2.974,532,2.988,533,3.8,535,3.957,536,3.162,537,3.336,547,2.974,548,2.74,558,1.507,563,2.443,638,2.589,641,3.805,642,1.686,643,1.686,644,1.686,645,1.686,646,1.686,647,1.686,648,1.686,649,1.686,650,1.686,651,1.686,652,1.686,653,1.686,654,1.686,657,2.589,938,3.221,939,2.321,940,1.93,941,2.661,942,2.661,943,2.097,944,2.661,945,2.321,946,2.661,947,3.564,948,2.661,949,1.93,950,2.321,951,2.661,952,2.321]],["title/controllers/ProfileController.html",[7,1.835,953,2.953]],["body/controllers/ProfileController.html",[3,0.155,4,0.139,5,0.139,7,2.039,9,0.401,13,0.462,14,0.013,15,0.377,20,0.155,32,0.007,33,0.009,34,0.007,35,0.173,44,1.235,46,0.854,52,1.365,57,1.812,61,1.194,74,1.683,75,1.046,85,1.081,99,2.22,101,1.744,104,1.276,107,3.28,108,1.365,109,1.623,152,1.623,156,2.145,177,3.944,178,2.897,186,5.274,187,4.807,194,2.933,220,2.587,228,2.865,234,2.703,242,3.384,243,3.28,266,2.126,516,2.126,599,2.561,614,3.053,765,2.323,953,4.334,954,3.944,955,4.522,956,5.974,957,4.522,958,4.522,959,4.522,960,5.212,961,4.522,962,4.522,963,4.522,964,4.522,965,4.522,966,4.522,967,4.522,968,4.522,969,4.522,970,4.522,971,4.522,972,4.522]],["title/modules/ProfileModule.html",[111,1.271,127,2.749]],["body/modules/ProfileModule.html",[3,0.167,4,0.15,5,0.15,14,0.013,15,0.356,20,0.167,32,0.007,33,0.01,34,0.007,35,0.141,85,1.166,99,3.081,111,2.168,113,2.199,114,2.394,115,2.627,116,2.627,117,2.394,118,3.565,119,3.407,127,5.456,130,4.64,131,3.381,132,2.505,133,2.394,135,3.381,150,3.844,242,4.673,243,3.538,953,5.035,973,4.254,974,4.877,975,4.254,976,4.254,977,4.877,978,4.877]],["title/classes/RegisterUserDto.html",[35,0.118,196,2.433]],["body/classes/RegisterUserDto.html",[3,0.179,4,0.161,5,0.161,9,0.465,10,1.329,13,0.535,14,0.013,15,0.349,20,0.225,25,0.956,26,1.582,32,0.008,33,0.01,34,0.008,35,0.208,37,1.096,43,1.374,44,1.431,46,0.99,52,1.582,53,2.099,108,1.582,196,3.927,199,3.538,213,3.523,241,3.132,281,4.13,444,2.968,457,2.022,508,2.181,509,2.181,763,3.801,764,4.13,765,2.691,766,4.13,979,5.178,980,5.73,981,5.239,982,4.57]],["title/classes/RegisterUserResDto.html",[35,0.118,199,2.749]],["body/classes/RegisterUserResDto.html",[3,0.18,4,0.162,5,0.162,9,0.466,10,1.332,13,0.537,14,0.013,15,0.35,20,0.225,25,0.96,26,1.987,32,0.008,33,0.01,34,0.008,35,0.208,37,1.1,43,1.1,46,0.993,52,1.587,53,2.107,108,2.17,196,3.142,199,4.445,213,2.581,241,3.142,281,5.665,444,2.978,457,2.029,508,2.189,509,2.189,763,3.814,764,4.144,765,2.7,766,4.144,979,5.189,980,4.586,982,4.586,983,5.257]],["title/classes/ResetPassInput.html",[35,0.118,203,2.749]],["body/classes/ResetPassInput.html",[3,0.182,4,0.163,5,0.163,9,0.471,10,1.34,13,0.676,14,0.013,15,0.322,20,0.182,25,1.209,32,0.008,33,0.01,34,0.008,35,0.192,37,1.111,43,1.511,44,1.809,46,1.252,48,5.959,53,2.128,203,4.474,216,5.105,255,4.633,283,3.96,319,5.691,641,2.607,863,4.633,984,5.779,985,4.633,986,5.311,987,5.311]],["title/guards/RolesGuard.html",[471,3.208,600,2.433]],["body/guards/RolesGuard.html",[3,0.154,4,0.138,5,0.138,9,0.399,13,0.608,14,0.013,15,0.369,20,0.154,26,1.797,32,0.007,33,0.009,34,0.007,35,0.13,46,1.125,61,1.572,70,2.207,74,2.215,75,1.377,85,1.075,86,1.947,101,1.737,104,1.269,107,3.261,109,2.136,146,2.547,152,2.395,156,1.614,168,2.297,187,4.019,221,2.027,234,2.687,372,2.577,419,3.77,420,3.543,421,3.543,422,3.036,444,2.547,472,3.543,474,5.598,478,4.691,479,5.598,481,3.543,484,3.921,486,3.543,490,3.921,597,3.558,600,3.558,988,3.921,989,4.495,990,7.591,991,4.495,992,4.495,993,3.921,994,4.495,995,4.495,996,4.495]],["title/injectables/SessionSerializer.html",[168,1.571,346,2.749]],["body/injectables/SessionSerializer.html",[3,0.155,4,0.139,5,0.139,9,0.401,13,0.61,14,0.013,15,0.325,20,0.155,25,1.091,32,0.007,33,0.009,34,0.007,35,0.131,46,1.129,61,1.578,62,4.334,74,2.223,75,1.382,85,1.081,101,1.744,104,1.687,168,2.306,169,2.561,220,3.611,221,2.039,332,3.28,346,4.034,350,3.053,548,3.494,849,4.334,997,3.944,998,6.691,999,5.974,1000,5.974,1001,5.974,1002,7.603,1003,7.118,1004,5.974,1005,4.522,1006,5.974,1007,4.522,1008,5.974,1009,4.522]],["title/modules/SharedModule.html",[111,1.271,128,2.749]],["body/modules/SharedModule.html",[3,0.204,4,0.184,5,0.184,14,0.013,15,0.29,20,0.204,32,0.009,33,0.011,34,0.009,35,0.173,85,1.426,111,2.221,113,2.689,118,3.064,119,2.928,128,4.802,135,3.213,1010,5.964,1011,7.111]],["title/classes/TemporaryToken.html",[35,0.118,355,2.749]],["body/classes/TemporaryToken.html",[3,0.082,4,0.074,5,0.074,9,0.468,10,0.762,13,0.797,14,0.013,15,0.226,17,2.407,20,0.129,21,0.7,25,0.688,26,1.138,32,0.004,33,0.006,34,0.004,35,0.07,37,0.502,43,1.2,44,1.966,46,1.437,57,0.961,61,1.902,101,1.1,104,1.49,108,2.426,156,2.708,167,3.128,200,2.746,213,1.177,220,2.759,221,1.081,256,3.874,283,2.783,307,2.975,355,2.545,378,1.866,452,4.16,457,1.455,508,1.569,509,1.569,518,4.157,521,2.253,522,2.253,523,2.253,524,3.155,525,2.783,526,2.253,527,2.783,528,2.783,529,2.783,532,2.863,533,3.641,535,4.153,536,2.99,537,3.155,547,2.783,548,2.591,557,3.635,558,1.358,563,3.641,638,3.635,641,3.585,642,1.519,643,1.519,644,1.519,645,1.519,646,1.519,647,1.519,648,1.519,649,1.519,650,1.519,651,1.519,652,1.519,653,1.519,654,1.519,656,1.619,657,2.95,705,1.519,935,2.734,940,1.739,943,1.89,945,2.091,947,3.287,949,1.739,950,2.091,952,2.091,1012,4.522,1013,2.397,1014,2.397,1015,2.397,1016,2.397,1017,2.091,1018,2.091,1019,2.397]],["title/classes/Track.html",[35,0.118,1020,2.579]],["body/classes/Track.html",[3,0.092,4,0.082,5,0.082,9,0.443,10,0.83,13,0.744,14,0.013,15,0.243,17,2.481,20,0.092,21,0.781,25,0.749,26,1.239,32,0.004,33,0.006,34,0.004,35,0.078,37,0.56,43,1.263,44,1.955,46,1.443,61,1.807,101,1.198,104,1.58,108,2.407,156,2.862,167,3.256,200,3.085,307,2.523,352,1.158,378,2,457,1.584,508,1.708,509,1.708,518,4.232,521,2.452,522,2.452,523,2.452,524,3.345,525,2.983,526,2.452,527,2.983,528,2.983,529,2.983,532,2.994,533,3.808,535,3.808,536,3.17,537,3.345,547,2.983,548,2.748,557,3.162,558,1.515,563,2.452,619,2.523,635,2.631,636,4.06,637,4.06,638,3.824,639,3.234,641,3.674,642,1.694,643,1.694,644,1.694,645,1.694,646,1.694,647,1.694,648,1.694,649,1.694,650,1.694,651,1.694,652,1.694,653,1.694,654,1.694,655,1.158,656,1.806,657,1.694,658,2.108,660,2.346,709,2.333,1020,2.599,1021,2.333,1022,2.674,1023,2.674]],["title/classes/TrackDto.html",[35,0.118,758,2.306]],["body/classes/TrackDto.html",[3,0.148,4,0.133,5,0.133,9,0.382,10,1.17,13,0.744,14,0.013,15,0.354,20,0.198,25,1.192,32,0.007,33,0.009,34,0.007,35,0.202,37,0.901,43,1.524,44,1.989,46,1.376,53,1.726,108,2.264,307,2.608,352,1.865,457,2.233,506,3.681,508,2.409,509,2.409,510,3.907,512,2.909,515,3.518,516,2.025,619,2.945,635,2.025,641,3.207,655,1.865,660,3.07,661,3.758,665,3.125,666,3.125,667,3.125,668,3.116,669,2.115,670,2.44,671,2.729,672,2.729,720,4.197,721,3.125,758,3.277,923,2.729,924,3.396,925,3.758,1024,4.308,1025,4.308,1026,4.308]],["title/classes/TracksController.html",[35,0.118,1027,2.953]],["body/classes/TracksController.html",[3,0.12,4,0.108,5,0.108,9,0.311,13,0.739,14,0.013,15,0.376,18,1.355,20,0.12,21,1.024,25,0.916,32,0.005,33,0.008,34,0.005,35,0.102,37,0.734,44,0.958,46,0.948,52,1.059,58,3.283,61,1.325,67,4.05,70,1.723,74,1.867,75,1.161,84,1.988,85,0.839,101,1.465,104,0.991,109,1.26,152,1.801,178,2.536,192,3,194,2.463,200,2.262,221,1.582,222,2.37,223,3.388,226,3.388,228,2.223,231,4.316,266,2.359,269,2.37,271,3.179,274,1.988,276,2.37,277,2.37,372,1.519,376,2.703,377,1.89,378,1.406,416,2.37,495,1.988,498,1.803,500,1.988,502,1.988,504,1.988,581,3.955,586,2.37,588,2.546,590,2.546,591,2.546,592,2.766,595,3,597,2.098,598,2.546,599,1.988,600,3,601,2.546,609,3.388,610,4.249,611,2.546,613,2.546,614,2.37,615,2.546,616,2.546,617,2.546,619,2.262,622,2.546,739,3.061,740,3.061,755,4.75,758,3.621,923,3.179,960,4.377,1020,3.711,1027,3.64,1028,2.766,1029,3.509,1030,4.637,1031,3.509,1032,5.018,1033,3.509,1034,3.509,1035,3.061,1036,3.061,1037,3.509,1038,3.509,1039,3.061,1040,3.061,1041,3.509,1042,3.509]],["title/modules/TracksModule.html",[111,1.271,129,2.749]],["body/modules/TracksModule.html",[3,0.159,4,0.142,5,0.142,14,0.013,15,0.372,20,0.159,32,0.007,33,0.009,34,0.007,35,0.134,75,1.071,85,1.107,99,2.273,111,2.114,113,2.087,114,2.273,115,2.494,116,2.494,117,2.273,118,3.477,119,3.323,129,5.266,131,3.269,132,2.378,133,2.273,135,2.494,138,2.767,139,2.623,152,1.662,360,2.933,362,2.767,626,4.097,627,3.358,632,3.126,633,3.358,1020,2.933,1027,4.402,1030,5.972,1039,4.038,1040,4.038,1043,4.038,1044,4.038,1045,4.038,1046,3.649,1047,4.63,1048,5.335,1049,4.038,1050,4.038]],["title/classes/User.html",[35,0.118,220,1.762]],["body/classes/User.html",[3,0.06,4,0.054,5,0.054,9,0.333,10,0.59,11,2.722,13,0.741,14,0.013,15,0.284,17,2.491,20,0.1,21,0.851,25,0.532,26,1.322,32,0.003,33,0.004,34,0.003,35,0.085,37,0.365,43,1.405,44,1.919,46,1.432,57,1.755,61,1.656,72,1.37,75,0.674,85,0.418,101,0.851,104,1.576,108,2.419,109,1.046,156,2.849,167,3.161,178,0.756,200,2.969,213,1.842,220,1.624,266,0.821,274,0.99,307,2.372,317,1.18,352,0.756,372,2.108,378,1.503,412,1.377,428,1.524,430,1.377,444,2.125,457,1.125,460,3.273,508,1.214,509,1.214,516,0.821,518,3.911,521,1.743,522,1.743,523,1.743,524,2.618,525,2.243,526,1.743,527,2.243,528,2.243,529,2.243,530,2.543,532,2.624,533,3.748,535,3.145,536,2.481,537,2.911,547,2.243,548,2.872,557,3.849,558,0.99,561,1.377,563,3.497,564,1.524,577,1.524,635,2.75,636,3.817,637,3.817,638,3.536,641,3.297,642,1.107,643,1.107,644,1.107,645,1.107,646,1.107,647,1.107,648,1.107,649,1.107,650,1.107,651,1.107,652,1.107,653,1.107,654,1.107,655,0.756,656,1.18,657,1.107,668,1.57,705,1.847,849,1.267,932,2.957,933,2.957,935,2.115,936,2.957,943,1.377,1051,1.377,1052,3.752,1053,3.752,1054,4.38,1055,4.38,1056,3.752,1057,2.915,1058,1.747,1059,1.747,1060,1.747,1061,1.747,1062,1.747,1063,1.747,1064,1.747,1065,1.747,1066,1.747,1067,1.747,1068,1.747,1069,1.747,1070,1.747,1071,2.915,1072,2.543,1073,1.747,1074,1.747,1075,1.747,1076,1.747,1077,1.747,1078,2.915,1079,1.747,1080,3.752,1081,1.747,1082,2.543,1083,2.543,1084,2.543,1085,1.747,1086,2.915,1087,1.747,1088,1.747,1089,1.747,1090,4.38,1091,1.747,1092,1.747,1093,1.747,1094,1.747,1095,1.747,1096,1.747]],["title/classes/UserDto.html",[35,0.118,765,2.091]],["body/classes/UserDto.html",[3,0.13,4,0.117,5,0.117,9,0.337,10,1.074,13,0.757,14,0.013,15,0.351,17,1.317,20,0.182,25,1.117,32,0.006,33,0.008,34,0.006,35,0.192,37,0.795,43,1.55,44,2.023,46,1.4,52,1.148,53,1.523,57,2.452,61,1.402,76,3.174,108,2.18,307,2.394,352,1.646,372,2.868,444,3.466,457,2.05,506,3.544,508,2.211,509,2.211,510,3.586,512,2.567,515,3.754,516,1.787,532,1.787,635,1.787,641,3.004,655,1.646,665,2.758,666,2.758,667,2.758,668,2.86,669,1.866,670,2.153,765,2.728,926,2.408,927,2.996,928,4.632,929,3.316,930,3.316,931,5.338,932,4.823,933,4.823,934,3.316,935,2.758,936,4.185,937,3.316,1097,3.801,1098,3.801,1099,5.31,1100,3.801,1101,3.801,1102,3.801,1103,3.801,1104,3.801]],["title/classes/UsersController.html",[35,0.118,1105,2.953]],["body/classes/UsersController.html",[3,0.12,4,0.108,5,0.108,9,0.312,13,0.74,14,0.013,15,0.377,18,1.358,20,0.12,21,1.027,25,0.917,32,0.005,33,0.008,34,0.005,35,0.102,37,0.736,44,0.96,46,0.95,52,1.062,57,1.409,58,3.287,61,1.327,67,4.054,70,1.727,74,1.87,75,1.162,84,1.992,85,0.841,101,1.467,104,0.993,108,1.062,109,1.262,152,1.804,178,2.539,192,3.004,194,2.467,200,2.266,220,2.539,222,2.375,223,3.394,226,3.394,228,2.228,231,4.321,241,2.102,242,3.988,266,1.653,269,2.375,271,3.184,272,2.772,274,1.992,276,2.375,277,2.375,372,1.523,374,2.228,375,2.228,376,2.707,377,1.895,378,1.409,389,3.068,416,2.375,495,1.992,498,1.807,500,1.992,502,1.992,504,1.992,581,3.96,586,2.375,588,2.551,590,2.551,591,2.551,595,3.004,597,2.102,598,2.551,599,1.992,600,3.004,601,2.551,609,4.321,611,2.551,613,2.551,614,2.375,615,2.551,616,2.551,617,2.551,619,1.586,622,2.551,758,3.322,761,4.754,765,2.582,926,3.184,1035,3.068,1036,3.068,1105,3.646,1106,2.772,1107,3.517,1108,3.517,1109,3.517,1110,3.517,1111,3.517,1112,3.068,1113,3.068,1114,3.517,1115,3.517,1116,3.517]],["title/modules/UsersModule.html",[111,1.271,130,2.433]],["body/modules/UsersModule.html",[3,0.159,4,0.142,5,0.142,14,0.013,15,0.372,20,0.159,32,0.007,33,0.009,34,0.007,35,0.134,75,1.071,85,1.107,99,2.273,111,2.114,113,2.087,114,2.273,115,2.494,116,2.494,117,2.273,118,3.477,119,3.323,130,4.662,131,3.269,132,2.378,133,2.273,135,2.494,138,2.767,139,2.623,152,1.662,220,2.005,242,4.663,360,2.933,362,2.767,626,4.097,627,3.358,632,3.126,633,3.358,1105,4.402,1112,4.038,1113,4.038,1117,4.63,1118,4.63,1119,4.63,1120,3.649,1121,4.63,1122,5.335,1123,4.038,1124,4.038]],["title/classes/ValidateTokenInput.html",[35,0.118,216,2.749]],["body/classes/ValidateTokenInput.html",[3,0.188,4,0.169,5,0.169,9,0.486,10,1.366,13,0.559,14,0.013,15,0.356,20,0.188,25,1,32,0.008,33,0.01,34,0.008,35,0.196,37,1.147,43,1.413,44,1.496,46,1.035,48,5.772,51,3.276,52,1.654,53,2.196,54,3.104,55,4.78,56,4.78,57,2.196,216,4.561,283,4.377,1125,5.892,1126,4.78,1127,5.48]],["title/coverage.html",[1128,4.856]],["body/coverage.html",[0,1.664,1,1.194,5,0.054,6,2.746,7,2.753,8,2.746,13,0.181,14,0.013,16,0.831,18,1.893,21,0.516,24,1.194,27,1.194,32,0.003,33,0.005,34,0.003,35,0.23,36,1.283,38,1.543,39,1.543,54,1.002,58,0.909,59,1.543,60,1.543,86,0.766,98,1.283,100,1.543,105,1.121,111,0.552,117,0.868,134,2.322,147,1.394,153,1.989,161,1.761,168,2.496,170,1.543,175,1.283,176,1.543,196,1.057,199,1.194,203,1.194,216,1.194,220,0.766,238,1.057,242,1.002,244,1.057,246,1.283,250,1.194,324,1.194,325,1.543,345,1.194,346,1.194,347,1.283,348,1.394,351,1.283,355,1.194,367,1.121,368,2.746,369,2.746,373,1.121,379,1.543,415,1.394,417,1.394,419,1.121,471,2.322,473,1.543,491,1.194,492,2.981,493,2.556,494,2.746,496,1.194,497,1.194,506,0.868,507,1.543,518,0.953,519,1.543,579,1.283,580,2.322,581,2.556,583,1.283,587,1.283,589,1.057,595,1.057,597,1.057,599,1.002,600,1.057,603,1.121,605,1.121,625,1.394,626,1.194,629,1.394,634,1.543,655,0.766,659,2.322,669,0.868,674,2.746,678,1.121,700,1.194,701,1.543,705,5.341,711,1.121,712,2.322,723,1.194,725,1.283,726,1.543,728,1.283,731,1.283,744,1.394,746,1.394,749,1.543,750,1.543,752,1.543,753,1.543,755,1.194,756,1.543,757,1.543,758,1.002,761,1.194,762,1.543,763,2.746,765,0.909,768,2.984,769,2.984,777,1.394,778,1.394,779,1.394,783,1.394,784,1.543,797,1.394,798,1.543,799,1.543,828,1.394,829,1.543,842,1.394,843,2.322,844,2.322,849,3.202,851,1.543,852,1.543,860,1.543,861,1.543,862,1.543,879,2.322,887,1.543,923,1.121,924,2.322,926,1.121,927,2.322,938,1.394,939,1.543,940,2.137,953,1.283,954,1.543,979,2.322,984,1.543,985,1.543,988,1.543,997,1.543,1012,1.394,1020,1.121,1021,1.543,1027,1.283,1028,2.322,1030,1.283,1046,1.394,1048,1.394,1051,1.394,1105,1.283,1106,2.322,1120,1.394,1122,1.394,1125,1.543,1126,1.543,1128,1.543,1129,1.394,1130,1.769,1131,1.769,1132,6.855,1133,7.635,1134,7.988,1135,1.769,1136,2.946,1137,1.543,1138,1.543,1139,4.414,1140,6.612,1141,3.785,1142,3.785,1143,1.769,1144,1.769,1145,5.294,1146,1.769,1147,1.769,1148,1.769,1149,5.294,1150,1.769,1151,2.946,1152,2.322,1153,3.785,1154,2.57,1155,1.543,1156,1.543,1157,1.543,1158,1.543,1159,1.543,1160,1.394,1161,1.543,1162,1.543,1163,1.543,1164,1.543,1165,1.543,1166,1.543,1167,1.543,1168,1.769,1169,1.543,1170,1.769,1171,1.769,1172,1.769,1173,2.57,1174,2.57,1175,1.543,1176,1.543,1177,1.543,1178,1.543,1179,1.543,1180,1.769,1181,1.769,1182,1.769,1183,1.769,1184,1.769,1185,1.769,1186,1.769,1187,1.769]],["title/dependencies.html",[114,2.405,1188,3.393]],["body/dependencies.html",[14,0.013,32,0.006,33,0.009,34,0.006,35,0.163,52,1.252,53,1.662,85,0.992,114,2.036,137,3.617,139,2.349,234,4.109,334,3.269,350,2.8,366,4.444,411,3.269,412,3.269,413,3.008,414,3.617,424,3.617,425,3.617,516,1.949,558,2.349,560,3.617,772,3.617,785,3.617,856,3.617,871,5.588,899,4.918,901,3.617,993,3.617,1160,3.269,1189,4.147,1190,4.147,1191,4.147,1192,4.147,1193,4.147,1194,4.147,1195,4.147,1196,4.147,1197,7.189,1198,4.147,1199,4.147,1200,4.147,1201,4.147,1202,4.147,1203,4.147,1204,4.147,1205,4.147,1206,4.147,1207,4.147,1208,4.147,1209,4.147,1210,4.147,1211,4.147,1212,4.147,1213,4.147,1214,4.147,1215,4.147,1216,4.147,1217,5.638,1218,4.147,1219,4.147,1220,4.147,1221,4.147,1222,4.147,1223,4.147,1224,4.147,1225,4.147,1226,4.147,1227,4.147,1228,4.147,1229,4.147,1230,4.147,1231,4.147,1232,3.617,1233,4.147,1234,4.147,1235,4.147,1236,5.638,1237,4.147,1238,4.147,1239,4.147,1240,4.147,1241,4.147,1242,4.147,1243,4.147,1244,4.147,1245,4.147,1246,4.147]],["title/miscellaneous/enumerations.html",[1247,1.922,1248,4.273]],["body/miscellaneous/enumerations.html",[9,0.498,14,0.013,32,0.009,33,0.01,34,0.009,57,2.252,213,2.758,256,4.632,335,5.407,372,2.97,532,3.781,940,4.976,1012,4.429,1017,4.901,1018,4.901,1051,4.429,1082,5.984,1083,5.984,1084,5.984,1247,3.183,1248,4.901,1249,5.619,1250,5.619,1251,5.619,1252,5.619,1253,5.619,1254,5.619]],["title/miscellaneous/functions.html",[1247,1.922,1255,4.273]],["body/miscellaneous/functions.html",[9,0.483,13,0.687,14,0.012,32,0.008,33,0.01,34,0.008,61,1.928,74,2.716,75,1.688,104,2.061,117,3.584,498,2.795,595,4.02,669,3.302,843,4.289,844,5.301,949,4.879,1152,4.289,1155,4.747,1156,5.867,1157,5.867,1158,4.747,1247,3.082,1255,4.747,1256,5.441,1257,5.441,1258,4.747,1259,5.441,1260,5.441,1261,5.441,1262,5.441]],["title/index.html",[9,0.301,1263,2.96,1264,2.96]],["body/index.html",[4,0.135,14,0.009,32,0.007,33,0.009,34,0.007,66,3.833,133,2.878,187,2.967,303,5.113,374,2.783,632,2.967,1072,3.833,1129,3.463,1232,3.833,1265,6.596,1266,5.862,1267,5.862,1268,4.394,1269,5.862,1270,7.541,1271,4.394,1272,4.394,1273,4.394,1274,4.394,1275,4.394,1276,5.862,1277,4.394,1278,5.862,1279,4.394,1280,4.394,1281,3.833,1282,4.394,1283,4.394,1284,4.394,1285,5.754,1286,4.394,1287,4.394,1288,4.394,1289,4.394,1290,4.394,1291,4.394,1292,4.394,1293,4.394,1294,4.394,1295,4.394,1296,4.394,1297,3.833,1298,4.394,1299,4.394,1300,4.394,1301,4.394,1302,4.394,1303,5.862,1304,4.394,1305,4.394,1306,5.862,1307,4.394,1308,4.394,1309,4.394,1310,4.394,1311,4.394,1312,4.394,1313,4.394,1314,4.394,1315,3.833,1316,4.394,1317,4.394,1318,3.833,1319,4.394,1320,4.394,1321,4.394,1322,4.394,1323,4.394,1324,4.394,1325,4.394,1326,4.394,1327,4.394,1328,4.394,1329,4.394,1330,4.394,1331,5.862,1332,4.394,1333,4.394,1334,4.394,1335,4.394,1336,4.394,1337,4.394,1338,4.394,1339,4.394,1340,4.394,1341,4.394,1342,4.394,1343,4.394,1344,4.394,1345,4.394,1346,4.394,1347,4.394,1348,4.394,1349,4.394,1350,4.394,1351,4.394,1352,4.394,1353,4.394]],["title/license.html",[1263,2.96,1264,2.96,1354,2.96]],["body/license.html",[14,0.009,31,3.43,32,0.007,33,0.009,34,0.007,133,2.321,234,2.826,824,5.367,1129,3.727,1281,7.008,1297,4.125,1315,4.125,1354,4.125,1355,4.728,1356,6.838,1357,4.728,1358,4.728,1359,4.728,1360,4.728,1361,4.728,1362,4.728,1363,4.728,1364,4.728,1365,6.152,1366,4.728,1367,4.728,1368,4.728,1369,6.838,1370,4.728,1371,6.152,1372,4.728,1373,4.728,1374,6.152,1375,4.728,1376,4.728,1377,4.728,1378,4.728,1379,4.728,1380,4.728,1381,4.728,1382,6.152,1383,4.728,1384,4.728,1385,4.728,1386,4.728,1387,4.728,1388,4.728,1389,6.152,1390,6.152,1391,4.728,1392,4.728,1393,4.728,1394,4.728,1395,4.728,1396,4.728,1397,4.728,1398,4.728,1399,4.728,1400,4.728,1401,4.728,1402,4.728,1403,4.728,1404,4.728,1405,4.728,1406,4.728,1407,4.728,1408,4.728,1409,4.728,1410,4.728,1411,4.728,1412,4.728,1413,4.728,1414,4.728,1415,4.728,1416,4.728,1417,4.728,1418,4.728,1419,4.728]],["title/modules.html",[113,2.51]],["body/modules.html",[14,0.01,32,0.008,33,0.01,34,0.008,112,3.961,113,2.462,123,3.687,124,3.687,125,3.687,126,3.687,127,3.687,128,3.687,129,3.687,130,3.264,767,4.304,915,5.88,1285,7.133,1420,8.177,1421,8.177,1422,8.295,1423,6.74]],["title/overview.html",[1424,4.856]],["body/overview.html",[2,1.4,14,0.013,32,0.005,33,0.008,34,0.005,37,0.731,99,1.715,105,3.701,111,1.091,112,5.935,113,1.575,114,1.715,115,1.882,116,1.882,117,1.715,118,1.794,119,1.715,120,3.047,121,3.047,122,3.047,123,5.481,124,4.308,125,4.743,126,4.743,127,4.995,128,3.945,129,4.743,130,4.422,131,2.694,132,1.794,133,1.715,169,1.979,238,4.422,242,4.329,244,4.323,317,2.359,324,3.945,341,3.047,343,3.047,344,3.047,345,3.945,346,3.945,347,4.238,472,2.754,583,4.627,623,3.047,624,3.047,728,5.247,741,3.047,742,3.047,743,3.047,882,3.047,883,3.047,973,3.047,975,3.047,976,3.047,1030,5.247,1043,3.047,1044,3.047,1045,3.047,1424,3.047,1425,3.047,1426,3.493,1427,3.493,1428,3.047,1429,3.493]],["title/miscellaneous/typealiases.html",[1247,1.922,1430,4.898]],["body/miscellaneous/typealiases.html",[9,0.515,13,0.593,14,0.012,32,0.009,33,0.011,34,0.009,561,5.517,847,6.105,1247,3.29,1431,5.808,1432,6.998,1433,8.199,1434,6.998,1435,6.998,1436,6.998,1437,6.998,1438,5.808,1439,6.998,1440,6.998]],["title/miscellaneous/variables.html",[1247,1.922,1441,4.273]],["body/miscellaneous/variables.html",[9,0.139,13,0.542,14,0.013,16,0.739,17,2.576,18,2.05,21,1.195,26,1.82,32,0.002,33,0.004,34,0.002,43,1.169,57,0.63,72,0.739,75,1.06,109,2.006,111,0.833,134,1.239,147,2.739,152,1.247,153,2.765,154,1.371,155,1.371,156,2.454,157,1.371,158,1.371,159,1.371,160,1.371,161,1.594,162,1.371,163,2.102,164,2.102,165,2.102,166,2.102,167,2.744,178,0.681,213,0.772,220,0.681,227,1.14,266,0.739,283,0.939,317,1.061,348,1.239,351,2.52,360,2.904,361,1.371,362,2.74,363,1.371,364,1.371,365,1.371,366,1.239,367,2.594,370,3.326,371,3.326,372,0.681,373,1.69,374,1.69,375,1.69,376,0.847,377,2.205,378,1.64,413,1.14,415,2.102,417,2.102,495,1.968,498,1.785,500,1.968,502,1.968,504,1.968,532,3.572,580,1.239,581,3.364,589,2.077,595,2.077,597,3.604,603,0.996,605,0.996,609,3.774,610,2.97,619,0.709,625,1.239,629,2.102,630,1.371,631,1.371,655,1.155,660,0.739,679,1.14,683,1.801,684,2.97,705,0.996,744,1.239,746,2.102,747,1.371,748,1.371,755,1.801,758,0.89,761,1.801,765,0.807,768,1.239,769,3.227,770,1.371,777,2.739,778,2.102,779,2.102,780,1.371,781,1.371,782,1.371,821,4.346,923,0.996,926,0.996,949,1.935,1020,0.996,1028,1.239,1046,1.239,1048,2.102,1049,1.371,1050,1.371,1106,1.239,1120,1.239,1122,2.102,1123,1.371,1124,1.371,1137,1.371,1138,2.327,1152,1.239,1154,1.371,1159,1.371,1160,2.102,1161,2.327,1162,2.327,1163,1.371,1164,2.327,1165,1.371,1166,2.327,1167,1.371,1169,1.371,1173,1.371,1174,3.031,1175,3.999,1176,2.327,1177,1.371,1178,2.327,1179,1.371,1247,0.89,1258,1.371,1318,1.371,1425,1.371,1428,4.875,1441,1.371,1442,1.572,1443,3.474,1444,1.572,1445,1.572,1446,1.572,1447,1.572,1448,1.572,1449,1.572,1450,1.572,1451,2.667,1452,1.572,1453,1.572,1454,3.474,1455,2.667,1456,1.572,1457,1.572,1458,1.572,1459,1.572,1460,1.572,1461,2.667,1462,1.572,1463,4.584,1464,4.094,1465,2.667,1466,2.667,1467,1.572,1468,1.572,1469,1.572,1470,1.572,1471,1.572,1472,1.572,1473,1.572,1474,3.474,1475,1.572,1476,1.572,1477,1.572,1478,1.572,1479,1.572,1480,1.572,1481,1.572,1482,1.572,1483,1.572,1484,1.572,1485,1.572,1486,1.572,1487,1.572,1488,1.572,1489,2.667,1490,2.667,1491,2.667,1492,2.667,1493,1.572,1494,1.572,1495,1.572,1496,1.572,1497,1.572,1498,1.572,1499,1.572,1500,2.667,1501,1.572,1502,2.667,1503,2.667,1504,2.667,1505,2.667,1506,2.667,1507,2.667,1508,2.667,1509,2.667,1510,2.667,1511,2.667,1512,1.572,1513,2.667,1514,1.572,1515,1.572,1516,2.667,1517,1.572,1518,1.572,1519,2.667,1520,1.572,1521,1.572,1522,2.667,1523,1.572,1524,1.572,1525,2.667,1526,1.572,1527,1.572,1528,1.572,1529,1.572,1530,1.572,1531,1.572,1532,1.572,1533,1.572,1534,1.572,1535,4.584,1536,1.572,1537,1.572,1538,1.572,1539,1.572,1540,1.572,1541,1.572,1542,1.572,1543,1.572,1544,1.572,1545,1.572,1546,1.572,1547,1.572,1548,1.572,1549,1.572,1550,1.572,1551,1.572,1552,1.572,1553,1.572,1554,1.572,1555,1.572,1556,1.572,1557,1.572,1558,1.572,1559,1.572,1560,1.572]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":705,"title":{},"body":{"classes/Course.html":{},"classes/FindDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1168,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1132,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1139,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1153,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":657,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["1.0.0",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["1.8.10",{"_index":1194,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":788,"title":{},"body":{"classes/FindDto.html":{}}}],["11",{"_index":1426,"title":{},"body":{"overview.html":{}}}],["12",{"_index":1183,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1429,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1180,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1428,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":1357,"title":{},"body":{"license.html":{}}}],["21",{"_index":1170,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["3",{"_index":1425,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["3.23.0",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1171,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["3/16",{"_index":1181,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["3/24",{"_index":1184,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":1427,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["4.5.10",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1205,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["5.9.18",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.8",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["60000",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":571,"title":{},"body":{"classes/BaseEntity.html":{}}}],["_${propertykey",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abortearly",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":1297,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstractcontroller",{"_index":1157,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontroller(options",{"_index":1260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrolleroptions",{"_index":1,"title":{"interfaces/AbstractControllerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithauthoptions",{"_index":24,"title":{"interfaces/AbstractControllerWithAuthOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithswaggeroptions",{"_index":27,"title":{"interfaces/AbstractControllerWithSwaggerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractdocument",{"_index":1432,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["access",{"_index":825,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["accessors",{"_index":530,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["account",{"_index":919,"title":{},"body":{"injectables/MailService.html":{}}}],["acctverifydto",{"_index":36,"title":{"classes/AcctVerifyDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["achieving",{"_index":1294,"title":{},"body":{"index.html":{}}}],["action",{"_index":1413,"title":{},"body":{"license.html":{}}}],["activate",{"_index":527,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["addons/in",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":1084,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1431,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["amazing",{"_index":1301,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1380,"title":{},"body":{"license.html":{}}}],["api_auth_enabled",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":907,"title":{},"body":{"injectables/MailService.html":{}}}],["api_key_mailgun",{"_index":773,"title":{},"body":{"modules/DbTest.html":{}}}],["apibearerauth",{"_index":960,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["apiconflictresponse",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception",{"_index":58,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["apiexception})@apiresponse({type",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(authenticationguard",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(jwtauthguard",{"_index":591,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apiokresponse",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":76,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/CourseDto.html":{},"interfaces/IPagedListDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@expose",{"_index":510,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiresponse",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apiswaggeroperation",{"_index":1162,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiunauthorizedresponse",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_email",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":98,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appemail",{"_index":675,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["applicable",{"_index":1323,"title":{},"body":{"index.html":{}}}],["application",{"_index":1306,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":112,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":105,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectural",{"_index":1311,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":802,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":1417,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1351,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1366,"title":{},"body":{"license.html":{}}}],["async",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":18,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/MailService.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":55,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["auth.guard",{"_index":963,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth.guard.ts",{"_index":852,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:9",{"_index":853,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{}}}],["auth/auth.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards",{"_index":601,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["auth/guards/jwt",{"_index":962,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth/models/dto/auth.dto",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_guard_type",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":175,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1164,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":246,"title":{"guards/AuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["autherrors",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherrors.expired_token",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_login_attempt",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_token",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["autheventenum",{"_index":335,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["authguard",{"_index":855,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(auth_guard_type",{"_index":857,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authhandler",{"_index":324,"title":{"injectables/AuthHandler.html":{}},"body":{"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":123,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobj",{"_index":367,"title":{"interfaces/AuthObj.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authobj.create",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.delete",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.find",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.findbyid",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.update",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create?.length",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete?.length",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find?.length",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid?.length",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update?.length",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorize",{"_index":1166,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authors",{"_index":1406,"title":{},"body":{"license.html":{}}}],["authroles",{"_index":370,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":244,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":915,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["await",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["basecontrolleroptions",{"_index":491,"title":{"interfaces/BaseControllerOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithauthoptions",{"_index":496,"title":{"interfaces/BaseControllerWithAuthOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithswaggeropts",{"_index":497,"title":{"interfaces/BaseControllerWithSwaggerOpts.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecrudcontroller",{"_index":595,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["basecrudcontroller(options",{"_index":1261,"title":{},"body":{"miscellaneous/functions.html":{}}}],["basectrl",{"_index":581,"title":{},"body":{"classes/CategoriesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basedto",{"_index":506,"title":{"classes/BaseDto.html":{}},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["basedto:11",{"_index":667,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:14",{"_index":665,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:8",{"_index":666,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["baseentity",{"_index":518,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentity:12",{"_index":648,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:14",{"_index":643,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:16",{"_index":650,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:18",{"_index":647,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:20",{"_index":645,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:22",{"_index":644,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:24",{"_index":642,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:26",{"_index":649,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:44",{"_index":653,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:53",{"_index":654,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:62",{"_index":652,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:71",{"_index":651,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:9",{"_index":646,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseservice",{"_index":626,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["bcrypt",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintoken",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pw",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(plaintoken",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearerauthname",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1342,"title":{},"body":{"index.html":{}}}],["bring",{"_index":1299,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1422,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1420,"title":{},"body":{"modules.html":{}}}],["buildschema",{"_index":556,"title":{},"body":{"classes/BaseEntity.html":{}}}],["buildschema(this",{"_index":565,"title":{},"body":{"classes/BaseEntity.html":{}}}],["built",{"_index":1304,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["business",{"_index":337,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["c",{"_index":31,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"license.html":{}}}],["cache",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":474,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":478,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canlogin",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["career",{"_index":1289,"title":{},"body":{"index.html":{}}}],["catch",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/User.html":{}}}],["catch(error",{"_index":801,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":806,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories.controller",{"_index":628,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":602,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":579,"title":{"classes/CategoriesController.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":124,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":583,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":603,"title":{"classes/Category.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category.dto",{"_index":608,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{}}}],["category.dto.ts",{"_index":750,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.modelname",{"_index":630,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["category.schema",{"_index":631,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["categorydto",{"_index":589,"title":{"classes/CategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorymodel",{"_index":629,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryservice",{"_index":585,"title":{},"body":{"classes/CategoriesController.html":{}}}],["ccn",{"_index":174,"title":{},"body":{"injectables/AppService.html":{}}}],["charge",{"_index":1362,"title":{},"body":{"license.html":{}}}],["check",{"_index":1328,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1409,"title":{},"body":{"license.html":{}}}],["clan",{"_index":1266,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"modules/DbTest.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":37,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"overview.html":{}}}],["classtype",{"_index":847,"title":{},"body":{"interfaces/IPagedListDto.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":1313,"title":{},"body":{"index.html":{}}}],["client",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["client({transport",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["clientbaseurl",{"_index":40,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["clientredis",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":623,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_exports",{"_index":624,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":741,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_exports",{"_index":742,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_providers",{"_index":743,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":882,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":883,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":884,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_profilemodule",{"_index":973,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":975,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":974,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":976,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_tracksmodule",{"_index":1043,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_exports",{"_index":1044,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_providers",{"_index":1045,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1117,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_exports",{"_index":1118,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":1119,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1265,"title":{},"body":{"index.html":{}}}],["codeclannigeria",{"_index":1324,"title":{},"body":{"index.html":{}}}],["codeclannigeria.dev",{"_index":1290,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1288,"title":{},"body":{"index.html":{}}}],["columnsize",{"_index":655,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsize.length128",{"_index":709,"title":{},"body":{"classes/Course.html":{},"classes/Track.html":{}}}],["columnsize.length256",{"_index":710,"title":{},"body":{"classes/Course.html":{}}}],["columnsize.length32",{"_index":658,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Track.html":{}}}],["columnsize.length64",{"_index":1090,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":1309,"title":{},"body":{"index.html":{}}}],["community",{"_index":1270,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1310,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["comprised",{"_index":1271,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1327,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1388,"title":{},"body":{"license.html":{}}}],["config",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":87,"title":{},"body":{"classes/ApiException.html":{}}}],["configmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":86,"title":{"interfaces/Configuration.html":{}},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["configuration().appemail",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["configuration().isauthenabled",{"_index":486,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["configuration().jwtsecret",{"_index":878,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmation",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmed",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail",{"_index":1054,"title":{},"body":{"classes/User.html":{}}}],["conflictexception",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["conflictexception('email",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('user",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["connect",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["connection",{"_index":1418,"title":{},"body":{"license.html":{}}}],["console.log(context.switchtohttp().getrequest().sessionid",{"_index":858,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["const",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(authservice",{"_index":476,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(categoryservice",{"_index":582,"title":{},"body":{"classes/CategoriesController.html":{}}}],["constructor(courseservice",{"_index":727,"title":{},"body":{"classes/CoursesController.html":{}}}],["constructor(message",{"_index":71,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(private",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["constructor(protected",{"_index":611,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(reflector",{"_index":989,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(trackservice",{"_index":1029,"title":{},"body":{"classes/TracksController.html":{}}}],["constructor(usersservice",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["context",{"_index":481,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":995,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":484,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["contract",{"_index":1414,"title":{},"body":{"license.html":{}}}],["controller",{"_index":7,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('profile",{"_index":965,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller.interface.ts",{"_index":829,"title":{},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["controller.interface.ts:10",{"_index":839,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:11",{"_index":841,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:12",{"_index":833,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:8",{"_index":831,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:9",{"_index":836,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controllerauth",{"_index":373,"title":{"interfaces/ControllerAuth.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controllername",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.indexof('controller",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.substr",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":1382,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1365,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1356,"title":{},"body":{"license.html":{}}}],["course",{"_index":700,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["course.dto",{"_index":736,"title":{},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{}}}],["course.dto.ts",{"_index":753,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["course.modelname",{"_index":747,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["course.schema",{"_index":748,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["coursedto",{"_index":711,"title":{"classes/CourseDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["coursemodel",{"_index":746,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courses.controller",{"_index":745,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses.service",{"_index":733,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["courses/courses.module",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["coursescontroller",{"_index":725,"title":{"classes/CoursesController.html":{}},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["courseservice",{"_index":730,"title":{},"body":{"classes/CoursesController.html":{}}}],["coursesmodule",{"_index":125,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesservice",{"_index":728,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1128,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":376,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":617,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["create(input",{"_index":586,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["createcategorydto",{"_index":587,"title":{"classes/CreateCategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcoursedto",{"_index":731,"title":{"classes/CreateCourseDto.html":{}},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["created",{"_index":1282,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":508,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["createdby",{"_index":521,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["createdto",{"_index":500,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createtrackdto",{"_index":755,"title":{"classes/CreateTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtransport",{"_index":889,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":761,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crypto",{"_index":1080,"title":{},"body":{"classes/User.html":{}}}],["ctx",{"_index":807,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":811,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":810,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":1335,"title":{},"body":{"index.html":{}}}],["customdecorator",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customname",{"_index":950,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["damages",{"_index":1410,"title":{},"body":{"license.html":{}}}],["data",{"_index":331,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["database",{"_index":161,"title":{"interfaces/Database.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_host",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["date().gettime",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().toisostring",{"_index":94,"title":{},"body":{"classes/ApiException.html":{}}}],["date(date.now",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(new",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["db",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["dbfactory",{"_index":779,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver",{"_index":777,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver.geturi",{"_index":782,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["dbtest",{"_index":767,"title":{"modules/DbTest.html":{}},"body":{"modules/DbTest.html":{},"modules.html":{}}}],["deactivate",{"_index":528,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deal",{"_index":1368,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1419,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator(target",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":44,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/FindDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["default",{"_index":17,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth",{"_index":1175,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultauth.create.authroles",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.create.enableauth",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.authroles",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.enableauth",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.authroles",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.enableauth",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.authroles",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.enableauth",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.authroles",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.enableauth",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthobject",{"_index":16,"title":{"interfaces/DefaultAuthObject.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":365,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":46,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["delete",{"_index":378,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["delete(id",{"_index":832,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["deletedat",{"_index":522,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deletedby",{"_index":523,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deleteresulttype",{"_index":1434,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":660,"title":{},"body":{"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":999,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(user",{"_index":1001,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["desire",{"_index":1283,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1341,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1276,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1277,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1378,"title":{},"body":{"license.html":{}}}],["doc",{"_index":22,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["documentation",{"_index":1129,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentquery",{"_index":1439,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":1440,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["domain",{"_index":685,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{}}}],["done",{"_index":1002,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":1008,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["e",{"_index":1088,"title":{},"body":{"classes/User.html":{}}}],["email",{"_index":57,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email')@httpcode(httpstatus.ok",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["email?.tolowercase",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["email_token",{"_index":1018,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["emailparamname",{"_index":41,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["enableauth",{"_index":371,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["enableimplicitconversion",{"_index":972,"title":{},"body":{"controllers/ProfileController.html":{}}}],["encryptedtoken",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1275,"title":{},"body":{"index.html":{}}}],["engineers",{"_index":1278,"title":{},"body":{"index.html":{}}}],["enrollmentcount",{"_index":702,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["entity",{"_index":495,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["entitydto",{"_index":498,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IPagedListDto.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":935,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["enumerations",{"_index":1248,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":676,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["envvalidation",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1003,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error",{"_index":62,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":1004,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error.getstatus",{"_index":812,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.name",{"_index":818,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response",{"_index":822,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.error",{"_index":817,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.errors",{"_index":819,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.message",{"_index":823,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.name",{"_index":816,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.stack",{"_index":814,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorname",{"_index":815,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":63,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["errors/api",{"_index":805,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errortype",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["ethereal",{"_index":918,"title":{},"body":{"injectables/MailService.html":{}}}],["event",{"_index":1405,"title":{},"body":{"license.html":{}}}],["eventpattern",{"_index":333,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["eventpattern(autheventenum.userregistered",{"_index":329,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["exception",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":799,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":803,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.ts",{"_index":60,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["exception.ts:10",{"_index":79,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:12",{"_index":81,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:14",{"_index":77,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:16",{"_index":78,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:18",{"_index":83,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:20",{"_index":80,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:22",{"_index":73,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:8",{"_index":82,"title":{},"body":{"classes/ApiException.html":{}}}],["exceptionfilter",{"_index":800,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":668,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["excludeextraneousvalues",{"_index":971,"title":{},"body":{"controllers/ProfileController.html":{}}}],["executioncontext",{"_index":479,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["exist",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["exist.email",{"_index":1116,"title":{},"body":{"classes/UsersController.html":{}}}],["exist.id",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.name",{"_index":621,"title":{},"body":{"classes/CategoriesController.html":{}}}],["exist.title",{"_index":740,"title":{},"body":{"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["exist.token",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["expandvariables",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["expireafterseconds",{"_index":952,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expireat",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expired",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired_token",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinmins",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["exports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":515,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length128)@apiproperty",{"_index":713,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length32)@apiproperty()@isalphanumeric",{"_index":718,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length64",{"_index":1099,"title":{},"body":{"classes/UserDto.html":{}}}],["express",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["extractjwt",{"_index":869,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":875,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["failedsigninattempts",{"_index":1052,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false').default('true",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":1344,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1314,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["files",{"_index":1367,"title":{},"body":{"license.html":{}}}],["find",{"_index":374,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"classes/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":830,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findall(input",{"_index":834,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findbyid",{"_index":375,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["findbyid(input",{"_index":838,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["finddto",{"_index":783,"title":{"classes/FindDto.html":{}},"body":{"classes/FindDto.html":{},"coverage.html":{}}}],["findone",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstname",{"_index":932,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["fitness",{"_index":1401,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1321,"title":{},"body":{"index.html":{}}}],["following",{"_index":1387,"title":{},"body":{"license.html":{}}}],["forbiddenexception('invalid",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":1325,"title":{},"body":{"index.html":{}}}],["fortune",{"_index":1358,"title":{},"body":{"license.html":{}}}],["free",{"_index":1315,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":1274,"title":{},"body":{"index.html":{}}}],["full",{"_index":1072,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fullname",{"_index":1056,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":849,"title":{},"body":{"interfaces/IPagedListDto.html":{},"injectables/SessionSerializer.html":{},"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":1255,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1385,"title":{},"body":{"license.html":{}}}],["future",{"_index":1272,"title":{},"body":{"index.html":{}}}],["generaterandomtoken",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterandomtoken(64",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken(undefined",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth",{"_index":958,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getauthobj",{"_index":1176,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getauthtoken",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthtoken(user",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfullname",{"_index":1069,"title":{},"body":{"classes/User.html":{}}}],["gethello",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":1073,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass",{"_index":1077,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass(this",{"_index":1096,"title":{},"body":{"classes/User.html":{}}}],["getmodelname",{"_index":554,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getprofile",{"_index":956,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":967,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(req",{"_index":957,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getschema",{"_index":552,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getters",{"_index":567,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getting",{"_index":1263,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwelcome",{"_index":171,"title":{},"body":{"injectables/AppService.html":{}}}],["global",{"_index":1011,"title":{},"body":{"modules/SharedModule.html":{}}}],["goal",{"_index":1295,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1361,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1423,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":471,"title":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":472,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["handler",{"_index":340,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handlers/auth.handler",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{}}}],["handleuserregistered",{"_index":326,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handleuserregistered(data",{"_index":327,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["hapi/joi",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["hash",{"_index":1079,"title":{},"body":{"classes/User.html":{}}}],["hash(this.password",{"_index":1087,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1360,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1407,"title":{},"body":{"license.html":{}}}],["host",{"_index":682,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Mailer.html":{}}}],["host.switchtohttp",{"_index":808,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":797,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ethereal.email/message/waqkmgkddxqdoou",{"_index":922,"title":{},"body":{"injectables/MailService.html":{}}}],["httpstatus",{"_index":84,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.bad_request",{"_index":616,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.created",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.forbidden",{"_index":613,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.unauthorized",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpstatus[statuscode",{"_index":97,"title":{},"body":{"classes/ApiException.html":{}}}],["ibasecontroller",{"_index":828,"title":{"interfaces/IBaseController.html":{}},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["id",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseController.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":1130,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":876,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"guards/RolesGuard.html":{}}}],["implied",{"_index":1397,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["imports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1391,"title":{},"body":{"license.html":{}}}],["including",{"_index":1371,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["info.messageid",{"_index":913,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":641,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["injectable",{"_index":168,"title":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["injectables",{"_index":169,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{},"overview.html":{}}}],["inmemorydb",{"_index":778,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["innovators",{"_index":1273,"title":{},"body":{"index.html":{}}}],["input",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["input.email",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.email.tolowercase",{"_index":1115,"title":{},"body":{"classes/UsersController.html":{}}}],["input.name.touppercase",{"_index":620,"title":{},"body":{"classes/CategoriesController.html":{}}}],["input.title.touppercase",{"_index":739,"title":{},"body":{"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["interface.ts",{"_index":494,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":1075,"title":{},"body":{"classes/User.html":{}}}],["internalservererrorexception(e",{"_index":1089,"title":{},"body":{"classes/User.html":{}}}],["invalid_login_attempt",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_token",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ipagedlistdto",{"_index":842,"title":{"interfaces/IPagedListDto.html":{}},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{}}}],["isactive",{"_index":524,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isalphanumeric",{"_index":720,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["isauthenabled",{"_index":677,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["isauthenticationenabled",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isauthorizationenabled",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdeleted",{"_index":525,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isemail",{"_index":928,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isemailverified",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["isenum",{"_index":929,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isenum(userrole",{"_index":934,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isenum(userrole)@apiproperty({enum",{"_index":1102,"title":{},"body":{"classes/UserDto.html":{}}}],["isglobal",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isjson",{"_index":796,"title":{},"body":{"classes/FindDto.html":{}}}],["isjson()@isoptional",{"_index":791,"title":{},"body":{"classes/FindDto.html":{}}}],["ismongoid",{"_index":517,"title":{},"body":{"classes/BaseDto.html":{}}}],["ismongoid()@expose",{"_index":512,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["isnotempty",{"_index":48,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{}}}],["isoptional",{"_index":789,"title":{},"body":{"classes/FindDto.html":{}}}],["isoptional()@isjson",{"_index":793,"title":{},"body":{"classes/FindDto.html":{}}}],["issue",{"_index":1331,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1329,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":45,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["isurl()@maxlength(columnsize.length256)@expose",{"_index":716,"title":{},"body":{"classes/CourseDto.html":{}}}],["isvalid",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":845,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["joi.number().default(27017",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().default('redis://localhost:6379",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().required",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('true",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1349,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign(payload",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_secret",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_validity_hours",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":599,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":874,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtpayload",{"_index":419,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["jwtstrategy",{"_index":345,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidityhrs",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["key",{"_index":684,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1396,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":933,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["legend",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length1024",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length128",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length16",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length256",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length32",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length512",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length64",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length8",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":1337,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1411,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1408,"title":{},"body":{"license.html":{}}}],["license",{"_index":1354,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":785,"title":{},"body":{"classes/FindDto.html":{},"dependencies.html":{}}}],["limitation",{"_index":1372,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1398,"title":{},"body":{"license.html":{}}}],["list.dto.ts",{"_index":844,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["local",{"_index":1232,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["lockoutenddate",{"_index":1053,"title":{},"body":{"classes/User.html":{}}}],["logger",{"_index":332,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{}}}],["logger.debug(`message",{"_index":911,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`preview",{"_index":920,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(data",{"_index":339,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["logger.error(error",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log(user",{"_index":1009,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["logic",{"_index":338,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["login",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(input",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginreqdto",{"_index":54,"title":{"classes/LoginReqDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["loginresdto",{"_index":250,"title":{"classes/LoginResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["loginresdto})@apiunauthorizedresponse({type",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":1057,"title":{},"body":{"classes/User.html":{}}}],["mail",{"_index":898,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.options",{"_index":894,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":886,"title":{},"body":{"modules/MailModule.html":{}}}],["mailer",{"_index":678,"title":{"interfaces/Mailer.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["mailer.domain",{"_index":909,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer.key",{"_index":908,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer_api_key",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain_mailgun",{"_index":776,"title":{},"body":{"modules/DbTest.html":{}}}],["mailgun",{"_index":901,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["mailmodule",{"_index":126,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":896,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":238,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1339,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":1334,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":635,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128",{"_index":672,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length128)@expose",{"_index":661,"title":{},"body":{"classes/CategoryDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length256",{"_index":722,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["maxlength(columnsize.length32",{"_index":671,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length32)@expose",{"_index":663,"title":{},"body":{"classes/CategoryDto.html":{}}}],["maxlength(columnsize.length32)@isalphanumeric()@expose",{"_index":1025,"title":{},"body":{"classes/TrackDto.html":{}}}],["maxlength(columnsize.length64",{"_index":931,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length64)@isemail()@expose",{"_index":1097,"title":{},"body":{"classes/UserDto.html":{}}}],["measures",{"_index":1292,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":577,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["members",{"_index":1303,"title":{},"body":{"index.html":{}}}],["memory",{"_index":772,"title":{},"body":{"modules/DbTest.html":{},"dependencies.html":{}}}],["mentee",{"_index":1082,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentor",{"_index":1083,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":1400,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1376,"title":{},"body":{"license.html":{}}}],["message",{"_index":64,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{}}}],["metadata",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["mg",{"_index":900,"title":{},"body":{"injectables/MailService.html":{}}}],["minlength",{"_index":982,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["minlength(6",{"_index":980,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["miscellaneous",{"_index":1247,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1355,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1305,"title":{},"body":{"index.html":{}}}],["model",{"_index":11,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/User.html":{}}}],["modelcreate",{"_index":30,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modelname",{"_index":531,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modeloptions",{"_index":947,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["models/auth.enums",{"_index":336,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{}}}],["models/category.entity",{"_index":604,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["models/course.entity",{"_index":734,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["models/dto/acct",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/auth.dto",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["models/dto/create",{"_index":1036,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["models/dto/reset",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/tack.dto",{"_index":1038,"title":{},"body":{"classes/TracksController.html":{}}}],["models/dto/user.dto",{"_index":1111,"title":{},"body":{"classes/UsersController.html":{}}}],["models/dto/validate",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dtos/category.dto",{"_index":606,"title":{},"body":{"classes/CategoriesController.html":{}}}],["models/dtos/course.dto",{"_index":735,"title":{},"body":{"classes/CoursesController.html":{}}}],["models/dtos/create",{"_index":607,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{}}}],["models/jwt",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["models/temporary",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["models/track.entity",{"_index":1039,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["models/user.entity",{"_index":1112,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["modelvm",{"_index":28,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modify",{"_index":1375,"title":{},"body":{"license.html":{}}}],["module",{"_index":111,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":771,"title":{},"body":{"modules/DbTest.html":{}}}],["mongodb_uri",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongomemoryserver",{"_index":770,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":560,"title":{},"body":{"classes/BaseEntity.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":360,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forroot(configuration().database.uri",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forrootasync",{"_index":780,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1348,"title":{},"body":{"index.html":{}}}],["name",{"_index":75,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":1332,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["nestjs/bull",{"_index":1195,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":85,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":993,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":334,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":52,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/BaseDto.html":{},"classes/CategoriesController.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IPagedListDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["new",{"_index":21,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{}}}],["nigeria",{"_index":1267,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":899,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":906,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":921,"title":{},"body":{"injectables/MailService.html":{}}}],["noninfringement",{"_index":1404,"title":{},"body":{"license.html":{}}}],["note",{"_index":1322,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception('token",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception('user",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["notice",{"_index":1389,"title":{},"body":{"license.html":{}}}],["null",{"_index":536,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["number",{"_index":72,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCourseOutputDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["obj.util.ts",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.interface",{"_index":19,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["object.interface.ts",{"_index":369,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["object.values(userrole",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":854,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["obtaining",{"_index":1364,"title":{},"body":{"license.html":{}}}],["ochi",{"_index":1359,"title":{},"body":{"license.html":{}}}],["official",{"_index":1268,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":764,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["omittype(userdto",{"_index":766,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["ongoing",{"_index":1284,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["operation.decorator.ts",{"_index":1161,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationid",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":61,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":949,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["opts",{"_index":493,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/FindDto.html":{},"coverage.html":{}}}],["otherwise",{"_index":1416,"title":{},"body":{"license.html":{}}}],["out",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1424,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1188,"title":{"dependencies.html":{}},"body":{}}],["paged",{"_index":850,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["pagedcategoryoutdto",{"_index":605,"title":{"classes/PagedCategoryOutDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedcourseoutputdto",{"_index":723,"title":{"classes/PagedCourseOutputDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["pagedentityoutputdto",{"_index":504,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["pagedlistdto",{"_index":669,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"interfaces/IPagedListDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pagedlistdto(categorydto",{"_index":673,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{}}}],["pagedlistdto(coursedto",{"_index":724,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["pagedlistdto(entitydto",{"_index":1262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pagedlistdto(trackdto",{"_index":925,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["pagedlistdto(userdto",{"_index":937,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["pagedtrackoutputdto",{"_index":923,"title":{"classes/PagedTrackOutputDto.html":{}},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pageduseroutputdto",{"_index":926,"title":{"classes/PagedUserOutputDto.html":{}},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1330,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":74,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1291,"title":{},"body":{"index.html":{}}}],["particular",{"_index":1402,"title":{},"body":{"license.html":{}}}],["passport",{"_index":871,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":364,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["passportserializer",{"_index":998,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":868,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":872,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password')@httpcode(httpstatus.ok",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["password_reset_tokens",{"_index":951,"title":{},"body":{"classes/PasswordToken.html":{}}}],["password_token",{"_index":1017,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["passwordhash",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordtoken",{"_index":938,"title":{"classes/PasswordToken.html":{}},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["path",{"_index":65,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["paths",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["payload.ts",{"_index":861,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["permission",{"_index":824,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"license.html":{}}}],["permit",{"_index":1383,"title":{},"body":{"license.html":{}}}],["person",{"_index":1363,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1384,"title":{},"body":{"license.html":{}}}],["picktype",{"_index":51,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(categorydto",{"_index":751,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["picktype(coursedto",{"_index":754,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["picktype(loginreqdto",{"_index":56,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(registeruserdto",{"_index":880,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["picktype(trackdto",{"_index":760,"title":{},"body":{"classes/CreateTrackDto.html":{}}}],["plaintoclass",{"_index":961,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoclass(userdto",{"_index":970,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoken",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["playlisturl",{"_index":703,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["please",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["pluralize",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["populate('user",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":679,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1393,"title":{},"body":{"license.html":{}}}],["post",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["post('confirm",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiconflictresponse({type",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apiresponse({type",{"_index":588,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["pre",{"_index":1076,"title":{},"body":{"classes/User.html":{}}}],["pre('save",{"_index":1085,"title":{},"body":{"classes/User.html":{}}}],["prefix",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["preview",{"_index":914,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["process",{"_index":1346,"title":{},"body":{"index.html":{}}}],["process.env.api_auth_enabled",{"_index":692,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.app_email",{"_index":693,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_host",{"_index":696,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_name",{"_index":698,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_port",{"_index":697,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_secret",{"_index":688,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_validity_hours",{"_index":689,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_api_key",{"_index":694,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_domain",{"_index":695,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongodb_uri",{"_index":699,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongoms_system_binary",{"_index":774,"title":{},"body":{"modules/DbTest.html":{}}}],["process.env.node_env",{"_index":687,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.port",{"_index":686,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.redis_server_url",{"_index":691,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.root_url",{"_index":690,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["production",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":955,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":978,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":953,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":127,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":966,"title":{},"body":{"controllers/ProfileController.html":{}}}],["promise",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["promiselike",{"_index":866,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["prop",{"_index":557,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({default",{"_index":537,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({enum",{"_index":943,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({ref",{"_index":945,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["prop({required",{"_index":533,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{}}}],["propertydescriptor",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propose",{"_index":1298,"title":{},"body":{"index.html":{}}}],["provide",{"_index":632,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["provided",{"_index":1394,"title":{},"body":{"license.html":{}}}],["providers",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pub",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["publish",{"_index":1377,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1340,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1403,"title":{},"body":{"license.html":{}}}],["put",{"_index":1316,"title":{},"body":{"index.html":{}}}],["pw",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["pw.dto",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["pw.dto.ts",{"_index":985,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["pw.dto.ts:7",{"_index":986,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["queryitem",{"_index":1435,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":1436,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["questions",{"_index":1352,"title":{},"body":{"index.html":{}}}],["randombytes(columnsize.length32",{"_index":1093,"title":{},"body":{"classes/User.html":{}}}],["randombytes(size).tostring('hex",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"injectables/MailService.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{}}}],["record",{"_index":328,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["redis",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["redis_server_url",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisurl",{"_index":680,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["ref",{"_index":535,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["reflect",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":990,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(input",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":196,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["registeruserresdto",{"_index":199,"title":{"classes/RegisterUserResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["repeat",{"_index":1345,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1326,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1307,"title":{},"body":{"index.html":{}}}],["req",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{}}}],["req.url",{"_index":820,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["req.user['email",{"_index":969,"title":{},"body":{"controllers/ProfileController.html":{}}}],["request",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"index.html":{}}}],["request.body",{"_index":487,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["request.user",{"_index":490,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["require('nodemailer/lib/mailer",{"_index":902,"title":{},"body":{"injectables/MailService.html":{}}}],["required",{"_index":563,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["res",{"_index":809,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.status(statuscode).json(exception",{"_index":827,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassinput",{"_index":203,"title":{"classes/ResetPassInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"coverage.html":{}}}],["resetpassword",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(@body",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(input",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":826,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":804,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restore",{"_index":529,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["restriction",{"_index":1370,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":572,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret._id",{"_index":574,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret.id",{"_index":573,"title":{},"body":{"classes/BaseEntity.html":{}}}],["return",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returnmodeltype",{"_index":1078,"title":{},"body":{"classes/User.html":{}}}],["returns",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1373,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["roles",{"_index":597,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(userrole.admin",{"_index":615,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["roles.includes(role",{"_index":996,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":600,"title":{"guards/RolesGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["rolesguard)@roles(userrole.admin",{"_index":592,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["rolesguard)@roles(userrole.admin)@apiresponse({status",{"_index":1108,"title":{},"body":{"classes/UsersController.html":{}}}],["root_url",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooturl",{"_index":681,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["rxjs",{"_index":856,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["saved",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved.isemailverified",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["schema",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":786,"title":{},"body":{"classes/FindDto.html":{}}}],["secretorkey",{"_index":877,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sell",{"_index":1381,"title":{},"body":{"license.html":{}}}],["sendemailverifytoken",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(@body",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(input",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(@body",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(input",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["sending",{"_index":916,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync",{"_index":890,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync(mailoptions",{"_index":893,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":912,"title":{},"body":{"injectables/MailService.html":{}}}],["serializeuser",{"_index":1000,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":1006,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"modules/DbTest.html":{}}}],["session",{"_index":366,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.serializer",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{}}}],["sessionserializer",{"_index":346,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["setmetadata(userrole",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setrandompass",{"_index":1055,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":547,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shall",{"_index":1390,"title":{},"body":{"license.html":{}}}],["shared",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/config/configuration",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["shared/constants",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["shared/controllers",{"_index":596,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{}}}],["shared/controllers/base.controller",{"_index":1035,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/decorators/roles.decorator",{"_index":598,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors/api",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["shared/mail/mail.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/mail/mail.service",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["shared/models/base.entity",{"_index":656,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shared/models/dto",{"_index":670,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["shared/models/dto/base.dto",{"_index":721,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["shared/services",{"_index":627,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["shared/types",{"_index":1081,"title":{},"body":{"classes/User.html":{}}}],["shared/utils/random",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/validations/env.validation",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":128,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skill",{"_index":1336,"title":{},"body":{"index.html":{}}}],["skills",{"_index":1317,"title":{},"body":{"index.html":{}}}],["skip",{"_index":787,"title":{},"body":{"classes/FindDto.html":{}}}],["slack",{"_index":1350,"title":{},"body":{"index.html":{}}}],["software",{"_index":1281,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1338,"title":{},"body":{"index.html":{}}}],["solved",{"_index":1333,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"index.html":{}}}],["src/.../abstract",{"_index":1256,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../abstract.type.ts",{"_index":1433,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.enums.ts",{"_index":1249,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.errors.ts",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticate.decorator.ts",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authorize.decorator.ts",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.controller.ts",{"_index":1257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../categories.controller.ts",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../categories.module.ts",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../courses.module.ts",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1258,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../paged",{"_index":1259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../random",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temporary",{"_index":1250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tracks.controller.ts",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tracks.module.ts",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.controller.ts",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.module.ts",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":170,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":172,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:100",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:113",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:138",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:63",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:75",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:108",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:125",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:25",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:31",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:33",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:41",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:57",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:68",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:72",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:92",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":473,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":477,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:17",{"_index":480,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:21",{"_index":483,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/jwt",{"_index":851,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":988,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":991,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:13",{"_index":992,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/handlers/auth.handler.ts",{"_index":325,"title":{},"body":{"injectables/AuthHandler.html":{},"coverage.html":{}}}],["src/auth/handlers/auth.handler.ts:9",{"_index":330,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["src/auth/models/auth.enums.ts",{"_index":1252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/models/dto/acct",{"_index":38,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts",{"_index":879,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts:11",{"_index":881,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/reset",{"_index":984,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["src/auth/models/dto/validate",{"_index":1125,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["src/auth/models/jwt",{"_index":860,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/models/pass",{"_index":939,"title":{},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["src/auth/models/temporary",{"_index":1012,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/session.serializer.ts",{"_index":997,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:11",{"_index":1005,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:8",{"_index":1007,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":862,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":867,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":864,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/temp",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["src/categories/categories.controller.ts",{"_index":580,"title":{},"body":{"classes/CategoriesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.controller.ts:32",{"_index":584,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:43",{"_index":594,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":625,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.service.ts",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["src/categories/models/category.entity.ts",{"_index":634,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/categories/models/category.entity.ts:15",{"_index":640,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/dtos/category.dto.ts",{"_index":659,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{}}}],["src/categories/models/dtos/category.dto.ts:10",{"_index":664,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/category.dto.ts:13",{"_index":662,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/create",{"_index":749,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts",{"_index":726,"title":{},"body":{"classes/CoursesController.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts:36",{"_index":729,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.controller.ts:46",{"_index":732,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.module.ts",{"_index":744,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/courses/courses.service.ts",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["src/courses/models/course.entity.ts",{"_index":701,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/courses/models/course.entity.ts:15",{"_index":708,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:23",{"_index":704,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:30",{"_index":707,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:35",{"_index":706,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/dtos/course.dto.ts",{"_index":712,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["src/courses/models/dtos/course.dto.ts:14",{"_index":719,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:18",{"_index":714,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:22",{"_index":717,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:24",{"_index":715,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/create",{"_index":752,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/profile/profile.controller.ts",{"_index":954,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:16",{"_index":959,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":977,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/shared/config/configuration.ts",{"_index":674,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["src/shared/constants.ts",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/controllers/abstract",{"_index":1155,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/controllers/base.controller.ts",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/decorators/api",{"_index":1159,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authenticate.decorator.ts",{"_index":1163,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authorize.decorator.ts",{"_index":1165,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/roles.decorator.ts",{"_index":1167,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/errors/api",{"_index":59,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/shared/errors/auth.errors.ts",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/http",{"_index":798,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interfaces/abstract",{"_index":6,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/base",{"_index":492,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{},"coverage.html":{}}}],["src/shared/interfaces/default",{"_index":368,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["src/shared/mail/mail.module.ts",{"_index":885,"title":{},"body":{"modules/MailModule.html":{}}}],["src/shared/mail/mail.service.ts",{"_index":887,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/shared/mail/mail.service.ts:10",{"_index":897,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:11",{"_index":891,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:16",{"_index":892,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:28",{"_index":895,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/models/base.entity.ts",{"_index":519,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts:12",{"_index":543,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:14",{"_index":538,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:16",{"_index":545,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:18",{"_index":542,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:20",{"_index":540,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:22",{"_index":539,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:24",{"_index":534,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:26",{"_index":544,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:27",{"_index":553,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:41",{"_index":555,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:44",{"_index":550,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:53",{"_index":551,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:62",{"_index":549,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:71",{"_index":546,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:9",{"_index":541,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/dto/base.dto.ts",{"_index":507,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/base.dto.ts:11",{"_index":514,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:14",{"_index":511,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:8",{"_index":513,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/find.dto.ts",{"_index":784,"title":{},"body":{"classes/FindDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/find.dto.ts:10",{"_index":794,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:13",{"_index":792,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:5",{"_index":795,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:7",{"_index":790,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/paged",{"_index":843,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/services/base.service.ts",{"_index":1172,"title":{},"body":{"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":1010,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/types/abstract.type.ts",{"_index":1438,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/shared/utils/get",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/random",{"_index":1177,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/validations/env.validation.ts",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/models/dto/create",{"_index":756,"title":{},"body":{"classes/CreateTrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts",{"_index":924,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts:12",{"_index":1026,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/tack.dto.ts:15",{"_index":1024,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/track.entity.ts",{"_index":1021,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/tracks/models/track.entity.ts:15",{"_index":1023,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:24",{"_index":1022,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/tracks.controller.ts",{"_index":1028,"title":{},"body":{"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.controller.ts:31",{"_index":1031,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:42",{"_index":1034,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.module.ts",{"_index":1046,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.service.ts",{"_index":1182,"title":{},"body":{"coverage.html":{}}}],["src/users/models/dto/create",{"_index":762,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/register",{"_index":979,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts",{"_index":927,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts:13",{"_index":1100,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:16",{"_index":1101,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:20",{"_index":1098,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:24",{"_index":1104,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/user.entity.ts",{"_index":1051,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/models/user.entity.ts:39",{"_index":1060,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:47",{"_index":1062,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:56",{"_index":1058,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:59",{"_index":1065,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:67",{"_index":1066,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:70",{"_index":1061,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:72",{"_index":1063,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:74",{"_index":1059,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:81",{"_index":1070,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:84",{"_index":1068,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:89",{"_index":1067,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:92",{"_index":1074,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1106,"title":{},"body":{"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts:34",{"_index":1107,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":1109,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1120,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts",{"_index":1185,"title":{},"body":{"coverage.html":{}}}],["stack",{"_index":66,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["stacktrace",{"_index":813,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stage",{"_index":1287,"title":{},"body":{"index.html":{}}}],["stand",{"_index":1308,"title":{},"body":{"index.html":{}}}],["started",{"_index":1264,"title":{"index.html":{},"license.html":{}},"body":{}}],["startup",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["stated",{"_index":1296,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1131,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":564,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["status",{"_index":67,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["statuscode",{"_index":68,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["strategies/jwt.strategy",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":870,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":43,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1312,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1386,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1379,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1392,"title":{},"body":{"license.html":{}}}],["suggested",{"_index":1319,"title":{},"body":{"index.html":{}}}],["super",{"_index":873,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super(categoryservice",{"_index":612,"title":{},"body":{"classes/CategoriesController.html":{}}}],["super(courseservice",{"_index":737,"title":{},"body":{"classes/CoursesController.html":{}}}],["super(trackservice",{"_index":1041,"title":{},"body":{"classes/TracksController.html":{}}}],["super(usersservice",{"_index":1114,"title":{},"body":{"classes/UsersController.html":{}}}],["super.canactivate(context",{"_index":859,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.create(input",{"_index":622,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["support",{"_index":1285,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1421,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1160,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger.controller.ts",{"_index":1156,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["symbol",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":23,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IPagedListDto.html":{}}}],["table",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["tack.dto",{"_index":759,"title":{},"body":{"classes/CreateTrackDto.html":{}}}],["talents",{"_index":1302,"title":{},"body":{"index.html":{}}}],["target",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor.name",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tcreatedto",{"_index":501,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["technical",{"_index":1279,"title":{},"body":{"index.html":{}}}],["temp",{"_index":358,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["temporary",{"_index":948,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken",{"_index":355,"title":{"classes/TemporaryToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"coverage.html":{}}}],["temporarytoken.modelname",{"_index":361,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temporarytoken.schema",{"_index":363,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temporarytoken:16",{"_index":942,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:19",{"_index":941,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:27",{"_index":944,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:30",{"_index":946,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temptokens",{"_index":1019,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["temptokensservice",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["tentitydto",{"_index":499,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["test",{"_index":1318,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":769,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/.../db",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/db",{"_index":768,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":637,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["thanks",{"_index":1353,"title":{},"body":{"index.html":{}}}],["this.appservice.getwelcome",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetemptoken",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getauthtoken(req.user",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateemailtoken",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatepasswordtoken",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":488,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.categoryservice.findoneasync",{"_index":618,"title":{},"body":{"classes/CategoriesController.html":{}}}],["this.client.connect",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.emit(autheventenum.userregistered",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config",{"_index":904,"title":{},"body":{"injectables/MailService.html":{}}}],["this.courseservice.findoneasync",{"_index":738,"title":{},"body":{"classes/CoursesController.html":{}}}],["this.createtransport",{"_index":903,"title":{},"body":{"injectables/MailService.html":{}}}],["this.error",{"_index":89,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":91,"title":{},"body":{"classes/ApiException.html":{}}}],["this.firstname",{"_index":1091,"title":{},"body":{"classes/User.html":{}}}],["this.lastname",{"_index":1092,"title":{},"body":{"classes/User.html":{}}}],["this.mailservice.sendmailasync",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.message",{"_index":88,"title":{},"body":{"classes/ApiException.html":{}}}],["this.name",{"_index":575,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.path",{"_index":92,"title":{},"body":{"classes/ApiException.html":{}}}],["this.profileservice.findoneasync",{"_index":968,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.reflector.get",{"_index":994,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.stack",{"_index":90,"title":{},"body":{"classes/ApiException.html":{}}}],["this.status",{"_index":96,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":95,"title":{},"body":{"classes/ApiException.html":{}}}],["this.timestamp",{"_index":93,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tokenservice",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.createentity",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.harddeletebyid(id",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.insertasync(token",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackservice.findoneasync",{"_index":1042,"title":{},"body":{"classes/TracksController.html":{}}}],["this.transporter",{"_index":905,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":910,"title":{},"body":{"injectables/MailService.html":{}}}],["this.usersservice.createentity(input",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findoneasync",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["this.usersservice.insertasync(user",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.updateasync(doc.id",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validaterequest(request",{"_index":485,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validatetoken",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":917,"title":{},"body":{"injectables/MailService.html":{}}}],["throw",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["timestamp",{"_index":69,"title":{},"body":{"classes/ApiException.html":{}}}],["timestamps",{"_index":520,"title":{},"body":{"classes/BaseEntity.html":{}}}],["title",{"_index":619,"title":{},"body":{"classes/CategoriesController.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":1300,"title":{},"body":{"index.html":{}}}],["tojson",{"_index":566,"title":{},"body":{"classes/BaseEntity.html":{}}}],["token",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["token')@httpcode(httpstatus.ok",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{}}}],["token.dto.ts",{"_index":1126,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["token.dto.ts:8",{"_index":1127,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.entity",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{}}}],["token.entity.ts",{"_index":940,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["token.entity.ts:16",{"_index":1014,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:19",{"_index":1013,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:27",{"_index":1015,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:30",{"_index":1016,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.service",{"_index":359,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.service.ts",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["token.ts",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenparamname",{"_index":42,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["tokenservice",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.email",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokentype.password",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tort",{"_index":1415,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1094,"title":{},"body":{"classes/User.html":{}}}],["totalcount",{"_index":846,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["towards",{"_index":1293,"title":{},"body":{"index.html":{}}}],["tpagedentityoutputdto",{"_index":505,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["tpagedinputdto",{"_index":835,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["tpagedoutputdto",{"_index":837,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["track",{"_index":1020,"title":{"classes/Track.html":{}},"body":{"classes/Track.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["track.dto",{"_index":1037,"title":{},"body":{"classes/TracksController.html":{}}}],["track.dto.ts",{"_index":757,"title":{},"body":{"classes/CreateTrackDto.html":{},"coverage.html":{}}}],["track.modelname",{"_index":1049,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["track.schema",{"_index":1050,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["trackdto",{"_index":758,"title":{"classes/TrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["trackmodel",{"_index":1048,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tracks.controller",{"_index":1047,"title":{},"body":{"modules/TracksModule.html":{}}}],["tracks.service",{"_index":1040,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["tracks/models/dto/tack.dto",{"_index":1110,"title":{},"body":{"classes/UsersController.html":{}}}],["tracks/tracks.module",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["trackscontroller",{"_index":1027,"title":{"classes/TracksController.html":{}},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["trackservice",{"_index":1032,"title":{},"body":{"classes/TracksController.html":{}}}],["tracksmodule",{"_index":129,"title":{"modules/TracksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["tracksservice",{"_index":1030,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{},"overview.html":{}}}],["transform",{"_index":570,"title":{},"body":{"classes/BaseEntity.html":{}}}],["transformer",{"_index":516,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transport",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["transport.redis",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["transporter",{"_index":888,"title":{},"body":{"injectables/MailService.html":{}}}],["trim",{"_index":636,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["true",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["tsconfig",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["tupdatedto",{"_index":503,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1430,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose/typegoose",{"_index":558,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":559,"title":{},"body":{"classes/BaseEntity.html":{}}}],["typeof",{"_index":821,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":562,"title":{},"body":{"classes/BaseEntity.html":{}}}],["types/abstract.type",{"_index":848,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["ui",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('password",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["unconfirmed",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["unconfirmed_email",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["undefined})@apiresponse({status",{"_index":590,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["undefined})@exclude",{"_index":1064,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":638,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["update",{"_index":377,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":840,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["updatedat",{"_index":509,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["updatedby",{"_index":526,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["updatedto",{"_index":502,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["updateresulttype",{"_index":1437,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["uppercase",{"_index":639,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Track.html":{}}}],["uri",{"_index":683,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["url(clientbaseurl",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(emailparamname",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(tokenparamname",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1374,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":633,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["usecreateindex",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":781,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["useguards(authenticationguard",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":614,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["usenewurlparser",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":220,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1071,"title":{},"body":{"classes/User.html":{}}}],["user.dto",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UsersController.html":{}}}],["user.dto.ts",{"_index":763,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":981,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:17",{"_index":983,"title":{},"body":{"classes/RegisterUserResDto.html":{}}}],["user.email",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":930,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["user.fullname",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.isactive",{"_index":489,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["user.isemailverified",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.modelname",{"_index":1123,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user.password",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1124,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user_registered",{"_index":1254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userdto",{"_index":765,"title":{"classes/UserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{}}}],["usermodel",{"_index":1122,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userregistered",{"_index":1253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userrole",{"_index":372,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":609,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentee",{"_index":936,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["userrole.mentor",{"_index":610,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentor)@apibearerauth()@apiresponse({status",{"_index":1033,"title":{},"body":{"classes/TracksController.html":{}}}],["userrole.mentor)@apiresponse({status",{"_index":593,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{}}}],["userrole})@expose",{"_index":1103,"title":{},"body":{"classes/UserDto.html":{}}}],["users.controller",{"_index":1121,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1113,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/models/dto/register",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["users/models/dto/user.dto",{"_index":964,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users/models/user.entity",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/TracksController.html":{}}}],["users/users.module",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["users/users.service",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["userscontroller",{"_index":1105,"title":{"classes/UsersController.html":{}},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":130,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usr/local/bin/mongod",{"_index":775,"title":{},"body":{"modules/DbTest.html":{}}}],["valid('development",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":863,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/ResetPassInput.html":{}}}],["validate(payload",{"_index":865,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateemailtoken",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken(input",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken(resetpassinput",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":475,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validaterequest(request",{"_index":482,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validatetoken",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(userid",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetokeninput",{"_index":216,"title":{"classes/ValidateTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["validatetokeninput:8",{"_index":987,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validateuser",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":53,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/FindDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["value",{"_index":532,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1441,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification.dto",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["verification.dto.ts",{"_index":39,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["verification.dto.ts:10",{"_index":50,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:12",{"_index":49,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:8",{"_index":47,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verified",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(@body",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(input",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["versionkey",{"_index":569,"title":{},"body":{"classes/BaseEntity.html":{}}}],["virtuals",{"_index":568,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vm",{"_index":29,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["void",{"_index":548,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["wait",{"_index":1343,"title":{},"body":{"index.html":{}}}],["want",{"_index":1347,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1399,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1395,"title":{},"body":{"license.html":{}}}],["website",{"_index":1269,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":173,"title":{},"body":{"injectables/AppService.html":{}}}],["wherever",{"_index":1286,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1412,"title":{},"body":{"license.html":{}}}],["without",{"_index":1369,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1320,"title":{},"body":{"index.html":{}}}],["writable",{"_index":561,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["writable).isactive",{"_index":578,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isdeleted",{"_index":576,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isemailverified",{"_index":1095,"title":{},"body":{"classes/User.html":{}}}],["writable).password",{"_index":1086,"title":{},"body":{"classes/User.html":{}}}],["writers",{"_index":1280,"title":{},"body":{"index.html":{}}}],["x",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["zoom",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControllerOptions.html":{"url":"interfaces/AbstractControllerOptions.html","title":"interface - AbstractControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithAuthOptions.html":{"url":"interfaces/AbstractControllerWithAuthOptions.html","title":"interface - AbstractControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithSwaggerOptions.html":{"url":"interfaces/AbstractControllerWithSwaggerOptions.html","title":"interface - AbstractControllerWithSwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithSwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        modelCreate\n                                \n                                \n                                        modelVm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        modelCreate\n                                    \n                                \n                                \n                                    \n                                        modelCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelVm\n                                    \n                                \n                                \n                                    \n                                        modelVm:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctVerifyDto.html":{"url":"classes/AcctVerifyDto.html","title":"class - AcctVerifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctVerifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/acct-verification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBaseUrl\n                            \n                            \n                                emailParamName\n                            \n                            \n                                tokenParamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty, IsUrl } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class AcctVerifyDto extends PickType(LoginReqDto, ['email']) {\n  @IsUrl()\n  clientBaseUrl: string;\n  @IsNotEmpty()\n  tokenParamName: string;\n  @IsNotEmpty()\n  emailParamName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/errors/api-exception.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: any, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/shared/errors/api-exception.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport configuration from '../config/configuration';\n\nexport class ApiException {\n  @ApiProperty()\n  statusCode?: number;\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  status?: string;\n  @ApiProperty()\n  error?: string;\n  @ApiProperty()\n  errors?: any;\n  @ApiProperty()\n  timestamp?: string;\n  @ApiProperty()\n  path?: string;\n  @ApiProperty()\n  stack?: string;\n\n  constructor(\n    message: string,\n    error: string,\n    stack: string,\n    errors: any,\n    path: string,\n    statusCode: number\n  ) {\n    this.message = message;\n    this.error = error;\n    this.stack = stack;\n    this.errors = errors;\n    this.path = path;\n    this.timestamp = new Date().toISOString();\n    this.statusCode = statusCode;\n    this.status = HttpStatus[statusCode];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getWelcome();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CoursesModule } from './courses/courses.module';\nimport { MailModule } from './shared/mail/mail.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { SharedModule } from './shared';\nimport configuration from './shared/config/configuration';\nimport { envValidation } from './shared/validations/env.validation';\nimport { TracksModule } from './tracks/tracks.module';\nimport { UsersModule } from './users/users.module';\nimport { CategoriesModule } from './categories/categories.module';\n\nexport const Config = ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n});\nconst Database = MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n});\n@Module({\n  imports: [\n    SharedModule,\n    AuthModule,\n    UsersModule,\n    Config,\n    Database,\n    MailModule,\n    ProfileModule,\n    TracksModule,\n    CoursesModule,\n    CategoriesModule\n  ],\n\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWelcome\n                        \n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcome(): string {\n    return 'Welcome to CCN!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                sendEmailVerifyToken\n                            \n                            \n                                    Async\n                                sendForgotPwToken\n                            \n                            \n                                    Async\n                                verifyEmailToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(input: LoginReqDto, req?: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginResDto})@ApiUnauthorizedResponse({type: ApiException})@UseGuards(AuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                LoginReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(input: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiConflictResponse({type: ApiException})@ApiResponse({type: RegisterUserResDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(input: ResetPassInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPassInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailVerifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerifyToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email-confirmation-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendForgotPwToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendForgotPwToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-password-reset-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmailToken(input: ValidateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ValidateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { User } from './../users/models/user.entity';\nimport {\n  Body,\n  ConflictException,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Post,\n  UnauthorizedException,\n  UseGuards,\n  Req\n} from '@nestjs/common';\nimport {\n  ApiConflictResponse,\n  ApiOkResponse,\n  ApiResponse,\n  ApiTags,\n  ApiUnauthorizedResponse\n} from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { LoginReqDto } from '../auth/models/dto/auth.dto';\nimport configuration from '../shared/config/configuration';\nimport { ApiException } from '../shared/errors/api-exception';\nimport { MailService } from '../shared/mail/mail.service';\nimport {\n  RegisterUserDto,\n  RegisterUserResDto\n} from '../users/models/dto/register-user.dto';\nimport { UsersService } from './../users/users.service';\nimport { AuthService } from './auth.service';\nimport { AuthenticationGuard } from './guards/auth.guard';\nimport { AcctVerifyDto } from './models/dto/acct-verification.dto';\nimport { LoginResDto } from './models/dto/auth.dto';\nimport { ResetPassInput } from './models/dto/reset-pw.dto';\nimport { ValidateTokenInput } from './models/dto/validate-token.dto';\nimport { TokenType } from './models/temporary-token.entity';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly mailService: MailService\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: LoginResDto })\n  @ApiUnauthorizedResponse({ type: ApiException })\n  @UseGuards(AuthenticationGuard)\n  async login(\n    @Body() input: LoginReqDto,\n    @Req() req?: Request\n  ): Promise {\n    const accessToken = await this.authService.getAuthToken(req.user as User);\n    return { accessToken };\n  }\n  @Post('register')\n  @ApiConflictResponse({ type: ApiException })\n  @ApiResponse({ type: RegisterUserResDto, status: HttpStatus.CREATED })\n  async register(@Body() input: RegisterUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    const saved = await this.usersService.insertAsync(user);\n\n    return { canLogin: saved.isEmailVerified };\n  }\n\n  @Post('send-email-confirmation-token')\n  @HttpCode(HttpStatus.OK)\n  async sendEmailVerifyToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User with email does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email has already been confirmed');\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.EMAIL,\n      expiresInMins: 60 * 24\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please confirm your email here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n  @Post('confirm-email')\n  @HttpCode(HttpStatus.OK)\n  async verifyEmailToken(@Body() input: ValidateTokenInput): Promise {\n    const { email, token } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email already verified');\n    await this.authService.validateEmailToken({\n      userId: user.id,\n      plainToken: token\n    });\n  }\n  @Post('send-password-reset-token')\n  @HttpCode(HttpStatus.OK)\n  async sendForgotPwToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) return;\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.PASSWORD,\n      expiresInMins: 10\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please reset your password here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n\n  @Post('reset-password')\n  @HttpCode(HttpStatus.OK)\n  async resetPassword(@Body() input: ResetPassInput): Promise {\n    const { email, token, newPassword } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new UnauthorizedException('Password reset failed');\n    await this.authService.validatePasswordToken({\n      userId: exist.id,\n      plainToken: token,\n      newPassword\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthHandler.html":{"url":"injectables/AuthHandler.html","title":"injectable - AuthHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/handlers/auth.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleUserRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleUserRegistered\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleUserRegistered(data: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(AuthEventEnum.UserRegistered)\n                \n            \n\n            \n                \n                    Defined in src/auth/handlers/auth.handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { EventPattern } from '@nestjs/microservices';\n\nimport { AuthEventEnum } from '../models/auth.enums';\n\n@Injectable()\nexport class AuthHandler {\n  @EventPattern(AuthEventEnum.UserRegistered)\n  async handleUserRegistered(data: Record) {\n    // business logic\n    Logger.debug(data, 'handler');\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthHandler\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            TempTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\nimport { MailService } from '../shared/mail/mail.service';\nimport { UsersModule } from '../users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { AuthHandler } from './handlers/auth.handler';\nimport { TemporaryToken } from './models/temporary-token.entity';\nimport { SessionSerializer } from './session.serializer';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { TempTokensService } from './temp-token.service';\n\nconst Config = [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n];\n@Module({\n  imports: [UsersModule, ...Config],\n  providers: [\n    AuthService,\n    JwtStrategy,\n    SessionSerializer,\n    MailService,\n    AuthHandler,\n    TempTokensService\n  ],\n  controllers: [AuthController],\n  exports: [AuthService, ...Config]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthObj.html":{"url":"interfaces/AuthObj.html","title":"interface - AuthObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authRoles\n                                \n                                \n                                        enableAuth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authRoles\n                                    \n                                \n                                \n                                    \n                                        authRoles:         UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableAuth\n                                    \n                                \n                                \n                                    \n                                        enableAuth:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTempToken\n                            \n                            \n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                pub\n                            \n                            \n                                    Async\n                                validateEmailToken\n                            \n                            \n                                    Async\n                                validatePasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, tokenService: TempTokensService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TempTokensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateTempToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTempToken(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pub\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pub()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmailToken(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePasswordToken(resetPassInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPassInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(userId: string, type: TokenType, plainToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ClientRedis\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Client({transport: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { ApiException } from './../shared/errors/api-exception';\nimport {\n  Injectable,\n  Logger,\n  OnModuleInit,\n  UnauthorizedException,\n  HttpStatus,\n  HttpException\n} from '@nestjs/common';\nimport { Client, ClientRedis, Transport } from '@nestjs/microservices';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport configuration from '~shared/config/configuration';\nimport { authErrors } from '~shared/errors';\nimport { generateRandomToken } from '~shared/utils/random-token';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from './../users/users.service';\nimport { AuthEventEnum } from './models/auth.enums';\nimport { JwtPayload } from './models/jwt-payload';\nimport { TokenType } from './models/temporary-token.entity';\nimport { TempTokensService } from './temp-token.service';\n\n@Injectable()\nexport class AuthService implements OnModuleInit {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly tokenService: TempTokensService\n  ) {}\n  @Client({ transport: Transport.REDIS })\n  private client: ClientRedis;\n\n  async onModuleInit(): Promise {\n    // Connect your client to the redis server on startup.\n    try {\n      // await this.client.connect();\n    } catch (error) {\n      //Logger.error(error);\n    }\n  }\n  async validateUser(email: string, pw: string): Promise {\n    const user = await this.usersService.findOneAsync({\n      email: email?.toLowerCase()\n    });\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    if (!user.isEmailVerified)\n      throw new HttpException(\n        { message: 'Unconfirmed Email', errorType: 'UNCONFIRMED_EMAIL' },\n        HttpStatus.UNAUTHORIZED\n      );\n    const isValid = await bcrypt.compare(pw, user.password);\n    if (!isValid) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    return user;\n  }\n\n  async getAuthToken(user: User): Promise {\n    const { jwtValidityHrs, jwtSecret } = configuration();\n    const expiresIn = 60 * 60 * jwtValidityHrs;\n    const payload: JwtPayload = {\n      email: user.email,\n      userId: user.id,\n      role: user.role\n    };\n    return jwt.sign(payload, jwtSecret, { expiresIn });\n  }\n\n  async pub(): Promise {\n    this.client.emit(AuthEventEnum.UserRegistered, 'email');\n  }\n\n  async generateTempToken({\n    user,\n    type,\n    expiresInMins\n  }: {\n    user: User;\n    type: TokenType;\n    expiresInMins: number;\n  }): Promise {\n    const plainToken = generateRandomToken(64);\n    const encryptedToken = await bcrypt.hash(plainToken, 10);\n    const token = this.tokenService.createEntity({\n      token: encryptedToken,\n      expireAt: new Date(new Date().getTime() + expiresInMins * 60000),\n      type,\n      user: user.id as any\n    });\n    await this.tokenService.insertAsync(token);\n    return plainToken;\n  }\n  async validateEmailToken(input: {\n    userId: string;\n    plainToken: string;\n  }): Promise {\n    const { userId, plainToken } = input;\n\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.EMAIL,\n      plainToken\n    );\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { isEmailVerified: true });\n    await this.tokenService.hardDeleteById(id);\n  }\n  async validatePasswordToken(resetPassInput: {\n    userId: string;\n    plainToken: string;\n    newPassword: string;\n  }): Promise {\n    const { userId, plainToken, newPassword } = resetPassInput;\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.PASSWORD,\n      plainToken\n    );\n    const passwordHash = await bcrypt.hash(newPassword, 10);\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { password: passwordHash });\n    await this.tokenService.hardDeleteById(id);\n  }\n  private async validateToken(\n    userId: string,\n    type: TokenType,\n    plainToken: string\n  ) {\n    const exist = await this.tokenService\n      .findOne({ user: userId, type })\n      .populate('user');\n\n    if (!exist) throw authErrors.EXPIRED_TOKEN;\n    try {\n      const isValid = await bcrypt.compare(plainToken, exist.token);\n      if (!isValid) throw authErrors.INVALID_TOKEN;\n    } catch (error) {\n      throw authErrors.INVALID_TOKEN;\n    }\n    return exist;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nimport configuration from '../../shared/config/configuration';\nimport { AuthService } from '../auth.service';\nimport { LoginReqDto } from '../models/dto/auth.dto';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    return await this.validateRequest(request);\n  }\n  async validateRequest(request: Request): Promise {\n    if (!configuration().isAuthEnabled) return true;\n    const { email, password }: LoginReqDto = request.body;\n    const user = await this.authService.validateUser(email, password);\n\n    if (!user || !user.isActive) throw new UnauthorizedException();\n    request.user = user;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerOptions.html":{"url":"interfaces/BaseControllerOptions.html","title":"interface - BaseControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedEntityOutputDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithAuthOptions.html":{"url":"interfaces/BaseControllerWithAuthOptions.html","title":"interface - BaseControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedEntityOutputDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithSwaggerOpts.html":{"url":"interfaces/BaseControllerWithSwaggerOpts.html","title":"interface - BaseControllerWithSwaggerOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithSwaggerOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createDto\n                                \n                                \n                                        entityDto\n                                \n                                \n                                        pagedEntityOutputDto\n                                \n                                \n                                        updateDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDto\n                                    \n                                \n                                \n                                    \n                                        createDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDto\n                                    \n                                \n                                \n                                    \n                                        entityDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagedEntityOutputDto\n                                    \n                                \n                                \n                                    \n                                        pagedEntityOutputDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDto\n                                    \n                                \n                                \n                                    \n                                        updateDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedEntityOutputDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/base.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nexport class BaseDto {\n  @IsMongoId()\n  @Expose()\n  readonly id: string;\n  @ApiProperty()\n  @Expose()\n  readonly updatedAt: Date;\n  @ApiProperty()\n  @Expose()\n  readonly createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:71\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:62\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:53\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop, Ref } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { Schema } from 'mongoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { Writable } from '../types';\n\nexport class BaseEntity extends TimeStamps {\n  id: string;\n\n  @prop({ required: true, default: false })\n  readonly isDeleted!: boolean;\n  @prop({ default: null, ref: BaseEntity })\n  readonly createdBy?: Ref = null;\n  @prop({ default: null, ref: BaseEntity })\n  readonly updatedBy?: Ref = null;\n  @prop({ required: true, default: true })\n  readonly isActive: boolean = true;\n  @prop({ default: null, ref: BaseEntity })\n  readonly deletedBy?: Ref = null;\n  @prop({ default: null })\n  readonly deletedAt?: Date;\n  @prop({ required: true, default: new Date() })\n  readonly createdAt: Date = new Date();\n  @prop({ required: true, default: new Date() })\n  readonly updatedAt: Date = null;\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true,\n        versionKey: false,\n        transform: (_, ret) => {\n          ret.id = ret._id;\n          delete ret._id;\n        }\n      }\n    });\n  }\n  static get modelName(): string {\n    return this.name;\n  }\n  delete(): void {\n    (this as Writable).isDeleted = true;\n  }\n\n  /**\n   * Sets {isDeleted} to false\n   *\n   * @memberof BaseEntity\n   */\n  restore(): void {\n    (this as Writable).isDeleted = false;\n  }\n\n  /**\n   * Sets {isActive} to true\n   *\n   * @memberof BaseEntity\n   */\n  deactivate(): void {\n    (this as Writable).isActive = false;\n  }\n\n  /**\n   * Sets isActive to false\n   *\n   * @memberof BaseEntity\n   */\n  activate(): void {\n    (this as Writable).isActive = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoriesController.html":{"url":"classes/CategoriesController.html","title":"class - CategoriesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.controller.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: CategoryDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\nimport { CategoryDto, PagedCategoryOutDto } from './models/dtos/category.dto';\nimport { CreateCategoryDto } from './models/dtos/create-category.dto';\n\nconst BaseCtrl = BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedEntityOutputDto: PagedCategoryOutDto\n});\n\nexport class CategoriesController extends BaseCtrl {\n  constructor(protected readonly categoryService: CategoriesService) {\n    super(categoryService);\n  }\n\n  @Post()\n  @ApiResponse({ type: CategoryDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateCategoryDto): Promise {\n    const exist = await this.categoryService.findOneAsync({\n      title: input.name.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Category with the name \"${exist.name}\" already exists`\n      );\n\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\n\nCategoriesService \n\nCategoriesService \n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CategoriesController } from './categories.controller';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\n\nconst CategoryModel = MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n]);\n@Module({\n  imports: [CategoryModel],\n  providers: [\n    CategoriesService,\n    { provide: BaseService, useClass: CategoriesService }\n  ],\n  controllers: [CategoriesController],\n  exports: [CategoriesService, CategoryModel]\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/category.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false, uppercase: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/category.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ name: 1 }, { unique: true })\nexport class Category extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false,\n    uppercase: true\n  })\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appEmail\n                                \n                                \n                                        database\n                                \n                                \n                                        environment\n                                \n                                \n                                        isAuthEnabled\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        jwtValidityHrs\n                                \n                                \n                                        mailer\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUrl\n                                \n                                \n                                        rootUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appEmail\n                                    \n                                \n                                \n                                    \n                                        appEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         Database\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Database\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthEnabled\n                                    \n                                \n                                \n                                    \n                                        isAuthEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtValidityHrs\n                                    \n                                \n                                \n                                    \n                                        jwtValidityHrs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                    \n                                \n                                \n                                    \n                                        mailer:         Mailer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Mailer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUrl\n                                    \n                                \n                                \n                                    \n                                        redisUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControllerAuth.html":{"url":"interfaces/ControllerAuth.html","title":"interface - ControllerAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ControllerAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        create\n                                \n                                \n                                        delete\n                                \n                                \n                                        find\n                                \n                                \n                                        findById\n                                \n                                \n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                    Readonly\n                                playlistUrl\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Course extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    unique: false\n  })\n  readonly playlistUrl!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly enrollmentCount!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseDto.html":{"url":"classes/CourseDto.html","title":"class - CourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                playlistUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length128)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()@MaxLength(columnSize.length256)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @Expose()\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoursesController.html":{"url":"classes/CoursesController.html","title":"class - CoursesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CoursesService)\n                    \n                \n                        \n                            \n                                Defined in src/courses/courses.controller.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CoursesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCourseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: CourseDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCourseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\nimport { CourseDto, PagedCourseOutputDto } from './models/dtos/course.dto';\nimport { CreateCourseDto } from './models/dtos/create-course.dto';\n\nexport class CoursesController extends BaseCrudController({\n  entity: Course,\n  entityDto: CourseDto,\n  createDto: CreateCourseDto,\n  updateDto: CreateCourseDto,\n  pagedEntityOutputDto: PagedCourseOutputDto,\n  auth: {\n    create: [UserRole.MENTOR, UserRole.ADMIN],\n    update: [UserRole.MENTOR, UserRole.ADMIN],\n    delete: [UserRole.MENTOR, UserRole.ADMIN]\n  }\n}) {\n  constructor(protected readonly courseService: CoursesService) {\n    super(courseService);\n  }\n  @Post()\n  @ApiResponse({ type: CourseDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateCourseDto): Promise {\n    const exist = await this.courseService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Course with the title \"${exist.title}\" already exists`\n      );\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nCoursesService \n\nCoursesService \n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CoursesController } from './courses.controller';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\n\nconst CourseModel = MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n]);\n@Module({\n  imports: [CourseModel],\n  providers: [\n    CoursesService,\n    { provide: BaseService, useClass: CoursesService }\n  ],\n  controllers: [CoursesController],\n  exports: [CoursesService, CourseModel]\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/create-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CategoryDto } from './category.dto';\n\nexport class CreateCategoryDto extends PickType(CategoryDto, [\n  'name',\n  'description'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDto.html":{"url":"classes/CreateCourseDto.html","title":"class - CreateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/create-course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CourseDto } from './course.dto';\n\nexport class CreateCourseDto extends PickType(CourseDto, [\n  'title',\n  'description',\n  'playlistUrl'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrackDto.html":{"url":"classes/CreateTrackDto.html","title":"class - CreateTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { TrackDto } from './tack.dto';\n\nexport class CreateTrackDto extends PickType(TrackDto, [\n  'title',\n  'description'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto extends OmitType(UserDto, [\n  'id',\n  'updatedAt',\n  'createdAt'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Database.html":{"url":"interfaces/Database.html","title":"interface - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        name\n                                \n                                \n                                        port\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DbTest.html":{"url":"modules/DbTest.html","title":"module - DbTest","body":"\n                   \n\n\n\n\n    Modules\n    DbTest\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/db-test.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nprocess.env.MAILER_API_KEY = 'api_key_mailgun';\nprocess.env.MONGOMS_SYSTEM_BINARY = '/usr/local/bin/mongod';\nprocess.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\nconst dbServer = new MongoMemoryServer();\nexport const inMemoryDb = dbServer;\n\nconst dbFactory = MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n});\n\n@Module({\n  imports: [dbFactory],\n  exports: [dbFactory]\n})\nexport class DbTest {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultAuthObject.html":{"url":"interfaces/DefaultAuthObject.html","title":"interface - DefaultAuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultAuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        create\n                                \n                                \n                                            Optional\n                                        delete\n                                \n                                \n                                            Optional\n                                        find\n                                \n                                \n                                            Optional\n                                        findById\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindDto.html":{"url":"classes/FindDto.html","title":"class - FindDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/find.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                opts\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            opts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsJSON()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsJSON()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsJSON, IsOptional } from 'class-validator';\n\nexport class FindDto {\n  @IsOptional()\n  skip?: number = 0;\n  @IsOptional()\n  limit?: number = 100;\n  @IsOptional()\n  @IsJSON()\n  search?: string;\n  @IsJSON()\n  @IsOptional()\n  opts?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiException } from '../errors/api-exception';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(error: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse() as Response;\n    const req = ctx.getRequest();\n    const statusCode = error.getStatus();\n    const stacktrace = error.stack;\n    const errorName = error.response.name || error.response.error || error.name;\n    const errors = error.response.errors || null;\n    const path = req ? req.url : null;\n\n    if (statusCode === HttpStatus.UNAUTHORIZED) {\n      if (typeof error.response !== 'string') {\n        error.response.message =\n          error.response.message ||\n          'You do not have permission to access this resource';\n      }\n    }\n\n    const exception = new ApiException(\n      error.response.message,\n      errorName,\n      stacktrace,\n      errors,\n      path,\n      statusCode\n    );\n    res.status(statusCode).json(exception);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseController.html":{"url":"interfaces/IBaseController.html","title":"interface - IBaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    create\n                                \n                                \n                                    delete\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findById\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(input: TCreateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(input: TPagedInputDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TPagedInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPagedOutputDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, input: TUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                            TUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IBaseController {\n  create(input: TCreateDto): TEntityDto | Promise;\n  findAll(input: TPagedInputDto): TPagedOutputDto | Promise;\n  findById(input: string): TEntityDto | Promise;\n  update(id: string, input: TUpdateDto): TEntityDto | Promise;\n  delete(id: string): void | Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagedListDto.html":{"url":"interfaces/IPagedListDto.html","title":"interface - IPagedListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagedListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-list.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        totalCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { ClassType } from '../../types/abstract.type';\n\nexport interface IPagedListDto {\n  totalCount: number;\n  items: T[];\n}\n\nexport function PagedListDto(\n  entityDto: T\n): Type> {\n  class Paged implements IPagedListDto {\n    totalCount: number;\n    @ApiProperty({ type: entityDto })\n    items: T[];\n  }\n\n  return Paged;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport configuration from '~shared/config/configuration';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(AUTH_GUARD_TYPE) {\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise | Observable {\n    // console.log(context.switchToHttp().getRequest().sessionID);\n    return configuration().isAuthEnabled ? super.canActivate(context) : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        role\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\nexport interface JwtPayload {\n  email: string;\n  role: UserRole;\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload | PromiseLike)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload | PromiseLike\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport configuration from '../../shared/config/configuration';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().jwtSecret\n    });\n  }\n\n  async validate(\n    payload: JwtPayload | PromiseLike\n  ): Promise {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReqDto.html":{"url":"classes/LoginReqDto.html","title":"class - LoginReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResDto.html":{"url":"classes/LoginResDto.html","title":"class - LoginResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTransport\n                            \n                            \n                                    Async\n                                sendMailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/mail/mail.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTransport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMailAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailAsync(mailOptions: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : configuration()\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Mail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as mg from 'nodemailer-mailgun-transport';\nimport Mail = require('nodemailer/lib/mailer');\nimport configuration from '~shared/config/configuration';\n\n@Injectable()\nexport class MailService {\n  private readonly config = configuration();\n  private transporter: Mail;\n  constructor() {\n    this.createTransport();\n  }\n\n  private createTransport() {\n    const { mailer } = this.config;\n    this.transporter = nodemailer.createTransport(\n      mg({\n        auth: {\n          api_key: mailer.key,\n          domain: mailer.domain\n        }\n      })\n    );\n  }\n\n  async sendMailAsync(mailOptions: Mail.Options) {\n    const info = await this.transporter.sendMail(mailOptions);\n    Logger.debug(`Message sent: ${info.messageId}`);\n\n    // Preview only available when sending through an Ethereal account\n    // Logger.debug(`Preview URL: ${nodemailer.getTestMessageUrl(info)}`);\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mailer.html":{"url":"interfaces/Mailer.html","title":"interface - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCategoryOutDto.html":{"url":"classes/PagedCategoryOutDto.html","title":"class - PagedCategoryOutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCategoryOutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCourseOutputDto.html":{"url":"classes/PagedCourseOutputDto.html","title":"class - PagedCourseOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCourseOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @Expose()\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedTrackOutputDto.html":{"url":"classes/PagedTrackOutputDto.html","title":"class - PagedTrackOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedTrackOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/tack.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedUserOutputDto.html":{"url":"classes/PagedUserOutputDto.html","title":"class - PagedUserOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedUserOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsEmail, IsEnum, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { UserRole } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n  @Expose()\n  @MaxLength(columnSize.length64)\n  lastName: string;\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  @Expose()\n  email: string;\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  @Expose()\n  role?: UserRole = UserRole.MENTEE;\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordToken.html":{"url":"classes/PasswordToken.html","title":"class - PasswordToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/pass-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TemporaryToken\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions } from '@typegoose/typegoose';\n\nimport { TemporaryToken } from './temporary-token.entity';\n\n@modelOptions({ options: { customName: 'password_reset_tokens' } })\n@index({ createdAt: 1 }, { expireAfterSeconds: 1 })\nexport class PasswordToken extends TemporaryToken {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { UserDto } from '../users/models/dto/user.dto';\nimport { UsersService } from './../users/users.service';\n\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: UsersService) {}\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  async getProfile(@Req() req: Request): Promise {\n    const user = await this.profileService.findOneAsync({\n      email: req.user['email']\n    });\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nProfileModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { UsersModule } from '../users/users.module';\nimport { UsersService } from './../users/users.service';\nimport { ProfileController } from './profile.controller';\n\n@Module({\n  imports: [UsersModule],\n  providers: [UsersService],\n  controllers: [ProfileController],\n  exports: [UsersService]\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserResDto.html":{"url":"classes/RegisterUserResDto.html","title":"class - RegisterUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                canLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            canLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassInput.html":{"url":"classes/ResetPassInput.html","title":"class - ResetPassInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/reset-pw.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ValidateTokenInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/reset-pw.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nimport { ValidateTokenInput } from './validate-token.dto';\n\nexport class ResetPassInput extends ValidateTokenInput {\n  @IsNotEmpty()\n  newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport configuration from '~shared/config/configuration';\n\nimport { UserRole } from '../../users/models/user.entity';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      UserRole,\n      context.getHandler()\n    );\n    if (!roles || !configuration().isAuthEnabled) return true;\n\n    const request = context.switchToHttp().getRequest();\n    const { role } = request.user as JwtPayload;\n    return roles.includes(role);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n  deserializeUser(user: User, done: (err: Error, user: User) => void): any {\n    //Logger.log(user);\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\n@Global()\n@Module({\n  imports: [],\n  providers: [],\n  exports: []\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemporaryToken.html":{"url":"classes/TemporaryToken.html","title":"class - TemporaryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemporaryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/temporary-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions, prop, Ref } from '@typegoose/typegoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { BaseEntity } from '../../shared/models/base.entity';\n\nexport enum TokenType {\n  PASSWORD = 'PASSWORD_TOKEN',\n  EMAIL = 'EMAIL_TOKEN'\n}\n\n@index({ user: 1, type: 1 }, { unique: true })\n@modelOptions({ options: { customName: 'temptokens' } })\n@index({ expireAt: 1 }, { expireAfterSeconds: 0 })\nexport class TemporaryToken extends BaseEntity {\n  @prop({ required: true })\n  readonly token!: string;\n\n  @prop({ required: true, type: Date })\n  readonly expireAt!: Date;\n\n  @prop({\n    enum: TokenType,\n    type: String,\n    unique: false,\n    required: true\n  })\n  readonly type?: TokenType;\n\n  @prop({ ref: User, unique: false, required: true })\n  readonly user?: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/track.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Track extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackDto.html":{"url":"classes/TrackDto.html","title":"class - TrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/tack.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TracksController.html":{"url":"classes/TracksController.html","title":"class - TracksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TracksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/tracks/tracks.controller.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTrackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: TrackDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers/base.controller';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateTrackDto } from './models/dto/create-track.dto';\nimport { PagedTrackOutputDto, TrackDto } from './models/dto/tack.dto';\nimport { Track } from './models/track.entity';\nimport { TracksService } from './tracks.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedEntityOutputDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n});\nexport class TracksController extends BaseCtrl {\n  constructor(protected trackService: TracksService) {\n    super(trackService);\n  }\n  @Post()\n  @ApiResponse({ type: TrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTrackDto): Promise {\n    const exist = await this.trackService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Track with the title \"${exist.title}\" already exists`\n      );\n    return await super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TracksModule.html":{"url":"modules/TracksModule.html","title":"module - TracksModule","body":"\n                   \n\n\n\n\n    Modules\n    TracksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\n\nTracksService \n\nTracksService \n\n\n\nTracksModule\n\nTracksModule\n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tracks/tracks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TracksService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TracksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { Track } from './models/track.entity';\nimport { TracksController } from './tracks.controller';\nimport { TracksService } from './tracks.service';\n\nconst TrackModel = MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n]);\n@Module({\n  imports: [TrackModel],\n  providers: [TracksService, { provide: BaseService, useClass: TracksService }],\n  controllers: [TracksController],\n  exports: [TrackModel, TracksService]\n})\nexport class TracksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                failedSignInAttempts\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isEmailVerified\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lockOutEndDate\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                setRandomPass\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, lowercase: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            failedSignInAttempts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lockOutEndDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: UserRole, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRandomPass\n                        \n                        \n                    \n                \n            \n            \n                \nsetRandomPass()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:81\n                                \n                            \n                    \n                        \n                                Get User's full name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:92\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport {\n  index,\n  pre,\n  prop,\n  getModelForClass,\n  ReturnModelType\n} from '@typegoose/typegoose';\nimport { hash } from 'bcrypt';\nimport { Exclude } from 'class-transformer';\nimport * as crypto from 'crypto';\n\nimport { columnSize } from '../../shared/constants';\nimport { BaseEntity } from '../../shared/models/base.entity';\nimport { Writable } from '../../shared/types';\n\nexport enum UserRole {\n  MENTEE = 'MENTEE',\n  MENTOR = 'MENTOR',\n  ADMIN = 'ADMIN'\n}\n\n@pre('save', async function () {\n  try {\n    (this as Writable).password = await hash(this.password, 10);\n  } catch (e) {\n    throw new InternalServerErrorException(e);\n  }\n})\n@index({ email: 1 }, { unique: true })\nexport class User extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly firstName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly lastName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: false\n  })\n  readonly email!: string;\n  @prop({ required: true, maxlength: columnSize.length64 })\n  @Exclude()\n  readonly password!: string;\n\n  @prop({\n    enum: UserRole,\n    type: String,\n    required: true,\n    default: UserRole.MENTEE\n  })\n  readonly role: UserRole = UserRole.MENTEE;\n\n  @prop({ required: true, default: false })\n  readonly isEmailVerified: boolean;\n  @prop({ default: undefined })\n  readonly lockOutEndDate?: Date;\n  @prop({ required: true, default: 0 })\n  readonly failedSignInAttempts!: number;\n  /**\n   * Get User's full name\n   *\n   * @readonly\n   * @memberof User\n   */\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  setRandomPass(): void {\n    (this as Writable).password = crypto\n      .randomBytes(columnSize.length32)\n      .toString();\n  }\n  confirmEmail(): void {\n    (this as Writable).isEmailVerified = true;\n  }\n  static get model(): ReturnModelType {\n    return getModelForClass(this);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length64)@IsEmail()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(UserRole)@ApiProperty({enum: UserRole})@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsEmail, IsEnum, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { UserRole } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n  @Expose()\n  @MaxLength(columnSize.length64)\n  lastName: string;\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  @Expose()\n  email: string;\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  @Expose()\n  role?: UserRole = UserRole.MENTEE;\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersController.html":{"url":"classes/UsersController.html","title":"class - UsersController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.controller.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: TrackDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { BaseCrudController } from '../shared/controllers/base.controller';\nimport { TrackDto } from '../tracks/models/dto/tack.dto';\nimport { CreateUserDto } from './models/dto/create-user.dto';\nimport { PagedUserOutputDto, UserDto } from './models/dto/user.dto';\nimport { User, UserRole } from './models/user.entity';\nimport { UsersService } from './users.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedEntityOutputDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n});\n\nexport class UsersController extends BaseCtrl {\n  constructor(protected readonly usersService: UsersService) {\n    super(usersService);\n  }\n  @Post()\n  @ApiResponse({ type: TrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({\n      title: input.email.toLowerCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `User with the email \"${exist.email}\" already exists`\n      );\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { User } from './models/user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\nconst UserModel = MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n]);\n@Module({\n  imports: [UserModel],\n  providers: [UsersService, { provide: BaseService, useClass: UsersService }],\n  controllers: [UsersController],\n  exports: [UsersService, UserModel]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateTokenInput.html":{"url":"classes/ValidateTokenInput.html","title":"class - ValidateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/validate-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class ValidateTokenInput extends PickType(LoginReqDto, ['email']) {\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Database\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/handlers/auth.handler.ts\n            \n            injectable\n            AuthHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/acct-verification.dto.ts\n            \n            class\n            AcctVerifyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginReqDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/reset-pw.dto.ts\n            \n            class\n            ResetPassInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/validate-token.dto.ts\n            \n            class\n            ValidateTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/pass-token.entity.ts\n            \n            class\n            PasswordToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/models/temporary-token.entity.ts\n            \n            class\n            TemporaryToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/temp-token.service.ts\n            \n            injectable\n            TempTokensService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            class\n            CategoriesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.module.ts\n            \n            variable\n            CategoryModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            class\n            CategoriesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/models/category.entity.ts\n            \n            class\n            Category\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            PagedCategoryOutDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.controller.ts\n            \n            class\n            CoursesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/courses.module.ts\n            \n            variable\n            CourseModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.service.ts\n            \n            injectable\n            CoursesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/courses/models/course.entity.ts\n            \n            class\n            Course\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            CourseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            PagedCourseOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/create-course.dto.ts\n            \n            class\n            CreateCourseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Configuration\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Database\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Mailer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            AUTH_GUARD_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            columnSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract-with-swagger.controller.ts\n            \n            function\n            AbstractController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/base.controller.ts\n            \n            function\n            BaseCrudController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/api-swagger-operation.decorator.ts\n            \n            variable\n            ApiSwaggerOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authenticate.decorator.ts\n            \n            variable\n            Authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authorize.decorator.ts\n            \n            variable\n            Authorize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/errors/api-exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/errors/auth.errors.ts\n            \n            variable\n            authErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithSwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithSwaggerOpts\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller.interface.ts\n            \n            interface\n            IBaseController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            AuthObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            ControllerAuth\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            DefaultAuthObject\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/shared/models/dto/base.dto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/dto/find.dto.ts\n            \n            class\n            FindDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            interface\n            IPagedListDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            function\n            PagedListDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            defaultAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            getAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/random-token.ts\n            \n            variable\n            generateRandomToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/validations/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateTrackDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/tack.dto.ts\n            \n            class\n            PagedTrackOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/tack.dto.ts\n            \n            class\n            TrackDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tracks/models/track.entity.ts\n            \n            class\n            Track\n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            class\n            TracksController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            TrackModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.service.ts\n            \n            injectable\n            TracksService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/users/models/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            PagedUserOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/models/user.entity.ts\n            \n            class\n            User\n            \n                12 %\n                (3/24)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            class\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.module.ts\n            \n            variable\n            UserModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            dbFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            dbServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            inMemoryDb\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs-addons/in-memory-db : ^1.8.10\n        \n            @nestjs/bull : ^0.1.1\n        \n            @nestjs/common : ^7.2.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.2.0\n        \n            @nestjs/microservices : ^7.2.0\n        \n            @nestjs/mongoose : ^7.0.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.2.0\n        \n            @nestjs/schedule : ^0.4.0\n        \n            @nestjs/swagger : ^4.5.10\n        \n            @typegoose/typegoose : ^7.2.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.14.0\n        \n            cache-manager : ^3.3.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            compression : ^1.7.4\n        \n            connect-mongo : ^3.2.0\n        \n            cookie-parser : ^1.4.5\n        \n            cookie-session : ^1.4.0\n        \n            express-rate-limit : ^5.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.9.18\n        \n            nodemailer : ^6.4.8\n        \n            nodemailer-mailgun-transport : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pluralize : ^8.0.0\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n        \n            tsconfig-paths : ^3.9.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthEventEnum   (src/.../auth.enums.ts)\n                        \n                        \n                            TokenType   (src/.../temporary-token.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/models/auth.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthEventEnum\n                    \n                \n                        \n                            \n                                 UserRegistered\n                            \n                        \n                        \n                            \n                                Value : user_registered\n                            \n                        \n            \n        \n\n    src/auth/models/temporary-token.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : PASSWORD_TOKEN\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL_TOKEN\n                            \n                        \n            \n        \n\n    src/users/models/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MENTEE\n                            \n                        \n                        \n                            \n                                Value : MENTEE\n                            \n                        \n                        \n                            \n                                 MENTOR\n                            \n                        \n                        \n                            \n                                Value : MENTOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractController   (src/.../abstract-with-swagger.controller.ts)\n                        \n                        \n                            BaseCrudController   (src/.../base.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PagedListDto   (src/.../paged-list.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/controllers/abstract-with-swagger.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            AbstractController\n                        \n                        \n                    \n                \n            \n            \n                \nAbstractController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/controllers/base.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            BaseCrudController\n                        \n                        \n                    \n                \n            \n            \n                \nBaseCrudController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/shared/models/dto/paged-list.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PagedListDto\n                        \n                        \n                    \n                \n            \n            \n                \nPagedListDto(entityDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCode Clan Nigeria\n \nThe official website for code clan nigeria community\nWe are a community comprised of future innovators.\nFront-end developers, DevOps engineers, full stack developers, technical\nwriters, software engineers.\nThis community was created out of a desire to provide ongoing support\nto you wherever stage you are in your coding career.\nThis is codeclannigeria.dev\nAs part of the measures towards achieving out goal stated above, we propose to bring together the amazing talents of our community members to built a website and a mobile application that represents all that we\nstand for.\nHow You Come In\nTo get a complete documentation of the source code and the architectural structure of the application, click here.\nFeel free to put your skills to the test. Here is a suggested workflow for you to follow:\nNote: This is applicable to codeclannigeria community members only.\n\nFork this repository into your local computer\nCheck the issues pane for an issue that needs to be solved\nFind an issue that matches your current skill level and solve it\nMake your pull request to the develop branch\nWait for some feedback.\nRepeat the process\n\nWant more support? Join our slack\ncommunity and ask questions.\nThanks for your support\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Fortune Ochi\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DbTest\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TracksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nCoursesService \n\nCoursesService \n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nProfileModule->UsersService \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nTracksService \n\nTracksService \n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    36 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractDocument   (src/.../abstract.type.ts)\n                        \n                        \n                            ClassType   (src/.../abstract.type.ts)\n                        \n                        \n                            DeleteResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryItem   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryList   (src/.../abstract.type.ts)\n                        \n                        \n                            UpdateResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            Writable   (src/.../abstract.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/types/abstract.type.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Writable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSwaggerOperation   (src/.../api-swagger-operation.decorator.ts)\n                        \n                        \n                            AUTH_GUARD_TYPE   (src/.../constants.ts)\n                        \n                        \n                            Authenticate   (src/.../authenticate.decorator.ts)\n                        \n                        \n                            authErrors   (src/.../auth.errors.ts)\n                        \n                        \n                            Authorize   (src/.../authorize.decorator.ts)\n                        \n                        \n                            BaseCtrl   (src/.../categories.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../users.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../tracks.controller.ts)\n                        \n                        \n                            CategoryModel   (src/.../categories.module.ts)\n                        \n                        \n                            columnSize   (src/.../constants.ts)\n                        \n                        \n                            Config   (src/.../app.module.ts)\n                        \n                        \n                            Config   (src/.../auth.module.ts)\n                        \n                        \n                            CourseModel   (src/.../courses.module.ts)\n                        \n                        \n                            Database   (src/.../app.module.ts)\n                        \n                        \n                            dbFactory   (test/.../db-test.module.ts)\n                        \n                        \n                            dbServer   (test/.../db-test.module.ts)\n                        \n                        \n                            defaultAuth   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            generateRandomToken   (src/.../random-token.ts)\n                        \n                        \n                            getAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            inMemoryDb   (test/.../db-test.module.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            TrackModel   (src/.../tracks.module.ts)\n                        \n                        \n                            UserModel   (src/.../users.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/api-swagger-operation.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiSwaggerOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: {\n  title: string;\n  description?: string;\n  operationId?: string;\n  deprecated?: boolean;\n}): MethodDecorator => {\n  return (target, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const controllerName = target.constructor.name;\n    ApiOperation({\n      ...options,\n      operationId: `${controllerName.substr(\n        0,\n        controllerName.indexOf('Controller'),\n      )}_${propertyKey}`,\n    })(target, propertyKey, descriptor);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  length8: 2 ** 3,\n  length16: 2 ** 4,\n  length32: 2 ** 5,\n  length64: 2 ** 6,\n  length128: 2 ** 7,\n  length256: 2 ** 8,\n  length512: 2 ** 9,\n  length1024: 2 ** 10\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authenticate.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthenticationEnabled: boolean,\n  decorator: MethodDecorator\n): MethodDecorator => {\n  return (target, key: string | symbol, value: any): any => {\n    if (isAuthenticationEnabled) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/errors/auth.errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  INVALID_LOGIN_ATTEMPT: new UnauthorizedException(\n    'Email or Password is incorrect'\n  ),\n  INVALID_TOKEN: new ForbiddenException('Invalid token'),\n  EXPIRED_TOKEN: new NotFoundException('Token expired')\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authorize.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authorize\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthorizationEnabled: boolean,\n  decorator: MethodDecorator\n): MethodDecorator => {\n  return (target, key: string | symbol, value: any): any => {\n    if (isAuthorizationEnabled) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedEntityOutputDto: PagedCategoryOutDto\n})\n                        \n                    \n\n\n            \n        \n\n    src/users/users.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedEntityOutputDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedEntityOutputDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CategoryModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Database\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n})\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n]\n                        \n                    \n\n\n            \n        \n\n    src/courses/courses.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    test/db-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbServer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoMemoryServer()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inMemoryDb\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : dbServer\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/get-auth-obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ControllerAuth\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  create: {\n    enableAuth: true,\n    authRoles: []\n  },\n  update: {\n    enableAuth: true,\n    authRoles: []\n  },\n  find: {\n    enableAuth: true,\n    authRoles: []\n  },\n  findById: {\n    enableAuth: true,\n    authRoles: []\n  },\n  delete: {\n    enableAuth: true,\n    authRoles: []\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  authObj: DefaultAuthObject | boolean\n): ControllerAuth => {\n  const roles = Object.values(UserRole);\n  defaultAuth.create.authRoles = roles;\n  defaultAuth.update.authRoles = roles;\n  defaultAuth.find.authRoles = roles;\n  defaultAuth.findById.authRoles = roles;\n  defaultAuth.delete.authRoles = roles;\n\n  if (typeof authObj === 'boolean') {\n    if (authObj === false) {\n      defaultAuth.create.enableAuth = false;\n      defaultAuth.update.enableAuth = false;\n      defaultAuth.find.enableAuth = false;\n      defaultAuth.findById.enableAuth = false;\n      defaultAuth.delete.enableAuth = false;\n      return defaultAuth;\n    }\n    if (authObj === true) return defaultAuth;\n  }\n\n  if (typeof authObj?.find === 'boolean') {\n    defaultAuth.find.enableAuth = authObj.find;\n  } else if (!!authObj?.find?.length) {\n    defaultAuth.find.authRoles = authObj.find;\n  }\n\n  if (typeof authObj?.findById === 'boolean') {\n    defaultAuth.findById.enableAuth = authObj.findById;\n  } else if (!!authObj?.findById?.length) {\n    defaultAuth.findById.authRoles = authObj.findById;\n  }\n\n  if (typeof authObj?.update === 'boolean') {\n    defaultAuth.update.enableAuth = authObj.update;\n  } else if (!!authObj?.update?.length) {\n    defaultAuth.update.authRoles = authObj.update;\n  }\n\n  if (typeof authObj?.create === 'boolean') {\n    defaultAuth.create.enableAuth = authObj.create;\n  } else if (!!authObj?.create?.length) {\n    defaultAuth.create.authRoles = authObj.create;\n  }\n\n  if (typeof authObj?.delete === 'boolean') {\n    defaultAuth.delete.enableAuth = authObj.delete;\n  } else if (!!authObj?.delete?.length) {\n    defaultAuth.delete.authRoles = authObj.delete;\n  }\n\n  return defaultAuth;\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/validations/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): any => {\n  return Joi.object({\n    NODE_ENV: Joi.string()\n      .valid('development', 'production', 'test')\n      .default('development'),\n    PORT: Joi.number().default(3000),\n    JWT_SECRET: Joi.string().required(),\n    JWT_VALIDITY_HOURS: Joi.number().required(),\n    ROOT_URL: Joi.string().uri().required(),\n    REDIS_SERVER_URL: Joi.string().uri().default('redis://localhost:6379'),\n    DATABASE_PORT: Joi.number().default(27017),\n    DATABASE_HOST: Joi.string().default('localhost'),\n    DATABASE_NAME: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n    MAILER_API_KEY: Joi.string().required(),\n    MAILER_DOMAIN: Joi.string().required(),\n    API_AUTH_ENABLED: Joi.string().valid('true', 'false').default('true'),\n    APP_EMAIL: Joi.string().email().required()\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/random-token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandomToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n  randomBytes(size).toString('hex')\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bearerAuthName: 'x-auth'\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: UserRole[]): CustomDecorator =>\n  SetMetadata(UserRole, roles)\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TrackModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/users/users.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
