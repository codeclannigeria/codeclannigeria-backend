var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControllerOptions.html",[0,1.079,1,2.912]],["body/interfaces/AbstractControllerOptions.html",[0,1.903,1,5.138,2,2.233,3,0.149,4,0.134,5,0.12,6,4.005,7,2.572,8,4.005,9,0.492,10,1.24,11,5.765,12,4.7,13,0.676,14,0.011,15,0.227,16,3.355,17,1.849,18,2.627,19,3.525,20,0.205,21,2.071,22,3.339,23,3.339,24,4.7,25,1.102,26,1.692,27,3.743,28,4.333,29,4.333,30,4.333,31,4.005,32,0.007,33,0.008,34,0.007]],["title/interfaces/AbstractControllerWithAuthOptions.html",[0,1.079,24,2.912]],["body/interfaces/AbstractControllerWithAuthOptions.html",[0,1.892,1,5.109,2,2.206,3,0.148,4,0.133,5,0.118,6,3.956,7,2.54,8,3.956,9,0.486,10,1.23,11,3.956,13,0.486,14,0.011,15,0.224,16,3.83,17,1.826,18,3.092,19,3.482,20,0.204,21,2.059,22,3.298,23,3.298,24,5.109,25,1.198,26,2.31,27,3.697,28,4.279,29,4.279,30,4.279,31,3.956,32,0.007,33,0.008,34,0.007]],["title/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.079,27,2.912]],["body/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.874,1,4.601,2,2.16,3,0.144,4,0.13,5,0.116,6,3.873,7,2.487,8,3.873,9,0.476,10,1.214,11,3.873,12,5.323,13,0.739,14,0.011,15,0.22,16,3.285,17,1.788,18,2.572,19,3.409,20,0.202,21,2.039,22,3.228,23,3.228,24,5.059,25,1.186,26,1.637,27,4.601,28,6.162,29,4.19,30,6.162,31,3.873,32,0.007,33,0.008,34,0.007]],["title/classes/AcctVerifyDto.html",[35,0.175,36,3.115]],["body/classes/AcctVerifyDto.html",[3,0.145,4,0.131,5,0.116,9,0.479,10,1.218,13,0.667,14,0.011,15,0.308,20,0.145,25,0.854,32,0.007,33,0.008,34,0.007,35,0.278,36,4.942,37,0.906,38,6.801,39,4.642,40,6.467,41,6.467,42,6.467,43,1.441,44,1.827,45,5.872,46,1.3,47,5.29,48,6.373,49,5.29,50,5.29,51,3.248,52,1.312,53,1.854,54,3.089,55,4.642,56,4.642,57,2.173]],["title/classes/ApiException.html",[35,0.175,58,2.163]],["body/classes/ApiException.html",[3,0.101,4,0.091,5,0.081,9,0.333,10,0.954,13,0.712,14,0.011,15,0.219,20,0.101,21,1.021,32,0.005,33,0.007,34,0.005,35,0.152,37,0.63,43,1.523,44,1.917,46,1.388,52,0.913,58,2.687,59,7.004,60,3.23,61,2.15,62,5.569,63,6.635,64,4.762,65,6.635,66,6.635,67,3.267,68,6.635,69,6.126,70,2.395,71,3.681,72,2.808,73,5.254,74,1.372,75,0.839,76,4.144,77,3.681,78,3.681,79,3.681,80,3.681,81,3.681,82,3.681,83,3.681,84,1.883,85,0.887,86,3.681,87,3.681,88,3.681,89,3.681,90,3.681,91,3.681,92,3.681,93,3.681,94,3.681,95,3.681]],["title/controllers/AppController.html",[7,2.001,96,3.115]],["body/controllers/AppController.html",[3,0.16,4,0.144,5,0.128,7,3.374,9,0.528,14,0.011,15,0.298,20,0.16,32,0.007,33,0.009,34,0.007,35,0.241,43,1.258,44,1.447,46,1.029,85,1.407,96,5.253,97,2.76,98,5.12,99,2.095,100,8.025,101,5.835,102,1.666,103,4.994,104,5.12,105,4.298,106,1.666,107,2.175,108,5.835]],["title/modules/AppModule.html",[109,1.279,110,3.115]],["body/modules/AppModule.html",[3,0.097,4,0.087,5,0.078,14,0.011,15,0.35,20,0.14,32,0.004,33,0.006,34,0.004,35,0.146,85,0.852,96,4.409,97,2.413,103,4.697,104,3.1,109,1.81,110,6.365,111,1.554,112,1.671,113,1.807,114,1.807,115,1.671,116,2.942,117,1.671,118,3.1,119,3.1,120,3.1,121,4.987,122,4.987,123,4.987,124,4.987,125,4.987,126,4.987,127,4.697,128,4.987,129,4.448,130,4.231,131,2.609,132,1.736,133,1.671,134,2.815,135,2.609,136,3.533,137,3.1,138,1.969,139,1.807,140,3.533,141,3.533,142,3.533,143,3.533,144,3.533,145,3.533,146,1.554,147,1.969,148,3.533,149,4.064,150,3.533,151,3.1,152,2.815,153,2.602,154,3.533,155,1.683,156,3.307,157,3.1,158,3.1,159,2.322,160,3.1,161,3.1,162,3.1,163,3.1,164,2.979,165,3.1,166,2.815,167,2.815,168,2.815,169,2.815,170,1.736]],["title/injectables/AppService.html",[103,2.742,171,1.738]],["body/injectables/AppService.html",[3,0.166,4,0.15,5,0.133,9,0.548,14,0.011,15,0.253,20,0.166,32,0.008,33,0.009,34,0.008,35,0.251,43,1.287,46,1.068,85,1.46,99,2.143,102,1.729,103,4.73,107,2.258,171,2.997,172,3.537,173,5.315,174,8.127,175,6.057,176,6.057,177,6.057]],["title/classes/AssignTasksDto.html",[35,0.175,178,3.115]],["body/classes/AssignTasksDto.html",[3,0.156,4,0.14,5,0.125,9,0.513,10,1.272,13,0.634,14,0.011,15,0.237,20,0.156,32,0.007,33,0.009,34,0.007,35,0.29,37,0.97,43,1.401,44,1.737,46,1.235,53,1.986,159,2.245,178,5.159,179,6.672,180,4.972,181,7.604,182,5.234,183,5.666,184,5.666,185,5.468,186,5.666,187,5.581,188,4.514]],["title/controllers/AuthController.html",[7,2.001,189,3.115]],["body/controllers/AuthController.html",[3,0.057,4,0.051,5,0.046,7,0.98,9,0.188,13,0.646,14,0.011,15,0.319,18,0.797,20,0.057,21,1.896,32,0.003,33,0.004,34,0.003,35,0.086,36,4.536,40,2.967,41,2.967,42,2.967,44,1.448,46,1.03,52,0.514,54,2.885,57,3.136,58,2.19,61,1.489,67,1.803,70,0.945,74,2.177,75,1.331,84,1.06,85,0.5,97,0.98,99,0.993,102,1.667,106,1.223,107,2.029,132,2.428,146,0.912,147,1.155,155,2.543,182,2.327,189,2.49,190,1.818,191,1.818,192,3.274,193,4.282,194,3.381,195,3.381,196,3.381,197,3.381,198,3.381,199,2.072,200,4.337,201,3.401,202,2.072,203,2.072,204,2.072,205,2.072,206,2.967,207,2.072,208,3.253,209,2.072,210,3.033,211,2.072,212,2.072,213,2.948,214,0.851,215,2.072,216,3.93,217,2.072,218,3.401,219,3.381,220,2.072,221,2.072,222,2.072,223,4.941,224,3.381,225,3.381,226,2.072,227,2.072,228,2.527,229,2.072,230,2.072,231,3.401,232,3.381,233,2.072,234,2.072,235,1.974,236,1.272,237,1.651,238,1.526,239,1.21,240,1.651,241,1.21,242,3.381,243,3.381,244,1.974,245,1.818,246,3.381,247,1.272,248,2.072,249,2.072,250,1.818,251,2.629,252,1.818,253,1.651,254,1.21,255,3.076,256,0.851,257,2.386,258,1.427,259,2.629,260,1.651,261,1.526,262,2.072,263,2.072,264,2.072,265,2.327,266,1.818,267,2.072,268,2.072,269,2.072,270,1.818,271,1.526,272,1.651,273,1.651,274,2.072,275,2.072,276,2.776,277,2.072,278,4.337,279,2.072,280,2.694,281,3.076,282,2.072,283,2.072,284,1.272,285,2.072,286,3.254,287,4.337,288,2.072,289,2.986,290,2.072,291,2.629,292,1.272,293,2.072,294,2.072,295,2.072,296,1.651,297,2.072,298,4.626,299,2.072,300,3.381,301,2.967,302,3.381,303,2.072,304,3.381,305,1.818,306,2.967,307,1.818,308,2.072,309,2.967,310,3.381,311,3.381,312,3.381,313,4.941,314,3.381,315,3.381,316,3.381,317,2.072,318,2.967,319,3.381,320,3.381,321,2.967,322,1.389,323,3.381,324,2.072,325,2.072,326,2.072,327,1.818,328,2.967,329,2.072,330,1.818,331,1.427,332,2.072,333,2.694,334,2.072,335,2.072,336,2.072,337,2.072]],["title/modules/AuthModule.html",[109,1.279,121,2.912]],["body/modules/AuthModule.html",[3,0.111,4,0.1,5,0.089,14,0.011,15,0.346,20,0.111,32,0.005,33,0.007,34,0.005,35,0.167,75,0.92,85,0.973,97,2.652,109,1.947,111,1.776,112,1.909,113,2.065,114,2.065,115,1.909,116,3.165,117,3.046,121,5.874,130,4.419,131,2.867,132,1.984,133,1.909,135,2.867,138,2.249,139,2.065,153,2.973,155,1.332,156,4.176,159,1.294,189,4.744,251,4.646,252,3.542,259,5.092,260,3.216,272,3.216,273,3.216,338,3.542,339,4.037,340,3.542,341,3.542,342,5.209,343,5.209,344,5.574,345,3.216,346,4.037,347,2.779,348,4.129,349,1.505,350,4.037,351,2.973,352,4.037,353,4.037,354,3.542,355,3.542,356,2.357,357,3.542,358,2.249,359,3.542,360,3.542,361,3.542,362,3.216]],["title/interfaces/AuthObj.html",[0,1.079,363,2.742]],["body/interfaces/AuthObj.html",[0,1.877,2,2.166,3,0.145,4,0.13,5,0.116,9,0.478,10,1.216,13,0.606,14,0.011,15,0.22,16,2.592,18,2.029,20,0.184,26,2.613,32,0.007,33,0.008,34,0.007,256,2.166,363,5.378,364,3.884,365,3.884,366,5.702,367,5.702,368,3.601,369,3.419,370,4.342,371,4.342,372,3.425,373,3.425,374,2.577]],["title/injectables/AuthService.html",[171,1.738,259,2.597]],["body/injectables/AuthService.html",[3,0.057,4,0.052,5,0.046,9,0.189,10,0.619,12,4.037,13,0.715,14,0.011,15,0.304,20,0.057,21,0.945,22,2.092,32,0.003,33,0.004,34,0.003,35,0.087,43,1.349,44,0.519,46,1.209,57,2.247,61,1.577,62,2.509,64,1.356,70,1.553,72,0.831,74,2.305,75,1.409,84,1.07,85,0.504,99,1.001,102,1.84,106,0.973,107,1.852,146,1.499,147,1.166,155,2.525,159,0.67,171,1.399,172,1.222,182,4.717,192,3.415,208,3.367,214,0.859,216,1.817,218,2.345,228,1.07,255,3.425,256,0.859,257,3.268,258,1.44,259,2.092,271,4.029,272,1.667,273,1.667,276,4.179,281,3.249,286,2.402,287,1.667,289,2.999,298,2.794,301,1.836,305,1.836,306,3.782,307,2.99,321,1.836,327,2.99,328,6.155,330,1.836,331,2.345,333,2.715,344,3.659,354,1.836,355,1.836,375,1.836,376,5.865,377,4.31,378,3.407,379,5.865,380,4.969,381,3.407,382,3.407,383,4.31,384,3.407,385,1.836,386,4.31,387,2.092,388,2.092,389,2.092,390,3.407,391,2.092,392,2.092,393,2.092,394,3.407,395,2.092,396,3.407,397,2.092,398,2.092,399,2.092,400,3.407,401,4.31,402,2.092,403,4.31,404,2.092,405,2.092,406,2.99,407,2.715,408,1.836,409,2.715,410,1.541,411,1.836,412,1.667,413,1.285,414,1.667,415,2.092,416,1.836,417,2.092,418,2.209,419,1.667,420,2.715,421,1.44,422,2.092,423,1.836,424,1.836,425,1.836,426,2.092,427,2.99,428,2.092,429,2.715,430,2.092,431,2.092,432,3.407,433,2.092,434,2.092,435,2.092,436,1.836,437,4.969,438,2.092,439,2.092,440,2.345,441,2.345,442,3.407,443,1.166,444,2.092,445,2.092,446,2.092,447,2.092,448,3.407,449,2.092,450,2.092,451,1.836,452,1.836,453,2.092,454,2.092,455,2.092,456,1.092,457,3.407,458,3.407,459,1.836,460,3.407,461,3.407,462,2.092,463,2.092,464,2.092,465,2.092,466,2.092,467,2.092,468,2.092,469,3.407]],["title/guards/AuthenticationGuard.html",[261,3.115,470,3.37]],["body/guards/AuthenticationGuard.html",[3,0.121,4,0.109,5,0.097,9,0.4,13,0.611,14,0.011,15,0.315,20,0.121,21,1.224,32,0.005,33,0.007,34,0.005,35,0.183,46,1.19,54,3.479,57,1.812,61,1.72,70,2.011,74,2.515,75,1.538,85,1.064,99,1.75,102,1.701,105,3.25,106,1.26,107,2.515,146,1.941,147,2.459,155,2.227,159,1.909,171,2.447,192,3.303,201,5.352,208,3.293,228,3.047,240,4.747,247,2.709,255,2.967,259,4.773,260,3.515,261,4.388,266,3.872,281,2.621,289,2.257,421,3.037,471,3.515,472,3.872,473,5.756,474,5.958,475,4.412,476,4.412,477,4.747,478,5.756,479,4.412,480,3.515,481,5.958,482,4.412,483,3.872,484,4.412,485,3.515,486,4.412,487,4.412,488,4.412,489,3.872]],["title/classes/AvatarUploadDto.html",[35,0.175,490,3.115]],["body/classes/AvatarUploadDto.html",[3,0.164,4,0.147,5,0.178,9,0.539,10,1.311,13,0.654,14,0.011,15,0.249,20,0.164,32,0.007,33,0.009,34,0.007,35,0.246,37,1.02,43,1.273,44,1.476,46,1.05,52,1.476,76,3.549,490,5.318,491,6.336,492,5.225,493,5.954,494,6.336,495,6.336,496,5.954]],["title/interfaces/BaseControllerOptions.html",[0,1.079,497,2.912]],["body/interfaces/BaseControllerOptions.html",[0,1.869,2,2.147,3,0.144,4,0.129,5,0.115,7,2.472,9,0.473,10,1.209,12,4.584,13,0.664,14,0.011,15,0.218,16,3.273,17,1.777,18,2.562,19,3.389,20,0.201,21,2.212,22,3.209,23,3.209,25,1.075,26,1.627,32,0.006,33,0.008,34,0.006,497,5.045,498,3.598,499,3.598,500,3.85,501,4.115,502,4.584,503,3.598,504,2.569,505,3.85,506,2.787,507,3.85,508,2.787,509,3.85,510,1.675,511,4.165]],["title/interfaces/BaseControllerWithAuthOptions.html",[0,1.079,502,2.912]],["body/interfaces/BaseControllerWithAuthOptions.html",[0,1.858,2,2.122,3,0.142,4,0.128,5,0.114,7,2.443,9,0.468,10,1.2,13,0.468,14,0.011,15,0.216,16,3.776,17,1.756,18,3.055,19,3.349,20,0.2,21,2.204,22,3.171,23,3.171,25,1.176,26,2.268,32,0.006,33,0.008,34,0.006,497,5.017,498,3.556,499,3.556,500,3.804,501,2.755,502,5.017,503,3.556,504,2.539,505,3.804,506,2.755,507,3.804,508,2.755,509,3.804,510,1.655,511,4.116]],["title/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.079,503,2.912]],["body/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.796,2,1.976,3,0.132,4,0.119,5,0.106,7,2.276,9,0.436,10,1.146,12,5.671,13,0.772,14,0.011,15,0.201,16,3.102,17,1.636,18,2.429,19,3.119,20,0.194,21,2.155,22,2.954,23,2.954,25,1.137,26,1.497,32,0.006,33,0.008,34,0.006,497,4.345,498,3.312,499,3.312,500,3.544,501,2.566,502,4.849,503,4.345,504,3.675,505,3.544,506,3.988,507,3.544,508,3.988,509,3.544,510,2.396,511,3.834]],["title/classes/BaseDto.html",[35,0.175,512,1.861]],["body/classes/BaseDto.html",[3,0.143,4,0.129,5,0.115,9,0.472,10,1.207,13,0.663,14,0.011,15,0.306,20,0.143,32,0.006,33,0.008,34,0.006,35,0.303,37,0.892,43,1.172,44,1.815,46,1.291,52,1.292,53,1.826,76,3.597,106,2.415,185,4.575,322,3.166,456,2.345,512,2.924,513,4.573,514,2.728,515,2.728,516,4.081,517,5.212,518,3.043,519,5.212,520,5.212,521,3.514,522,2.071]],["title/classes/BaseEntity.html",[35,0.175,523,2.256]],["body/classes/BaseEntity.html",[3,0.069,4,0.062,5,0.055,9,0.228,10,0.718,13,0.642,14,0.011,15,0.251,17,2.72,20,0.069,21,1.534,25,0.638,26,1.721,32,0.003,33,0.005,34,0.003,35,0.104,37,0.432,43,0.861,44,1.71,46,1.376,61,1.759,99,1.162,102,1.578,106,2.359,107,1.475,159,2.581,170,3.486,206,2.213,214,2.617,255,1.109,256,1.036,322,2.981,358,3.347,374,2.311,456,1.564,514,1.82,515,1.82,523,3.946,524,2.213,525,5.528,526,2.851,527,2.851,528,2.851,529,3.891,530,3.507,531,2.851,532,3.228,533,3.228,534,3.228,535,3.472,536,4.882,537,2.803,538,3.228,539,2.522,540,4.453,541,4.191,542,3.228,543,2.522,544,2.522,545,2.522,546,2.522,547,2.522,548,2.522,549,2.522,550,2.522,551,2.522,552,3.721,553,3.39,554,2.522,555,2.522,556,2.522,557,2.522,558,2.522,559,2.522,560,2.522,561,2.522,562,4.143,563,1.345,564,2.522,565,2.01,566,1.858,567,2.01,568,3.081,569,3.472,570,2.522,571,2.522,572,2.522,573,2.522,574,2.522,575,2.522,576,2.522,577,2.522,578,3.956,579,2.522,580,3.956,581,4.284,582,3.956]],["title/classes/CategoriesController.html",[35,0.175,583,3.115]],["body/classes/CategoriesController.html",[3,0.105,4,0.094,5,0.084,9,0.346,13,0.692,14,0.011,15,0.34,18,1.469,20,0.105,21,1.059,25,0.87,32,0.005,33,0.007,34,0.005,35,0.158,37,0.654,44,0.946,46,0.951,52,0.946,58,3.196,61,1.375,67,3.621,70,1.74,74,2.01,75,1.425,84,1.952,85,0.92,99,1.584,102,1.09,106,1.09,107,1.423,155,1.779,192,2.655,208,2.457,214,2.214,216,2.875,235,2.229,236,3.31,239,3.148,241,2.229,244,3.965,256,1.568,281,1.679,284,2.344,286,3.004,289,1.952,291,2.344,292,2.344,368,1.622,372,2.757,373,1.952,374,1.469,413,2.344,501,2.036,504,1.876,506,2.036,508,2.036,510,1.223,583,3.97,584,3.041,585,3.837,586,3.817,587,5.001,588,3.817,589,5.391,590,2.344,591,5.001,592,2.628,593,2.811,594,4.564,595,2.628,596,2.811,597,2.811,598,3.817,599,3.31,600,3.004,601,2.811,602,2.127,603,2.475,604,2.036,605,3.004,606,2.475,607,3.349,608,4.052,609,3.349,610,3.495,611,3.817,612,2.811,613,3.349,614,3.31,615,3.711,616,2.811,617,3.817,618,2.344,619,2.475,620,2.628,621,2.475,622,2.475,623,3.817,624,1.379,625,3.817,626,3.817,627,2.475]],["title/modules/CategoriesModule.html",[109,1.279,122,2.912]],["body/modules/CategoriesModule.html",[3,0.139,4,0.125,5,0.111,14,0.011,15,0.337,20,0.139,32,0.006,33,0.008,34,0.006,35,0.209,75,1.15,85,1.217,97,2.387,109,2.179,111,2.22,112,2.387,113,2.581,114,2.581,115,2.387,116,3.2,117,3.409,122,5.427,131,3.33,132,2.48,133,2.387,135,2.581,138,2.812,139,2.581,155,1.666,356,2.947,358,2.812,583,4.795,587,6.193,607,4.428,608,3.272,609,4.428,628,4.428,629,4.428,630,4.021,631,3.802,632,3.272,633,5.047,634,5.743,635,4.428,636,4.428,637,2.947,638,3.098]],["title/classes/Category.html",[35,0.175,608,2.742]],["body/classes/Category.html",[3,0.086,4,0.077,5,0.068,9,0.504,10,0.844,13,0.695,14,0.011,15,0.232,17,2.611,20,0.086,21,0.864,25,0.75,26,1.447,32,0.004,33,0.006,34,0.004,35,0.129,37,0.533,43,0.981,44,1.87,46,1.42,61,1.881,75,1.406,99,1.365,102,1.761,106,2.375,159,2.62,170,3.245,214,2.948,322,2.534,349,1.16,374,2.141,456,1.489,514,1.733,515,1.733,523,4.437,526,2.714,527,2.714,528,2.714,529,3.603,530,3.248,531,2.714,532,3.248,533,3.248,534,3.248,537,3.046,538,3.855,540,4.044,541,3.438,542,3.603,552,3.248,553,3.032,562,2.714,563,1.66,568,1.735,608,3.013,639,2.731,640,1.847,641,3.013,642,3.013,643,3.415,644,3.2,645,3.113,646,3.637,647,1.911,648,1.911,649,1.911,650,1.911,651,1.911,652,1.911,653,1.911,654,1.911,655,1.911,656,1.911,657,1.911,658,1.911,659,1.911,660,1.16,661,1.911,662,1.911,663,1.911]],["title/classes/CategoryDto.html",[35,0.175,594,2.597]],["body/classes/CategoryDto.html",[3,0.129,4,0.116,5,0.103,9,0.425,10,1.128,13,0.698,14,0.011,15,0.309,20,0.171,25,1.123,32,0.006,33,0.008,34,0.006,35,0.306,37,0.804,43,1.359,44,1.91,46,1.359,53,1.646,75,1.587,106,2.26,322,2.551,349,1.75,456,1.99,510,1.505,512,3.481,514,2.316,515,2.316,516,3.814,518,2.742,521,3.173,522,1.866,594,3.814,610,3.044,640,1.866,646,3.173,660,1.75,664,3.741,665,2.367,666,3.458,667,4.695,668,4.695,669,4.695,670,3.044,671,3.044,672,3.044,673,2.831,674,2.308,675,2.504,676,2.308,677,4.12]],["title/interfaces/Cloudinary.html",[0,1.079,678,2.47]],["body/interfaces/Cloudinary.html",[0,1.852,2,1.835,3,0.123,4,0.11,5,0.098,9,0.405,10,1.091,13,0.615,14,0.011,17,1.519,20,0.123,26,1.391,32,0.006,33,0.007,34,0.006,43,1.533,72,2.698,75,1.817,146,2.643,159,1.432,164,4.24,440,4.137,441,4.137,678,4.425,679,3.076,680,5.488,681,5.58,682,4.137,683,4.998,684,3.896,685,4.458,686,4.137,687,4.426,688,4.426,689,4.426,690,4.426,691,4.426,692,3.291,693,3.291,694,3.291,695,3.291,696,3.291,697,3.291,698,3.291,699,3.291,700,3.076,701,3.076,702,3.291,703,3.291,704,3.291,705,3.291,706,3.291,707,3.291,708,3.291]],["title/interfaces/Configuration.html",[0,1.079,146,1.861]],["body/interfaces/Configuration.html",[0,1.75,2,1.606,3,0.107,4,0.097,5,0.086,9,0.354,10,0.996,13,0.74,14,0.011,17,1.33,20,0.107,26,1.971,32,0.005,33,0.007,34,0.005,43,1.528,72,3.058,75,1.565,146,2.785,159,1.253,164,4.66,440,4.975,441,4.975,678,4.66,679,2.692,680,4.725,681,4.038,682,3.775,683,5.296,684,3.555,685,4.899,686,3.775,687,5.323,688,5.323,689,5.323,690,5.323,691,5.323,692,2.88,693,2.88,694,2.88,695,2.88,696,2.88,697,2.88,698,2.88,699,2.88,700,2.692,701,2.692,702,2.88,703,2.88,704,2.88,705,2.88,706,2.88,707,2.88,708,2.88]],["title/interfaces/ControllerAuth.html",[0,1.079,369,2.742]],["body/interfaces/ControllerAuth.html",[0,1.823,2,2.038,3,0.136,4,0.123,5,0.109,9,0.449,10,1.169,13,0.71,14,0.011,15,0.207,16,2.438,18,1.909,20,0.177,26,2.501,32,0.006,33,0.008,34,0.006,256,2.038,363,5.647,364,3.654,365,3.654,366,3.654,367,3.654,368,3.475,369,4.175,370,5.083,371,5.083,372,4.01,373,4.01,374,3.017]],["title/classes/Course.html",[35,0.175,709,2.912]],["body/classes/Course.html",[3,0.074,4,0.067,5,0.059,9,0.461,10,0.756,13,0.701,14,0.011,15,0.213,17,2.598,20,0.074,21,0.747,25,0.672,26,1.296,32,0.003,33,0.005,34,0.003,35,0.111,37,0.461,43,1.204,44,1.894,46,1.417,61,1.798,72,1.654,99,1.223,102,1.635,106,2.411,159,2.69,170,3.557,214,2.973,322,2.352,349,1.004,374,1.958,456,1.334,514,1.552,515,1.552,523,4.341,526,2.431,527,2.431,528,2.431,529,3.344,530,2.972,531,2.431,532,2.972,533,2.972,534,2.972,537,2.88,538,4.118,540,3.823,541,3.191,542,3.344,552,2.972,553,2.814,562,3.616,563,1.436,568,3.191,624,2.069,640,2.602,641,3.713,642,3.713,643,4.191,644,2.866,646,3.528,647,1.653,648,1.653,649,1.653,650,1.653,651,1.653,652,1.653,653,1.653,654,1.653,655,1.653,656,1.653,657,1.653,658,1.653,659,1.653,660,1.004,661,1.653,662,1.653,663,1.653,665,1.731,709,2.866,710,2.363,711,4.055,712,3.748,713,2.692,714,2.32,715,2.692,716,2.692,717,2.692,718,1.853,719,2.692]],["title/classes/CourseDto.html",[35,0.175,720,2.742]],["body/classes/CourseDto.html",[3,0.116,4,0.105,5,0.093,9,0.383,10,1.051,13,0.712,14,0.011,15,0.321,20,0.159,25,1.065,32,0.005,33,0.007,34,0.005,35,0.294,37,0.725,43,1.386,44,1.904,45,4.614,46,1.386,52,1.049,53,1.483,72,2.301,76,3.245,106,2.318,322,2.379,349,1.577,456,1.856,510,1.356,512,3.377,514,2.159,515,2.159,516,3.556,518,2.471,521,3.236,522,1.682,624,2.386,640,1.682,646,3.01,660,1.577,665,2.245,670,2.743,671,2.743,672,2.743,673,2.64,674,2.079,675,2.256,676,2.079,711,5.261,712,4.863,720,3.754,721,3.371,722,4.231,723,4.231,724,4.231,725,4.231,726,4.231,727,4.231,728,4.231,729,3.382,730,2.743,731,3.713,732,2.913,733,3.713]],["title/classes/CoursesController.html",[35,0.175,734,3.115]],["body/classes/CoursesController.html",[3,0.106,4,0.095,5,0.085,9,0.348,13,0.693,14,0.011,15,0.34,18,1.478,20,0.106,21,1.066,25,0.62,32,0.005,33,0.007,34,0.005,35,0.159,37,0.658,44,0.953,46,0.955,52,0.953,58,3.208,61,1.381,67,3.632,70,1.751,74,2.019,75,1.234,84,1.965,85,0.926,99,1.591,102,1.097,106,1.097,107,1.432,155,1.268,192,2.665,208,2.469,214,2.224,216,2.888,235,2.244,236,3.325,239,3.163,241,2.244,244,3.977,256,1.578,281,1.69,284,2.359,286,3.018,289,1.965,291,2.359,292,2.359,368,1.632,372,3.208,373,1.965,374,1.478,413,2.359,501,2.049,504,1.888,506,2.049,508,2.049,510,1.231,590,2.359,592,2.645,593,2.83,595,2.645,596,2.83,597,2.83,599,3.325,600,3.018,601,2.83,602,2.141,603,2.491,604,2.049,605,3.018,606,2.491,612,2.83,614,3.851,615,4.317,616,2.83,618,2.359,619,2.491,620,2.645,621,2.491,622,2.491,624,1.957,627,2.491,709,4.317,720,4.415,732,3.728,734,3.989,735,3.371,736,3.842,737,5.016,738,3.842,739,5.416,740,5.487,741,3.842,742,3.371,743,3.371,744,3.842,745,3.371,746,3.842,747,3.842,748,2.83,749,3.371]],["title/modules/CoursesModule.html",[109,1.279,123,2.912]],["body/modules/CoursesModule.html",[3,0.135,4,0.122,5,0.108,14,0.011,15,0.335,20,0.135,32,0.006,33,0.008,34,0.006,35,0.204,75,1.121,85,1.186,97,2.327,109,2.153,111,2.164,112,2.327,113,2.516,114,2.516,115,2.327,116,3.499,117,3.368,123,5.62,131,3.275,132,2.418,133,2.327,135,2.516,138,2.741,139,2.516,155,1.624,356,2.873,358,2.741,631,3.74,632,3.189,637,2.873,638,3.02,709,3.386,734,4.717,737,6.334,742,4.317,743,4.317,750,4.317,751,4.317,752,4.317,753,3.92,754,4.919,755,5.673,756,4.317,757,4.317]],["title/classes/CreateCategoryDto.html",[35,0.175,591,3.115]],["body/classes/CreateCategoryDto.html",[3,0.171,4,0.154,5,0.137,14,0.011,15,0.31,20,0.171,25,1.005,32,0.008,33,0.009,34,0.008,35,0.258,37,1.067,51,3.824,52,1.544,75,1.42,591,5.464,594,3.824,613,5.466,665,2.118,758,5.466,759,5.466,760,6.229]],["title/classes/CreateCourseDto.html",[35,0.175,740,3.115]],["body/classes/CreateCourseDto.html",[3,0.171,4,0.153,5,0.137,14,0.011,15,0.309,20,0.171,25,1.002,32,0.008,33,0.009,34,0.008,35,0.257,37,1.063,51,3.811,52,1.539,624,2.243,665,2.111,712,4.571,720,4.024,740,5.453,745,5.447,761,5.447,762,5.447,763,6.207]],["title/classes/CreateStageDto.html",[35,0.175,764,2.912]],["body/classes/CreateStageDto.html",[3,0.154,4,0.138,5,0.123,9,0.506,10,1.262,13,0.506,14,0.011,15,0.33,20,0.154,25,0.903,32,0.007,33,0.009,34,0.007,35,0.313,37,0.958,43,1.226,44,1.387,46,0.986,51,3.434,52,1.387,53,1.96,185,4.784,518,3.266,521,3.168,522,2.223,624,2.021,665,1.902,764,4.784,765,6.098,766,4.908,767,3.325,768,5.594,769,3.434,770,4.908,771,5.594,772,3.85]],["title/classes/CreateTaskDto.html",[35,0.175,773,2.912]],["body/classes/CreateTaskDto.html",[3,0.166,4,0.15,5,0.133,14,0.011,15,0.327,20,0.166,25,0.977,32,0.008,33,0.009,34,0.008,35,0.302,37,1.037,52,1.502,456,1.941,514,2.258,515,2.258,522,2.407,673,3.326,773,5.022,774,5.315,775,5.315,776,3.927,777,3.719,778,5.315,779,6.057]],["title/classes/CreateTrackDto.html",[35,0.175,780,2.912]],["body/classes/CreateTrackDto.html",[3,0.171,4,0.153,5,0.137,14,0.011,15,0.309,20,0.171,25,1.002,32,0.008,33,0.009,34,0.008,35,0.257,37,1.063,52,1.539,456,1.989,514,2.314,515,2.314,776,4.024,780,5.097,781,5.447,782,5.447,783,3.459,784,6.207,785,6.207]],["title/classes/CreateUserDto.html",[35,0.175,786,2.742]],["body/classes/CreateUserDto.html",[3,0.171,4,0.153,5,0.137,14,0.011,15,0.309,20,0.171,25,1.002,32,0.008,33,0.009,34,0.008,35,0.257,37,1.063,52,1.539,254,3.625,456,1.989,514,2.314,515,2.314,776,4.024,786,4.8,787,5.447,788,4.571,789,3.31,790,4.946]],["title/interfaces/Database.html",[0,1.079,164,2.47]],["body/interfaces/Database.html",[0,1.838,2,1.803,3,0.121,4,0.109,5,0.097,9,0.398,10,1.078,13,0.653,14,0.011,17,1.493,20,0.121,26,1.366,32,0.005,33,0.007,34,0.005,43,1.53,72,2.993,75,1.809,146,2.612,159,1.407,164,4.398,440,4.088,441,4.088,678,4.21,679,3.022,680,4.962,681,4.373,682,5.184,683,5.464,684,4.883,685,4.426,686,4.088,687,4.373,688,4.373,689,4.373,690,4.373,691,4.373,692,3.233,693,3.233,694,3.233,695,3.233,696,3.233,697,3.233,698,3.233,699,3.233,700,3.022,701,3.022,702,3.233,703,3.233,704,3.233,705,3.233,706,3.233,707,3.233,708,3.233]],["title/modules/DbTest.html",[109,1.279,791,3.37]],["body/modules/DbTest.html",[3,0.144,4,0.129,5,0.115,14,0.011,15,0.306,20,0.183,21,1.451,32,0.006,33,0.008,34,0.006,35,0.216,85,1.26,107,1.949,109,2.013,111,2.299,117,2.472,135,2.673,138,2.913,139,2.673,155,2.547,159,2.348,166,4.165,167,4.165,168,4.165,169,4.165,170,2.569,192,2.221,281,2.299,425,4.587,684,4.317,700,3.598,701,3.598,791,5.306,792,4.165,793,4.165,794,5.843,795,5.227,796,5.227,797,5.227,798,5.227,799,5.227,800,5.227,801,5.306,802,4.165,803,5.839,804,4.587,805,4.587,806,4.587]],["title/interfaces/DefaultAuthObject.html",[0,1.079,16,2.079]],["body/interfaces/DefaultAuthObject.html",[0,1.752,2,1.878,3,0.126,4,0.113,5,0.101,9,0.414,10,1.108,13,0.691,14,0.011,15,0.191,16,2.999,18,1.76,20,0.168,26,2.686,32,0.006,33,0.008,34,0.006,61,2.125,256,1.878,363,5.093,364,3.368,365,3.368,366,3.368,367,3.368,368,3.679,369,2.965,370,4.951,371,4.951,372,3.906,373,3.906,374,2.938]],["title/classes/FindDto.html",[35,0.175,807,3.37]],["body/classes/FindDto.html",[3,0.138,4,0.124,5,0.11,9,0.454,10,1.178,13,0.688,14,0.011,15,0.21,17,2.206,20,0.138,32,0.006,33,0.008,34,0.006,35,0.268,37,0.859,43,1.34,44,1.884,46,1.34,53,1.759,61,2.12,72,3.02,499,4.948,537,2.853,714,3.615,807,5.169,808,4.403,809,6.308,810,7.188,811,7.188,812,6.487,813,5.036,814,5.018,815,5.018,816,5.018,817,5.018,818,5.018,819,5.018,820,7.188]],["title/classes/HttpExceptionFilter.html",[35,0.175,821,3.37]],["body/classes/HttpExceptionFilter.html",[3,0.123,4,0.11,5,0.098,9,0.405,13,0.405,14,0.011,15,0.284,20,0.123,21,1.24,32,0.006,33,0.007,34,0.006,35,0.185,37,0.765,43,0.788,46,0.788,58,3.073,61,1.139,62,3.291,63,5.273,65,5.273,68,5.958,74,1.666,75,1.019,84,2.285,85,1.077,99,1.765,102,1.276,155,2.71,200,4.788,247,2.743,250,5.273,406,3.921,421,4.137,429,5.41,436,3.921,541,3.349,553,2.196,682,4.674,821,4.788,822,5.273,823,3.921,824,6.79,825,6.009,826,7.261,827,4.468,828,6.009,829,4.468,830,4.468,831,4.468,832,4.468,833,4.468,834,4.468,835,4.468,836,4.468,837,6.009,838,4.468,839,6.009,840,4.468,841,4.468,842,4.468,843,4.468,844,4.468,845,3.56,846,4.468,847,6.79,848,3.921,849,4.468,850,4.468,851,4.468]],["title/interfaces/IBaseController.html",[0,1.079,852,3.37]],["body/interfaces/IBaseController.html",[0,1.131,2,1.821,3,0.122,4,0.11,5,0.098,9,0.402,13,0.684,14,0.011,20,0.122,32,0.005,33,0.007,34,0.005,43,1.446,46,1.333,61,1.927,74,2.817,75,1.723,99,1.756,102,2.158,208,3.778,216,4.152,371,3.876,372,3.058,373,3.058,374,2.3,456,1.916,498,5.36,505,5.734,507,4.981,509,4.981,553,2.938,590,3.671,852,4.764,853,3.891,854,5.979,855,4.434,856,5.979,857,4.434,858,5.979,859,6.764,860,4.434,861,5.979,862,5.979,863,4.434,864,5.979,865,4.434]],["title/interfaces/IPagedListDto.html",[0,1.079,866,3.37]],["body/interfaces/IPagedListDto.html",[0,1.365,2,2.199,3,0.147,4,0.132,5,0.118,9,0.485,10,1.228,13,0.727,14,0.011,15,0.309,20,0.186,23,4.929,32,0.007,33,0.008,34,0.007,35,0.222,52,1.328,72,3.094,76,3.323,85,1.291,107,1.996,421,3.686,504,3.323,510,1.716,866,5.905,867,4.266,868,4.266,869,7.044,870,8.028,871,4.699,872,5.355,873,3.944,874,6.762]],["title/injectables/JwtAuthGuard.html",[171,1.738,604,2.256]],["body/injectables/JwtAuthGuard.html",[3,0.143,4,0.129,5,0.115,9,0.472,13,0.472,14,0.011,15,0.332,20,0.143,25,0.841,26,2.069,32,0.006,33,0.008,34,0.006,35,0.216,46,0.919,61,1.329,74,1.943,75,1.188,85,1.256,99,1.953,102,1.488,107,1.943,146,2.292,147,2.904,159,1.67,171,2.73,172,3.043,208,3.03,347,3.587,348,3.838,349,1.943,473,5.831,477,4.152,478,6.141,480,5.296,485,4.152,604,3.544,875,5.832,876,4.573,877,5.212,878,7.318,879,5.212,880,4.573,881,5.212,882,5.212,883,5.212]],["title/interfaces/JwtPayload.html",[0,1.079,418,2.742]],["body/interfaces/JwtPayload.html",[0,1.483,2,2.389,3,0.16,4,0.144,5,0.128,9,0.527,10,1.292,13,0.697,14,0.011,15,0.243,20,0.16,32,0.007,33,0.009,34,0.007,43,1.476,57,3.293,182,5.518,256,2.389,368,3.406,418,4.615,443,4.467,884,5.104,885,5.104]],["title/injectables/JwtStrategy.html",[171,1.738,342,2.912]],["body/injectables/JwtStrategy.html",[3,0.139,4,0.125,5,0.111,9,0.458,13,0.458,14,0.011,15,0.33,20,0.139,25,0.817,32,0.006,33,0.008,34,0.006,35,0.209,46,1.15,61,1.291,70,3.29,74,1.887,75,1.154,85,1.22,99,1.916,102,1.445,107,1.887,146,2.226,147,2.82,170,2.487,171,2.679,172,2.955,192,3.067,208,2.974,342,4.49,347,3.484,410,3.728,418,4.943,419,4.033,420,6.075,886,4.441,887,6.334,888,5.061,889,5.061,890,7.218,891,5.061,892,5.061,893,5.061,894,5.061,895,4.441,896,5.061,897,5.061,898,5.061,899,5.061,900,5.061,901,5.061,902,5.061]],["title/classes/LoginReqDto.html",[35,0.175,54,2.47]],["body/classes/LoginReqDto.html",[3,0.167,4,0.15,5,0.134,14,0.011,15,0.305,20,0.201,25,0.981,32,0.008,33,0.009,34,0.008,35,0.303,37,1.041,43,1.072,51,3.732,52,1.507,54,4.269,57,2.497,210,3.732,228,3.109,253,4.843,254,3.549,265,4.184,280,4.843,903,4.843,904,5.333]],["title/classes/LoginResDto.html",[35,0.175,265,2.912]],["body/classes/LoginResDto.html",[3,0.161,4,0.145,5,0.129,9,0.532,10,1.3,13,0.532,14,0.011,15,0.299,20,0.197,25,0.948,32,0.007,33,0.009,34,0.007,35,0.296,37,1.006,43,1.263,46,1.036,51,3.607,52,1.457,54,3.43,57,2.413,210,3.607,228,3.005,253,4.681,254,3.43,265,4.93,280,6.156,903,4.681,904,5.155,905,5.875]],["title/modules/MailModule.html",[109,1.279,124,2.912]],["body/modules/MailModule.html",[3,0.154,4,0.139,5,0.123,14,0.011,15,0.291,20,0.154,32,0.007,33,0.009,34,0.007,35,0.232,85,1.353,109,2.289,111,2.468,112,2.654,113,2.87,114,2.87,115,2.654,116,3.721,117,3.581,124,5.789,131,3.561,132,2.758,133,2.654,251,5.349,906,4.924,907,4.924,908,5.612,909,5.612,910,5.612]],["title/injectables/MailService.html",[171,1.738,251,2.597]],["body/injectables/MailService.html",[3,0.16,4,0.106,5,0.094,9,0.388,10,1.06,13,0.529,14,0.011,15,0.312,17,1.456,18,1.648,20,0.118,32,0.005,33,0.007,34,0.005,35,0.177,46,1.317,61,1.092,70,3.029,74,1.597,75,0.976,85,1.033,99,1.715,102,1.667,106,1.897,146,2.922,147,2.387,155,1.927,156,4.307,171,2.398,172,2.501,192,2.823,251,3.585,276,5.277,281,1.884,309,5.124,407,3.412,537,1.884,553,2.105,685,2.63,686,2.948,911,3.758,912,6.644,913,7.136,914,5.839,915,5.839,916,4.283,917,5.839,918,6.644,919,4.283,920,4.283,921,4.283,922,6.644,923,3.758,924,5.83,925,5.839,926,3.758,927,4.283,928,4.283,929,4.283,930,4.283,931,4.283,932,3.758,933,4.283,934,4.283,935,4.283,936,4.283,937,4.283,938,4.283,939,5.839,940,3.758,941,4.283,942,4.283,943,4.283,944,4.283,945,4.283,946,4.283,947,4.283]],["title/interfaces/Mailer.html",[0,1.079,685,2.597]],["body/interfaces/Mailer.html",[0,1.865,2,1.869,3,0.125,4,0.112,5,0.1,9,0.412,10,1.104,13,0.551,14,0.011,17,1.547,20,0.125,26,1.416,32,0.006,33,0.008,34,0.006,43,1.526,72,2.723,75,1.667,146,2.675,159,1.458,164,4.271,440,4.187,441,4.187,678,4.271,679,3.132,680,5.514,681,4.479,682,4.187,683,5.035,684,3.943,685,4.68,686,5.247,687,4.479,688,4.479,689,4.479,690,4.479,691,4.479,692,3.351,693,3.351,694,3.351,695,3.351,696,3.351,697,3.351,698,3.351,699,3.351,700,3.132,701,3.132,702,3.351,703,3.351,704,3.351,705,3.351,706,3.351,707,3.351,708,3.351]],["title/classes/PagedCategoryOutDto.html",[35,0.175,610,2.742]],["body/classes/PagedCategoryOutDto.html",[3,0.157,4,0.141,5,0.126,14,0.011,15,0.333,20,0.194,25,1.137,32,0.007,33,0.009,34,0.007,35,0.33,37,0.98,43,1.243,53,2.005,75,1.304,349,2.133,510,1.833,512,3.1,521,3.481,522,2.274,594,3.513,610,4.569,640,2.274,660,2.133,664,4.559,665,1.945,673,3.212,674,2.812,675,3.051,676,2.812,677,5.02]],["title/classes/PagedCourseOutputDto.html",[35,0.175,732,2.912]],["body/classes/PagedCourseOutputDto.html",[3,0.147,4,0.132,5,0.117,14,0.011,15,0.342,20,0.185,25,1.089,32,0.007,33,0.008,34,0.007,35,0.322,37,0.914,43,1.305,45,5.377,52,1.324,53,1.871,72,2.122,76,3.637,106,1.524,349,1.99,510,1.711,512,2.969,521,3.545,522,2.122,624,1.929,640,2.122,660,1.99,665,1.815,673,3.076,674,2.624,675,2.847,676,2.624,711,4.253,712,3.932,720,3.461,721,4.253,729,3.941,730,3.461,731,4.684,732,4.646,733,4.684]],["title/classes/PagedListStageDto.html",[35,0.175,948,2.742]],["body/classes/PagedListStageDto.html",[3,0.142,4,0.127,5,0.113,13,0.466,14,0.011,15,0.345,20,0.181,25,1.064,32,0.006,33,0.008,34,0.006,35,0.318,37,0.882,43,1.163,52,1.277,53,1.805,72,2.047,76,3.242,349,1.92,510,1.65,512,2.902,521,3.616,522,2.047,624,1.861,640,2.047,660,1.92,665,1.751,673,3.007,674,2.531,675,2.747,676,2.531,714,2.87,729,3.852,730,3.339,767,2.265,769,3.162,772,3.545,783,4.056,813,4.05,948,4.277,949,4.104,950,5.788,951,4.519,952,4.519,953,4.519,954,4.519]],["title/classes/PagedListTaskDto.html",[35,0.175,955,2.742]],["body/classes/PagedListTaskDto.html",[3,0.139,4,0.125,5,0.112,13,0.654,14,0.011,15,0.33,20,0.18,25,1.054,32,0.006,33,0.008,34,0.006,35,0.316,37,0.869,43,1.346,52,1.259,53,1.779,64,3.291,76,3.212,185,4.975,322,3.244,349,1.892,510,1.627,512,2.875,521,3.685,522,2.017,624,1.834,640,2.017,660,1.892,665,1.726,673,2.979,674,2.495,675,2.707,676,2.495,729,3.816,767,2.233,777,3.116,813,4.012,955,4.237,956,4.044,957,5.734,958,4.454,959,2.495,960,4.454,961,4.044,962,4.044,963,4.454]],["title/classes/PagedTrackOutputDto.html",[35,0.175,964,2.742]],["body/classes/PagedTrackOutputDto.html",[3,0.154,4,0.139,5,0.123,14,0.011,15,0.34,20,0.191,25,1.124,32,0.007,33,0.009,34,0.007,35,0.328,37,0.961,43,1.228,53,1.967,349,2.092,510,1.798,512,3.063,521,3.451,522,2.23,624,2.028,640,2.23,660,2.092,665,1.908,673,3.174,674,2.758,675,2.992,676,2.758,729,4.066,730,3.638,783,3.127,964,4.514,965,4.471,966,4.924]],["title/classes/PagedUserOutputDto.html",[35,0.175,967,2.742]],["body/classes/PagedUserOutputDto.html",[3,0.122,4,0.11,5,0.098,13,0.404,14,0.011,15,0.326,20,0.165,25,0.968,32,0.006,33,0.007,34,0.006,35,0.3,37,0.763,43,1.429,52,1.105,53,1.562,57,1.831,64,2.889,72,2.384,76,3.721,106,2.071,159,2.324,187,5.403,188,3.551,349,1.662,368,2.881,443,2.484,510,1.428,512,2.639,521,3.781,522,1.771,640,1.771,660,1.662,663,2.736,665,1.516,673,2.735,674,2.19,676,2.19,789,2.377,813,4.648,967,3.889,968,3.551,969,5.264,970,3.911,971,3.911,972,3.911,973,3.911,974,6.365,975,3.551,976,3.551,977,3.911,978,3.068,979,3.551,980,3.911,981,3.911,982,5.264,983,3.911,984,3.911,985,3.911,986,3.551,987,3.911,988,3.551,989,2.889,990,2.889,991,3.911]],["title/controllers/ProfileController.html",[7,2.001,992,3.115]],["body/controllers/ProfileController.html",[3,0.079,4,0.071,5,0.13,7,1.361,9,0.261,13,0.652,14,0.011,15,0.324,20,0.079,21,1.646,32,0.004,33,0.005,34,0.004,35,0.181,44,1.315,46,0.936,52,0.714,57,1.182,61,1.353,67,3.585,74,1.978,75,1.209,84,1.472,85,0.694,97,1.361,99,1.287,102,1.515,105,2.12,106,0.822,107,1.633,155,2.307,159,2.154,191,2.525,192,3.135,200,6.096,201,5.181,208,3.064,214,1.8,216,2.829,235,1.681,237,2.293,238,2.12,239,1.681,241,1.681,244,3.463,245,2.525,247,2.69,255,3.168,256,1.182,257,2.442,258,1.981,276,1.866,278,2.293,281,2.807,286,1.604,289,3.033,456,2.045,490,3.227,522,1.144,537,1.927,599,3.641,604,1.535,618,3.257,665,0.979,789,3.727,992,3.227,993,2.525,994,2.878,995,4.381,996,4.381,997,4.381,998,2.878,999,2.878,1000,2.878,1001,2.878,1002,4.367,1003,2.878,1004,2.878,1005,2.878,1006,2.878,1007,2.878,1008,4.381,1009,4.381,1010,4.381,1011,2.878,1012,2.878,1013,2.878,1014,2.878,1015,3.844,1016,2.878,1017,2.878,1018,2.878,1019,2.878,1020,2.525,1021,3.491,1022,2.878,1023,2.878,1024,2.878,1025,2.878,1026,2.878,1027,2.878,1028,2.878,1029,2.878,1030,2.878,1031,3.439,1032,2.525,1033,2.878,1034,2.878,1035,2.525,1036,4.655,1037,2.878,1038,2.878,1039,2.878,1040,5.305,1041,5.305,1042,5.305,1043,2.878,1044,4.381,1045,4.381,1046,2.878,1047,4.381,1048,2.878,1049,2.878,1050,2.878,1051,2.878,1052,2.878,1053,2.878,1054,2.878,1055,4.381,1056,5.305,1057,2.878,1058,2.878,1059,2.878,1060,2.878,1061,2.878,1062,2.878,1063,2.878,1064,2.878,1065,2.878]],["title/modules/ProfileModule.html",[109,1.279,125,2.912]],["body/modules/ProfileModule.html",[3,0.137,4,0.123,5,0.11,14,0.011,15,0.328,20,0.137,32,0.006,33,0.008,34,0.006,35,0.206,85,1.203,97,3.057,109,2.167,111,2.195,112,2.36,113,2.552,114,2.552,115,2.36,116,3.523,117,3.391,125,5.867,130,4.7,131,3.305,132,2.452,133,2.36,135,3.305,153,3.675,257,4.485,258,3.434,992,5.28,1031,5.558,1032,4.378,1066,4.378,1067,4.989,1068,4.378,1069,4.378,1070,4.989,1071,4.989]],["title/injectables/ProfileService.html",[171,1.738,1031,2.742]],["body/injectables/ProfileService.html",[3,0.118,4,0.106,5,0.128,9,0.388,10,1.06,13,0.529,14,0.011,15,0.329,20,0.118,21,1.189,32,0.005,33,0.007,34,0.005,35,0.177,43,1.172,46,1.172,61,1.489,70,1.952,74,2.177,75,1.331,85,1.033,99,1.715,102,1.223,106,1.223,139,2.19,146,2.568,147,2.387,155,2.355,156,2.777,159,1.372,171,2.398,172,2.501,182,5.14,192,2.823,208,2.662,255,1.884,256,1.759,281,2.568,563,2.284,678,3.88,845,3.412,932,3.758,989,2.777,1031,3.786,1072,3.758,1073,6.644,1074,5.839,1075,4.283,1076,6.261,1077,5.839,1078,5.839,1079,5.839,1080,4.283,1081,4.283,1082,5.83,1083,4.283,1084,5.839,1085,4.283,1086,3.758,1087,4.283,1088,4.283,1089,4.283,1090,4.283,1091,4.283,1092,4.283,1093,4.283,1094,4.283,1095,4.283,1096,4.283,1097,5.839,1098,4.283,1099,4.283,1100,4.283,1101,4.283,1102,4.283,1103,4.283,1104,3.758]],["title/classes/RegisterUserDto.html",[35,0.175,210,2.597]],["body/classes/RegisterUserDto.html",[3,0.152,4,0.137,5,0.121,9,0.5,10,1.252,13,0.5,14,0.011,15,0.314,20,0.189,25,0.891,26,1.719,32,0.007,33,0.009,34,0.007,35,0.311,37,0.946,43,1.216,44,1.369,46,0.974,52,1.369,53,1.936,106,1.577,210,4.233,213,3.802,228,3.845,254,3.225,296,4.401,443,3.078,456,1.77,514,2.059,515,2.059,776,3.581,788,4.068,789,2.945,790,4.401,989,3.581,990,3.581,1105,5.494,1106,6.05,1107,5.523,1108,4.846]],["title/classes/RegisterUserResDto.html",[35,0.175,213,2.912]],["body/classes/RegisterUserResDto.html",[3,0.152,4,0.137,5,0.122,9,0.502,10,1.254,13,0.502,14,0.011,15,0.314,20,0.19,25,0.894,26,2.15,32,0.007,33,0.009,34,0.007,35,0.311,37,0.949,43,0.977,46,0.977,52,1.374,53,1.942,106,2.149,210,3.402,213,4.755,228,2.834,254,3.235,296,5.998,443,3.088,456,1.775,514,2.066,515,2.066,776,3.592,788,4.081,789,2.955,790,4.415,989,3.592,990,3.592,1105,5.504,1106,4.862,1108,4.862,1109,5.541]],["title/classes/ResetPassInput.html",[35,0.175,218,2.912]],["body/classes/ResetPassInput.html",[3,0.155,4,0.139,5,0.124,9,0.51,10,1.267,13,0.632,14,0.011,15,0.291,20,0.155,25,1.126,32,0.007,33,0.009,34,0.007,35,0.289,37,0.964,43,1.337,44,1.73,46,1.23,48,6.315,53,1.973,218,4.803,231,5.456,270,4.94,298,4.523,333,6.041,646,2.566,887,4.94,1110,6.122,1111,4.94,1112,5.63,1113,5.63]],["title/guards/RolesGuard.html",[470,3.37,605,2.357]],["body/guards/RolesGuard.html",[3,0.132,4,0.119,5,0.106,9,0.436,13,0.572,14,0.011,15,0.333,20,0.132,26,1.964,32,0.006,33,0.008,34,0.006,35,0.199,46,1.113,61,1.61,70,2.193,74,2.353,75,1.439,85,1.16,99,1.854,102,1.374,105,3.544,107,2.353,146,2.116,147,2.681,155,2.325,159,1.542,171,2.593,201,4.345,247,2.954,256,1.976,368,2.682,418,4.092,419,3.834,420,3.834,421,3.312,443,2.681,471,3.834,473,5.958,477,5.029,478,5.958,480,3.834,483,4.222,485,3.834,489,4.222,602,3.517,605,3.517,1114,4.222,1115,4.811,1116,7.969,1117,4.811,1118,4.811,1119,4.222,1120,4.811,1121,4.811,1122,4.811]],["title/injectables/SessionSerializer.html",[171,1.738,343,2.912]],["body/injectables/SessionSerializer.html",[3,0.133,4,0.12,5,0.106,9,0.438,13,0.574,14,0.011,15,0.295,20,0.133,25,1.022,32,0.006,33,0.008,34,0.006,35,0.2,46,1.117,61,1.615,62,4.665,74,2.362,75,1.444,85,1.166,99,1.861,102,1.809,171,2.602,172,2.825,255,3.833,256,1.987,343,4.361,347,3.33,553,3.683,873,4.665,923,4.245,1123,4.245,1124,7.063,1125,6.335,1126,6.335,1127,6.335,1128,7.981,1129,7.494,1130,6.335,1131,4.838,1132,6.335,1133,4.838,1134,6.335,1135,4.838]],["title/modules/SharedModule.html",[109,1.279,126,2.912]],["body/modules/SharedModule.html",[3,0.172,4,0.155,5,0.138,14,0.011,15,0.262,20,0.172,32,0.008,33,0.009,34,0.008,35,0.26,85,1.513,109,2.253,111,2.759,116,3.083,117,2.967,126,5.129,135,3.209,1136,6.274,1137,7.451]],["title/classes/Stage.html",[35,0.175,959,2.079]],["body/classes/Stage.html",[3,0.073,4,0.065,5,0.058,9,0.455,10,0.744,13,0.698,14,0.011,15,0.256,17,2.586,20,0.073,21,0.733,25,0.662,26,1.276,32,0.003,33,0.005,34,0.003,35,0.109,37,0.452,43,1.082,44,1.885,46,1.412,61,1.786,72,1.629,99,1.204,102,1.618,106,2.406,159,2.701,170,3.33,214,2.877,322,2.328,349,0.984,374,1.934,456,1.314,514,1.528,515,1.528,523,4.328,526,2.394,527,2.394,528,2.394,529,3.309,530,2.935,531,2.394,532,2.935,533,2.935,534,2.935,537,2.856,538,3.957,540,4.294,541,3.158,542,3.309,552,2.935,553,2.785,562,3.583,563,1.408,565,2.103,568,3.419,624,2.048,640,2.252,641,3.674,642,3.674,643,3.767,644,2.822,646,3.513,647,1.621,648,1.621,649,1.621,650,1.621,651,1.621,652,1.621,653,1.621,654,1.621,655,1.621,656,1.621,657,1.621,658,1.621,659,1.621,660,0.984,661,1.621,662,1.621,663,1.621,665,1.709,714,2.285,718,1.817,767,2.856,772,3.46,959,2.015,1138,2.316,1139,2.64,1140,2.64,1141,2.64,1142,1.817,1143,4.972,1144,2.64,1145,2.64,1146,2.316,1147,2.64]],["title/classes/StageDto.html",[35,0.175,769,2.597]],["body/classes/StageDto.html",[3,0.111,4,0.1,5,0.089,9,0.365,10,1.018,13,0.717,14,0.011,15,0.324,17,1.373,20,0.154,25,1.039,32,0.005,33,0.007,34,0.005,35,0.288,37,0.691,43,1.289,44,1.924,46,1.369,52,1.001,53,1.415,61,1.43,72,2.228,76,2.755,106,2.161,322,2.303,349,1.505,456,1.796,510,1.294,512,3.329,514,2.09,515,2.09,516,3.442,518,2.357,521,3.333,522,1.604,537,1.776,624,2.328,640,1.604,646,2.936,660,1.505,665,2.19,666,2.973,670,2.617,671,2.617,672,2.617,673,2.556,674,1.984,675,2.153,676,1.984,714,3.124,729,3.274,730,2.617,767,2.833,769,3.442,772,4.434,783,4.075,813,3.442,948,2.617,949,3.216,950,4.919,951,3.542,952,3.542,953,3.542,954,3.542,1148,4.037,1149,4.037,1150,4.037,1151,3.216,1152,4.037,1153,4.037,1154,4.037]],["title/classes/StagesController.html",[35,0.175,1155,3.115]],["body/classes/StagesController.html",[3,0.098,4,0.088,5,0.078,9,0.322,13,0.678,14,0.011,15,0.339,18,1.37,20,0.098,21,1.424,25,0.828,32,0.004,33,0.006,34,0.004,35,0.147,37,0.61,44,0.883,46,0.905,52,0.883,58,3.076,61,1.308,67,3.509,70,2.339,74,1.913,75,1.17,84,1.821,85,0.859,99,1.507,102,1.017,107,1.328,155,1.985,192,2.555,208,2.339,214,2.107,216,2.736,235,2.08,236,3.15,238,3.779,239,2.996,241,2.08,244,3.843,256,1.463,276,2.309,281,2.645,284,2.187,286,1.985,289,2.624,291,2.187,292,2.187,368,1.513,372,2.624,373,1.821,374,1.37,413,2.187,456,1.141,501,1.899,504,1.75,506,1.899,508,1.899,510,1.141,585,3.692,590,2.187,592,2.452,593,2.623,595,2.452,596,2.623,597,2.623,599,3.15,600,2.859,601,2.623,602,1.985,603,2.309,604,1.899,605,2.859,606,2.309,612,2.623,614,3.15,618,2.187,619,2.309,620,2.452,621,2.309,622,2.309,624,1.854,627,2.309,748,2.623,764,5.001,767,2.645,769,4.04,770,3.125,948,3.326,959,3.428,1086,3.125,1155,3.779,1156,2.838,1157,3.561,1158,4.266,1159,4.792,1160,4.04,1161,3.561,1162,4.502,1163,3.561,1164,3.125,1165,3.125,1166,3.561,1167,3.125,1168,3.125,1169,3.125,1170,3.561,1171,3.125,1172,3.125,1173,3.561,1174,3.561]],["title/modules/StagesModule.html",[109,1.279,127,2.742]],["body/modules/StagesModule.html",[3,0.129,4,0.116,5,0.103,14,0.011,15,0.337,20,0.129,32,0.006,33,0.008,34,0.006,35,0.194,75,1.067,85,1.129,97,2.215,109,2.102,111,2.06,112,2.215,113,2.395,114,2.395,115,2.215,116,3.416,117,3.288,127,5.374,129,4.856,131,3.171,132,2.301,133,2.215,135,3.171,138,2.61,139,2.395,152,3.731,155,2.046,356,2.735,358,2.61,631,4.494,632,3.036,637,2.735,638,2.875,959,2.301,1155,4.567,1158,5.538,1167,4.109,1168,4.109,1175,4.109,1176,4.683,1177,4.109,1178,4.109,1179,3.731,1180,4.683,1181,5.538,1182,4.109,1183,4.109]],["title/classes/Task.html",[35,0.175,1184,2.597]],["body/classes/Task.html",[3,0.062,4,0.056,5,0.05,9,0.411,10,0.659,13,0.71,14,0.011,15,0.254,17,2.619,20,0.1,21,1.443,25,0.586,26,1.129,32,0.003,33,0.004,34,0.003,35,0.094,37,0.387,43,1.126,44,1.867,46,1.403,61,1.693,67,2.423,99,1.066,102,1.626,106,2.403,159,2.668,170,3.138,214,2.886,322,2.496,349,0.843,374,1.749,452,3.988,456,1.163,514,1.353,515,1.353,523,4.214,526,2.119,527,2.119,528,2.119,529,3.037,530,2.654,531,2.119,532,2.654,533,2.654,534,2.654,537,2.92,538,3.729,540,4.337,541,2.898,542,3.037,552,2.654,553,2.987,562,3.729,563,1.206,566,1.666,567,1.802,568,3.816,624,1.879,640,2.067,641,3.372,642,3.372,643,3.496,644,2.498,646,3.386,647,1.389,648,1.389,649,1.389,650,1.389,651,1.389,652,1.389,653,1.389,654,1.389,655,1.389,656,1.389,657,1.389,658,1.389,659,1.389,660,0.843,661,1.389,662,1.389,663,1.389,665,1.545,718,1.557,767,2.673,959,2.987,962,3.621,978,2.498,1142,2.498,1146,1.985,1184,2.228,1185,1.802,1186,4.563,1187,4.545,1188,4.545,1189,3.988,1190,2.262,1191,2.262,1192,2.262,1193,4.996,1194,4.545,1195,1.802,1196,2.262,1197,2.262,1198,2.262,1199,2.262,1200,1.985,1201,2.673,1202,3.184,1203,3.184,1204,2.262,1205,2.262]],["title/classes/TaskDto.html",[35,0.175,777,2.597]],["body/classes/TaskDto.html",[3,0.107,4,0.096,5,0.086,9,0.353,10,0.994,13,0.74,14,0.011,15,0.302,20,0.15,25,1.021,32,0.005,33,0.007,34,0.005,35,0.284,37,0.668,43,1.406,44,1.946,46,1.384,52,0.967,53,1.368,61,1.396,64,3.549,76,2.691,106,2.138,185,4.354,322,3.319,349,1.455,456,1.754,510,1.25,512,3.293,514,2.041,515,2.041,516,3.361,518,3.693,521,3.413,522,1.551,624,2.286,640,1.551,646,2.883,660,1.455,665,2.151,666,2.874,670,2.53,671,2.53,672,2.53,673,2.496,674,1.918,675,2.081,676,1.918,729,3.197,767,2.782,777,3.361,813,3.361,955,2.53,956,3.109,957,4.804,958,3.424,959,3.108,960,3.424,961,3.109,962,5.039,963,3.424,1151,3.109,1206,3.902,1207,3.902,1208,3.902,1209,3.902,1210,3.902,1211,3.902,1212,3.902,1213,3.902]],["title/classes/TasksController.html",[35,0.175,1214,3.115]],["body/classes/TasksController.html",[3,0.069,4,0.062,5,0.055,9,0.228,13,0.69,14,0.011,15,0.326,18,0.971,20,0.069,21,1.768,25,0.638,32,0.003,33,0.005,34,0.003,35,0.104,37,0.432,43,0.861,44,1.21,46,0.975,52,0.625,58,3.408,61,1.41,67,3.553,70,1.804,74,2.061,75,1.26,84,1.29,85,0.608,99,1.162,102,1.394,107,0.94,155,2.277,178,4.423,192,3.014,208,2.905,214,2.005,216,2.948,235,1.473,236,2.429,237,2.01,238,1.858,239,2.31,241,1.473,244,3.891,255,2.432,256,1.036,257,3.081,258,1.736,276,3.584,278,3.152,281,3.12,284,1.549,286,1.406,289,3.259,291,1.549,292,1.549,368,1.072,372,2.024,373,1.29,374,0.971,413,1.549,456,0.808,501,1.345,504,1.24,506,1.345,508,1.345,510,0.808,585,2.997,590,1.549,599,3.394,600,2.205,601,1.858,602,1.406,603,1.635,604,1.345,605,3.081,606,1.635,612,1.858,614,2.429,615,3.805,618,2.997,619,2.565,621,3.165,622,1.635,624,1.43,627,1.635,665,0.858,748,1.858,767,1.74,772,2.723,773,4.386,777,3.394,778,2.213,955,2.565,959,1.944,990,1.635,1021,3.152,1035,4.284,1036,3.472,1104,2.213,1158,3.584,1159,3.89,1160,3.394,1162,4.284,1164,2.213,1165,2.213,1169,2.213,1171,2.213,1172,2.213,1184,4.236,1214,2.914,1215,2.01,1216,3.956,1217,3.956,1218,2.522,1219,4.386,1220,2.522,1221,2.522,1222,2.522,1223,4.882,1224,3.472,1225,2.522,1226,3.956,1227,3.956,1228,2.522,1229,2.522,1230,2.522,1231,2.522,1232,2.522,1233,2.522,1234,2.522,1235,2.522,1236,2.522,1237,5.528,1238,2.522,1239,2.522,1240,2.522,1241,2.522,1242,2.522,1243,2.213,1244,2.213,1245,2.522,1246,2.522,1247,2.522,1248,2.522,1249,2.522,1250,2.522,1251,2.522,1252,2.522,1253,5.528,1254,3.956,1255,2.522,1256,2.522,1257,2.522,1258,2.522,1259,2.522,1260,2.522,1261,3.956,1262,2.522,1263,2.522,1264,2.522,1265,2.522,1266,2.522,1267,2.522,1268,2.522,1269,2.522,1270,2.522,1271,2.522]],["title/modules/TasksModule.html",[109,1.279,128,2.912]],["body/modules/TasksModule.html",[3,0.12,4,0.108,5,0.096,14,0.011,15,0.341,20,0.12,32,0.005,33,0.007,34,0.005,35,0.181,75,0.996,85,1.053,97,2.066,109,2.029,111,1.921,112,2.066,113,2.234,114,2.234,115,2.066,116,3.299,117,3.175,127,5.025,128,5.821,129,4.759,130,4.527,131,3.027,132,2.147,133,2.066,135,3.027,138,2.434,139,2.234,151,3.833,152,3.48,153,3.217,155,1.953,356,2.551,358,2.434,631,4.39,632,2.832,637,2.551,638,2.682,1184,2.682,1214,4.359,1219,5.821,1243,3.833,1244,3.833,1272,3.833,1273,4.368,1274,3.833,1275,3.833,1276,3.48,1277,4.368,1278,5.348,1279,3.833,1280,3.833]],["title/classes/TemporaryToken.html",[35,0.175,351,3.115]],["body/classes/TemporaryToken.html",[3,0.072,4,0.065,5,0.058,9,0.512,10,0.743,13,0.743,14,0.011,15,0.209,17,2.498,20,0.112,21,0.73,25,0.66,26,1.273,32,0.003,33,0.005,34,0.003,35,0.109,37,0.451,43,1.081,44,1.884,46,1.411,57,1.081,61,1.938,99,1.202,102,1.615,106,2.405,159,2.544,170,3.327,214,2.664,228,1.346,255,2.977,256,1.081,271,4.513,298,3.252,322,2.875,351,3.012,374,1.93,451,4.964,456,1.311,514,1.525,515,1.525,523,4.326,526,2.388,527,2.388,528,2.388,529,3.304,530,2.93,531,2.388,532,2.93,533,2.93,534,2.93,537,2.853,538,3.788,540,4.29,541,3.153,542,3.304,552,2.93,553,2.78,562,3.578,563,1.404,568,3.614,643,3.762,646,3.51,647,1.616,648,1.616,649,1.616,650,1.616,651,1.616,652,1.616,653,1.616,654,1.616,655,1.616,656,1.616,657,1.616,658,1.616,659,1.616,661,1.616,662,3.08,714,1.467,978,2.816,1142,1.812,1195,2.097,1281,4.882,1282,2.097,1283,2.632,1284,2.632,1285,2.632,1286,2.632,1287,4.09,1288,2.309,1289,2.309,1290,2.097,1291,2.632,1292,2.632,1293,2.632]],["title/classes/Track.html",[35,0.175,767,1.861]],["body/classes/Track.html",[3,0.076,4,0.068,5,0.061,9,0.468,10,0.77,13,0.696,14,0.011,15,0.242,17,2.646,20,0.076,21,0.766,25,0.685,26,1.321,32,0.003,33,0.005,34,0.003,35,0.114,37,0.473,43,1.104,44,1.878,46,1.412,61,1.813,99,1.247,102,1.657,106,2.396,159,2.659,170,3.385,214,2.995,322,2.383,349,1.029,374,1.989,456,1.36,514,1.582,515,1.582,523,4.358,526,2.478,527,2.478,528,2.478,529,3.388,530,3.019,531,2.478,532,3.019,533,3.019,534,3.019,537,3.029,538,3.861,540,4.347,541,3.234,542,3.388,552,3.019,553,2.852,562,3.388,563,1.472,568,2.365,624,2.097,640,2.306,641,3.762,642,3.762,643,3.845,644,2.921,646,3.547,647,1.695,648,1.695,649,1.695,650,1.695,651,1.695,652,1.695,653,1.695,654,1.695,655,1.695,656,1.695,657,1.695,658,1.695,659,1.695,660,1.029,661,1.695,662,1.695,663,1.695,665,1.758,718,1.9,767,1.867,959,2.541,1142,1.9,1200,2.422,1294,2.422,1295,5.169,1296,2.76,1297,2.76,1298,2.76]],["title/classes/TrackDto.html",[35,0.175,783,2.357]],["body/classes/TrackDto.html",[3,0.127,4,0.114,5,0.102,9,0.418,10,1.116,13,0.694,14,0.011,15,0.32,20,0.169,25,1.114,32,0.006,33,0.008,34,0.006,35,0.305,37,0.791,43,1.351,44,1.9,46,1.351,53,1.62,106,2.249,322,2.524,349,1.723,456,1.969,510,1.481,512,3.466,514,2.291,515,2.291,516,3.774,518,2.699,521,3.148,522,1.837,624,2.495,640,1.837,646,3.148,660,1.723,665,2.348,666,3.404,670,2.996,671,2.996,672,2.996,673,2.802,674,2.271,675,2.464,676,2.271,729,3.589,730,2.996,783,3.425,964,2.996,965,3.682,966,4.055,1151,3.682,1299,4.621,1300,4.621]],["title/classes/TracksController.html",[35,0.175,1301,3.115]],["body/classes/TracksController.html",[3,0.105,4,0.095,5,0.084,9,0.347,13,0.65,14,0.011,15,0.34,18,1.475,20,0.105,21,1.064,25,0.873,32,0.005,33,0.007,34,0.005,35,0.159,37,0.657,44,0.951,46,0.954,52,0.951,58,3.204,61,1.379,67,3.628,70,1.748,74,2.016,75,1.233,84,1.961,85,0.924,99,1.589,102,1.095,107,1.429,155,1.785,192,2.662,208,2.465,214,1.575,216,2.884,235,2.239,236,3.32,239,3.158,241,2.239,244,3.973,256,1.575,281,2.378,284,2.354,286,3.013,289,1.961,291,2.354,292,2.354,368,1.629,372,2.766,373,1.961,374,1.475,413,2.354,501,2.044,504,1.884,506,2.044,508,2.044,510,1.229,585,3.846,590,2.354,592,2.639,595,2.639,599,3.32,600,3.013,602,2.136,603,2.485,604,2.044,605,3.013,606,2.485,614,3.32,615,4.312,616,2.824,618,2.354,619,2.485,620,2.639,621,2.485,622,2.485,624,1.954,627,2.485,748,2.824,749,3.364,767,2.755,780,5.125,783,3.792,964,3.506,1159,4.308,1160,4.177,1224,3.364,1301,3.982,1302,3.055,1303,3.834,1304,3.834,1305,3.834,1306,3.834,1307,3.834,1308,3.364,1309,3.364,1310,3.834,1311,3.834,1312,3.364,1313,3.364,1314,3.834,1315,3.834]],["title/modules/TracksModule.html",[109,1.279,129,2.597]],["body/modules/TracksModule.html",[3,0.134,4,0.121,5,0.107,14,0.011,15,0.334,20,0.134,32,0.006,33,0.008,34,0.006,35,0.202,75,1.112,85,1.176,97,2.307,109,2.144,111,2.146,112,2.307,113,2.495,114,2.495,115,2.307,116,3.485,117,3.354,129,5.003,131,3.257,132,2.397,133,2.307,135,2.495,138,2.719,139,2.495,155,2.102,356,2.849,358,2.719,631,4.554,632,3.163,637,2.849,638,2.995,767,2.146,1160,5.274,1301,4.691,1312,4.281,1313,4.281,1316,4.281,1317,4.281,1318,4.281,1319,3.887,1320,4.878,1321,5.65,1322,4.281,1323,4.281]],["title/classes/UpdateProfileDto.html",[35,0.175,1002,3.115]],["body/classes/UpdateProfileDto.html",[3,0.171,4,0.154,5,0.137,14,0.011,15,0.31,20,0.171,25,1.005,32,0.008,33,0.009,34,0.008,35,0.258,37,1.067,52,1.544,57,2.559,254,3.637,443,3.471,776,4.038,786,4.038,1002,5.464,1324,5.466,1325,5.466,1326,6.229,1327,6.229]],["title/classes/User.html",[35,0.175,255,1.861]],["body/classes/User.html",[3,0.046,4,0.041,5,0.037,9,0.334,10,0.515,11,2.714,13,0.695,14,0.011,15,0.256,17,2.676,20,0.078,21,0.787,25,0.458,26,1.349,32,0.002,33,0.004,34,0.002,35,0.117,37,0.287,43,1.355,44,1.875,46,1.408,57,1.78,61,1.617,72,1.127,75,0.647,85,0.405,99,0.833,102,1.599,106,2.425,107,1.058,159,2.684,170,2.752,192,0.713,214,3.019,228,1.885,255,1.621,281,0.738,289,0.858,322,2.16,331,1.155,349,0.626,368,1.566,374,1.418,409,1.337,427,1.472,429,1.337,443,2.054,456,0.909,459,3.234,514,1.058,515,1.058,522,0.667,523,3.96,526,1.657,527,1.657,528,1.657,529,2.531,530,2.152,531,1.657,532,2.152,533,2.152,534,2.152,535,2.489,537,2.696,538,3.703,540,3.703,541,3.416,542,3.071,552,2.152,553,2.893,562,4.061,563,0.895,566,1.236,567,1.337,568,3.533,569,1.472,581,1.472,640,2.52,641,4.111,642,4.111,643,2.263,646,3.112,647,1.03,648,1.03,649,1.03,650,1.03,651,1.03,652,1.03,653,1.03,654,1.03,655,1.03,656,1.03,657,1.03,658,1.03,659,1.03,660,0.626,661,1.03,662,1.03,665,1.253,673,1.293,714,1.581,718,1.155,869,1.472,873,1.236,975,2.937,976,2.937,978,1.953,979,2.937,986,2.937,988,2.937,989,2.389,990,2.389,1076,2.489,1142,1.155,1184,2.263,1195,1.337,1328,1.337,1329,3.685,1330,3.685,1331,4.334,1332,4.334,1333,3.685,1334,2.837,1335,1.678,1336,2.837,1337,1.678,1338,1.678,1339,1.678,1340,1.678,1341,1.678,1342,1.678,1343,1.678,1344,1.678,1345,1.678,1346,1.678,1347,1.678,1348,1.678,1349,1.678,1350,1.678,1351,1.678,1352,1.678,1353,1.678,1354,1.678,1355,2.837,1356,2.489,1357,1.678,1358,1.678,1359,1.678,1360,1.678,1361,1.678,1362,1.678,1363,3.685,1364,1.678,1365,2.489,1366,2.489,1367,2.489,1368,1.678,1369,2.837,1370,1.678,1371,1.678,1372,1.678,1373,4.845,1374,1.678,1375,1.678,1376,1.678,1377,1.678,1378,1.678,1379,1.678]],["title/classes/UserDto.html",[35,0.175,789,2.256]],["body/classes/UserDto.html",[3,0.085,4,0.076,5,0.068,9,0.28,10,0.84,13,0.728,14,0.011,15,0.288,17,1.051,20,0.127,25,0.894,32,0.004,33,0.006,34,0.004,35,0.254,37,0.529,43,1.44,44,1.954,46,1.39,52,0.766,53,1.083,57,2.275,61,2.009,64,2.998,72,2.443,76,3.235,106,2.296,159,2.109,187,4.414,188,3.684,322,1.899,349,1.152,368,2.797,443,3.087,456,1.482,510,0.99,512,3.038,514,1.724,515,1.724,516,2.839,518,1.805,521,3.494,522,1.228,537,1.36,640,1.228,646,2.525,660,1.152,663,2.839,665,1.884,670,2.004,671,2.004,672,2.004,673,2.108,674,1.519,676,1.519,789,2.466,813,4.041,967,2.004,968,2.463,969,4.057,970,2.712,971,2.712,972,2.712,973,2.712,974,5.395,975,4.414,976,4.414,977,2.712,978,2.128,979,3.684,980,2.712,981,4.057,982,5.395,983,4.057,984,4.057,985,2.712,986,4.414,987,2.712,988,4.414,989,3.591,990,3.591,991,2.712,1380,3.091,1381,3.091,1382,3.091,1383,3.091,1384,4.624,1385,3.091,1386,3.091,1387,3.091,1388,3.091,1389,3.091,1390,4.624,1391,3.091,1392,3.091,1393,3.091,1394,3.091,1395,3.091,1396,3.091,1397,3.091,1398,3.091,1399,3.091,1400,3.091]],["title/classes/UsersController.html",[35,0.175,1401,3.115]],["body/classes/UsersController.html",[3,0.105,4,0.095,5,0.084,9,0.347,13,0.693,14,0.011,15,0.336,18,1.475,20,0.105,21,1.064,25,0.873,32,0.005,33,0.007,34,0.005,35,0.159,37,0.657,44,0.951,46,0.954,52,0.951,57,1.575,58,3.204,61,1.379,67,3.628,70,1.748,74,2.016,75,1.233,84,1.961,85,0.924,99,1.589,102,1.095,106,1.095,107,1.429,155,1.785,192,2.662,208,2.465,214,2.221,216,2.884,235,2.239,236,3.32,239,3.158,241,2.239,244,3.973,254,2.239,255,2.755,257,4.149,281,1.686,284,2.354,286,3.013,287,3.055,289,1.961,291,2.354,292,2.354,368,1.629,370,2.485,371,2.485,372,2.766,373,1.961,374,1.475,385,3.364,413,2.354,501,2.044,504,1.884,506,2.044,508,2.044,510,1.229,585,3.846,590,2.354,592,2.639,593,2.824,595,2.639,596,2.824,597,2.824,599,3.32,600,3.013,602,2.136,603,2.485,604,2.044,605,3.013,606,2.485,614,4.177,616,2.824,618,2.354,619,2.485,620,2.639,621,2.485,622,2.485,624,1.385,627,2.485,786,4.826,789,3.628,967,3.506,1308,3.364,1309,3.364,1401,3.982,1402,3.055,1403,3.834,1404,3.834,1405,3.834,1406,3.364,1407,3.364,1408,3.834,1409,3.834,1410,3.834]],["title/modules/UsersModule.html",[109,1.279,130,2.47]],["body/modules/UsersModule.html",[3,0.135,4,0.122,5,0.108,14,0.011,15,0.335,20,0.176,32,0.006,33,0.008,34,0.006,35,0.204,75,1.121,85,1.186,97,2.327,109,2.153,111,2.164,112,2.327,113,2.516,114,2.516,115,2.327,116,3.499,117,3.368,130,4.767,131,3.275,132,2.418,133,2.327,135,2.516,138,2.741,139,2.516,155,1.624,255,2.164,257,4.793,356,2.873,358,2.741,631,3.74,632,3.189,637,2.873,638,3.02,1401,4.717,1406,4.317,1407,4.317,1411,4.317,1412,4.317,1413,4.919,1414,3.92,1415,4.919,1416,5.673,1417,4.317,1418,4.317]],["title/classes/ValidateTokenInput.html",[35,0.175,231,2.912]],["body/classes/ValidateTokenInput.html",[3,0.159,4,0.143,5,0.128,9,0.525,10,1.29,13,0.525,14,0.011,15,0.321,20,0.159,25,0.935,32,0.007,33,0.009,34,0.007,35,0.294,37,0.993,43,1.253,44,1.437,46,1.022,48,6.12,51,3.559,52,1.437,53,2.032,54,3.385,55,5.087,56,5.087,57,2.381,231,4.89,298,4.98,1419,6.234,1420,5.087,1421,5.797]],["title/coverage.html",[1422,5.081]],["body/coverage.html",[0,1.837,1,1.175,5,0.038,6,2.749,7,2.92,8,2.749,13,0.155,14,0.011,16,0.839,18,1.883,21,0.474,24,1.175,27,1.175,32,0.002,33,0.004,34,0.002,35,0.348,36,1.257,38,1.498,39,1.498,54,0.997,58,0.873,59,1.498,60,1.498,96,1.257,98,1.498,103,1.107,109,0.516,115,0.808,134,2.294,146,0.751,149,1.36,156,1.866,164,1.681,171,2.819,173,1.498,178,1.257,179,1.498,180,1.498,189,1.257,190,1.498,210,1.048,213,1.175,218,1.175,231,1.175,251,1.048,255,0.751,257,0.951,259,1.048,261,1.257,265,1.175,331,1.175,342,1.175,343,1.175,344,1.257,345,1.36,348,1.257,351,1.257,363,1.107,364,2.749,365,2.749,369,1.107,375,1.498,412,1.36,414,1.36,418,1.107,470,2.294,472,1.498,490,1.257,491,1.498,492,1.498,497,1.175,498,3.017,499,2.569,500,2.749,502,1.175,503,1.175,510,0.547,512,0.751,513,1.498,523,0.91,524,1.498,583,1.257,584,2.294,585,3.004,587,1.257,591,1.257,594,1.048,600,0.951,602,0.951,604,0.91,605,0.951,608,1.107,610,1.107,630,1.36,631,2.559,634,1.36,639,1.498,660,0.637,664,2.294,678,0.997,679,3.017,685,1.048,709,1.175,710,1.498,714,4.916,720,1.107,721,2.294,732,1.175,734,1.257,735,1.498,737,1.257,740,1.257,753,1.36,755,1.36,758,1.498,759,1.498,761,1.498,762,1.498,764,1.175,765,1.498,766,1.498,767,0.751,769,1.048,773,1.175,774,1.498,775,1.498,777,1.048,780,1.175,781,1.498,782,1.498,783,0.951,786,1.107,787,1.498,788,2.749,789,0.91,792,2.974,793,2.974,801,1.36,802,1.36,803,1.36,807,1.36,808,1.498,821,1.36,822,1.498,823,1.498,852,1.36,853,1.498,866,1.36,867,2.294,868,2.294,873,3.228,875,1.498,876,1.498,884,1.498,885,1.498,886,1.498,903,2.294,911,1.498,948,1.107,949,2.294,955,1.107,956,2.294,959,0.839,964,1.107,965,2.294,967,1.107,968,2.294,992,1.257,993,1.498,1002,1.257,1031,1.107,1072,1.498,1105,2.294,1110,1.498,1111,1.498,1114,1.498,1123,1.498,1138,1.498,1155,1.257,1156,2.294,1158,1.107,1160,1.048,1179,2.294,1181,1.36,1184,1.048,1185,1.36,1214,1.257,1215,2.294,1219,1.175,1276,2.294,1278,1.36,1281,1.36,1282,1.36,1294,1.498,1301,1.257,1302,2.294,1319,2.294,1321,1.36,1324,1.498,1325,1.498,1328,1.36,1401,1.257,1402,2.294,1414,1.36,1416,1.36,1419,1.498,1420,1.498,1422,1.498,1423,1.36,1424,1.707,1425,1.707,1426,1.36,1427,1.498,1428,1.498,1429,8.421,1430,6.99,1431,8.07,1432,1.707,1433,1.707,1434,5.646,1435,6.99,1436,3.275,1437,3.733,1438,1.707,1439,1.707,1440,5.306,1441,1.707,1442,1.707,1443,1.707,1444,5.306,1445,1.707,1446,2.879,1447,2.294,1448,1.707,1449,4.382,1450,2.526,1451,1.498,1452,1.498,1453,1.36,1454,1.498,1455,1.498,1456,1.498,1457,1.498,1458,1.498,1459,1.498,1460,1.498,1461,1.498,1462,1.707,1463,1.498,1464,1.707,1465,1.707,1466,1.707,1467,2.526,1468,2.526,1469,1.498,1470,1.498,1471,1.498,1472,1.498,1473,1.498,1474,1.707,1475,1.707,1476,1.707,1477,1.707,1478,1.707,1479,1.707,1480,1.707,1481,1.707,1482,1.707,1483,1.707,1484,1.707,1485,1.707,1486,1.707,1487,1.707,1488,1.707]],["title/dependencies.html",[112,2.409,1489,3.524]],["body/dependencies.html",[14,0.011,32,0.005,33,0.007,34,0.005,35,0.247,52,1.094,53,1.546,85,1.064,112,2.087,137,3.872,139,2.257,247,4.435,347,3.037,362,4.747,407,3.515,408,3.872,409,3.515,410,3.25,411,3.872,423,3.872,424,3.872,522,1.753,563,2.353,565,4.747,678,2.576,809,3.872,880,3.872,895,5.92,924,5.228,926,3.872,1020,3.872,1082,3.872,1119,3.872,1143,3.872,1453,3.515,1490,4.412,1491,4.412,1492,4.412,1493,4.412,1494,7.544,1495,4.412,1496,4.412,1497,4.412,1498,4.412,1499,4.412,1500,4.412,1501,4.412,1502,4.412,1503,4.412,1504,4.412,1505,4.412,1506,4.412,1507,4.412,1508,5.958,1509,4.412,1510,4.412,1511,4.412,1512,4.412,1513,4.412,1514,5.958,1515,4.412,1516,4.412,1517,4.412,1518,4.412,1519,4.412,1520,4.412,1521,4.412,1522,4.412,1523,4.412,1524,4.412,1525,4.412,1526,4.412,1527,4.412,1528,4.412,1529,4.412,1530,3.872,1531,4.412,1532,4.412,1533,4.412,1534,5.958,1535,4.412,1536,4.412,1537,4.412,1538,4.412,1539,4.412,1540,4.412,1541,4.412,1542,4.412,1543,4.412,1544,4.412]],["title/miscellaneous/enumerations.html",[1545,2.058,1546,4.468]],["body/miscellaneous/enumerations.html",[9,0.51,14,0.011,32,0.007,33,0.009,34,0.007,57,2.312,228,2.879,271,5.138,368,2.964,416,6.122,537,3.771,1185,4.485,1193,6.122,1201,5.138,1202,6.122,1203,6.122,1281,4.485,1282,5.559,1288,4.94,1289,4.94,1328,4.485,1365,6.122,1366,6.122,1367,6.122,1545,3.287,1546,4.94,1547,5.63,1548,5.63,1549,5.63,1550,5.63,1551,5.63,1552,5.63,1553,5.63]],["title/miscellaneous/functions.html",[1545,2.058,1554,4.468]],["body/miscellaneous/functions.html",[9,0.534,13,0.65,14,0.01,32,0.007,33,0.009,34,0.007,61,1.83,74,2.675,75,1.636,102,2.049,115,3.66,504,2.897,510,2.3,600,3.999,867,4.696,868,5.718,1290,4.696,1426,5.718,1427,6.297,1428,6.79,1447,4.696,1451,5.172,1545,3.442,1554,5.172,1555,5.894,1556,5.172,1557,5.894,1558,5.894,1559,5.894]],["title/index.html",[9,0.319,1201,2.596,1560,3.093]],["body/index.html",[4,0.116,14,0.008,32,0.006,33,0.008,34,0.006,66,4.131,133,2.943,201,3.241,318,5.46,370,3.052,637,2.749,959,2.314,961,3.751,1015,4.131,1186,4.131,1356,4.131,1423,3.751,1530,4.131,1561,6.969,1562,6.222,1563,6.222,1564,4.708,1565,6.222,1566,7.921,1567,4.708,1568,4.708,1569,4.708,1570,4.708,1571,6.222,1572,4.708,1573,6.222,1574,4.708,1575,4.708,1576,4.131,1577,4.708,1578,4.708,1579,4.708,1580,6.116,1581,4.708,1582,4.708,1583,4.708,1584,4.708,1585,4.708,1586,4.708,1587,4.708,1588,4.708,1589,4.708,1590,4.708,1591,4.131,1592,4.708,1593,4.708,1594,4.708,1595,4.708,1596,4.708,1597,6.222,1598,4.708,1599,4.708,1600,6.222,1601,4.708,1602,4.708,1603,4.708,1604,4.708,1605,4.708,1606,4.708,1607,4.708,1608,4.131,1609,4.708,1610,4.131,1611,4.708,1612,4.708,1613,4.708,1614,4.708,1615,4.708,1616,4.708,1617,4.708,1618,4.708,1619,4.708,1620,4.708,1621,4.708,1622,4.708,1623,6.222,1624,4.708,1625,4.708,1626,4.708,1627,4.708,1628,4.708,1629,4.708,1630,4.708,1631,4.708,1632,4.708,1633,4.708,1634,4.708,1635,4.708,1636,4.708,1637,4.708,1638,4.708,1639,4.708,1640,4.708,1641,4.708,1642,4.708,1643,4.708,1644,4.708,1645,4.708]],["title/license.html",[1201,2.596,1560,3.093,1646,3.093]],["body/license.html",[14,0.008,31,3.717,32,0.006,33,0.008,34,0.006,133,2.387,247,3.098,848,5.713,1423,4.021,1426,4.021,1576,7.378,1591,4.428,1608,4.428,1646,4.428,1647,5.047,1648,7.208,1649,5.047,1650,5.047,1651,5.047,1652,5.047,1653,5.047,1654,5.047,1655,5.047,1656,5.047,1657,6.511,1658,5.047,1659,5.047,1660,5.047,1661,7.208,1662,5.047,1663,6.511,1664,5.047,1665,5.047,1666,6.511,1667,5.047,1668,5.047,1669,5.047,1670,5.047,1671,5.047,1672,5.047,1673,6.511,1674,5.047,1675,5.047,1676,5.047,1677,5.047,1678,5.047,1679,5.047,1680,6.511,1681,6.511,1682,5.047,1683,5.047,1684,5.047,1685,5.047,1686,5.047,1687,5.047,1688,5.047,1689,5.047,1690,5.047,1691,5.047,1692,5.047,1693,5.047,1694,5.047,1695,5.047,1696,5.047,1697,5.047,1698,5.047,1699,5.047,1700,5.047,1701,5.047,1702,5.047,1703,5.047,1704,5.047,1705,5.047,1706,5.047,1707,5.047,1708,5.047,1709,5.047,1710,5.047]],["title/modules.html",[111,2.547]],["body/modules.html",[14,0.009,32,0.007,33,0.009,34,0.007,110,4.12,111,2.46,121,3.85,122,3.85,123,3.85,124,3.85,125,3.85,126,3.85,127,3.626,128,3.85,129,3.434,130,3.266,791,4.457,940,6.098,1580,7.565,1711,8.621,1712,8.621,1713,8.708,1714,6.949]],["title/overview.html",[1715,5.081]],["body/overview.html",[2,1.371,14,0.011,32,0.004,33,0.006,34,0.004,37,0.572,97,1.579,103,3.757,109,1.009,110,6.297,111,1.468,112,1.579,113,1.707,114,1.707,115,1.579,116,1.64,117,1.579,118,2.929,119,2.929,120,2.929,121,5.692,122,4.394,123,4.889,124,4.889,125,5.374,126,3.989,127,4.979,128,5.511,129,4.622,130,4.485,131,2.503,132,1.64,133,1.579,172,1.949,251,4.622,257,4.195,259,4.506,338,2.929,340,2.929,341,2.929,342,3.989,343,3.989,344,4.268,471,2.659,587,4.701,628,2.929,629,2.929,737,5.406,750,2.929,751,2.929,752,2.929,906,2.929,907,2.929,1031,4.758,1066,2.929,1068,2.929,1069,2.929,1158,4.758,1160,4.506,1175,2.929,1177,2.929,1178,2.929,1219,5.052,1272,2.929,1274,2.929,1275,2.929,1316,2.929,1317,2.929,1318,2.929,1411,2.929,1412,2.929,1436,2.929,1715,2.929,1716,3.338,1717,2.929,1718,3.338,1719,3.338,1720,2.929]],["title/miscellaneous/typealiases.html",[1545,2.058,1721,5.092]],["body/miscellaneous/typealiases.html",[9,0.554,13,0.554,14,0.01,32,0.008,33,0.009,34,0.008,566,5.407,871,6.442,1545,3.574,1722,6.12,1723,7.342,1724,8.562,1725,7.342,1726,7.342,1727,7.342,1728,7.342,1729,6.12,1730,7.342,1731,7.342]],["title/miscellaneous/variables.html",[1545,2.058,1732,4.468]],["body/miscellaneous/variables.html",[5,0.034,9,0.139,10,0.279,13,0.572,14,0.011,16,0.754,17,2.687,18,2.176,21,1.134,26,1.838,32,0.002,33,0.003,34,0.002,43,1.08,57,0.63,72,0.61,75,1.222,107,1.998,109,0.795,134,1.222,149,2.748,155,1.138,156,2.649,157,1.346,158,1.346,159,2.302,160,1.346,161,1.346,162,1.346,163,1.346,164,1.535,165,1.346,166,2.094,167,2.094,168,2.094,169,2.094,170,2.779,192,0.652,228,0.785,240,1.222,255,0.675,281,0.675,298,0.995,331,1.056,345,1.222,348,2.54,356,3.13,357,1.346,358,3.151,359,1.346,360,1.346,361,1.346,362,1.222,363,2.649,366,3.385,367,3.385,368,0.652,369,1.704,370,1.704,371,1.704,372,0.785,373,2.564,374,1.929,410,1.13,412,2.094,414,2.094,494,1.346,495,1.346,501,2.451,504,2.259,506,2.451,508,2.451,510,1.473,537,3.506,568,1.465,584,1.222,585,3.76,594,2.118,600,2.561,602,3.413,608,0.995,610,0.995,614,3.98,615,3.451,624,0.554,630,1.222,631,3.449,634,2.094,635,1.346,636,1.346,637,2.014,638,2.118,660,0.98,665,1.173,680,1.81,683,1.056,684,1.704,714,0.855,753,1.222,755,2.094,756,1.346,757,1.346,764,1.81,767,0.675,769,0.942,773,1.81,777,0.942,780,1.81,783,0.855,786,1.704,789,0.818,792,1.222,793,3.256,794,1.346,801,2.748,802,2.094,803,2.094,804,1.346,805,1.346,806,1.346,845,3.994,948,0.995,955,0.995,959,0.754,964,0.995,967,0.995,1021,1.222,1156,1.222,1158,0.995,1160,0.942,1179,1.222,1181,2.094,1182,1.346,1183,1.346,1184,0.942,1189,1.346,1215,1.222,1219,1.056,1276,1.222,1278,2.094,1279,1.346,1280,1.346,1290,2.094,1302,1.222,1319,1.222,1321,2.094,1322,1.346,1323,1.346,1402,1.222,1414,1.222,1416,2.094,1417,1.346,1418,1.346,1447,1.222,1450,1.346,1452,1.346,1453,2.094,1454,2.307,1455,2.307,1456,1.346,1457,2.307,1458,1.346,1459,2.307,1460,2.307,1461,1.346,1463,1.346,1467,1.346,1468,3.026,1469,4.033,1470,2.307,1471,1.346,1472,2.307,1473,1.346,1545,0.896,1556,1.346,1610,1.346,1717,1.346,1720,4.961,1732,1.346,1733,1.534,1734,1.534,1735,2.629,1736,1.534,1737,1.534,1738,1.534,1739,1.534,1740,1.534,1741,1.534,1742,1.534,1743,2.629,1744,2.629,1745,2.629,1746,1.534,1747,2.629,1748,1.534,1749,1.534,1750,3.449,1751,2.629,1752,1.534,1753,1.534,1754,1.534,1755,1.534,1756,2.629,1757,4.086,1758,4.596,1759,4.086,1760,4.086,1761,2.629,1762,5.013,1763,2.629,1764,1.534,1765,1.534,1766,1.534,1767,1.534,1768,1.534,1769,1.534,1770,1.534,1771,1.534,1772,1.534,1773,1.534,1774,1.534,1775,1.534,1776,1.534,1777,1.534,1778,1.534,1779,1.534,1780,1.534,1781,1.534,1782,1.534,1783,1.534,1784,2.629,1785,1.534,1786,1.534,1787,1.534,1788,1.534,1789,1.534,1790,1.534,1791,1.534,1792,1.534,1793,1.534,1794,1.534,1795,1.534,1796,2.629,1797,2.629,1798,2.629,1799,2.629,1800,2.629,1801,2.629,1802,2.629,1803,2.629,1804,2.629,1805,2.629,1806,1.534,1807,2.629,1808,1.534,1809,1.534,1810,2.629,1811,1.534,1812,1.534,1813,2.629,1814,1.534,1815,1.534,1816,2.629,1817,1.534,1818,1.534,1819,2.629,1820,1.534,1821,1.534,1822,1.534,1823,1.534,1824,1.534,1825,1.534,1826,1.534,1827,1.534,1828,1.534,1829,5.654,1830,1.534,1831,1.534,1832,1.534,1833,1.534,1834,1.534,1835,1.534,1836,1.534,1837,1.534,1838,1.534,1839,1.534,1840,1.534,1841,1.534,1842,1.534,1843,1.534,1844,1.534,1845,1.534,1846,1.534,1847,1.534,1848,1.534,1849,1.534,1850,1.534,1851,1.534,1852,1.534,1853,1.534,1854,1.534,1855,1.534]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":714,"title":{},"body":{"classes/Course.html":{},"classes/FindDto.html":{},"classes/PagedListStageDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":662,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["1.0.0",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["1.22.0",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":812,"title":{},"body":{"classes/FindDto.html":{}}}],["1024",{"_index":1061,"title":{},"body":{"controllers/ProfileController.html":{}}}],["12",{"_index":1716,"title":{},"body":{"overview.html":{}}}],["13",{"_index":1718,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1436,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["17",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1720,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1062,"title":{},"body":{"controllers/ProfileController.html":{}}}],["200kb",{"_index":1064,"title":{},"body":{"controllers/ProfileController.html":{}}}],["2020",{"_index":1649,"title":{},"body":{"license.html":{}}}],["21",{"_index":1464,"title":{},"body":{"coverage.html":{}}}],["2347063644568",{"_index":985,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["2347063644568'})@maxlength(columnsize.length64)@isoptional",{"_index":1388,"title":{},"body":{"classes/UserDto.html":{}}}],["24",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["3",{"_index":1717,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["3.23.0",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["3/17",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["3/21",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["3/29",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["4.5.10",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["48",{"_index":1719,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["5.9.18",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.8",{"_index":1526,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["60000",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":1189,"title":{},"body":{"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseEntity.html":{}}}],["_${propertykey",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":1104,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TasksController.html":{}}}],["abortearly",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":1591,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstractcontrolleroptions",{"_index":1,"title":{"interfaces/AbstractControllerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithauthoptions",{"_index":24,"title":{"interfaces/AbstractControllerWithAuthOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithswaggeroptions",{"_index":27,"title":{"interfaces/AbstractControllerWithSwaggerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractdocument",{"_index":1723,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["access",{"_index":849,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["accessors",{"_index":535,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["account",{"_index":944,"title":{},"body":{"injectables/MailService.html":{}}}],["acctverifydto",{"_index":36,"title":{"classes/AcctVerifyDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["achieving",{"_index":1588,"title":{},"body":{"index.html":{}}}],["action",{"_index":1704,"title":{},"body":{"license.html":{}}}],["activate",{"_index":532,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["admin",{"_index":1367,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1722,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["amazing",{"_index":1595,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1671,"title":{},"body":{"license.html":{}}}],["api_auth_enabled",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":932,"title":{},"body":{"injectables/MailService.html":{},"injectables/ProfileService.html":{}}}],["api_key_mailgun",{"_index":797,"title":{},"body":{"modules/DbTest.html":{}}}],["api_secret",{"_index":1091,"title":{},"body":{"injectables/ProfileService.html":{}}}],["apibearerauth",{"_index":599,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apibody",{"_index":1021,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TasksController.html":{},"miscellaneous/variables.html":{}}}],["apiconflictresponse",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":1022,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apiconsumes('multipart/form",{"_index":1052,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apiexception",{"_index":58,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["apiexception})@apibearerauth",{"_index":597,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["apiexception})@apiresponse({status",{"_index":596,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["apiexception})@apiresponse({type",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(authenticationguard",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["apifile",{"_index":1460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":76,"title":{},"body":{"classes/ApiException.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/CourseDto.html":{},"interfaces/IPagedListDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@expose",{"_index":516,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({readonly",{"_index":1390,"title":{},"body":{"classes/UserDto.html":{}}}],["apiproperty({type",{"_index":493,"title":{},"body":{"classes/AvatarUploadDto.html":{}}}],["apiresponse",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apiswaggeroperation",{"_index":1455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["apitags(\"profile",{"_index":1033,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('auth",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiunauthorizedresponse",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_email",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":96,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appemail",{"_index":691,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["applicable",{"_index":1615,"title":{},"body":{"index.html":{}}}],["application",{"_index":1600,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":110,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":103,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectural",{"_index":1604,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":826,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":1708,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1643,"title":{},"body":{"index.html":{}}}],["assigns",{"_index":1226,"title":{},"body":{"classes/TasksController.html":{}}}],["assigntasks",{"_index":1216,"title":{},"body":{"classes/TasksController.html":{}}}],["assigntasks(@body",{"_index":1256,"title":{},"body":{"classes/TasksController.html":{}}}],["assigntasks(input",{"_index":1221,"title":{},"body":{"classes/TasksController.html":{}}}],["assigntasksdto",{"_index":178,"title":{"classes/AssignTasksDto.html":{}},"body":{"classes/AssignTasksDto.html":{},"classes/TasksController.html":{},"coverage.html":{}}}],["assigntasksdto})@apibearerauth()@apiresponse({status",{"_index":1228,"title":{},"body":{"classes/TasksController.html":{}}}],["associated",{"_index":1658,"title":{},"body":{"license.html":{}}}],["async",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":18,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/MailService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":55,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["auth.guard",{"_index":1025,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth.guard.ts",{"_index":876,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:9",{"_index":877,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{}}}],["auth/auth.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards",{"_index":606,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["auth/guards/jwt",{"_index":1024,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth/models/dto/auth.dto",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_guard_type",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":189,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1457,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":261,"title":{"guards/AuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["autherrors",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherrors.expired_token",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_login_attempt",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_token",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["autheventenum",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["authguard",{"_index":879,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(auth_guard_type",{"_index":881,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":121,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobj",{"_index":363,"title":{"interfaces/AuthObj.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authobj.create",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.delete",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.find",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.findbyid",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.update",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create?.length",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete?.length",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find?.length",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid?.length",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update?.length",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1697,"title":{},"body":{"license.html":{}}}],["authroles",{"_index":366,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":259,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["autopopulate",{"_index":1143,"title":{},"body":{"classes/Stage.html":{},"dependencies.html":{}}}],["available",{"_index":940,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["avatar",{"_index":1009,"title":{},"body":{"controllers/ProfileController.html":{}}}],["avataruploaddto",{"_index":490,"title":{"classes/AvatarUploadDto.html":{}},"body":{"classes/AvatarUploadDto.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["avataruploaddto})@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":1011,"title":{},"body":{"controllers/ProfileController.html":{}}}],["await",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["badrequestexception",{"_index":1014,"title":{},"body":{"controllers/ProfileController.html":{}}}],["badrequestexception(\"file",{"_index":1055,"title":{},"body":{"controllers/ProfileController.html":{}}}],["basecontrolleroptions",{"_index":497,"title":{"interfaces/BaseControllerOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithauthoptions",{"_index":502,"title":{"interfaces/BaseControllerWithAuthOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithswaggeropts",{"_index":503,"title":{"interfaces/BaseControllerWithSwaggerOpts.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecrudcontroller",{"_index":600,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["basecrudcontroller(options",{"_index":1558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["basectrl",{"_index":585,"title":{},"body":{"classes/CategoriesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basedto",{"_index":512,"title":{"classes/BaseDto.html":{}},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["basedto:11",{"_index":672,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:14",{"_index":670,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:8",{"_index":671,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["baseentity",{"_index":523,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentity:12",{"_index":653,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:14",{"_index":648,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:16",{"_index":655,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:18",{"_index":652,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:20",{"_index":650,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:22",{"_index":649,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:24",{"_index":647,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:26",{"_index":654,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:44",{"_index":658,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:53",{"_index":659,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:62",{"_index":657,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:71",{"_index":656,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:9",{"_index":651,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseservice",{"_index":631,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintoken",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pw",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(plaintoken",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["binary",{"_index":495,"title":{},"body":{"classes/AvatarUploadDto.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1634,"title":{},"body":{"index.html":{}}}],["bring",{"_index":1593,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1713,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1711,"title":{},"body":{"modules.html":{}}}],["buildschema",{"_index":561,"title":{},"body":{"classes/BaseEntity.html":{}}}],["buildschema(this",{"_index":570,"title":{},"body":{"classes/BaseEntity.html":{}}}],["built",{"_index":1598,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":31,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"license.html":{}}}],["cache",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":473,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":477,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canlogin",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["career",{"_index":1583,"title":{},"body":{"index.html":{}}}],["catch",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/User.html":{}}}],["catch(error",{"_index":825,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":830,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories.controller",{"_index":633,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":607,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":583,"title":{"classes/CategoriesController.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":122,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":587,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":608,"title":{"classes/Category.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category.dto",{"_index":613,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{}}}],["category.dto.ts",{"_index":759,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.modelname",{"_index":635,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["category.schema",{"_index":636,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["categorydto",{"_index":594,"title":{"classes/CategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorymodel",{"_index":634,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryservice",{"_index":589,"title":{},"body":{"classes/CategoriesController.html":{}}}],["ccn",{"_index":177,"title":{},"body":{"injectables/AppService.html":{}}}],["ccn/avatars",{"_index":1101,"title":{},"body":{"injectables/ProfileService.html":{}}}],["charge",{"_index":1654,"title":{},"body":{"license.html":{}}}],["check",{"_index":1620,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1700,"title":{},"body":{"license.html":{}}}],["clan",{"_index":1562,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AssignTasksDto.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"modules/DbTest.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":37,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AssignTasksDto.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"overview.html":{}}}],["classtype",{"_index":871,"title":{},"body":{"interfaces/IPagedListDto.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":1606,"title":{},"body":{"index.html":{}}}],["client",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["client({transport",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["clientbaseurl",{"_index":40,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["clientredis",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["cloud_name",{"_index":1088,"title":{},"body":{"injectables/ProfileService.html":{}}}],["cloudinary",{"_index":678,"title":{"interfaces/Cloudinary.html":{}},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"dependencies.html":{}}}],["cloudinary.v2.config",{"_index":1087,"title":{},"body":{"injectables/ProfileService.html":{}}}],["cloudinary.v2.uploader",{"_index":1084,"title":{},"body":{"injectables/ProfileService.html":{}}}],["cloudinary_api_key",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary_api_secret",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary_name",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":628,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_exports",{"_index":629,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":750,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_exports",{"_index":751,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_providers",{"_index":752,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":906,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":907,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":908,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_profilemodule",{"_index":1066,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":1068,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1067,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":1069,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_stagesmodule",{"_index":1175,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_exports",{"_index":1177,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_imports",{"_index":1176,"title":{},"body":{"modules/StagesModule.html":{}}}],["cluster_stagesmodule_providers",{"_index":1178,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":1272,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":1274,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":1273,"title":{},"body":{"modules/TasksModule.html":{}}}],["cluster_tasksmodule_providers",{"_index":1275,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule",{"_index":1316,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_exports",{"_index":1317,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_providers",{"_index":1318,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1411,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1412,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1413,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1561,"title":{},"body":{"index.html":{}}}],["codeclannigeria",{"_index":1616,"title":{},"body":{"index.html":{}}}],["codeclannigeria.dev",{"_index":1584,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1582,"title":{},"body":{"index.html":{}}}],["columnsize",{"_index":660,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsize.length128",{"_index":718,"title":{},"body":{"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["columnsize.length256",{"_index":719,"title":{},"body":{"classes/Course.html":{}}}],["columnsize.length32",{"_index":663,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/UserDto.html":{}}}],["columnsize.length64",{"_index":1373,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":1603,"title":{},"body":{"index.html":{}}}],["community",{"_index":1566,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1186,"title":{},"body":{"classes/Task.html":{},"index.html":{}}}],["completed",{"_index":1203,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["compression",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["comprised",{"_index":1567,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1619,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1679,"title":{},"body":{"license.html":{}}}],["config",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.key",{"_index":1090,"title":{},"body":{"injectables/ProfileService.html":{}}}],["config.name",{"_index":1089,"title":{},"body":{"injectables/ProfileService.html":{}}}],["config.secret",{"_index":1092,"title":{},"body":{"injectables/ProfileService.html":{}}}],["configmodule",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":146,"title":{"interfaces/Configuration.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["configuration().appemail",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["configuration().isauthenabled",{"_index":485,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["configuration().jwtsecret",{"_index":902,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmation",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmed",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail",{"_index":1331,"title":{},"body":{"classes/User.html":{}}}],["conflictexception",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["conflictexception('email",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('user",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["connect",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["connection",{"_index":1709,"title":{},"body":{"license.html":{}}}],["console.log(context.switchtohttp().getrequest().sessionid",{"_index":882,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["const",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(@injectmodel(user.modelname",{"_index":1085,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor(authservice",{"_index":475,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(categoryservice",{"_index":586,"title":{},"body":{"classes/CategoriesController.html":{}}}],["constructor(courseservice",{"_index":736,"title":{},"body":{"classes/CoursesController.html":{}}}],["constructor(message",{"_index":71,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(private",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["constructor(protected",{"_index":616,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(reflector",{"_index":1115,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(stageservice",{"_index":1157,"title":{},"body":{"classes/StagesController.html":{}}}],["constructor(tasksservice",{"_index":1218,"title":{},"body":{"classes/TasksController.html":{}}}],["constructor(trackservice",{"_index":1303,"title":{},"body":{"classes/TracksController.html":{}}}],["constructor(userentity",{"_index":1075,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor(usersservice",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["content",{"_index":1094,"title":{},"body":{"injectables/ProfileService.html":{}}}],["context",{"_index":480,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1121,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":483,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["contract",{"_index":1705,"title":{},"body":{"license.html":{}}}],["controller",{"_index":7,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('profile",{"_index":1034,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller.interface.ts",{"_index":853,"title":{},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["controller.interface.ts:10",{"_index":863,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:11",{"_index":865,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:12",{"_index":857,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:8",{"_index":855,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:9",{"_index":860,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controllerauth",{"_index":369,"title":{"interfaces/ControllerAuth.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controllername",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.indexof('controller",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.substr",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":1673,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1657,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1648,"title":{},"body":{"license.html":{}}}],["course",{"_index":709,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["course.dto",{"_index":745,"title":{},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{}}}],["course.dto.ts",{"_index":762,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["course.modelname",{"_index":756,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["course.schema",{"_index":757,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["coursedto",{"_index":720,"title":{"classes/CourseDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["coursemodel",{"_index":755,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courses.controller",{"_index":754,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses.service",{"_index":742,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["courses/courses.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["coursescontroller",{"_index":734,"title":{"classes/CoursesController.html":{}},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["courseservice",{"_index":739,"title":{},"body":{"classes/CoursesController.html":{}}}],["coursesmodule",{"_index":123,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesservice",{"_index":737,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1422,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverage.ts",{"_index":1427,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["create",{"_index":372,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":622,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["create(input",{"_index":590,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["createcategorydto",{"_index":591,"title":{"classes/CreateCategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcoursedto",{"_index":740,"title":{"classes/CreateCourseDto.html":{}},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["created",{"_index":1577,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":514,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["createdby",{"_index":526,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["createdto",{"_index":506,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createstagedto",{"_index":764,"title":{"classes/CreateStageDto.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtaskdto",{"_index":773,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtrackdto",{"_index":780,"title":{"classes/CreateTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtransport",{"_index":913,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":786,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crypto",{"_index":1363,"title":{},"body":{"classes/User.html":{}}}],["ctx",{"_index":831,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":835,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":834,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":1627,"title":{},"body":{"index.html":{}}}],["customdecorator",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customname",{"_index":1291,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["damages",{"_index":1701,"title":{},"body":{"license.html":{}}}],["data",{"_index":1053,"title":{},"body":{"controllers/ProfileController.html":{}}}],["data')@apibody({description",{"_index":1007,"title":{},"body":{"controllers/ProfileController.html":{}}}],["database",{"_index":164,"title":{"interfaces/Database.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_host",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datauri",{"_index":1082,"title":{},"body":{"injectables/ProfileService.html":{},"dependencies.html":{}}}],["datauri.format(`.${file.originalname.split('.')[0",{"_index":1095,"title":{},"body":{"injectables/ProfileService.html":{}}}],["date",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedListTaskDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["date().getdate",{"_index":1188,"title":{},"body":{"classes/Task.html":{}}}],["date().gettime",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().setdate(new",{"_index":1187,"title":{},"body":{"classes/Task.html":{}}}],["date().toisostring",{"_index":92,"title":{},"body":{"classes/ApiException.html":{}}}],["date(date.now",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(new",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"classes/Task.html":{}}}],["date})@type(undefined",{"_index":1208,"title":{},"body":{"classes/TaskDto.html":{}}}],["dbfactory",{"_index":803,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver",{"_index":801,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver.geturi",{"_index":806,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["dbtest",{"_index":791,"title":{"modules/DbTest.html":{}},"body":{"modules/DbTest.html":{},"modules.html":{}}}],["deactivate",{"_index":533,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deadline",{"_index":962,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{}}}],["deal",{"_index":1660,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1710,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator(target",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":44,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/FindDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["default",{"_index":17,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth",{"_index":1469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultauth.create.authroles",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.create.enableauth",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.authroles",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.enableauth",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.authroles",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.enableauth",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.authroles",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.enableauth",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.authroles",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.enableauth",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthobject",{"_index":16,"title":{"interfaces/DefaultAuthObject.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":361,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":46,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["delete",{"_index":374,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["delete(id",{"_index":856,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["deletedat",{"_index":527,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deletedby",{"_index":528,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deleteresulttype",{"_index":1725,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":112,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":665,"title":{},"body":{"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":1125,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(user",{"_index":1127,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["desire",{"_index":1578,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1633,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1571,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1572,"title":{},"body":{"index.html":{}}}],["discard_original_filename",{"_index":1099,"title":{},"body":{"injectables/ProfileService.html":{}}}],["distribute",{"_index":1669,"title":{},"body":{"license.html":{}}}],["doc",{"_index":22,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["documentation",{"_index":1423,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentquery",{"_index":1730,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":1731,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["domain",{"_index":686,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{}}}],["done",{"_index":1128,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":1134,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["dto/avatar",{"_index":1027,"title":{},"body":{"controllers/ProfileController.html":{}}}],["dto/update",{"_index":1029,"title":{},"body":{"controllers/ProfileController.html":{}}}],["e",{"_index":1371,"title":{},"body":{"classes/User.html":{}}}],["each",{"_index":188,"title":{},"body":{"classes/AssignTasksDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["email",{"_index":57,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/TemporaryToken.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email')@httpcode(httpstatus.ok",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["email?.tolowercase",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["email_token",{"_index":1289,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["emailparamname",{"_index":41,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["empty",{"_index":1057,"title":{},"body":{"controllers/ProfileController.html":{}}}],["enableauth",{"_index":367,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["enableimplicitconversion",{"_index":1042,"title":{},"body":{"controllers/ProfileController.html":{}}}],["encryptedtoken",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1570,"title":{},"body":{"index.html":{}}}],["engineers",{"_index":1573,"title":{},"body":{"index.html":{}}}],["enrollmentcount",{"_index":711,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["entity",{"_index":501,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["entitydto",{"_index":504,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IPagedListDto.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":978,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["enumerations",{"_index":1546,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":687,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["envvalidation",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1129,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error",{"_index":62,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":1130,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error.getstatus",{"_index":836,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.name",{"_index":842,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response",{"_index":846,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.error",{"_index":841,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.errors",{"_index":843,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.message",{"_index":847,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.name",{"_index":840,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.stack",{"_index":838,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorname",{"_index":839,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":63,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["errors/api",{"_index":829,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errortype",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["ethereal",{"_index":943,"title":{},"body":{"injectables/MailService.html":{}}}],["event",{"_index":1696,"title":{},"body":{"license.html":{}}}],["exception",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":823,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":827,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.ts",{"_index":60,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["exception.ts:10",{"_index":81,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:12",{"_index":77,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:14",{"_index":78,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:16",{"_index":83,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:18",{"_index":80,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:20",{"_index":73,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:6",{"_index":82,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:8",{"_index":79,"title":{},"body":{"classes/ApiException.html":{}}}],["exceptionfilter",{"_index":824,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":673,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["excludeextraneousvalues",{"_index":1041,"title":{},"body":{"controllers/ProfileController.html":{}}}],["executioncontext",{"_index":478,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["exist",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["exist.email",{"_index":1410,"title":{},"body":{"classes/UsersController.html":{}}}],["exist.id",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.name",{"_index":626,"title":{},"body":{"classes/CategoriesController.html":{}}}],["exist.title",{"_index":749,"title":{},"body":{"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["exist.token",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["expandvariables",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["expireafterseconds",{"_index":1293,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["expireat",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"classes/TemporaryToken.html":{}}}],["expired",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired_token",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinmins",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["exports",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":521,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@apiproperty({type",{"_index":1153,"title":{},"body":{"classes/StageDto.html":{}}}],["expose()@isarray()@length(1",{"_index":1397,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isdate()@mindate(new",{"_index":1206,"title":{},"body":{"classes/TaskDto.html":{}}}],["expose()@isenum(userrole)@apiproperty({enum",{"_index":1393,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isoptional()@maxlength(columnsize.length128",{"_index":1380,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isphonenumber('zz",{"_index":1387,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length128)@apiproperty",{"_index":722,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length32)@apiproperty()@isalphanumeric",{"_index":727,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length64",{"_index":1384,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length64)@isemail",{"_index":1382,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@min(0)@isint()@isoptional",{"_index":1149,"title":{},"body":{"classes/StageDto.html":{}}}],["express",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["extractjwt",{"_index":893,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":899,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["failedsigninattempts",{"_index":1329,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false').default('true",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":1636,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1607,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.buffer",{"_index":1096,"title":{},"body":{"injectables/ProfileService.html":{}}}],["file.mimetype.split('/')[0",{"_index":1058,"title":{},"body":{"controllers/ProfileController.html":{}}}],["file.size",{"_index":1060,"title":{},"body":{"controllers/ProfileController.html":{}}}],["fileinterceptor",{"_index":1019,"title":{},"body":{"controllers/ProfileController.html":{}}}],["filename",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1659,"title":{},"body":{"license.html":{}}}],["find",{"_index":370,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"classes/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":854,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findall(input",{"_index":858,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findbyid",{"_index":371,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["findbyid(input",{"_index":862,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["finddto",{"_index":807,"title":{"classes/FindDto.html":{}},"body":{"classes/FindDto.html":{},"coverage.html":{}}}],["findone",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstname",{"_index":975,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["fitness",{"_index":1692,"title":{},"body":{"license.html":{}}}],["folder",{"_index":1100,"title":{},"body":{"injectables/ProfileService.html":{}}}],["follow",{"_index":1613,"title":{},"body":{"index.html":{}}}],["following",{"_index":1678,"title":{},"body":{"license.html":{}}}],["forbiddenexception('invalid",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":1617,"title":{},"body":{"index.html":{}}}],["format",{"_index":494,"title":{},"body":{"classes/AvatarUploadDto.html":{},"miscellaneous/variables.html":{}}}],["fortune",{"_index":1650,"title":{},"body":{"license.html":{}}}],["found",{"_index":1253,"title":{},"body":{"classes/TasksController.html":{}}}],["free",{"_index":1608,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":1569,"title":{},"body":{"index.html":{}}}],["full",{"_index":1356,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fullname",{"_index":1333,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":873,"title":{},"body":{"interfaces/IPagedListDto.html":{},"injectables/SessionSerializer.html":{},"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":1554,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1676,"title":{},"body":{"license.html":{}}}],["future",{"_index":961,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"index.html":{}}}],["future'})@isoptional()@apiproperty({type",{"_index":1207,"title":{},"body":{"classes/TaskDto.html":{}}}],["generaterandomtoken",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterandomtoken(64",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken(undefined",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":999,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getauthobj",{"_index":1470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getauthtoken",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthtoken(user",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfullname",{"_index":1353,"title":{},"body":{"classes/User.html":{}}}],["gethello",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":1357,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass",{"_index":1360,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass(this",{"_index":1379,"title":{},"body":{"classes/User.html":{}}}],["getmodelname",{"_index":559,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getprofile",{"_index":995,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":1037,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(req",{"_index":998,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getschema",{"_index":557,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getters",{"_index":572,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getting",{"_index":1560,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwelcome",{"_index":174,"title":{},"body":{"injectables/AppService.html":{}}}],["global",{"_index":1137,"title":{},"body":{"modules/SharedModule.html":{}}}],["goal",{"_index":1589,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1653,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1714,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":470,"title":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":471,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["hapi/joi",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["hash",{"_index":1362,"title":{},"body":{"classes/User.html":{}}}],["hash(this.password",{"_index":1370,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1652,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1698,"title":{},"body":{"license.html":{}}}],["host",{"_index":682,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Mailer.html":{}}}],["host.switchtohttp",{"_index":832,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{}}}],["httpcode(httpstatus.ok",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{}}}],["httpexception",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":821,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ethereal.email/message/waqkmgkddxqdoou",{"_index":947,"title":{},"body":{"injectables/MailService.html":{}}}],["httpstatus",{"_index":84,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.bad_request",{"_index":621,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.created",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.forbidden",{"_index":620,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.ok",{"_index":1036,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TasksController.html":{}}}],["httpstatus.unauthorized",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpstatus[statuscode",{"_index":95,"title":{},"body":{"classes/ApiException.html":{}}}],["ibasecontroller",{"_index":852,"title":{"interfaces/IBaseController.html":{}},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["id",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseController.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":900,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1056,"title":{},"body":{"controllers/ProfileController.html":{}}}],["implements",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"guards/RolesGuard.html":{}}}],["implied",{"_index":1688,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["imports",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1682,"title":{},"body":{"license.html":{}}}],["including",{"_index":1663,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["info.messageid",{"_index":938,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":646,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["inject",{"_index":1164,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["inject(stagesservice",{"_index":1245,"title":{},"body":{"classes/TasksController.html":{}}}],["inject(tracksservice",{"_index":1169,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["inject(usersservice",{"_index":1246,"title":{},"body":{"classes/TasksController.html":{}}}],["injectable",{"_index":171,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["injectables",{"_index":172,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"overview.html":{}}}],["injectmodel",{"_index":1081,"title":{},"body":{"injectables/ProfileService.html":{}}}],["inmemorydb",{"_index":802,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["innovators",{"_index":1568,"title":{},"body":{"index.html":{}}}],["input",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["input.email",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.email.tolowercase",{"_index":1409,"title":{},"body":{"classes/UsersController.html":{}}}],["input.name.touppercase",{"_index":625,"title":{},"body":{"classes/CategoriesController.html":{}}}],["input.stage",{"_index":1252,"title":{},"body":{"classes/TasksController.html":{}}}],["input.taskidlist",{"_index":1261,"title":{},"body":{"classes/TasksController.html":{}}}],["input.taskidlist.length",{"_index":1262,"title":{},"body":{"classes/TasksController.html":{}}}],["input.title.touppercase",{"_index":748,"title":{},"body":{"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["input.track",{"_index":1172,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["input.userid",{"_index":1259,"title":{},"body":{"classes/TasksController.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["interface.ts",{"_index":500,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":1359,"title":{},"body":{"classes/User.html":{}}}],["internalservererrorexception(e",{"_index":1372,"title":{},"body":{"classes/User.html":{}}}],["invalid",{"_index":981,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["invalid_login_attempt",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_token",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ipagedlistdto",{"_index":866,"title":{"interfaces/IPagedListDto.html":{}},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{}}}],["isactive",{"_index":529,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isalphanumeric",{"_index":729,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["isarray",{"_index":187,"title":{},"body":{"classes/AssignTasksDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isarray()@ismongoid({each",{"_index":183,"title":{},"body":{"classes/AssignTasksDto.html":{}}}],["isauthenabled",{"_index":690,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["isauthenticationenabled",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdate",{"_index":957,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["isdeleted",{"_index":530,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isemail",{"_index":969,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isemailverified",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["isenum",{"_index":970,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isenum(userrole",{"_index":977,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isglobal",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":950,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["isjson",{"_index":820,"title":{},"body":{"classes/FindDto.html":{}}}],["isjson()@isoptional",{"_index":815,"title":{},"body":{"classes/FindDto.html":{}}}],["ismongoid",{"_index":185,"title":{},"body":{"classes/AssignTasksDto.html":{},"classes/BaseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["ismongoid()@expose",{"_index":518,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["isnotempty",{"_index":48,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{}}}],["isoptional",{"_index":813,"title":{},"body":{"classes/FindDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/UserDto.html":{}}}],["isoptional()@isjson",{"_index":817,"title":{},"body":{"classes/FindDto.html":{}}}],["isphonenumber",{"_index":971,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isphonenumber(\"zz",{"_index":980,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["issue",{"_index":1623,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1621,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":45,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["isurl()@maxlength(columnsize.length256)@expose",{"_index":725,"title":{},"body":{"classes/CourseDto.html":{}}}],["isvalid",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":869,"title":{},"body":{"interfaces/IPagedListDto.html":{},"classes/User.html":{}}}],["joi.number().default(27017",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().default('redis://localhost:6379",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().required",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('true",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1641,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign(payload",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_secret",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_validity_hours",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":604,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":898,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtpayload",{"_index":418,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["jwtstrategy",{"_index":342,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidityhrs",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["key",{"_index":680,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1687,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1063,"title":{},"body":{"controllers/ProfileController.html":{}}}],["lastname",{"_index":976,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["legend",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":972,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["length(1",{"_index":987,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["length1024",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length128",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length16",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length256",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length32",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length512",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length64",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length8",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":1629,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1702,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1699,"title":{},"body":{"license.html":{}}}],["license",{"_index":1646,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":809,"title":{},"body":{"classes/FindDto.html":{},"dependencies.html":{}}}],["limitation",{"_index":1664,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1689,"title":{},"body":{"license.html":{}}}],["list.dto.ts",{"_index":868,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["local",{"_index":1530,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["lockoutenddate",{"_index":1330,"title":{},"body":{"classes/User.html":{}}}],["logger",{"_index":923,"title":{},"body":{"injectables/MailService.html":{},"injectables/SessionSerializer.html":{}}}],["logger.debug(`message",{"_index":936,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`preview",{"_index":945,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.error(error",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log(user",{"_index":1135,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["login",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(_",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginreqdto",{"_index":54,"title":{"classes/LoginReqDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["loginresdto",{"_index":265,"title":{"classes/LoginResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["loginresdto})@apiunauthorizedresponse({type",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":1336,"title":{},"body":{"classes/User.html":{}}}],["mail",{"_index":922,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.options",{"_index":918,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":910,"title":{},"body":{"modules/MailModule.html":{}}}],["mailer",{"_index":685,"title":{"interfaces/Mailer.html":{}},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["mailer.domain",{"_index":934,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer.key",{"_index":933,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer_api_key",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain_mailgun",{"_index":800,"title":{},"body":{"modules/DbTest.html":{}}}],["mailgun",{"_index":926,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["mailmodule",{"_index":124,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":920,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":251,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":1428,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["make",{"_index":1631,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":1626,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":640,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128",{"_index":676,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128)@expose",{"_index":666,"title":{},"body":{"classes/CategoryDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length256",{"_index":731,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["maxlength(columnsize.length32",{"_index":675,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length32)@expose",{"_index":668,"title":{},"body":{"classes/CategoryDto.html":{}}}],["maxlength(columnsize.length32)@isalphanumeric()@expose",{"_index":1151,"title":{},"body":{"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length64",{"_index":974,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["measures",{"_index":1586,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":581,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["members",{"_index":1597,"title":{},"body":{"index.html":{}}}],["memory",{"_index":796,"title":{},"body":{"modules/DbTest.html":{}}}],["mentee",{"_index":1365,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentor",{"_index":1366,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":1691,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1426,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["message",{"_index":64,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TaskDto.html":{},"classes/UserDto.html":{}}}],["metadata",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["mg",{"_index":925,"title":{},"body":{"injectables/MailService.html":{}}}],["min",{"_index":951,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["min(0",{"_index":953,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["mindate",{"_index":958,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["mindate(new",{"_index":960,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["minlength",{"_index":1108,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["minlength(6",{"_index":1106,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["miscellaneous",{"_index":1545,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1647,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1599,"title":{},"body":{"index.html":{}}}],["model",{"_index":11,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/User.html":{}}}],["modelcreate",{"_index":30,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modelname",{"_index":536,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modeloptions",{"_index":1287,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["models/auth.enums",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/category.entity",{"_index":609,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["models/course.entity",{"_index":743,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["models/dto/acct",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/auth.dto",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["models/dto/create",{"_index":1309,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["models/dto/reset",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/tack.dto",{"_index":1311,"title":{},"body":{"classes/TracksController.html":{}}}],["models/dto/user.dto",{"_index":1405,"title":{},"body":{"classes/UsersController.html":{}}}],["models/dto/validate",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dtos/assign",{"_index":1240,"title":{},"body":{"classes/TasksController.html":{}}}],["models/dtos/category.dto",{"_index":611,"title":{},"body":{"classes/CategoriesController.html":{}}}],["models/dtos/course.dto",{"_index":744,"title":{},"body":{"classes/CoursesController.html":{}}}],["models/dtos/create",{"_index":612,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["models/dtos/stage.dto.ts",{"_index":1166,"title":{},"body":{"classes/StagesController.html":{}}}],["models/dtos/task.dto",{"_index":1242,"title":{},"body":{"classes/TasksController.html":{}}}],["models/jwt",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["models/stage.entity.ts",{"_index":1167,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{}}}],["models/task.entity",{"_index":1243,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{}}}],["models/temporary",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["models/track.entity",{"_index":1312,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["models/user.entity",{"_index":1406,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["modelvm",{"_index":28,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modify",{"_index":1667,"title":{},"body":{"license.html":{}}}],["module",{"_index":109,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":111,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":795,"title":{},"body":{"modules/DbTest.html":{}}}],["mongodb_uri",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongomemoryserver",{"_index":794,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":565,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Stage.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forroot(configuration().database.uri",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forrootasync",{"_index":804,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1640,"title":{},"body":{"index.html":{}}}],["name",{"_index":75,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":1624,"title":{},"body":{"index.html":{}}}],["nestjs/bull",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":85,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1119,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"injectables/ProfileService.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1020,"title":{},"body":{"controllers/ProfileController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":52,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/CategoriesController.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IPagedListDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["new",{"_index":21,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{}}}],["nigeria",{"_index":1563,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":924,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":931,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":946,"title":{},"body":{"injectables/MailService.html":{}}}],["noninfringement",{"_index":1695,"title":{},"body":{"license.html":{}}}],["note",{"_index":1614,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["notfoundexception('token",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception('user",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception(`entity",{"_index":1046,"title":{},"body":{"controllers/ProfileController.html":{}}}],["notfoundexception(`not",{"_index":1263,"title":{},"body":{"classes/TasksController.html":{}}}],["notfoundexception(`stage",{"_index":1251,"title":{},"body":{"classes/TasksController.html":{}}}],["notfoundexception(`track",{"_index":1254,"title":{},"body":{"classes/TasksController.html":{}}}],["notfoundexception(`user",{"_index":1258,"title":{},"body":{"classes/TasksController.html":{}}}],["notice",{"_index":1680,"title":{},"body":{"license.html":{}}}],["null",{"_index":541,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["number",{"_index":72,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["obj.util.ts",{"_index":1468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.interface",{"_index":19,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["object.interface.ts",{"_index":365,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["object.values(userrole",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":878,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["obtaining",{"_index":1656,"title":{},"body":{"license.html":{}}}],["ochi",{"_index":1651,"title":{},"body":{"license.html":{}}}],["official",{"_index":1564,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":776,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UpdateProfileDto.html":{}}}],["omittype(createuserdto",{"_index":1327,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["omittype(taskdto",{"_index":779,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["omittype(trackdto",{"_index":785,"title":{},"body":{"classes/CreateTrackDto.html":{}}}],["omittype(userdto",{"_index":790,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["ongoing",{"_index":1579,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["operation.decorator.ts",{"_index":1454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationid",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":61,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1290,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["opts",{"_index":499,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/FindDto.html":{},"coverage.html":{}}}],["otherwise",{"_index":1707,"title":{},"body":{"license.html":{}}}],["out",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1715,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1489,"title":{"dependencies.html":{}},"body":{}}],["paged",{"_index":874,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["pagedcategoryoutdto",{"_index":610,"title":{"classes/PagedCategoryOutDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedcourseoutputdto",{"_index":732,"title":{"classes/PagedCourseOutputDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["pagedlistdto",{"_index":510,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"interfaces/IPagedListDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["pagedlistdto(categorydto",{"_index":677,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{}}}],["pagedlistdto(coursedto",{"_index":733,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["pagedlistdto(entitydto",{"_index":1559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pagedlistdto(stagedto",{"_index":954,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["pagedlistdto(taskdto",{"_index":963,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["pagedlistdto(trackdto",{"_index":966,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["pagedlistdto(userdto",{"_index":991,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["pagedliststagedto",{"_index":948,"title":{"classes/PagedListStageDto.html":{}},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedlisttaskdto",{"_index":955,"title":{"classes/PagedListTaskDto.html":{}},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedtrackoutputdto",{"_index":964,"title":{"classes/PagedTrackOutputDto.html":{}},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pageduseroutputdto",{"_index":967,"title":{"classes/PagedUserOutputDto.html":{}},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1622,"title":{},"body":{"index.html":{}}}],["param",{"_index":1238,"title":{},"body":{"classes/TasksController.html":{}}}],["parameters",{"_index":74,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1585,"title":{},"body":{"index.html":{}}}],["partial",{"_index":1048,"title":{},"body":{"controllers/ProfileController.html":{}}}],["particular",{"_index":1693,"title":{},"body":{"license.html":{}}}],["passport",{"_index":895,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":360,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["passportserializer",{"_index":1124,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":892,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":896,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password')@httpcode(httpstatus.ok",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["password_token",{"_index":1288,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["passwordhash",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":65,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["paths",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["payload.ts",{"_index":885,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["permission",{"_index":848,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"license.html":{}}}],["permit",{"_index":1674,"title":{},"body":{"license.html":{}}}],["person",{"_index":1655,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1675,"title":{},"body":{"license.html":{}}}],["phone",{"_index":982,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["phonenumber",{"_index":986,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["photo",{"_index":1010,"title":{},"body":{"controllers/ProfileController.html":{}}}],["photourl",{"_index":989,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["picktype",{"_index":51,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(categorydto",{"_index":760,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["picktype(coursedto",{"_index":763,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["picktype(loginreqdto",{"_index":56,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(registeruserdto",{"_index":904,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["picktype(stagedto",{"_index":771,"title":{},"body":{"classes/CreateStageDto.html":{}}}],["plaintoclass",{"_index":1023,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoclass(userdto",{"_index":1040,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoken",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["playlisturl",{"_index":712,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["please",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["plugin",{"_index":1145,"title":{},"body":{"classes/Stage.html":{}}}],["plugin(autopopulate",{"_index":1147,"title":{},"body":{"classes/Stage.html":{}}}],["pluralize",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["populate('user",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":683,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1684,"title":{},"body":{"license.html":{}}}],["post",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["post(':taskid/submit",{"_index":1265,"title":{},"body":{"classes/TasksController.html":{}}}],["post(':taskid/submit')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1234,"title":{},"body":{"classes/TasksController.html":{}}}],["post('assign",{"_index":1255,"title":{},"body":{"classes/TasksController.html":{}}}],["post('assign')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1222,"title":{},"body":{"classes/TasksController.html":{}}}],["post('confirm",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiconflictresponse({type",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload_profile_photo",{"_index":1050,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post('upload_profile_photo')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1006,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post()@apiresponse({type",{"_index":1230,"title":{},"body":{"classes/TasksController.html":{}}}],["post()@useguards(jwtauthguard",{"_index":592,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["pre",{"_index":1361,"title":{},"body":{"classes/User.html":{}}}],["pre('save",{"_index":1368,"title":{},"body":{"classes/User.html":{}}}],["prefix",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["preview",{"_index":939,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["process",{"_index":1638,"title":{},"body":{"index.html":{}}}],["process.env.api_auth_enabled",{"_index":698,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.app_email",{"_index":699,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_api_key",{"_index":707,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_api_secret",{"_index":706,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_name",{"_index":708,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_host",{"_index":702,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_name",{"_index":704,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_port",{"_index":703,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_secret",{"_index":694,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_validity_hours",{"_index":695,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_api_key",{"_index":700,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_domain",{"_index":701,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongodb_uri",{"_index":705,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongoms_system_binary",{"_index":798,"title":{},"body":{"modules/DbTest.html":{}}}],["process.env.node_env",{"_index":693,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.port",{"_index":692,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.redis_server_url",{"_index":697,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.root_url",{"_index":696,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["production",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":994,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":1071,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":1030,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.dto.ts",{"_index":1325,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.service",{"_index":1032,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":992,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":125,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":1031,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["promiselike",{"_index":890,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["prop",{"_index":562,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({default",{"_index":542,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({enum",{"_index":1195,"title":{},"body":{"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({items",{"_index":1349,"title":{},"body":{"classes/User.html":{}}}],["prop({maxlength",{"_index":1334,"title":{},"body":{"classes/User.html":{}}}],["prop({ref",{"_index":1142,"title":{},"body":{"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({required",{"_index":538,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AssignTasksDto.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["propertydescriptor",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propose",{"_index":1592,"title":{},"body":{"index.html":{}}}],["protected",{"_index":1086,"title":{},"body":{"injectables/ProfileService.html":{},"classes/StagesController.html":{}}}],["provide",{"_index":637,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1685,"title":{},"body":{"license.html":{}}}],["providers",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pub",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["public_id",{"_index":1102,"title":{},"body":{"injectables/ProfileService.html":{}}}],["publish",{"_index":1668,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1632,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1694,"title":{},"body":{"license.html":{}}}],["put",{"_index":1015,"title":{},"body":{"controllers/ProfileController.html":{},"index.html":{}}}],["put()@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":1003,"title":{},"body":{"controllers/ProfileController.html":{}}}],["pw",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["pw.dto",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["pw.dto.ts",{"_index":1111,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["pw.dto.ts:7",{"_index":1112,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["queryitem",{"_index":1726,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":1727,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["questions",{"_index":1644,"title":{},"body":{"index.html":{}}}],["randombytes(columnsize.length32",{"_index":1376,"title":{},"body":{"classes/User.html":{}}}],["randombytes(size).tostring('hex",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"injectables/MailService.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{}}}],["redis",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["redis_server_url",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisurl",{"_index":689,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["ref",{"_index":540,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["reflect",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1116,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(input",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":210,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["registeruserresdto",{"_index":213,"title":{"classes/RegisterUserResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["repeat",{"_index":1637,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1618,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1601,"title":{},"body":{"index.html":{}}}],["req",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{}}}],["req.url",{"_index":844,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["req.user['email'].tolowercase",{"_index":1039,"title":{},"body":{"controllers/ProfileController.html":{}}}],["req.user['userid",{"_index":1044,"title":{},"body":{"controllers/ProfileController.html":{}}}],["request",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"index.html":{}}}],["request.body",{"_index":486,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["request.user",{"_index":489,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["require('datauri/parser",{"_index":1083,"title":{},"body":{"injectables/ProfileService.html":{}}}],["require('nodemailer/lib/mailer",{"_index":927,"title":{},"body":{"injectables/MailService.html":{}}}],["required",{"_index":568,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":833,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.status(statuscode).json(exception",{"_index":851,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassinput",{"_index":218,"title":{"classes/ResetPassInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"coverage.html":{}}}],["resetpassword",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(@body",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(input",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":850,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":828,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restore",{"_index":534,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["restriction",{"_index":1662,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":576,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret._id",{"_index":578,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret.id",{"_index":577,"title":{},"body":{"classes/BaseEntity.html":{}}}],["return",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returnmodeltype",{"_index":1076,"title":{},"body":{"injectables/ProfileService.html":{},"classes/User.html":{}}}],["returns",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1665,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["roles",{"_index":602,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(userrole.admin",{"_index":619,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["roles(userrole.mentee",{"_index":1266,"title":{},"body":{"classes/TasksController.html":{}}}],["roles.includes(role",{"_index":1122,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":605,"title":{"guards/RolesGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["rolesguard)@roles(userrole.admin",{"_index":1224,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["rolesguard)@roles(userrole.admin)@apiresponse({type",{"_index":593,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["rolesguard)@roles(userrole.mentee)@apibearerauth()@apiresponse({status",{"_index":1235,"title":{},"body":{"classes/TasksController.html":{}}}],["root_url",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooturl",{"_index":688,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["rxjs",{"_index":880,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["sample",{"_index":984,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["saved",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved.isemailverified",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["schema",{"_index":358,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":810,"title":{},"body":{"classes/FindDto.html":{}}}],["secret",{"_index":681,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["secretorkey",{"_index":901,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure_url",{"_index":1097,"title":{},"body":{"injectables/ProfileService.html":{}}}],["sell",{"_index":1672,"title":{},"body":{"license.html":{}}}],["sendemailverifytoken",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(@body",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(input",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(@body",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(input",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["sending",{"_index":941,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync",{"_index":914,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync(mailoptions",{"_index":917,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":937,"title":{},"body":{"injectables/MailService.html":{}}}],["serializeuser",{"_index":1126,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":1132,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"modules/DbTest.html":{}}}],["session",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.serializer",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{}}}],["sessionserializer",{"_index":343,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["setmetadata(userrole",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setrandompass",{"_index":1332,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":552,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shall",{"_index":1681,"title":{},"body":{"license.html":{}}}],["shared",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/config/configuration",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{}}}],["shared/constants",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["shared/controllers",{"_index":601,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["shared/controllers/base.controller",{"_index":1308,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/decorators/roles.decorator",{"_index":603,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors/api",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["shared/mail/mail.module",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/mail/mail.service",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["shared/models/base.entity",{"_index":661,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shared/models/dto",{"_index":674,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["shared/models/dto/base.dto",{"_index":730,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TrackDto.html":{}}}],["shared/services",{"_index":632,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["shared/types/abstract.type",{"_index":567,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["shared/utils/random",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/validations/env.validation",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":126,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skill",{"_index":1628,"title":{},"body":{"index.html":{}}}],["skills",{"_index":1609,"title":{},"body":{"index.html":{}}}],["skip",{"_index":811,"title":{},"body":{"classes/FindDto.html":{}}}],["slack",{"_index":1642,"title":{},"body":{"index.html":{}}}],["software",{"_index":1576,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1630,"title":{},"body":{"index.html":{}}}],["solved",{"_index":1625,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"index.html":{}}}],["src/.../abstract.type.ts",{"_index":1724,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.enums.ts",{"_index":1547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.errors.ts",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticate.decorator.ts",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.controller.ts",{"_index":1555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../categories.controller.ts",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../categories.module.ts",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../courses.module.ts",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1556,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../paged",{"_index":1557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../random",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stages.controller.ts",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stages.module.ts",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.entity.ts",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tasks.controller.ts",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tasks.module.ts",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temporary",{"_index":1549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tracks.controller.ts",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tracks.module.ts",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.controller.ts",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.module.ts",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":173,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":175,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:101",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:114",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:139",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:54",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:64",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:105",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:122",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:54",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:65",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:69",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:89",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":472,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":476,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:17",{"_index":479,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:21",{"_index":482,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/jwt",{"_index":875,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":1114,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":1117,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:13",{"_index":1118,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/models/auth.enums.ts",{"_index":1551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/models/dto/acct",{"_index":38,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts",{"_index":903,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts:11",{"_index":905,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/reset",{"_index":1110,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["src/auth/models/dto/validate",{"_index":1419,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["src/auth/models/jwt",{"_index":884,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/models/temporary",{"_index":1281,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/session.serializer.ts",{"_index":1123,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:11",{"_index":1131,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:8",{"_index":1133,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":886,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":891,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":888,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/temp",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["src/categories/categories.controller.ts",{"_index":584,"title":{},"body":{"classes/CategoriesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.controller.ts:32",{"_index":588,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:44",{"_index":598,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":630,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.service.ts",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["src/categories/models/category.entity.ts",{"_index":639,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/categories/models/category.entity.ts:15",{"_index":645,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/dtos/category.dto.ts",{"_index":664,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{}}}],["src/categories/models/dtos/category.dto.ts:10",{"_index":669,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/category.dto.ts:13",{"_index":667,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/create",{"_index":758,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts",{"_index":735,"title":{},"body":{"classes/CoursesController.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts:36",{"_index":738,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.controller.ts:47",{"_index":741,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.module.ts",{"_index":753,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/courses/courses.service.ts",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["src/courses/models/course.entity.ts",{"_index":710,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/courses/models/course.entity.ts:15",{"_index":717,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:23",{"_index":713,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:30",{"_index":716,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:35",{"_index":715,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/dtos/course.dto.ts",{"_index":721,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["src/courses/models/dtos/course.dto.ts:14",{"_index":728,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:18",{"_index":723,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:22",{"_index":726,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:24",{"_index":724,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/create",{"_index":761,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1447,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/profile/dto/avatar",{"_index":491,"title":{},"body":{"classes/AvatarUploadDto.html":{},"coverage.html":{}}}],["src/profile/dto/update",{"_index":1324,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts",{"_index":993,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:38",{"_index":1000,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:51",{"_index":1004,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:75",{"_index":1013,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":1070,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":1072,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:12",{"_index":1077,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:25",{"_index":1080,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/shared/config/configuration.ts",{"_index":679,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["src/shared/constants.ts",{"_index":1450,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/controllers/base.controller.ts",{"_index":1451,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/decorators/api",{"_index":1452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authenticate.decorator.ts",{"_index":1456,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/file",{"_index":1458,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/roles.decorator.ts",{"_index":1461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/errors/api",{"_index":59,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/shared/errors/auth.errors.ts",{"_index":1463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/http",{"_index":822,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interfaces/abstract",{"_index":6,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/base",{"_index":498,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{},"coverage.html":{}}}],["src/shared/interfaces/default",{"_index":364,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["src/shared/mail/mail.module.ts",{"_index":909,"title":{},"body":{"modules/MailModule.html":{}}}],["src/shared/mail/mail.service.ts",{"_index":911,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/shared/mail/mail.service.ts:10",{"_index":921,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:11",{"_index":915,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:16",{"_index":916,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:28",{"_index":919,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/models/base.entity.ts",{"_index":524,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts:12",{"_index":548,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:14",{"_index":543,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:16",{"_index":550,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:18",{"_index":547,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:20",{"_index":545,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:22",{"_index":544,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:24",{"_index":539,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:26",{"_index":549,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:27",{"_index":558,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:41",{"_index":560,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:44",{"_index":555,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:53",{"_index":556,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:62",{"_index":554,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:71",{"_index":551,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:9",{"_index":546,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/dto/base.dto.ts",{"_index":513,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/base.dto.ts:11",{"_index":520,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:14",{"_index":517,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:8",{"_index":519,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/find.dto.ts",{"_index":808,"title":{},"body":{"classes/FindDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/find.dto.ts:10",{"_index":818,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:13",{"_index":816,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:5",{"_index":819,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:7",{"_index":814,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/paged",{"_index":867,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/services/base.service.ts",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":1136,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/types/abstract.type.ts",{"_index":1729,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/shared/utils/get",{"_index":1467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/random",{"_index":1471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/validations/env.validation.ts",{"_index":1473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/models/dtos/create",{"_index":765,"title":{},"body":{"classes/CreateStageDto.html":{},"coverage.html":{}}}],["src/stages/models/dtos/stage.dto.ts.ts",{"_index":949,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"coverage.html":{}}}],["src/stages/models/dtos/stage.dto.ts.ts:21",{"_index":1152,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts.ts:24",{"_index":1148,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts.ts:29",{"_index":1150,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts.ts:32",{"_index":1154,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/stage.entity.ts.ts",{"_index":1138,"title":{},"body":{"classes/Stage.html":{},"coverage.html":{}}}],["src/stages/models/stage.entity.ts.ts:19",{"_index":1141,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts.ts:28",{"_index":1139,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts.ts:33",{"_index":1140,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts.ts:40",{"_index":1144,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/stages.controller.ts",{"_index":1156,"title":{},"body":{"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/stages.controller.ts:27",{"_index":1161,"title":{},"body":{"classes/StagesController.html":{}}}],["src/stages/stages.controller.ts:43",{"_index":1163,"title":{},"body":{"classes/StagesController.html":{}}}],["src/stages/stages.module.ts",{"_index":1179,"title":{},"body":{"modules/StagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/stages.service.ts",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["src/tasks/models/dtos/assign",{"_index":179,"title":{},"body":{"classes/AssignTasksDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/create",{"_index":774,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/task.dto.ts",{"_index":956,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/task.dto.ts:19",{"_index":1212,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:22",{"_index":1210,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:25",{"_index":1213,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:28",{"_index":1211,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:35",{"_index":1209,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/task.entity.ts",{"_index":1185,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/tasks/models/task.entity.ts:25",{"_index":1197,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:34",{"_index":1191,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:41",{"_index":1190,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:49",{"_index":1196,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:52",{"_index":1198,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:55",{"_index":1192,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:57",{"_index":1199,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":1215,"title":{},"body":{"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/tasks.controller.ts:107",{"_index":1236,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:40",{"_index":1220,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:59",{"_index":1232,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:85",{"_index":1229,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.module.ts",{"_index":1276,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/tasks.service.ts",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["src/tracks/models/dto/create",{"_index":781,"title":{},"body":{"classes/CreateTrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts",{"_index":965,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts:12",{"_index":1300,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/tack.dto.ts:15",{"_index":1299,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/track.entity.ts",{"_index":1294,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/tracks/models/track.entity.ts:17",{"_index":1298,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:26",{"_index":1296,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:29",{"_index":1297,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/tracks.controller.ts",{"_index":1302,"title":{},"body":{"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.controller.ts:31",{"_index":1304,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:42",{"_index":1307,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.module.ts",{"_index":1319,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.service.ts",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["src/users/models/dto/create",{"_index":787,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/register",{"_index":1105,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts",{"_index":968,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts:13",{"_index":1385,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:17",{"_index":1386,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:22",{"_index":1383,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:27",{"_index":1394,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:31",{"_index":1381,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:36",{"_index":1389,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:42",{"_index":1400,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:47",{"_index":1392,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:50",{"_index":1396,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/user.entity.ts",{"_index":1328,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/models/user.entity.ts:103",{"_index":1354,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:106",{"_index":1352,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:111",{"_index":1351,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:115",{"_index":1358,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:40",{"_index":1339,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:47",{"_index":1341,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:56",{"_index":1337,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:63",{"_index":1345,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:67",{"_index":1346,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:74",{"_index":1335,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:76",{"_index":1350,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:79",{"_index":1344,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:87",{"_index":1347,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:90",{"_index":1340,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:92",{"_index":1342,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:94",{"_index":1338,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:96",{"_index":1348,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1402,"title":{},"body":{"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts:33",{"_index":1403,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":1404,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1414,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts",{"_index":1486,"title":{},"body":{"coverage.html":{}}}],["stack",{"_index":66,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["stacktrace",{"_index":837,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stage",{"_index":959,"title":{"classes/Stage.html":{}},"body":{"classes/PagedListTaskDto.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stage.dto.ts",{"_index":770,"title":{},"body":{"classes/CreateStageDto.html":{},"classes/StagesController.html":{}}}],["stage.dto.ts.ts",{"_index":766,"title":{},"body":{"classes/CreateStageDto.html":{},"coverage.html":{}}}],["stage.dto.ts.ts:14",{"_index":768,"title":{},"body":{"classes/CreateStageDto.html":{}}}],["stage.modelname",{"_index":1182,"title":{},"body":{"modules/StagesModule.html":{},"miscellaneous/variables.html":{}}}],["stage.schema",{"_index":1183,"title":{},"body":{"modules/StagesModule.html":{},"miscellaneous/variables.html":{}}}],["stage.title",{"_index":1174,"title":{},"body":{"classes/StagesController.html":{}}}],["stagedto",{"_index":769,"title":{"classes/StageDto.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stagemodel",{"_index":1181,"title":{},"body":{"modules/StagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stages",{"_index":1295,"title":{},"body":{"classes/Track.html":{}}}],["stages.controller",{"_index":1180,"title":{},"body":{"modules/StagesModule.html":{}}}],["stages.service",{"_index":1168,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{}}}],["stages/models/stage.entity.ts",{"_index":1200,"title":{},"body":{"classes/Task.html":{},"classes/Track.html":{}}}],["stages/stages.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["stages/stages.service",{"_index":1239,"title":{},"body":{"classes/TasksController.html":{}}}],["stagescontroller",{"_index":1155,"title":{"classes/StagesController.html":{}},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{},"coverage.html":{}}}],["stageservice",{"_index":1162,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["stagesmodule",{"_index":127,"title":{"modules/StagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["stagesservice",{"_index":1158,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":1602,"title":{},"body":{"index.html":{}}}],["started",{"_index":1201,"title":{"index.html":{},"license.html":{}},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["startup",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["stated",{"_index":1590,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":569,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["status",{"_index":67,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["statuscode",{"_index":68,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["strategies/jwt.strategy",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":894,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":43,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AssignTasksDto.html":{},"injectables/AuthService.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["string})@isoptional",{"_index":1399,"title":{},"body":{"classes/UserDto.html":{}}}],["structure",{"_index":1605,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1677,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1670,"title":{},"body":{"license.html":{}}}],["submittask",{"_index":1217,"title":{},"body":{"classes/TasksController.html":{}}}],["submittask(@param('taskid",{"_index":1267,"title":{},"body":{"classes/TasksController.html":{}}}],["submittask(taskid",{"_index":1233,"title":{},"body":{"classes/TasksController.html":{}}}],["substantial",{"_index":1683,"title":{},"body":{"license.html":{}}}],["suggested",{"_index":1611,"title":{},"body":{"index.html":{}}}],["super",{"_index":897,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super(categoryservice",{"_index":617,"title":{},"body":{"classes/CategoriesController.html":{}}}],["super(courseservice",{"_index":746,"title":{},"body":{"classes/CoursesController.html":{}}}],["super(stageservice",{"_index":1170,"title":{},"body":{"classes/StagesController.html":{}}}],["super(tasksservice",{"_index":1247,"title":{},"body":{"classes/TasksController.html":{}}}],["super(trackservice",{"_index":1314,"title":{},"body":{"classes/TracksController.html":{}}}],["super(usersservice",{"_index":1408,"title":{},"body":{"classes/UsersController.html":{}}}],["super.canactivate(context",{"_index":883,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.create(input",{"_index":627,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["support",{"_index":1580,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1712,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1453,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["symbol",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":23,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IPagedListDto.html":{}}}],["table",{"_index":1488,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1487,"title":{},"body":{"coverage.html":{}}}],["tack.dto",{"_index":784,"title":{},"body":{"classes/CreateTrackDto.html":{}}}],["talents",{"_index":1596,"title":{},"body":{"index.html":{}}}],["target",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor.name",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["task",{"_index":1184,"title":{"classes/Task.html":{}},"body":{"classes/Task.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task(s",{"_index":1227,"title":{},"body":{"classes/TasksController.html":{}}}],["task.dto",{"_index":778,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/TasksController.html":{}}}],["task.dto.ts",{"_index":775,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["task.modelname",{"_index":1279,"title":{},"body":{"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["task.schema",{"_index":1280,"title":{},"body":{"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["task.title",{"_index":1249,"title":{},"body":{"classes/TasksController.html":{}}}],["taskcount",{"_index":772,"title":{},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/TasksController.html":{}}}],["taskdto",{"_index":777,"title":{"classes/TaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskid",{"_index":1237,"title":{},"body":{"classes/TasksController.html":{}}}],["taskidlist",{"_index":181,"title":{},"body":{"classes/AssignTasksDto.html":{}}}],["taskmodel",{"_index":1278,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasks",{"_index":990,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TasksController.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["tasks.controller",{"_index":1277,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.dto",{"_index":1241,"title":{},"body":{"classes/TasksController.html":{}}}],["tasks.dto.ts",{"_index":180,"title":{},"body":{"classes/AssignTasksDto.html":{},"coverage.html":{}}}],["tasks.dto.ts:6",{"_index":184,"title":{},"body":{"classes/AssignTasksDto.html":{}}}],["tasks.dto.ts:8",{"_index":186,"title":{},"body":{"classes/AssignTasksDto.html":{}}}],["tasks.find((x",{"_index":1269,"title":{},"body":{"classes/TasksController.html":{}}}],["tasks.service",{"_index":1244,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/models/task.entity",{"_index":1364,"title":{},"body":{"classes/User.html":{}}}],["tasks/tasks.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":1214,"title":{"classes/TasksController.html":{}},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":128,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":1219,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["taskstatus",{"_index":1193,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.completed",{"_index":1205,"title":{},"body":{"classes/Task.html":{}}}],["taskstatus.started",{"_index":1194,"title":{},"body":{"classes/Task.html":{}}}],["tcreatedto",{"_index":507,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["technical",{"_index":1574,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":988,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["temp",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["temporarytoken",{"_index":351,"title":{"classes/TemporaryToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/TemporaryToken.html":{},"coverage.html":{}}}],["temporarytoken.modelname",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temporarytoken.schema",{"_index":359,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temptokens",{"_index":1292,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["temptokensservice",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["tentitydto",{"_index":505,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["test",{"_index":1610,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":793,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/.../db",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/helpers/db",{"_index":792,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":642,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["thanks",{"_index":1645,"title":{},"body":{"index.html":{}}}],["this.appservice.getwelcome",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetemptoken",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getauthtoken(req.user",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateemailtoken",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatepasswordtoken",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":487,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.categoryservice.findoneasync",{"_index":623,"title":{},"body":{"classes/CategoriesController.html":{}}}],["this.client.connect",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.emit(autheventenum.userregistered",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config",{"_index":929,"title":{},"body":{"injectables/MailService.html":{}}}],["this.courseservice.findoneasync",{"_index":747,"title":{},"body":{"classes/CoursesController.html":{}}}],["this.createtransport",{"_index":928,"title":{},"body":{"injectables/MailService.html":{}}}],["this.error",{"_index":87,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":89,"title":{},"body":{"classes/ApiException.html":{}}}],["this.firstname",{"_index":1374,"title":{},"body":{"classes/User.html":{}}}],["this.lastname",{"_index":1375,"title":{},"body":{"classes/User.html":{}}}],["this.mailservice.sendmailasync",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.message",{"_index":86,"title":{},"body":{"classes/ApiException.html":{}}}],["this.name",{"_index":579,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.path",{"_index":90,"title":{},"body":{"classes/ApiException.html":{}}}],["this.profileservice.uploadavatar(file",{"_index":1065,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.reflector.get",{"_index":1120,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.stack",{"_index":88,"title":{},"body":{"classes/ApiException.html":{}}}],["this.stageservice.findbyidasync(input.stage",{"_index":1250,"title":{},"body":{"classes/TasksController.html":{}}}],["this.stageservice.findoneasync",{"_index":1173,"title":{},"body":{"classes/StagesController.html":{}}}],["this.status",{"_index":94,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":93,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tasksservice.assigntasks(input.userid",{"_index":1264,"title":{},"body":{"classes/TasksController.html":{}}}],["this.tasksservice.countasync",{"_index":1260,"title":{},"body":{"classes/TasksController.html":{}}}],["this.tasksservice.findoneasync",{"_index":1248,"title":{},"body":{"classes/TasksController.html":{}}}],["this.tasksservice.getassignedtasks",{"_index":1268,"title":{},"body":{"classes/TasksController.html":{}}}],["this.tasksservice.submittask(task",{"_index":1271,"title":{},"body":{"classes/TasksController.html":{}}}],["this.timestamp",{"_index":91,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tokenservice",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.createentity",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.harddeletebyid(id",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.insertasync(token",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackservice.findbyidasync(input.track",{"_index":1171,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["this.trackservice.findoneasync",{"_index":1315,"title":{},"body":{"classes/TracksController.html":{}}}],["this.transporter",{"_index":930,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":935,"title":{},"body":{"injectables/MailService.html":{}}}],["this.uploader",{"_index":1093,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.uploader.upload(content",{"_index":1098,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.userentity.updateone",{"_index":1103,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.userservice.findbyidasync(id",{"_index":1045,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.findbyidasync(input.userid",{"_index":1257,"title":{},"body":{"classes/TasksController.html":{}}}],["this.userservice.findoneasync",{"_index":1038,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.updateasync(id",{"_index":1049,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.usersservice.createentity(input",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findoneasync",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["this.usersservice.insertasync(user",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.updateasync(doc.id",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validaterequest(request",{"_index":484,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validatetoken",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":942,"title":{},"body":{"injectables/MailService.html":{}}}],["throw",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["timestamp",{"_index":69,"title":{},"body":{"classes/ApiException.html":{}}}],["timestamps",{"_index":525,"title":{},"body":{"classes/BaseEntity.html":{}}}],["title",{"_index":624,"title":{},"body":{"classes/CategoriesController.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["tobeupdatedentity",{"_index":1047,"title":{},"body":{"controllers/ProfileController.html":{}}}],["together",{"_index":1594,"title":{},"body":{"index.html":{}}}],["tojson",{"_index":571,"title":{},"body":{"classes/BaseEntity.html":{}}}],["token",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["token')@httpcode(httpstatus.ok",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{}}}],["token.dto.ts",{"_index":1420,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["token.dto.ts:8",{"_index":1421,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.entity",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.entity.ts",{"_index":1282,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["token.entity.ts:16",{"_index":1284,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:19",{"_index":1283,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:27",{"_index":1285,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:30",{"_index":1286,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.service",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.service.ts",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["token.ts",{"_index":1472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenparamname",{"_index":42,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["tokenservice",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.email",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokentype.password",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tort",{"_index":1706,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1377,"title":{},"body":{"classes/User.html":{}}}],["totalcount",{"_index":870,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["towards",{"_index":1587,"title":{},"body":{"index.html":{}}}],["tpagedentityoutputdto",{"_index":511,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["tpagedinputdto",{"_index":859,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["tpagedoutputdto",{"_index":861,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["track",{"_index":767,"title":{"classes/Track.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["track.dto",{"_index":1310,"title":{},"body":{"classes/TracksController.html":{}}}],["track.dto.ts",{"_index":782,"title":{},"body":{"classes/CreateTrackDto.html":{},"coverage.html":{}}}],["track.modelname",{"_index":1322,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["track.schema",{"_index":1323,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["trackdto",{"_index":783,"title":{"classes/TrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["trackmodel",{"_index":1321,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tracks.controller",{"_index":1320,"title":{},"body":{"modules/TracksModule.html":{}}}],["tracks.service",{"_index":1313,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["tracks/models/dto/tack.dto",{"_index":952,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["tracks/models/track.entity",{"_index":1146,"title":{},"body":{"classes/Stage.html":{},"classes/Task.html":{}}}],["tracks/tracks.module",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{}}}],["tracks/tracks.service",{"_index":1165,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["trackscontroller",{"_index":1301,"title":{"classes/TracksController.html":{}},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["trackservice",{"_index":1159,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["tracksmodule",{"_index":129,"title":{"modules/TracksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["tracksservice",{"_index":1160,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["transform",{"_index":575,"title":{},"body":{"classes/BaseEntity.html":{}}}],["transformer",{"_index":522,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transport",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["transport.redis",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["transporter",{"_index":912,"title":{},"body":{"injectables/MailService.html":{}}}],["trim",{"_index":641,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["true",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"classes/AssignTasksDto.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["true})@apiproperty({isarray",{"_index":1398,"title":{},"body":{"classes/UserDto.html":{}}}],["true})@expose",{"_index":1395,"title":{},"body":{"classes/UserDto.html":{}}}],["true})@expose()@isoptional",{"_index":1391,"title":{},"body":{"classes/UserDto.html":{}}}],["try",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["tsconfig",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["tupdatedto",{"_index":509,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1721,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose/typegoose",{"_index":563,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"injectables/ProfileService.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":564,"title":{},"body":{"classes/BaseEntity.html":{}}}],["typeof",{"_index":845,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/ProfileService.html":{},"miscellaneous/variables.html":{}}}],["types/abstract.type",{"_index":872,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["ui",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('password",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["uncompleted",{"_index":1202,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["unconfirmed",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["unconfirmed_email",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["undefined})@apibearerauth()@apiresponse({status",{"_index":1306,"title":{},"body":{"classes/TracksController.html":{}}}],["undefined})@apiresponse({status",{"_index":595,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["undefined})@exclude",{"_index":1343,"title":{},"body":{"classes/User.html":{}}}],["undefined})@httpcode(httpstatus.ok",{"_index":1012,"title":{},"body":{"controllers/ProfileController.html":{}}}],["undefined})@useguards(jwtauthguard",{"_index":1223,"title":{},"body":{"classes/TasksController.html":{}}}],["unique",{"_index":643,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["unsupportedmediatypeexception",{"_index":1016,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unsupportedmediatypeexception(\"file",{"_index":1059,"title":{},"body":{"controllers/ProfileController.html":{}}}],["update",{"_index":373,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":864,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["updatedat",{"_index":515,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["updatedby",{"_index":531,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["updatedto",{"_index":508,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["updateprofile",{"_index":996,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(@body",{"_index":1043,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(input",{"_index":1001,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofiledto",{"_index":1002,"title":{"classes/UpdateProfileDto.html":{}},"body":{"controllers/ProfileController.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updateresulttype",{"_index":1728,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["upload",{"_index":1008,"title":{},"body":{"controllers/ProfileController.html":{}}}],["upload.decorator.ts",{"_index":1459,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload.dto",{"_index":1028,"title":{},"body":{"controllers/ProfileController.html":{}}}],["upload.dto.ts",{"_index":492,"title":{},"body":{"classes/AvatarUploadDto.html":{},"coverage.html":{}}}],["upload.dto.ts:5",{"_index":496,"title":{},"body":{"classes/AvatarUploadDto.html":{}}}],["uploadavatar",{"_index":1074,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadavatar(file",{"_index":1079,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadedfile",{"_index":1017,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploader",{"_index":1073,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadfile",{"_index":997,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploadfile(@uploadedfile",{"_index":1054,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploadfile(file",{"_index":1005,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uppercase",{"_index":644,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{}}}],["uri",{"_index":684,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["url(clientbaseurl",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(emailparamname",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(tokenparamname",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1666,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":638,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["usecreateindex",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":805,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["useguards(authenticationguard",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":618,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["useinterceptors",{"_index":1018,"title":{},"body":{"controllers/ProfileController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":1051,"title":{},"body":{"controllers/ProfileController.html":{}}}],["usenewurlparser",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":255,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1355,"title":{},"body":{"classes/User.html":{}}}],["user.dto",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UsersController.html":{}}}],["user.dto.ts",{"_index":788,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":1107,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:19",{"_index":1109,"title":{},"body":{"classes/RegisterUserResDto.html":{}}}],["user.email",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":973,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["user.fullname",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.isactive",{"_index":488,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["user.isemailverified",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.modelname",{"_index":1417,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user.password",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1418,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user_registered",{"_index":1553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userdto",{"_index":789,"title":{"classes/UserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userentity",{"_index":1078,"title":{},"body":{"injectables/ProfileService.html":{}}}],["userid",{"_index":182,"title":{},"body":{"classes/AssignTasksDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/ProfileService.html":{}}}],["usermodel",{"_index":1416,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userregistered",{"_index":1552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userrole",{"_index":368,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":614,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentee",{"_index":979,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["userrole.mentor",{"_index":615,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentor)@apibearerauth()@apiresponse({status",{"_index":1231,"title":{},"body":{"classes/TasksController.html":{}}}],["userrole.mentor)@apibody({description",{"_index":1225,"title":{},"body":{"classes/TasksController.html":{}}}],["userrole.mentor)@apiresponse({type",{"_index":1305,"title":{},"body":{"classes/TracksController.html":{}}}],["users.controller",{"_index":1415,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1407,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/models/dto/create",{"_index":1326,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["users/models/dto/register",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["users/models/dto/user.dto",{"_index":1026,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users/models/user.entity",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/TracksController.html":{}}}],["users/users.module",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/TasksModule.html":{}}}],["users/users.service",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/TasksController.html":{}}}],["userscontroller",{"_index":1401,"title":{"classes/UsersController.html":{}},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":1035,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TasksController.html":{}}}],["usersmodule",{"_index":130,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/TasksController.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usr/local/bin/mongod",{"_index":799,"title":{},"body":{"modules/DbTest.html":{}}}],["valid",{"_index":983,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["valid('development",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":887,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/ResetPassInput.html":{}}}],["validate(payload",{"_index":889,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateemailtoken",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken(input",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken(resetpassinput",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":474,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validaterequest(request",{"_index":481,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validatetoken",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(userid",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetokeninput",{"_index":231,"title":{"classes/ValidateTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["validatetokeninput:8",{"_index":1113,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validateuser",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":53,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/AssignTasksDto.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/FindDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["value",{"_index":537,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1732,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification.dto",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["verification.dto.ts",{"_index":39,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["verification.dto.ts:10",{"_index":50,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:12",{"_index":49,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:8",{"_index":47,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verified",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(@body",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(input",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["versionkey",{"_index":574,"title":{},"body":{"classes/BaseEntity.html":{}}}],["virtuals",{"_index":573,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vm",{"_index":29,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["void",{"_index":553,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["wait",{"_index":1635,"title":{},"body":{"index.html":{}}}],["want",{"_index":1639,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1690,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1686,"title":{},"body":{"license.html":{}}}],["website",{"_index":1565,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":176,"title":{},"body":{"injectables/AppService.html":{}}}],["wherever",{"_index":1581,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1703,"title":{},"body":{"license.html":{}}}],["without",{"_index":1661,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1612,"title":{},"body":{"index.html":{}}}],["writable",{"_index":566,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Task.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["writable).isactive",{"_index":582,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isdeleted",{"_index":580,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isemailverified",{"_index":1378,"title":{},"body":{"classes/User.html":{}}}],["writable).password",{"_index":1369,"title":{},"body":{"classes/User.html":{}}}],["writable).status",{"_index":1204,"title":{},"body":{"classes/Task.html":{}}}],["writers",{"_index":1575,"title":{},"body":{"index.html":{}}}],["x.id",{"_index":1270,"title":{},"body":{"classes/TasksController.html":{}}}],["yes",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["zoom",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControllerOptions.html":{"url":"interfaces/AbstractControllerOptions.html","title":"interface - AbstractControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithAuthOptions.html":{"url":"interfaces/AbstractControllerWithAuthOptions.html","title":"interface - AbstractControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithSwaggerOptions.html":{"url":"interfaces/AbstractControllerWithSwaggerOptions.html","title":"interface - AbstractControllerWithSwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithSwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        modelCreate\n                                \n                                \n                                        modelVm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        modelCreate\n                                    \n                                \n                                \n                                    \n                                        modelCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelVm\n                                    \n                                \n                                \n                                    \n                                        modelVm:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctVerifyDto.html":{"url":"classes/AcctVerifyDto.html","title":"class - AcctVerifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctVerifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/acct-verification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBaseUrl\n                            \n                            \n                                emailParamName\n                            \n                            \n                                tokenParamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty, IsUrl } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class AcctVerifyDto extends PickType(LoginReqDto, ['email']) {\n  @IsUrl()\n  clientBaseUrl: string;\n  @IsNotEmpty()\n  tokenParamName: string;\n  @IsNotEmpty()\n  emailParamName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/errors/api-exception.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: any, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ApiException {\n  @ApiProperty()\n  statusCode?: number;\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  status?: string;\n  @ApiProperty()\n  error?: string;\n  @ApiProperty()\n  errors?: any;\n  @ApiProperty()\n  timestamp?: string;\n  @ApiProperty()\n  path?: string;\n  @ApiProperty()\n  stack?: string;\n\n  constructor(\n    message: string,\n    error: string,\n    stack: string,\n    errors: any,\n    path: string,\n    statusCode: number\n  ) {\n    this.message = message;\n    this.error = error;\n    this.stack = stack;\n    this.errors = errors;\n    this.path = path;\n    this.timestamp = new Date().toISOString();\n    this.statusCode = statusCode;\n    this.status = HttpStatus[statusCode];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getWelcome();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            StagesModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { CoursesModule } from './courses/courses.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { SharedModule } from './shared';\nimport configuration from './shared/config/configuration';\nimport { MailModule } from './shared/mail/mail.module';\nimport { envValidation } from './shared/validations/env.validation';\nimport { StagesModule } from './stages/stages.module';\nimport { TracksModule } from './tracks/tracks.module';\nimport { UsersModule } from './users/users.module';\nimport { TasksModule } from './tasks/tasks.module';\n\nexport const Config = ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n});\nconst Database = MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n});\n@Module({\n  imports: [\n    SharedModule,\n    AuthModule,\n    UsersModule,\n    Config,\n    Database,\n    MailModule,\n    ProfileModule,\n    TracksModule,\n    CoursesModule,\n    CategoriesModule,\n    StagesModule,\n    TasksModule\n  ],\n\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWelcome\n                        \n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcome(): string {\n    return 'Welcome to CCN!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssignTasksDto.html":{"url":"classes/AssignTasksDto.html","title":"class - AssignTasksDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssignTasksDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/assign-tasks.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                taskIdList\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskIdList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsArray()@IsMongoId({each: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/assign-tasks.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/assign-tasks.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsArray, IsMongoId } from 'class-validator';\n\nexport class AssignTasksDto {\n  @IsArray()\n  @IsMongoId({ each: true })\n  taskIdList: string[];\n  @IsMongoId()\n  userId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                sendEmailVerifyToken\n                            \n                            \n                                    Async\n                                sendForgotPwToken\n                            \n                            \n                                    Async\n                                verifyEmailToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(_: LoginReqDto, req?: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginResDto})@ApiUnauthorizedResponse({type: ApiException})@UseGuards(AuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                LoginReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(input: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiConflictResponse({type: ApiException})@ApiResponse({type: RegisterUserResDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(input: ResetPassInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPassInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailVerifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerifyToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email-confirmation-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendForgotPwToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendForgotPwToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-password-reset-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmailToken(input: ValidateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ValidateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Post,\n  Req,\n  UnauthorizedException,\n  UseGuards\n} from '@nestjs/common';\nimport {\n  ApiConflictResponse,\n  ApiOkResponse,\n  ApiResponse,\n  ApiTags,\n  ApiUnauthorizedResponse\n} from '@nestjs/swagger';\nimport { Request } from 'express';\n\nimport { LoginReqDto } from '../auth/models/dto/auth.dto';\nimport configuration from '../shared/config/configuration';\nimport { ApiException } from '../shared/errors/api-exception';\nimport { MailService } from '../shared/mail/mail.service';\nimport {\n  RegisterUserDto,\n  RegisterUserResDto\n} from '../users/models/dto/register-user.dto';\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { AuthenticationGuard } from './guards/auth.guard';\nimport { AcctVerifyDto } from './models/dto/acct-verification.dto';\nimport { LoginResDto } from './models/dto/auth.dto';\nimport { ResetPassInput } from './models/dto/reset-pw.dto';\nimport { ValidateTokenInput } from './models/dto/validate-token.dto';\nimport { TokenType } from './models/temporary-token.entity';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly mailService: MailService\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: LoginResDto })\n  @ApiUnauthorizedResponse({ type: ApiException })\n  @UseGuards(AuthenticationGuard)\n  async login(\n    @Body() _: LoginReqDto,\n    @Req() req?: Request\n  ): Promise {\n    const accessToken = await this.authService.getAuthToken(req.user as User);\n    return { accessToken };\n  }\n  @Post('register')\n  @ApiConflictResponse({ type: ApiException })\n  @ApiResponse({ type: RegisterUserResDto, status: HttpStatus.CREATED })\n  async register(@Body() input: RegisterUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    const saved = await this.usersService.insertAsync(user);\n\n    return { canLogin: saved.isEmailVerified };\n  }\n\n  @Post('send-email-confirmation-token')\n  @HttpCode(HttpStatus.OK)\n  async sendEmailVerifyToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User with email does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email has already been confirmed');\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.EMAIL,\n      expiresInMins: 60 * 24\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please confirm your email here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n  @Post('confirm-email')\n  @HttpCode(HttpStatus.OK)\n  async verifyEmailToken(@Body() input: ValidateTokenInput): Promise {\n    const { email, token } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email already verified');\n    await this.authService.validateEmailToken({\n      userId: user.id,\n      plainToken: token\n    });\n  }\n  @Post('send-password-reset-token')\n  @HttpCode(HttpStatus.OK)\n  async sendForgotPwToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) return;\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.PASSWORD,\n      expiresInMins: 10\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please reset your password here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n\n  @Post('reset-password')\n  @HttpCode(HttpStatus.OK)\n  async resetPassword(@Body() input: ResetPassInput): Promise {\n    const { email, token, newPassword } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new UnauthorizedException('Password reset failed');\n    await this.authService.validatePasswordToken({\n      userId: exist.id,\n      plainToken: token,\n      newPassword\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            TempTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\nimport { MailService } from '../shared/mail/mail.service';\nimport { UsersModule } from '../users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { TemporaryToken } from './models/temporary-token.entity';\nimport { SessionSerializer } from './session.serializer';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { TempTokensService } from './temp-token.service';\n\nconst Config = [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n];\n@Module({\n  imports: [UsersModule, ...Config],\n  providers: [\n    AuthService,\n    JwtStrategy,\n    SessionSerializer,\n    MailService,\n    TempTokensService\n  ],\n  controllers: [AuthController],\n  exports: [AuthService, ...Config]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthObj.html":{"url":"interfaces/AuthObj.html","title":"interface - AuthObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authRoles\n                                \n                                \n                                        enableAuth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authRoles\n                                    \n                                \n                                \n                                    \n                                        authRoles:         UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableAuth\n                                    \n                                \n                                \n                                    \n                                        enableAuth:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTempToken\n                            \n                            \n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                pub\n                            \n                            \n                                    Async\n                                validateEmailToken\n                            \n                            \n                                    Async\n                                validatePasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, tokenService: TempTokensService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TempTokensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateTempToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTempToken(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pub\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pub()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmailToken(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePasswordToken(resetPassInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPassInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(userId: string, type: TokenType, plainToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ClientRedis\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Client({transport: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  HttpStatus,\n  Injectable,\n  OnModuleInit\n} from '@nestjs/common';\nimport { Client, ClientRedis, Transport } from '@nestjs/microservices';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport configuration from '~shared/config/configuration';\nimport { authErrors } from '~shared/errors';\nimport { generateRandomToken } from '~shared/utils/random-token';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthEventEnum } from './models/auth.enums';\nimport { JwtPayload } from './models/jwt-payload';\nimport { TokenType } from './models/temporary-token.entity';\nimport { TempTokensService } from './temp-token.service';\n\n@Injectable()\nexport class AuthService implements OnModuleInit {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly tokenService: TempTokensService\n  ) {}\n  @Client({ transport: Transport.REDIS })\n  private client: ClientRedis;\n\n  async onModuleInit(): Promise {\n    // Connect your client to the redis server on startup.\n    try {\n      // await this.client.connect();\n    } catch (error) {\n      //Logger.error(error);\n    }\n  }\n  async validateUser(email: string, pw: string): Promise {\n    const user = await this.usersService.findOneAsync({\n      email: email?.toLowerCase()\n    });\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    if (!user.isEmailVerified)\n      throw new HttpException(\n        { message: 'Unconfirmed Email', errorType: 'UNCONFIRMED_EMAIL' },\n        HttpStatus.UNAUTHORIZED\n      );\n    const isValid = await bcrypt.compare(pw, user.password);\n    if (!isValid) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    return user;\n  }\n\n  async getAuthToken(user: User): Promise {\n    const { jwtValidityHrs, jwtSecret } = configuration();\n    const expiresIn = 60 * 60 * jwtValidityHrs;\n    const payload: JwtPayload = {\n      email: user.email,\n      userId: user.id,\n      role: user.role\n    };\n    return jwt.sign(payload, jwtSecret, { expiresIn });\n  }\n\n  async pub(): Promise {\n    this.client.emit(AuthEventEnum.UserRegistered, 'email');\n  }\n\n  async generateTempToken({\n    user,\n    type,\n    expiresInMins\n  }: {\n    user: User;\n    type: TokenType;\n    expiresInMins: number;\n  }): Promise {\n    const plainToken = generateRandomToken(64);\n    const encryptedToken = await bcrypt.hash(plainToken, 10);\n    const token = this.tokenService.createEntity({\n      token: encryptedToken,\n      expireAt: new Date(new Date().getTime() + expiresInMins * 60000),\n      type,\n      user: user.id as any\n    });\n    await this.tokenService.insertAsync(token);\n    return plainToken;\n  }\n  async validateEmailToken(input: {\n    userId: string;\n    plainToken: string;\n  }): Promise {\n    const { userId, plainToken } = input;\n\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.EMAIL,\n      plainToken\n    );\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { isEmailVerified: true });\n    await this.tokenService.hardDeleteById(id);\n  }\n  async validatePasswordToken(resetPassInput: {\n    userId: string;\n    plainToken: string;\n    newPassword: string;\n  }): Promise {\n    const { userId, plainToken, newPassword } = resetPassInput;\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.PASSWORD,\n      plainToken\n    );\n    const passwordHash = await bcrypt.hash(newPassword, 10);\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { password: passwordHash });\n    await this.tokenService.hardDeleteById(id);\n  }\n  private async validateToken(\n    userId: string,\n    type: TokenType,\n    plainToken: string\n  ) {\n    const exist = await this.tokenService\n      .findOne({ user: userId, type })\n      .populate('user');\n\n    if (!exist) throw authErrors.EXPIRED_TOKEN;\n    try {\n      const isValid = await bcrypt.compare(plainToken, exist.token);\n      if (!isValid) throw authErrors.INVALID_TOKEN;\n    } catch (error) {\n      throw authErrors.INVALID_TOKEN;\n    }\n    return exist;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nimport configuration from '../../shared/config/configuration';\nimport { AuthService } from '../auth.service';\nimport { LoginReqDto } from '../models/dto/auth.dto';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    return await this.validateRequest(request);\n  }\n  async validateRequest(request: Request): Promise {\n    if (!configuration().isAuthEnabled) return true;\n    const { email, password }: LoginReqDto = request.body;\n    const user = await this.authService.validateUser(email, password);\n\n    if (!user || !user.isActive) throw new UnauthorizedException();\n    request.user = user;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AvatarUploadDto.html":{"url":"classes/AvatarUploadDto.html","title":"class - AvatarUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AvatarUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/avatar-upload.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'binary'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/avatar-upload.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class AvatarUploadDto {\n    @ApiProperty({ type: 'string', format: 'binary' })\n    file: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerOptions.html":{"url":"interfaces/BaseControllerOptions.html","title":"interface - BaseControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithAuthOptions.html":{"url":"interfaces/BaseControllerWithAuthOptions.html","title":"interface - BaseControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithSwaggerOpts.html":{"url":"interfaces/BaseControllerWithSwaggerOpts.html","title":"interface - BaseControllerWithSwaggerOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithSwaggerOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createDto\n                                \n                                \n                                        entityDto\n                                \n                                \n                                        pagedListDto\n                                \n                                \n                                        updateDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDto\n                                    \n                                \n                                \n                                    \n                                        createDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDto\n                                    \n                                \n                                \n                                    \n                                        entityDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagedListDto\n                                    \n                                \n                                \n                                    \n                                        pagedListDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDto\n                                    \n                                \n                                \n                                    \n                                        updateDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/base.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nexport class BaseDto {\n  @IsMongoId()\n  @Expose()\n  readonly id: string;\n  @ApiProperty()\n  @Expose()\n  readonly updatedAt: Date;\n  @ApiProperty()\n  @Expose()\n  readonly createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:71\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:62\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:53\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop, Ref } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { Schema } from 'mongoose';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { User } from '../../users/models/user.entity';\n\nexport class BaseEntity extends TimeStamps {\n  id: string;\n\n  @prop({ required: true, default: false })\n  readonly isDeleted!: boolean;\n  @prop({ default: null, ref: BaseEntity })\n  readonly createdBy?: Ref = null;\n  @prop({ default: null, ref: BaseEntity })\n  readonly updatedBy?: Ref = null;\n  @prop({ required: true, default: true })\n  readonly isActive: boolean = true;\n  @prop({ default: null, ref: BaseEntity })\n  readonly deletedBy?: Ref = null;\n  @prop({ default: null })\n  readonly deletedAt?: Date;\n  @prop({ required: true, default: new Date() })\n  readonly createdAt: Date = new Date();\n  @prop({ required: true, default: new Date() })\n  readonly updatedAt: Date = null;\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true,\n        versionKey: false,\n        transform: (_, ret) => {\n          ret.id = ret._id;\n          delete ret._id;\n        }\n      }\n    });\n  }\n  static get modelName(): string {\n    return this.name;\n  }\n  delete(): void {\n    (this as Writable).isDeleted = true;\n  }\n\n  /**\n   * Sets {isDeleted} to false\n   *\n   * @memberof BaseEntity\n   */\n  restore(): void {\n    (this as Writable).isDeleted = false;\n  }\n\n  /**\n   * Sets {isActive} to true\n   *\n   * @memberof BaseEntity\n   */\n  deactivate(): void {\n    (this as Writable).isActive = false;\n  }\n\n  /**\n   * Sets isActive to false\n   *\n   * @memberof BaseEntity\n   */\n  activate(): void {\n    (this as Writable).isActive = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoriesController.html":{"url":"classes/CategoriesController.html","title":"class - CategoriesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.controller.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: CategoryDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\nimport { CategoryDto, PagedCategoryOutDto } from './models/dtos/category.dto';\nimport { CreateCategoryDto } from './models/dtos/create-category.dto';\n\nconst BaseCtrl = BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedListDto: PagedCategoryOutDto\n});\n\nexport class CategoriesController extends BaseCtrl {\n  constructor(protected readonly categoryService: CategoriesService) {\n    super(categoryService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: CategoryDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateCategoryDto): Promise {\n    const exist = await this.categoryService.findOneAsync({\n      title: input.name.toUpperCase()\n    });\n\n    if (exist)\n      throw new ConflictException(\n        `Category with the name \"${exist.name}\" already exists`\n      );\n\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\n\nCategoriesService \n\nCategoriesService \n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CategoriesController } from './categories.controller';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\n\nconst CategoryModel = MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n]);\n@Module({\n  imports: [CategoryModel],\n  providers: [\n    CategoriesService,\n    { provide: BaseService, useClass: CategoriesService }\n  ],\n  controllers: [CategoriesController],\n  exports: [CategoriesService, CategoryModel]\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/category.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false, uppercase: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/category.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ name: 1 }, { unique: true })\nexport class Category extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false,\n    uppercase: true\n  })\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cloudinary.html":{"url":"interfaces/Cloudinary.html","title":"interface - Cloudinary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cloudinary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        name\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appEmail\n                                \n                                \n                                        cloudinary\n                                \n                                \n                                        database\n                                \n                                \n                                        environment\n                                \n                                \n                                        isAuthEnabled\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        jwtValidityHrs\n                                \n                                \n                                        mailer\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUrl\n                                \n                                \n                                        rootUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appEmail\n                                    \n                                \n                                \n                                    \n                                        appEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cloudinary\n                                    \n                                \n                                \n                                    \n                                        cloudinary:         Cloudinary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Cloudinary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         Database\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Database\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthEnabled\n                                    \n                                \n                                \n                                    \n                                        isAuthEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtValidityHrs\n                                    \n                                \n                                \n                                    \n                                        jwtValidityHrs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                    \n                                \n                                \n                                    \n                                        mailer:         Mailer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Mailer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUrl\n                                    \n                                \n                                \n                                    \n                                        redisUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControllerAuth.html":{"url":"interfaces/ControllerAuth.html","title":"interface - ControllerAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ControllerAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        create\n                                \n                                \n                                        delete\n                                \n                                \n                                        find\n                                \n                                \n                                        findById\n                                \n                                \n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                    Readonly\n                                playlistUrl\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Course extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    unique: false\n  })\n  readonly playlistUrl!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly enrollmentCount!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseDto.html":{"url":"classes/CourseDto.html","title":"class - CourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                playlistUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length128)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()@MaxLength(columnSize.length256)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @Expose()\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoursesController.html":{"url":"classes/CoursesController.html","title":"class - CoursesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CoursesService)\n                    \n                \n                        \n                            \n                                Defined in src/courses/courses.controller.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CoursesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCourseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: CourseDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCourseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\nimport { CourseDto, PagedCourseOutputDto } from './models/dtos/course.dto';\nimport { CreateCourseDto } from './models/dtos/create-course.dto';\n\nexport class CoursesController extends BaseCrudController({\n  entity: Course,\n  entityDto: CourseDto,\n  createDto: CreateCourseDto,\n  updateDto: CreateCourseDto,\n  pagedListDto: PagedCourseOutputDto,\n  auth: {\n    create: [UserRole.MENTOR, UserRole.ADMIN],\n    update: [UserRole.MENTOR, UserRole.ADMIN],\n    delete: [UserRole.MENTOR, UserRole.ADMIN]\n  }\n}) {\n  constructor(protected readonly courseService: CoursesService) {\n    super(courseService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: CourseDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateCourseDto): Promise {\n    const exist = await this.courseService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Course with the title \"${exist.title}\" already exists`\n      );\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nCoursesService \n\nCoursesService \n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CoursesController } from './courses.controller';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\n\nconst CourseModel = MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n]);\n@Module({\n  imports: [CourseModel],\n  providers: [\n    CoursesService,\n    { provide: BaseService, useClass: CoursesService }\n  ],\n  controllers: [CoursesController],\n  exports: [CoursesService, CourseModel]\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/create-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CategoryDto } from './category.dto';\n\nexport class CreateCategoryDto extends PickType(CategoryDto, [\n  'name',\n  'description'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDto.html":{"url":"classes/CreateCourseDto.html","title":"class - CreateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/create-course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CourseDto } from './course.dto';\n\nexport class CreateCourseDto extends PickType(CourseDto, [\n  'title',\n  'description',\n  'playlistUrl'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStageDto.html":{"url":"classes/CreateStageDto.html","title":"class - CreateStageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/create-stage.dto.ts.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                track\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/create-stage.dto.ts.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nimport { StageDto } from './stage.dto.ts';\n\nexport class CreateStageDto extends PickType(StageDto, [\n  'title',\n  'description',\n  'taskCount'\n]) {\n  @IsMongoId()\n  @Expose()\n  track: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/create-task.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\n\nimport { TaskDto } from './task.dto';\n\n@Exclude()\nexport class CreateTaskDto extends OmitType(TaskDto, [\n  'createdAt',\n  'updatedAt',\n  'id'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrackDto.html":{"url":"classes/CreateTrackDto.html","title":"class - CreateTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { TrackDto } from './tack.dto';\n\nexport class CreateTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto extends OmitType(UserDto, [\n  'id',\n  'updatedAt',\n  'createdAt'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Database.html":{"url":"interfaces/Database.html","title":"interface - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        name\n                                \n                                \n                                        port\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DbTest.html":{"url":"modules/DbTest.html","title":"module - DbTest","body":"\n                   \n\n\n\n\n    Modules\n    DbTest\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/helpers/db-test.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nprocess.env.MAILER_API_KEY = 'api_key_mailgun';\nprocess.env.MONGOMS_SYSTEM_BINARY = '/usr/local/bin/mongod';\nprocess.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\nconst dbServer = new MongoMemoryServer();\nexport const inMemoryDb = dbServer;\n\nconst dbFactory = MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n});\n\n@Module({\n  imports: [dbFactory],\n  exports: [dbFactory]\n})\nexport class DbTest {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultAuthObject.html":{"url":"interfaces/DefaultAuthObject.html","title":"interface - DefaultAuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultAuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        create\n                                \n                                \n                                            Optional\n                                        delete\n                                \n                                \n                                            Optional\n                                        find\n                                \n                                \n                                            Optional\n                                        findById\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindDto.html":{"url":"classes/FindDto.html","title":"class - FindDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/find.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                opts\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            opts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsJSON()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsJSON()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsJSON, IsOptional } from 'class-validator';\n\nexport class FindDto {\n  @IsOptional()\n  skip?: number = 0;\n  @IsOptional()\n  limit?: number = 100;\n  @IsOptional()\n  @IsJSON()\n  search?: string;\n  @IsJSON()\n  @IsOptional()\n  opts?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiException } from '../errors/api-exception';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(error: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse() as Response;\n    const req = ctx.getRequest();\n    const statusCode = error.getStatus();\n    const stacktrace = error.stack;\n    const errorName = error.response.name || error.response.error || error.name;\n    const errors = error.response.errors || null;\n    const path = req ? req.url : null;\n\n    if (statusCode === HttpStatus.UNAUTHORIZED) {\n      if (typeof error.response !== 'string') {\n        error.response.message =\n          error.response.message ||\n          'You do not have permission to access this resource';\n      }\n    }\n\n    const exception = new ApiException(\n      error.response.message,\n      errorName,\n      stacktrace,\n      errors,\n      path,\n      statusCode\n    );\n    res.status(statusCode).json(exception);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseController.html":{"url":"interfaces/IBaseController.html","title":"interface - IBaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    create\n                                \n                                \n                                    delete\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findById\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(input: TCreateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(input: TPagedInputDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TPagedInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPagedOutputDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, input: TUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                            TUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IBaseController {\n  create(input: TCreateDto): TEntityDto | Promise;\n  findAll(input: TPagedInputDto): TPagedOutputDto | Promise;\n  findById(input: string): TEntityDto | Promise;\n  update(id: string, input: TUpdateDto): TEntityDto | Promise;\n  delete(id: string): void | Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagedListDto.html":{"url":"interfaces/IPagedListDto.html","title":"interface - IPagedListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagedListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-list.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        totalCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { ClassType } from '../../types/abstract.type';\n\nexport interface IPagedListDto {\n  totalCount: number;\n  items: T[];\n}\n\nexport function PagedListDto(\n  entityDto: T\n): Type> {\n  class Paged implements IPagedListDto {\n    totalCount: number;\n    @ApiProperty({ type: entityDto })\n    items: T[];\n  }\n\n  return Paged;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport configuration from '~shared/config/configuration';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(AUTH_GUARD_TYPE) {\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise | Observable {\n    // console.log(context.switchToHttp().getRequest().sessionID);\n    return configuration().isAuthEnabled ? super.canActivate(context) : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        role\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\nexport interface JwtPayload {\n  email: string;\n  role: UserRole;\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload | PromiseLike)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload | PromiseLike\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport configuration from '../../shared/config/configuration';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().jwtSecret\n    });\n  }\n\n  async validate(\n    payload: JwtPayload | PromiseLike\n  ): Promise {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReqDto.html":{"url":"classes/LoginReqDto.html","title":"class - LoginReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResDto.html":{"url":"classes/LoginResDto.html","title":"class - LoginResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTransport\n                            \n                            \n                                    Async\n                                sendMailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/mail/mail.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTransport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMailAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailAsync(mailOptions: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : configuration()\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Mail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as mg from 'nodemailer-mailgun-transport';\nimport Mail = require('nodemailer/lib/mailer');\nimport configuration from '~shared/config/configuration';\n\n@Injectable()\nexport class MailService {\n  private readonly config = configuration();\n  private transporter: Mail;\n  constructor() {\n    this.createTransport();\n  }\n\n  private createTransport() {\n    const { mailer } = this.config;\n    this.transporter = nodemailer.createTransport(\n      mg({\n        auth: {\n          api_key: mailer.key,\n          domain: mailer.domain\n        }\n      })\n    );\n  }\n\n  async sendMailAsync(mailOptions: Mail.Options) {\n    const info = await this.transporter.sendMail(mailOptions);\n    Logger.debug(`Message sent: ${info.messageId}`);\n\n    // Preview only available when sending through an Ethereal account\n    // Logger.debug(`Preview URL: ${nodemailer.getTestMessageUrl(info)}`);\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mailer.html":{"url":"interfaces/Mailer.html","title":"interface - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCategoryOutDto.html":{"url":"classes/PagedCategoryOutDto.html","title":"class - PagedCategoryOutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCategoryOutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCourseOutputDto.html":{"url":"classes/PagedCourseOutputDto.html","title":"class - PagedCourseOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCourseOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @Expose()\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListStageDto.html":{"url":"classes/PagedListStageDto.html","title":"class - PagedListStageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/stage.dto.ts.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport {\n  IsAlphanumeric,\n  IsInt,\n  IsOptional,\n  MaxLength,\n  Min\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/tack.dto';\n\n@Exclude()\nexport class StageDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  @IsOptional()\n  taskCount?: number = 0;\n  @Expose()\n  @ApiProperty({ type: TrackDto })\n  track: TrackDto;\n}\nexport class PagedListStageDto extends PagedListDto(StageDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListTaskDto.html":{"url":"classes/PagedListTaskDto.html","title":"class - PagedListTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/task.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport {\n  IsAlphanumeric,\n  IsDate,\n  IsMongoId,\n  IsOptional,\n  MaxLength,\n  MinDate\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TaskDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @IsMongoId()\n  @Expose()\n  track: string;\n  @IsMongoId()\n  @Expose()\n  stage: string;\n  @Expose()\n  @IsDate()\n  @MinDate(new Date(), { message: 'Date must be in future' })\n  @IsOptional()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  deadline?: Date;\n}\nexport class PagedListTaskDto extends PagedListDto(TaskDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedTrackOutputDto.html":{"url":"classes/PagedTrackOutputDto.html","title":"class - PagedTrackOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedTrackOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/tack.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedUserOutputDto.html":{"url":"classes/PagedUserOutputDto.html","title":"class - PagedUserOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedUserOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsArray, IsEmail, IsEnum, IsPhoneNumber, Length, MaxLength, IsOptional } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { UserRole } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n  @Expose()\n\n  @MaxLength(columnSize.length64)\n  lastName: string;\n  @Expose()\n\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  email: string;\n  @Expose()\n\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  role?: UserRole = UserRole.MENTEE;\n  @Expose()\n  @IsOptional()\n  @MaxLength(columnSize.length128)\n  description?: string;\n  @Expose()\n  @IsPhoneNumber(\"ZZ\", { message: 'Invalid phone number. Valid phone number sample +2347063644568' })\n  @MaxLength(columnSize.length64)\n  @IsOptional()\n  phoneNumber?: string;\n  @Expose()\n  @IsArray()\n  @Length(1, columnSize.length32, { each: true })\n  @ApiProperty({ isArray: true, type: String })\n  @IsOptional()\n  technologies?: string[];\n\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly photoUrl?: string;\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  readonly tasks?: any[];\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(input: UpdateProfileDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: any, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload_profile_photo')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({description: 'Upload avatar photo', type: AvatarUploadDto})@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Post,\n  Put,\n  Req,\n  UnsupportedMediaTypeException,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { UserDto } from '../users/models/dto/user.dto';\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AvatarUploadDto } from './dto/avatar-upload.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { ProfileService } from './profile.service';\n\n@ApiTags(\"Profile\")\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly userService: UsersService, private profileService: ProfileService) { }\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  async getProfile(@Req() req: Request): Promise {\n    const user = await this.userService.findOneAsync({\n      email: req.user['email'].toLowerCase()\n    });\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n  @Put()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  async updateProfile(@Body() input: UpdateProfileDto, @Req() req: Request): Promise {\n\n    const id = req.user['userId'];\n    const user = await this.userService.findByIdAsync(id);\n    if (!user)\n      throw new NotFoundException(`Entity with Id ${id} does not exist`);\n    const value = plainToClass(UserDto, user, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    });\n    const toBeUpdatedEntity = { ...value, ...input } as Partial;\n    await this.userService.updateAsync(id, toBeUpdatedEntity);\n  }\n  @Post('upload_profile_photo')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    description: 'Upload avatar photo',\n    type: AvatarUploadDto,\n  })\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  @HttpCode(HttpStatus.OK)\n  async uploadFile(@UploadedFile() file: any, @Req() req: Request): Promise {\n    if (!file)\n      throw new BadRequestException(\"File image cannot be empty\")\n\n    if (file.mimetype.split('/')[0] !== \"image\")\n      throw new UnsupportedMediaTypeException(\"File is not an image\");\n\n    if (file.size / 1024 > 200)\n      throw new BadRequestException(\"File cannot be larger than 200KB\")\n\n    const id = req.user['userId'];\n    await this.profileService.uploadAvatar(file, id);\n    const user = await this.userService.findByIdAsync(id)\n\n    return plainToClass(UserDto, user, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { UsersModule } from '../users/users.module';\nimport { UsersService } from '../users/users.service';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\n\n@Module({\n  imports: [UsersModule],\n  providers: [UsersService, ProfileService],\n  controllers: [ProfileController],\n  exports: [ProfileService]\n})\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                uploader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(file: any, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploader\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/profile/profile.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport * as cloudinary from 'cloudinary';\nimport DataUri = require('datauri/parser');\nimport configuration from '~shared/config/configuration';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class ProfileService {\n    uploader: typeof cloudinary.v2.uploader;\n\n\n    constructor(@InjectModel(User.modelName)\n    protected readonly userEntity: ReturnModelType) {\n        const { cloudinary: config } = configuration();\n        cloudinary.v2.config({\n            cloud_name: config.name,\n            api_key: config.key,\n            api_secret: config.secret\n        })\n        this.uploader = cloudinary.v2.uploader\n    }\n    async uploadAvatar(file: any, userId: string): Promise {\n        const dataUri = new DataUri();\n        const { content } = dataUri.format(`.${file.originalname.split('.')[0]}`, file.buffer)\n        const { secure_url } = await this.uploader.upload(content, { discard_original_filename: true, folder: 'ccn/avatars', public_id: userId });\n\n        await this.userEntity.updateOne({ _id: userId }, { photoUrl: secure_url })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt',\n  'tasks',\n  'photoUrl'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserResDto.html":{"url":"classes/RegisterUserResDto.html","title":"class - RegisterUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                canLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            canLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt',\n  'tasks',\n  'photoUrl'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassInput.html":{"url":"classes/ResetPassInput.html","title":"class - ResetPassInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/reset-pw.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ValidateTokenInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/reset-pw.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nimport { ValidateTokenInput } from './validate-token.dto';\n\nexport class ResetPassInput extends ValidateTokenInput {\n  @IsNotEmpty()\n  newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport configuration from '~shared/config/configuration';\n\nimport { UserRole } from '../../users/models/user.entity';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      UserRole,\n      context.getHandler()\n    );\n    if (!roles || !configuration().isAuthEnabled) return true;\n\n    const request = context.switchToHttp().getRequest();\n    const { role } = request.user as JwtPayload;\n    return roles.includes(role);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n  deserializeUser(user: User, done: (err: Error, user: User) => void): any {\n    //Logger.log(user);\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\n@Global()\n@Module({\n  imports: [],\n  providers: [],\n  exports: []\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stage.html":{"url":"classes/Stage.html","title":"class - Stage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/stage.entity.ts.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                taskCount\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            taskCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Track', required: true, autopopulate: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref, plugin } from '@typegoose/typegoose';\nimport * as autopopulate from 'mongoose-autopopulate';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { Track } from '../../tracks/models/track.entity';\n\n@plugin(autopopulate as any)\n@index({ title: 1 }, { unique: true })\nexport class Stage extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly taskCount!: number;\n\n  @prop({\n    ref: 'Track',\n    required: true,\n    autopopulate: true\n  })\n  readonly track!: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StageDto.html":{"url":"classes/StageDto.html","title":"class - StageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/stage.dto.ts.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Optional\n                                taskCount\n                            \n                            \n                                title\n                            \n                            \n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            taskCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@Min(0)@IsInt()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TrackDto\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty({type: TrackDto})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport {\n  IsAlphanumeric,\n  IsInt,\n  IsOptional,\n  MaxLength,\n  Min\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/tack.dto';\n\n@Exclude()\nexport class StageDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  @IsOptional()\n  taskCount?: number = 0;\n  @Expose()\n  @ApiProperty({ type: TrackDto })\n  track: TrackDto;\n}\nexport class PagedListStageDto extends PagedListDto(StageDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StagesController.html":{"url":"classes/StagesController.html","title":"class - StagesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/stages.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stageService: StagesService, trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/stages/stages.controller.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stageService\n                                                  \n                                                        \n                                                                        StagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateStageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: StageDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/stages/stages.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateStageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Body, ConflictException, HttpStatus, Inject, NotFoundException, Post, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { TracksService } from '../tracks/tracks.service';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateStageDto } from './models/dtos/create-stage.dto.ts';\nimport { PagedListStageDto, StageDto } from './models/dtos/stage.dto.ts';\nimport { Stage } from './models/stage.entity.ts';\nimport { StagesService } from './stages.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Stage,\n  entityDto: StageDto,\n  createDto: CreateStageDto,\n  updateDto: CreateStageDto,\n  pagedListDto: PagedListStageDto,\n  auth: {\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n});\n\nexport class StagesController extends BaseCtrl {\n  constructor(\n    protected stageService: StagesService,\n    @Inject(TracksService)\n    private trackService: TracksService\n  ) {\n    super(stageService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: StageDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateStageDto): Promise {\n    const track = await this.trackService.findByIdAsync(input.track);\n    if (!track) {\n      throw new NotFoundException(\n        `Track with id ${input.track} does not exist`\n      );\n    }\n\n    const stage = await this.stageService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (stage) {\n      throw new ConflictException(\n        `Stage with the title \"${stage.title}\" already exists`\n      );\n    }\n    return await super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StagesModule.html":{"url":"modules/StagesModule.html","title":"module - StagesModule","body":"\n                   \n\n\n\n\n    Modules\n    StagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_imports\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_providers\n\n\n\n\nTracksModule\n\nTracksModule\n\n\n\nStagesModule\n\nStagesModule\n\nStagesModule -->\n\nTracksModule->StagesModule\n\n\n\n\n\nStagesService \n\nStagesService \n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stages/stages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StagesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TracksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { TracksModule } from '../tracks/tracks.module';\nimport { Stage } from './models/stage.entity.ts';\nimport { StagesController } from './stages.controller';\nimport { StagesService } from './stages.service';\n\nconst StageModel = MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n]);\nconst baseService = { provide: BaseService, useClass: StagesService };\n@Module({\n  imports: [StageModel, TracksModule],\n  providers: [StagesService, baseService],\n  controllers: [StagesController],\n  exports: [StageModel, StagesService, baseService]\n})\nexport class StagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                deadline\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                stage\n                            \n                            \n                                    Readonly\n                                status\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                complete\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date(new Date().setDate(new Date().getDate() + 7))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Stage, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskStatus\n\n                        \n                    \n                    \n                        \n                            Default value : TaskStatus.STARTED\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TaskStatus, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Track, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \ncomplete()\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/models/task.entity.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { Stage } from '../../stages/models/stage.entity.ts';\nimport { Track } from '../../tracks/models/track.entity';\n\nexport enum TaskStatus {\n  STARTED = 'STARTED',\n  UNCOMPLETED = 'UNCOMPLETED',\n  COMPLETED = 'COMPLETED'\n}\n\n@index({ title: 1 }, { unique: true })\nexport class Task extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    type: Date,\n    default: new Date(new Date().setDate(new Date().getDate() + 7))\n  })\n  readonly deadline = new Date(new Date().setDate(new Date().getDate() + 7));\n\n  @prop({\n    enum: TaskStatus,\n    type: String,\n    required: true,\n    default: TaskStatus.STARTED\n  })\n  readonly status: TaskStatus = TaskStatus.STARTED;\n\n  @prop({ ref: Track, required: true })\n  readonly track!: Ref;\n\n  @prop({ ref: Stage, required: true })\n  readonly stage!: Ref;\n\n  complete(): void {\n    (this as Writable).status = TaskStatus.COMPLETED;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskDto.html":{"url":"classes/TaskDto.html","title":"class - TaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/task.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                deadline\n                            \n                            \n                                description\n                            \n                            \n                                stage\n                            \n                            \n                                title\n                            \n                            \n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsDate()@MinDate(new Date(), {message: 'Date must be in future'})@IsOptional()@ApiProperty({type: Date})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport {\n  IsAlphanumeric,\n  IsDate,\n  IsMongoId,\n  IsOptional,\n  MaxLength,\n  MinDate\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TaskDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @IsMongoId()\n  @Expose()\n  track: string;\n  @IsMongoId()\n  @Expose()\n  stage: string;\n  @Expose()\n  @IsDate()\n  @MinDate(new Date(), { message: 'Date must be in future' })\n  @IsOptional()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  deadline?: Date;\n}\nexport class PagedListTaskDto extends PagedListDto(TaskDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TasksController.html":{"url":"classes/TasksController.html","title":"class - TasksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                assignTasks\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                submitTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksService: TasksService, stageService: StagesService, trackService: TracksService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/tasks.controller.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stageService\n                                                  \n                                                        \n                                                                        StagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            assignTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignTasks(input: AssignTasksDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('assign')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiBody({description: 'Assigns task(s) to a user', type: AssignTasksDto})@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AssignTasksDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: TaskDto, status: undefined})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submitTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitTask(taskId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':taskId/submit')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.MENTEE)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  NotFoundException,\n  Param,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { StagesService } from '../stages/stages.service';\nimport { TracksService } from '../tracks/tracks.service';\nimport { UserRole } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AssignTasksDto } from './models/dtos/assign-tasks.dto';\nimport { CreateTaskDto } from './models/dtos/create-task.dto';\nimport { PagedListTaskDto, TaskDto } from './models/dtos/task.dto';\nimport { Task } from './models/task.entity';\nimport { TasksService } from './tasks.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Task,\n  createDto: CreateTaskDto,\n  pagedListDto: PagedListTaskDto,\n  entityDto: TaskDto,\n  updateDto: CreateTaskDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n});\n\nexport class TasksController extends BaseCtrl {\n  constructor(\n    private tasksService: TasksService,\n    @Inject(StagesService)\n    private stageService: StagesService,\n    @Inject(TracksService)\n    private trackService: TracksService,\n    @Inject(UsersService)\n    private userService: UsersService\n  ) {\n    super(tasksService);\n  }\n\n  @Post()\n  @ApiResponse({ type: TaskDto, status: HttpStatus.CREATED })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTaskDto): Promise {\n    const task = await this.tasksService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (task) {\n      throw new ConflictException(\n        `Task with the title \"${task.title}\" already exists`\n      );\n    }\n    const stage = await this.stageService.findByIdAsync(input.stage);\n    if (!stage)\n      throw new NotFoundException(`Stage with ${input.stage} not found`);\n    const track = await this.trackService.findByIdAsync(input.track);\n    if (!track)\n      throw new NotFoundException(`Track with ${input.track} not found`);\n    return await super.create(input);\n  }\n\n  @Post('assign')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiBody({ description: 'Assigns task(s) to a user', type: AssignTasksDto })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async assignTasks(@Body() input: AssignTasksDto): Promise {\n    const user = await this.userService.findByIdAsync(input.userId);\n\n    if (!user)\n      throw new NotFoundException(`User with Id ${input.userId} not found`);\n\n    const taskCount = await this.tasksService.countAsync({\n      _id: { $in: input.taskIdList }\n    });\n\n    if (taskCount !== input.taskIdList.length)\n      throw new NotFoundException(`Not all task exist`);\n\n    await this.tasksService.assignTasks(input.userId, input.taskIdList);\n  }\n  @Post(':taskId/submit')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.MENTEE)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async submitTask(@Param('taskId') taskId: string): Promise {\n\n    const tasks = await this.tasksService.getAssignedTasks();\n    const task = tasks.find((x) => x.id === taskId);\n    if (!task) throw new NotFoundException(`Track with ${taskId} not found`);\n    await this.tasksService.submitTask(task);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nStagesModule\n\nStagesModule\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nStagesModule->TasksModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nTasksModule -->\n\nTracksModule->TasksModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTasksModule -->\n\nUsersModule->TasksModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StagesModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { StagesModule } from '../stages/stages.module';\nimport { TracksModule } from '../tracks/tracks.module';\nimport { UsersModule } from '../users/users.module';\nimport { Task } from './models/task.entity';\nimport { TasksController } from './tasks.controller';\nimport { TasksService } from './tasks.service';\n\nconst TaskModel = MongooseModule.forFeature([\n  { name: Task.modelName, schema: Task.schema }\n]);\nconst baseService = { provide: BaseService, useClass: TasksService };\n@Module({\n  imports: [TaskModel, StagesModule, TracksModule, UsersModule],\n  providers: [TasksService, baseService],\n  controllers: [TasksController],\n  exports: [TaskModel, TasksService, baseService]\n})\nexport class TasksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemporaryToken.html":{"url":"classes/TemporaryToken.html","title":"class - TemporaryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemporaryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/temporary-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions, prop, Ref } from '@typegoose/typegoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { BaseEntity } from '../../shared/models/base.entity';\n\nexport enum TokenType {\n  PASSWORD = 'PASSWORD_TOKEN',\n  EMAIL = 'EMAIL_TOKEN'\n}\n\n@index({ user: 1, type: 1 }, { unique: true })\n@modelOptions({ options: { customName: 'temptokens' } })\n@index({ expireAt: 1 }, { expireAfterSeconds: 0 })\nexport class TemporaryToken extends BaseEntity {\n  @prop({ required: true })\n  readonly token!: string;\n\n  @prop({ required: true, type: Date })\n  readonly expireAt!: Date;\n\n  @prop({\n    enum: TokenType,\n    type: String,\n    unique: false,\n    required: true\n  })\n  readonly type?: TokenType;\n\n  @prop({ ref: User, unique: false, required: true })\n  readonly user?: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/track.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                stages\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Stage', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { Stage } from '../../stages/models/stage.entity.ts';\n\n@index({ title: 1 }, { unique: true })\nexport class Track extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({ ref: 'Stage', default: [] })\n  readonly stages: Ref[] = [];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackDto.html":{"url":"classes/TrackDto.html","title":"class - TrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/tack.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TracksController.html":{"url":"classes/TracksController.html","title":"class - TracksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TracksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/tracks/tracks.controller.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTrackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({type: TrackDto, status: undefined})@ApiResponse({status: undefined})@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers/base.controller';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateTrackDto } from './models/dto/create-track.dto';\nimport { PagedTrackOutputDto, TrackDto } from './models/dto/tack.dto';\nimport { Track } from './models/track.entity';\nimport { TracksService } from './tracks.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedListDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n});\nexport class TracksController extends BaseCtrl {\n  constructor(protected trackService: TracksService) {\n    super(trackService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ type: TrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTrackDto): Promise {\n    const exist = await this.trackService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Track with the title \"${exist.title}\" already exists`\n      );\n    return await super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TracksModule.html":{"url":"modules/TracksModule.html","title":"module - TracksModule","body":"\n                   \n\n\n\n\n    Modules\n    TracksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\n\nTracksService \n\nTracksService \n\n\n\nTracksModule\n\nTracksModule\n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tracks/tracks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TracksService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TracksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { Track } from './models/track.entity';\nimport { TracksController } from './tracks.controller';\nimport { TracksService } from './tracks.service';\n\nconst TrackModel = MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n]);\nconst baseService = { provide: BaseService, useClass: TracksService };\n@Module({\n  imports: [TrackModel],\n  providers: [TracksService, baseService],\n  controllers: [TracksController],\n  exports: [TrackModel, TracksService, baseService]\n})\nexport class TracksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { CreateUserDto } from '../../users/models/dto/create-user.dto';\n\nexport class UpdateProfileDto extends OmitType(CreateUserDto, ['email', 'role']) { }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                failedSignInAttempts\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isEmailVerified\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lockOutEndDate\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                photoUrl\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                tasks\n                            \n                            \n                                    Readonly\n                                technologies\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                setRandomPass\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, trim: true, text: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, lowercase: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            failedSignInAttempts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:90\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lockOutEndDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, trim: true, text: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            photoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: UserRole, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Task', required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            technologies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({items: String, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRandomPass\n                        \n                        \n                    \n                \n            \n            \n                \nsetRandomPass()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:103\n                                \n                            \n                    \n                        \n                                Get User's full name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:115\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport {\n  getModelForClass,\n  index,\n  pre,\n  prop,\n  Ref,\n  ReturnModelType\n} from '@typegoose/typegoose';\nimport { hash } from 'bcrypt';\nimport { Exclude } from 'class-transformer';\nimport * as crypto from 'crypto';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { columnSize } from '../../shared/constants';\nimport { BaseEntity } from '../../shared/models/base.entity';\nimport { Task } from '../../tasks/models/task.entity';\n\nexport enum UserRole {\n  MENTEE = 'MENTEE',\n  MENTOR = 'MENTOR',\n  ADMIN = 'ADMIN'\n}\n\n@pre('save', async function () {\n  try {\n    (this as Writable).password = await hash(this.password, 10);\n  } catch (e) {\n    throw new InternalServerErrorException(e);\n  }\n})\n@index({ email: 1 }, { unique: true })\nexport class User extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n  })\n  readonly firstName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n  })\n  readonly lastName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: false\n  })\n  readonly email!: string;\n  @prop({\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    default: null\n  })\n  readonly phoneNumber!: string;\n  @prop({\n    default: null\n  })\n  readonly photoUrl: string = null;\n  @prop({\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    default: null\n  })\n  readonly description!: string;\n  @prop({ items: String, default: [] })\n  readonly technologies: string[] = [];\n  @prop({ required: true, maxlength: columnSize.length64 })\n  @Exclude()\n  readonly password!: string;\n\n  @prop({\n    enum: UserRole,\n    type: String,\n    required: true,\n    default: UserRole.MENTEE\n  })\n  readonly role = UserRole.MENTEE;\n\n  @prop({ required: true, default: false })\n  readonly isEmailVerified: boolean;\n  @prop({ default: undefined })\n  readonly lockOutEndDate?: Date;\n  @prop({ required: true, default: 0 })\n  readonly failedSignInAttempts!: number;\n  @prop({ ref: 'Task', required: true })\n  readonly tasks!: Ref[];\n  /**\n   * Get User's full name\n   *\n   * @readonly\n   * @memberof User\n   */\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  setRandomPass(): void {\n    (this as Writable).password = crypto\n      .randomBytes(columnSize.length32)\n      .toString();\n  }\n  confirmEmail(): void {\n    (this as Writable).isEmailVerified = true;\n  }\n\n  static get model(): ReturnModelType {\n    return getModelForClass(this);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                    Optional\n                                photoUrl\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Readonly\n                                    Optional\n                                tasks\n                            \n                            \n                                    Optional\n                                technologies\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsOptional()@MaxLength(columnSize.length128)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsPhoneNumber('ZZ', {message: 'Invalid phone number. Valid phone number sample +2347063644568'})@MaxLength(columnSize.length64)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            photoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true})@Expose()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsEnum(UserRole)@ApiProperty({enum: UserRole})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            tasks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true})@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            technologies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsArray()@Length(1, columnSize.length32, {each: true})@ApiProperty({isArray: true, type: String})@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsArray, IsEmail, IsEnum, IsPhoneNumber, Length, MaxLength, IsOptional } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { UserRole } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n  @Expose()\n\n  @MaxLength(columnSize.length64)\n  lastName: string;\n  @Expose()\n\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  email: string;\n  @Expose()\n\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  role?: UserRole = UserRole.MENTEE;\n  @Expose()\n  @IsOptional()\n  @MaxLength(columnSize.length128)\n  description?: string;\n  @Expose()\n  @IsPhoneNumber(\"ZZ\", { message: 'Invalid phone number. Valid phone number sample +2347063644568' })\n  @MaxLength(columnSize.length64)\n  @IsOptional()\n  phoneNumber?: string;\n  @Expose()\n  @IsArray()\n  @Length(1, columnSize.length32, { each: true })\n  @ApiProperty({ isArray: true, type: String })\n  @IsOptional()\n  technologies?: string[];\n\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly photoUrl?: string;\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  readonly tasks?: any[];\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersController.html":{"url":"classes/UsersController.html","title":"class - UsersController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.controller.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: UserDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { BaseCrudController } from '../shared/controllers/base.controller';\nimport { CreateUserDto } from './models/dto/create-user.dto';\nimport { PagedUserOutputDto, UserDto } from './models/dto/user.dto';\nimport { User, UserRole } from './models/user.entity';\nimport { UsersService } from './users.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedListDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n});\n\nexport class UsersController extends BaseCtrl {\n  constructor(protected readonly usersService: UsersService) {\n    super(usersService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: UserDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({\n      title: input.email.toLowerCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `User with the email \"${exist.email}\" already exists`\n      );\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { User } from './models/user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\nexport const UserModel = MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n]);\n@Module({\n  imports: [UserModel],\n  providers: [UsersService, { provide: BaseService, useClass: UsersService }],\n  controllers: [UsersController],\n  exports: [UsersService, UserModel]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateTokenInput.html":{"url":"classes/ValidateTokenInput.html","title":"class - ValidateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/validate-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class ValidateTokenInput extends PickType(LoginReqDto, ['email']) {\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                merge-coverage.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Database\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/acct-verification.dto.ts\n            \n            class\n            AcctVerifyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginReqDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/reset-pw.dto.ts\n            \n            class\n            ResetPassInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/validate-token.dto.ts\n            \n            class\n            ValidateTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/temporary-token.entity.ts\n            \n            class\n            TemporaryToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/temp-token.service.ts\n            \n            injectable\n            TempTokensService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            class\n            CategoriesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.module.ts\n            \n            variable\n            CategoryModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            class\n            CategoriesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/models/category.entity.ts\n            \n            class\n            Category\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            PagedCategoryOutDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.controller.ts\n            \n            class\n            CoursesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/courses.module.ts\n            \n            variable\n            CourseModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.service.ts\n            \n            injectable\n            CoursesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/courses/models/course.entity.ts\n            \n            class\n            Course\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            CourseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            PagedCourseOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/create-course.dto.ts\n            \n            class\n            CreateCourseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/dto/avatar-upload.dto.ts\n            \n            class\n            AvatarUploadDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Cloudinary\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Configuration\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Database\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Mailer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            AUTH_GUARD_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            columnSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/base.controller.ts\n            \n            function\n            BaseCrudController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/api-swagger-operation.decorator.ts\n            \n            variable\n            ApiSwaggerOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authenticate.decorator.ts\n            \n            variable\n            Authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/file-upload.decorator.ts\n            \n            variable\n            ApiFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/errors/api-exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/errors/auth.errors.ts\n            \n            variable\n            authErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithSwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithSwaggerOpts\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller.interface.ts\n            \n            interface\n            IBaseController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            AuthObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            ControllerAuth\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            DefaultAuthObject\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/shared/models/dto/base.dto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/dto/find.dto.ts\n            \n            class\n            FindDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            interface\n            IPagedListDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            function\n            PagedListDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            defaultAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            getAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/random-token.ts\n            \n            variable\n            generateRandomToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/validations/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/create-stage.dto.ts.ts\n            \n            class\n            CreateStageDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/stage.dto.ts.ts\n            \n            class\n            PagedListStageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/stage.dto.ts.ts\n            \n            class\n            StageDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/stages/models/stage.entity.ts.ts\n            \n            class\n            Stage\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/stages/stages.controller.ts\n            \n            class\n            StagesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stages/stages.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.module.ts\n            \n            variable\n            StageModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.service.ts\n            \n            injectable\n            StagesService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/assign-tasks.dto.ts\n            \n            class\n            AssignTasksDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/task.dto.ts\n            \n            class\n            PagedListTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/task.dto.ts\n            \n            class\n            TaskDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/tasks/models/task.entity.ts\n            \n            class\n            Task\n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            class\n            TasksController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            TaskModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateTrackDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/tack.dto.ts\n            \n            class\n            PagedTrackOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/tack.dto.ts\n            \n            class\n            TrackDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tracks/models/track.entity.ts\n            \n            class\n            Track\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            class\n            TracksController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            TrackModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.service.ts\n            \n            injectable\n            TracksService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/users/models/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            PagedUserOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/users/models/user.entity.ts\n            \n            class\n            User\n            \n                10 %\n                (3/29)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            class\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.module.ts\n            \n            variable\n            UserModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            dbFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            dbServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            inMemoryDb\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.1\n        \n            @nestjs/common : ^7.2.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.2.0\n        \n            @nestjs/microservices : ^7.2.0\n        \n            @nestjs/mongoose : ^7.0.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.2.0\n        \n            @nestjs/schedule : ^0.4.0\n        \n            @nestjs/swagger : ^4.5.10\n        \n            @typegoose/typegoose : ^7.2.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.14.0\n        \n            cache-manager : ^3.3.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            cloudinary : ^1.22.0\n        \n            compression : ^1.7.4\n        \n            connect-mongo : ^3.2.0\n        \n            cookie-parser : ^1.4.5\n        \n            cookie-session : ^1.4.0\n        \n            datauri : ^3.0.0\n        \n            express-rate-limit : ^5.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.9.18\n        \n            mongoose-autopopulate : ^0.12.2\n        \n            nodemailer : ^6.4.8\n        \n            nodemailer-mailgun-transport : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pluralize : ^8.0.0\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n        \n            tsconfig-paths : ^3.9.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthEventEnum   (src/.../auth.enums.ts)\n                        \n                        \n                            TaskStatus   (src/.../task.entity.ts)\n                        \n                        \n                            TokenType   (src/.../temporary-token.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/models/auth.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthEventEnum\n                    \n                \n                        \n                            \n                                 UserRegistered\n                            \n                        \n                        \n                            \n                                Value : user_registered\n                            \n                        \n            \n        \n\n    src/tasks/models/task.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 STARTED\n                            \n                        \n                        \n                            \n                                Value : STARTED\n                            \n                        \n                        \n                            \n                                 UNCOMPLETED\n                            \n                        \n                        \n                            \n                                Value : UNCOMPLETED\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n            \n        \n\n    src/auth/models/temporary-token.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : PASSWORD_TOKEN\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL_TOKEN\n                            \n                        \n            \n        \n\n    src/users/models/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MENTEE\n                            \n                        \n                        \n                            \n                                Value : MENTEE\n                            \n                        \n                        \n                            \n                                 MENTOR\n                            \n                        \n                        \n                            \n                                Value : MENTOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BaseCrudController   (src/.../base.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            main   (merge-coverage.ts)\n                        \n                        \n                            PagedListDto   (src/.../paged-list.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/controllers/base.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            BaseCrudController\n                        \n                        \n                    \n                \n            \n            \n                \nBaseCrudController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    merge-coverage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            main\n                        \n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    src/shared/models/dto/paged-list.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PagedListDto\n                        \n                        \n                    \n                \n            \n            \n                \nPagedListDto(entityDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCode Clan Nigeria\n \nThe official website for code clan nigeria community\nWe are a community comprised of future innovators.\nFront-end developers, DevOps engineers, full stack developers, technical\nwriters, software engineers.\nThis community was created out of a desire to provide ongoing support\nto you wherever stage you are in your coding career.\nThis is codeclannigeria.dev\nAs part of the measures towards achieving out goal stated above, we propose to bring together the amazing talents of our community members to built a website and a mobile application that represents all that we\nstand for.\nHow You Come In\nTo get a complete documentation of the source code and the architectural structure of the application, click here.\nFeel free to put your skills to the test. Here is a suggested workflow for you to follow:\nNote: This is applicable to codeclannigeria community members only.\n\nFork this repository into your local computer\nCheck the issues pane for an issue that needs to be solved\nFind an issue that matches your current skill level and solve it\nMake your pull request to the develop branch\nWait for some feedback.\nRepeat the process\n\nWant more support? Join our slack\ncommunity and ask questions.\nThanks for your support\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Fortune Ochi\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DbTest\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TracksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nCoursesService \n\nCoursesService \n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nStagesModule->TasksModule\n\n\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nStagesService \n\nStagesService \n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTracksModule\n\nTracksModule\n\nStagesModule -->\n\nTracksModule->StagesModule\n\n\n\nTasksModule -->\n\nTracksModule->TasksModule\n\n\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nTracksService \n\nTracksService \n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nTasksModule -->\n\nUsersModule->TasksModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    48 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractDocument   (src/.../abstract.type.ts)\n                        \n                        \n                            ClassType   (src/.../abstract.type.ts)\n                        \n                        \n                            DeleteResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryItem   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryList   (src/.../abstract.type.ts)\n                        \n                        \n                            UpdateResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            Writable   (src/.../abstract.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/types/abstract.type.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Writable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiFile   (src/.../file-upload.decorator.ts)\n                        \n                        \n                            ApiSwaggerOperation   (src/.../api-swagger-operation.decorator.ts)\n                        \n                        \n                            AUTH_GUARD_TYPE   (src/.../constants.ts)\n                        \n                        \n                            Authenticate   (src/.../authenticate.decorator.ts)\n                        \n                        \n                            authErrors   (src/.../auth.errors.ts)\n                        \n                        \n                            BaseCtrl   (src/.../categories.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../stages.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../tasks.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../tracks.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../users.controller.ts)\n                        \n                        \n                            baseService   (src/.../stages.module.ts)\n                        \n                        \n                            baseService   (src/.../tasks.module.ts)\n                        \n                        \n                            baseService   (src/.../tracks.module.ts)\n                        \n                        \n                            CategoryModel   (src/.../categories.module.ts)\n                        \n                        \n                            columnSize   (src/.../constants.ts)\n                        \n                        \n                            Config   (src/.../app.module.ts)\n                        \n                        \n                            Config   (src/.../auth.module.ts)\n                        \n                        \n                            CourseModel   (src/.../courses.module.ts)\n                        \n                        \n                            Database   (src/.../app.module.ts)\n                        \n                        \n                            dbFactory   (test/.../db-test.module.ts)\n                        \n                        \n                            dbServer   (test/.../db-test.module.ts)\n                        \n                        \n                            defaultAuth   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            generateRandomToken   (src/.../random-token.ts)\n                        \n                        \n                            getAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            inMemoryDb   (test/.../db-test.module.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            StageModel   (src/.../stages.module.ts)\n                        \n                        \n                            TaskModel   (src/.../tasks.module.ts)\n                        \n                        \n                            TrackModel   (src/.../tracks.module.ts)\n                        \n                        \n                            UserModel   (src/.../users.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/file-upload.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fileName = 'file', description?: string): MethodDecorator => (\n    target: any,\n    propertyKey: string,\n    descriptor: PropertyDescriptor,\n) => {\n    ApiBody({\n        required: true,\n        description,\n        schema: {\n            type: 'object',\n            required: ['true'],\n            properties: {\n                [fileName]: {\n                    type: 'string',\n                    format: 'binary',\n                },\n            },\n        },\n    })(target, propertyKey, descriptor);\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/api-swagger-operation.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiSwaggerOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: {\n  title: string;\n  description?: string;\n  operationId?: string;\n  deprecated?: boolean;\n}): MethodDecorator => {\n  return (target, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const controllerName = target.constructor.name;\n    ApiOperation({\n      ...options,\n      operationId: `${controllerName.substr(\n        0,\n        controllerName.indexOf('Controller'),\n      )}_${propertyKey}`,\n    })(target, propertyKey, descriptor);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  length8: 2 ** 3,\n  length16: 2 ** 4,\n  length32: 2 ** 5,\n  length64: 2 ** 6,\n  length128: 2 ** 7,\n  length256: 2 ** 8,\n  length512: 2 ** 9,\n  length1024: 2 ** 10\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authenticate.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthenticationEnabled: boolean,\n  decorator: MethodDecorator\n): MethodDecorator => {\n  return (target, key: string | symbol, value: any): any => {\n    if (isAuthenticationEnabled) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/errors/auth.errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  INVALID_LOGIN_ATTEMPT: new UnauthorizedException(\n    'Email or Password is incorrect'\n  ),\n  INVALID_TOKEN: new ForbiddenException('Invalid token'),\n  EXPIRED_TOKEN: new NotFoundException('Token expired')\n}\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedListDto: PagedCategoryOutDto\n})\n                        \n                    \n\n\n            \n        \n\n    src/stages/stages.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Stage,\n  entityDto: StageDto,\n  createDto: CreateStageDto,\n  updateDto: CreateStageDto,\n  pagedListDto: PagedListStageDto,\n  auth: {\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/tasks/tasks.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Task,\n  createDto: CreateTaskDto,\n  pagedListDto: PagedListTaskDto,\n  entityDto: TaskDto,\n  updateDto: CreateTaskDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedListDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/users/users.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedListDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/stages/stages.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: StagesService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            StageModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/tasks/tasks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: TasksService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Task.modelName, schema: Task.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: TracksService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TrackModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CategoryModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Database\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n})\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n]\n                        \n                    \n\n\n            \n        \n\n    src/courses/courses.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    test/helpers/db-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbServer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoMemoryServer()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inMemoryDb\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : dbServer\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/get-auth-obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ControllerAuth\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  create: {\n    enableAuth: true,\n    authRoles: []\n  },\n  update: {\n    enableAuth: true,\n    authRoles: []\n  },\n  find: {\n    enableAuth: true,\n    authRoles: []\n  },\n  findById: {\n    enableAuth: true,\n    authRoles: []\n  },\n  delete: {\n    enableAuth: true,\n    authRoles: []\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  authObj: DefaultAuthObject | boolean\n): ControllerAuth => {\n  const roles = Object.values(UserRole);\n  defaultAuth.create.authRoles = roles;\n  defaultAuth.update.authRoles = roles;\n  defaultAuth.find.authRoles = roles;\n  defaultAuth.findById.authRoles = roles;\n  defaultAuth.delete.authRoles = roles;\n\n  if (typeof authObj === 'boolean') {\n    if (authObj === false) {\n      defaultAuth.create.enableAuth = false;\n      defaultAuth.update.enableAuth = false;\n      defaultAuth.find.enableAuth = false;\n      defaultAuth.findById.enableAuth = false;\n      defaultAuth.delete.enableAuth = false;\n      return defaultAuth;\n    }\n    if (authObj === true) return defaultAuth;\n  }\n\n  if (typeof authObj?.find === 'boolean') {\n    defaultAuth.find.enableAuth = authObj.find;\n  } else if (!!authObj?.find?.length) {\n    defaultAuth.find.authRoles = authObj.find;\n  }\n\n  if (typeof authObj?.findById === 'boolean') {\n    defaultAuth.findById.enableAuth = authObj.findById;\n  } else if (!!authObj?.findById?.length) {\n    defaultAuth.findById.authRoles = authObj.findById;\n  }\n\n  if (typeof authObj?.update === 'boolean') {\n    defaultAuth.update.enableAuth = authObj.update;\n  } else if (!!authObj?.update?.length) {\n    defaultAuth.update.authRoles = authObj.update;\n  }\n\n  if (typeof authObj?.create === 'boolean') {\n    defaultAuth.create.enableAuth = authObj.create;\n  } else if (!!authObj?.create?.length) {\n    defaultAuth.create.authRoles = authObj.create;\n  }\n\n  if (typeof authObj?.delete === 'boolean') {\n    defaultAuth.delete.enableAuth = authObj.delete;\n  } else if (!!authObj?.delete?.length) {\n    defaultAuth.delete.authRoles = authObj.delete;\n  }\n\n  return defaultAuth;\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/validations/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): any => {\n  return Joi.object({\n    NODE_ENV: Joi.string()\n      .valid('development', 'production', 'test')\n      .default('development'),\n    PORT: Joi.number().default(3000),\n    JWT_SECRET: Joi.string().required(),\n    JWT_VALIDITY_HOURS: Joi.number().required(),\n    ROOT_URL: Joi.string().uri().required(),\n    REDIS_SERVER_URL: Joi.string().uri().default('redis://localhost:6379'),\n    DATABASE_PORT: Joi.number().default(27017),\n    DATABASE_HOST: Joi.string().default('localhost'),\n    DATABASE_NAME: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n    MAILER_API_KEY: Joi.string().required(),\n    MAILER_DOMAIN: Joi.string().required(),\n    API_AUTH_ENABLED: Joi.string().valid('true', 'false').default('true'),\n    APP_EMAIL: Joi.string().email().required(),\n    CLOUDINARY_API_KEY: Joi.string().required(),\n    CLOUDINARY_API_SECRET: Joi.string().required(),\n    CLOUDINARY_NAME: Joi.string().required()\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/random-token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandomToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n  randomBytes(size).toString('hex')\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: UserRole[]): CustomDecorator =>\n  SetMetadata(UserRole, roles)\n                        \n                    \n\n\n            \n        \n\n    src/users/users.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
