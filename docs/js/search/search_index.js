var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControllerOptions.html",[0,1.289,1,2.365]],["body/interfaces/AbstractControllerOptions.html",[0,2.225,1,4.08,2,2.379,3,0.187,4,0.168,5,0.168,6,3.561,7,1.85,8,3.561,9,0.442,10,1.411,11,5.241,12,4.529,13,0.755,14,0.014,15,0.308,16,3.711,17,1.924,18,3.51,19,3.878,20,0.262,21,2.225,22,3.561,23,3.561,24,4.207,25,1.265,26,1.85,27,3.309,28,3.878,29,3.878,30,3.878,31,3.561,32,0.008,33,0.011,34,0.008]],["title/interfaces/AbstractControllerOptions-1.html",[0,1.076,1,1.973,35,2.095]],["body/interfaces/AbstractControllerOptions-1.html",[0,1.474,1,3.532,2,2.204,3,0.174,4,0.156,5,0.156,7,1.714,9,0.41,10,1.343,12,5.713,13,0.891,14,0.014,20,0.174,21,2.36,32,0.008,33,0.01,34,0.008,36,3.985,37,3.985,38,5.092,39,4.731,40,4.731,41,3.746,42,5.092,43,4.582,44,4.582,45,4.582,46,4.582,47,4.582]],["title/interfaces/AbstractControllerWithAuthOptions.html",[0,1.289,24,2.682]],["body/interfaces/AbstractControllerWithAuthOptions.html",[0,2.21,1,4.054,2,2.347,3,0.185,4,0.166,5,0.166,6,3.513,7,1.825,8,3.513,9,0.436,10,1.399,11,3.513,13,0.533,14,0.014,15,0.304,16,4.272,17,1.898,18,4.176,19,3.825,20,0.26,21,2.21,22,3.513,23,3.513,24,4.597,25,1.383,26,2.571,27,3.263,28,3.825,29,3.825,30,3.825,31,3.513,32,0.008,33,0.01,34,0.008]],["title/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.289,27,2.682]],["body/interfaces/AbstractControllerWithSwaggerOptions.html",[0,2.186,1,3.623,2,2.292,3,0.18,4,0.162,5,0.162,6,3.431,7,1.783,8,3.431,9,0.426,10,1.378,11,3.431,12,5.169,13,0.831,14,0.014,15,0.297,16,3.623,17,1.854,18,3.427,19,3.736,20,0.257,21,2.186,22,3.431,23,3.431,24,4.546,25,1.367,26,1.783,27,4.108,28,5.628,29,3.736,30,5.628,31,3.431,32,0.008,33,0.01,34,0.008]],["title/interfaces/AbstractModel.html",[0,1.289,48,3.143]],["body/interfaces/AbstractModel.html",[0,1.66,2,2.482,3,0.195,4,0.176,5,0.176,9,0.461,10,1.449,13,0.77,14,0.014,15,0.322,20,0.195,25,1.3,32,0.009,33,0.011,34,0.009,48,5.065,49,4.488,50,7.052,51,1.872,52,2.994,53,2.765,54,2.994,55,3.418,56,1.368,57,3.452]],["title/classes/AbstractService.html",[58,0.108,59,2.886]],["body/classes/AbstractService.html",[3,0.082,4,0.073,5,0.073,9,0.193,13,0.808,14,0.014,15,0.307,20,0.082,23,4.143,32,0.004,33,0.006,34,0.004,39,2.308,51,1.784,53,2.348,56,1.465,57,1.442,58,0.058,59,2.484,60,0.52,61,1.875,62,0.96,63,8.188,64,3.449,65,2.986,66,3.449,67,3.449,68,3.449,69,2.705,70,3.449,71,3.001,72,3.449,73,3.449,74,3.449,75,3.449,76,3.449,77,3.449,78,3.449,79,3.449,80,3.449,81,2.705,82,4.313,83,3.449,84,1.234,85,2.155,86,2.564,87,1.66,88,6.473,89,1.986,90,4.313,91,3.449,92,2.155,93,3.92,94,3.449,95,2.155,96,3.752,97,3.449,98,2.155,99,3.449,100,2.155,101,6.257,102,3.449,103,2.155,104,3.449,105,2.155,106,3.449,107,2.155,108,3.449,109,2.155,110,3.449,111,2.155,112,3.449,113,2.155,114,3.449,115,2.155,116,3.449,117,2.155,118,3.449,119,2.155,120,3.449,121,2.155,122,3.449,123,2.155,124,3.449,125,5.753,126,5.753,127,2.155,128,2.155,129,2.155,130,1.875,131,1.203,132,1.875,133,1.142,134,2.155]],["title/classes/AbstractVm.html",[58,0.108,135,3.143]],["body/classes/AbstractVm.html",[3,0.175,4,0.157,5,0.157,9,0.414,10,1.352,13,0.804,14,0.014,15,0.288,20,0.175,32,0.008,33,0.01,34,0.008,51,1.819,52,2.714,53,2.507,54,2.714,55,3.43,56,1.463,58,0.124,60,1.115,84,1.117,135,4.724,136,6.174,137,4.024,138,1.932,139,6.025,140,7.098,141,7.098,142,4.626,143,7.36,144,4.626,145,4.626,146,1.488]],["title/classes/AcctVerifyDto.html",[58,0.108,147,2.886]],["body/classes/AcctVerifyDto.html",[3,0.182,4,0.163,5,0.163,9,0.429,10,1.384,13,0.745,14,0.014,15,0.425,20,0.182,25,0.965,32,0.008,33,0.01,34,0.008,56,1.478,58,0.166,60,1.156,84,1.137,138,1.966,146,1.543,147,4.441,148,6.259,149,4.172,150,5.93,151,5.93,152,5.93,153,6.817,154,4.796,155,5.837,156,4.796,157,4.796,158,3.005,159,2.308,160,2.677,161,4.172,162,4.172,163,1.943]],["title/classes/ApiException.html",[58,0.108,164,2.365]],["body/classes/ApiException.html",[3,0.12,4,0.108,5,0.108,9,0.283,10,1.039,13,0.791,14,0.014,15,0.342,20,0.12,21,1.018,32,0.005,33,0.008,34,0.005,51,1.89,56,1.562,58,0.085,60,0.763,84,1.208,86,1.097,87,0.71,138,2.048,146,1.018,164,2.733,165,6.405,166,2.753,167,4.987,168,6.024,169,6.704,170,6.024,171,6.024,172,3.945,173,6.024,174,5.478,175,2.454,176,3.165,177,3.399,178,4.632,179,5.244,180,3.165,181,3.165,182,3.165,183,3.165,184,3.165,185,3.165,186,3.165,187,2.117,188,0.71,189,1.393,190,3.165,191,3.165,192,3.165,193,3.165,194,3.165,195,2.753,196,1.596,197,3.165,198,3.165,199,3.165,200,3.165,201,3.165,202,3.165,203,3.165]],["title/controllers/AppController.html",[7,1.5,204,2.886]],["body/controllers/AppController.html",[3,0.203,4,0.182,5,0.182,7,2.472,9,0.479,14,0.014,15,0.412,20,0.203,32,0.009,33,0.011,34,0.009,56,1.282,58,0.144,62,1.839,84,0.892,89,1.437,138,1.544,188,1.201,204,4.759,205,2.356,206,4.656,207,7.487,208,5.352,209,4.491,210,4.656,211,3.158,212,1.6,213,1.787,214,5.352]],["title/modules/AppModule.html",[215,1.289,216,2.886]],["body/modules/AppModule.html",[3,0.131,4,0.118,5,0.118,14,0.014,15,0.486,20,0.187,32,0.006,33,0.008,34,0.006,58,0.093,188,0.775,189,1.521,204,4.146,205,2.173,209,4.328,210,3.005,215,1.852,216,5.74,217,1.589,218,1.742,219,1.928,220,1.928,221,1.742,222,3.05,223,1.742,224,3.005,225,3.005,226,3.005,227,4.622,228,4.622,229,4.622,230,4.622,231,4.622,232,4.076,233,2.754,234,1.83,235,1.742,236,2.709,237,2.912,238,3.455,239,3.005,240,2.164,241,2.038,242,3.455,243,3.455,244,3.455,245,3.455,246,3.455,247,2.311,248,3.455,249,2.038,250,3.87,251,3.455,252,3.455,253,2.709,254,1.399,255,3.554,256,3.005,257,3.005,258,2.394,259,3.005,260,3.005,261,3.005,262,3.005,263,3.455,264,3.455,265,2.709,266,2.709,267,2.709,268,2.709,269,1.742]],["title/injectables/AppService.html",[209,2.511,270,1.156]],["body/injectables/AppService.html",[3,0.211,4,0.19,5,0.19,9,0.499,14,0.014,15,0.348,20,0.211,32,0.009,33,0.011,34,0.009,56,1.315,58,0.15,62,1.886,84,0.931,89,1.498,188,1.252,209,4.248,213,1.863,270,1.956,271,2.567,272,4.855,273,7.596,274,5.581,275,5.581,276,5.581]],["title/controllers/AuthController.html",[7,1.5,277,2.886]],["body/controllers/AuthController.html",[3,0.068,4,0.061,5,0.061,7,0.674,9,0.161,13,0.717,14,0.014,15,0.43,18,1.006,20,0.068,21,2.014,32,0.003,33,0.005,34,0.003,51,1.276,55,1.313,58,0.048,62,0.83,65,2.776,84,0.882,86,1.834,87,1.187,89,1.42,93,3.477,138,1.526,146,0.58,147,4.034,150,2.594,151,2.594,152,2.594,160,2.474,163,2.86,164,2.251,172,2.148,175,0.955,187,1.206,188,0.404,189,0.794,205,0.794,212,1.141,213,1.64,234,2.349,249,1.063,254,2.889,277,2.148,278,1.568,279,1.206,280,2.594,281,2.983,282,2.983,283,2.983,284,2.983,285,2.983,286,1.803,287,1.803,288,1.803,289,1.803,290,1.803,291,5.028,292,1.803,293,2.616,294,1.803,295,1.803,296,2.552,297,0.909,298,1.803,299,1.803,300,2.966,301,2.983,302,1.803,303,1.803,304,1.803,305,4.434,306,2.983,307,2.983,308,1.803,309,1.803,310,2.039,311,1.803,312,1.803,313,2.966,314,2.983,315,1.803,316,1.803,317,1.413,318,1.413,319,1.803,320,1.803,321,1.413,322,1.206,323,1.206,324,2.983,325,1.298,326,2.983,327,2.983,328,2.339,329,1.803,330,2.251,331,1.568,332,1.413,333,1.298,334,1.206,335,1.298,336,1.298,337,1.413,338,1.006,339,2.251,340,1.413,341,2.129,342,1.298,343,1.298,344,1.803,345,1.803,346,1.803,347,1.995,348,1.568,349,1.803,350,1.803,351,1.803,352,1.568,353,1.803,354,1.803,355,2.747,356,1.803,357,4.912,358,1.803,359,1.803,360,2.339,361,2.953,362,1.803,363,2.983,364,1.803,365,1.803,366,1.413,367,1.803,368,3.811,369,3.852,370,3.122,371,1.803,372,2.992,373,1.413,374,2.461,375,1.803,376,1.803,377,1.803,378,1.413,379,1.803,380,3.872,381,1.803,382,2.983,383,2.594,384,2.983,385,1.803,386,2.983,387,1.568,388,2.594,389,1.568,390,1.803,391,2.594,392,2.983,393,2.983,394,2.983,395,4.434,396,2.983,397,2.983,398,2.983,399,1.568,400,2.594,401,2.983,402,2.983,403,2.594,404,2.983,405,1.803,406,1.803,407,1.803,408,2.339,409,1.568,410,2.594,411,1.803,412,1.568,413,1.206,414,1.803,415,2.339,416,1.803,417,1.803,418,1.803,419,1.803]],["title/injectables/AuthHandler.html",[270,1.156,420,2.682]],["body/injectables/AuthHandler.html",[3,0.189,4,0.17,5,0.17,9,0.447,13,0.546,14,0.014,15,0.433,20,0.189,32,0.008,33,0.011,34,0.008,51,1.205,58,0.134,62,1.761,65,2.704,84,0.833,86,1.732,87,1.121,89,1.341,138,1.441,188,1.121,213,1.668,270,1.826,271,2.298,420,4.235,421,4.347,422,6.331,423,6.331,424,6.949,425,6.331,426,4.997,427,6.331,428,3.599,429,4.997,430,3.919,431,3.919,432,4.347,433,4.997,434,4.997,435,4.997,436,4.997]],["title/modules/AuthModule.html",[215,1.289,227,2.682]],["body/modules/AuthModule.html",[3,0.125,4,0.112,5,0.112,14,0.014,15,0.479,20,0.125,32,0.006,33,0.008,34,0.006,58,0.089,87,1.072,188,0.741,205,2.104,215,1.806,217,1.519,218,1.666,219,1.843,220,1.843,221,1.666,222,2.974,223,2.831,227,5.365,232,4.015,233,2.667,234,1.75,235,1.666,237,2.819,240,2.069,241,1.949,253,2.59,258,1.656,277,4.043,330,4.015,331,2.873,335,2.379,336,2.379,341,4.248,342,2.379,420,4.552,437,2.873,438,3.303,439,2.873,440,2.873,441,4.552,442,4.552,443,4.552,444,4.9,445,3.303,446,3.303,447,1.949,448,2.21,449,3.303,450,3.303,451,3.303,452,3.303,453,3.303,454,2.873,455,2.873,456,3.197,457,4.779,458,2.993,459,4.779,460,4.779,461,4.779,462,3.197,463,4.157]],["title/injectables/AuthService.html",[270,1.156,341,2.237]],["body/injectables/AuthService.html",[3,0.065,4,0.059,5,0.059,9,0.154,10,0.645,12,3.728,13,0.792,14,0.014,15,0.412,20,0.065,21,0.925,22,2.07,32,0.003,33,0.005,34,0.003,51,1.324,53,1.076,56,1.426,58,0.046,62,0.8,65,2.879,71,1.5,84,1.028,86,1.903,87,1.232,89,1.544,93,3.429,138,0.497,163,2.224,167,2.662,175,1.523,177,0.914,188,0.387,189,1.266,212,0.86,213,1.44,249,1.017,254,2.888,258,0.598,270,0.829,271,0.793,280,2.501,291,2.07,297,0.87,300,1.923,310,0.793,322,1.154,334,3.207,335,1.242,336,1.242,339,3.055,340,1.352,341,1.604,355,4.143,361,3.176,368,2.662,369,2.254,370,3.525,374,2.83,380,2.181,383,1.5,387,1.5,388,3.216,389,2.501,399,1.5,403,1.5,408,4.834,409,2.501,410,5.506,412,1.5,413,1.923,415,2.254,428,1.242,430,1.352,431,1.352,432,1.5,444,3.106,454,1.5,455,1.5,462,1.154,464,1.5,465,5.177,466,3.697,467,5.177,468,4.314,469,2.875,470,2.875,471,3.697,472,2.875,473,1.5,474,3.697,475,1.724,476,1.724,477,1.724,478,2.875,479,3.697,480,1.724,481,1.724,482,1.724,483,2.875,484,1.724,485,2.875,486,1.724,487,1.724,488,1.724,489,2.875,490,3.697,491,1.724,492,3.697,493,1.724,494,1.724,495,2.254,496,2.254,497,1.5,498,1.352,499,1.724,500,1.352,501,1.724,502,1.154,503,1.923,504,1.5,505,2.501,506,1.352,507,1.724,508,1.5,509,1.5,510,1.5,511,1.724,512,3.216,513,1.724,514,2.899,515,2.875,516,4.793,517,1.724,518,3.752,519,1.724,520,2.875,521,2.875,522,1.724,523,2.07,524,2.07,525,2.875,526,1.08,527,1.724,528,1.724,529,1.724,530,1.724,531,2.875,532,1.724,533,1.724,534,1.352,535,1.724,536,1.724,537,1.724,538,1.724,539,2.875,540,2.875,541,1.5,542,2.875,543,2.875,544,1.724,545,1.724,546,1.724,547,1.724,548,1.724,549,1.724,550,2.875]],["title/guards/AuthenticationGuard.html",[343,2.886,551,3.143]],["body/guards/AuthenticationGuard.html",[3,0.149,4,0.134,5,0.134,9,0.352,13,0.675,14,0.014,15,0.435,20,0.149,21,1.267,32,0.007,33,0.009,34,0.007,51,1.49,58,0.106,62,1.505,65,2.803,84,1.03,86,2.142,87,1.387,89,1.452,93,2.866,160,3.019,163,1.595,175,2.087,188,0.884,189,1.734,211,2.324,212,1.178,213,2.063,249,2.324,254,2.503,258,1.875,270,1.56,310,2.488,322,3.619,341,4.021,342,2.837,343,3.896,348,3.426,361,2.488,370,2.324,374,2.503,506,3.089,552,3.939,553,3.426,554,5.217,555,5.41,556,3.939,557,3.939,558,4.242,559,5.217,560,3.939,561,3.089,562,5.41,563,4.513,564,3.939,565,2.468,566,3.426,567,3.939,568,3.426,569,3.939,570,3.939,571,3.426,572,3.939]],["title/classes/BaseEntity.html",[58,0.108,133,2.123]],["body/classes/BaseEntity.html",[3,0.082,4,0.074,5,0.074,9,0.193,10,0.776,13,0.708,14,0.014,15,0.337,17,2.881,20,0.082,21,1.589,25,0.696,26,1.847,32,0.004,33,0.006,34,0.004,51,1.515,52,1.75,53,1.617,54,1.75,55,2.926,56,0.838,57,1.446,58,0.058,60,0.521,62,0.962,84,1.2,89,1.325,131,1.206,132,1.88,133,3.596,138,1.812,196,3.485,212,2.296,213,1.154,258,2.585,269,3.267,297,2.905,374,0.876,458,3.383,502,1.446,573,1.88,574,4.938,575,2.707,576,2.707,577,2.707,578,3.789,579,3.383,580,2.707,581,3.093,582,3.093,583,3.014,584,3.093,585,2.711,586,4.321,587,2.771,588,3.093,589,2.162,590,4.397,591,3.093,592,2.162,593,2.162,594,2.162,595,2.162,596,2.162,597,2.162,598,2.162,599,2.162,600,2.162,601,3.608,602,3.329,603,2.162,604,2.162,605,2.162,606,2.162,607,2.162,608,2.162,609,2.162,610,2.162,611,4.335,612,2.162,613,1.695,614,3.093,615,2.711,616,2.162,617,2.162,618,2.162,619,2.162,620,2.162,621,2.162,622,2.162,623,2.162,624,2.162,625,3.458,626,2.162,627,3.458,628,3.759,629,3.458]],["title/classes/BaseResDto.html",[58,0.108,630,2.511]],["body/classes/BaseResDto.html",[3,0.178,4,0.159,5,0.159,9,0.419,10,1.363,13,0.736,14,0.014,15,0.42,20,0.178,32,0.008,33,0.01,34,0.008,52,2.731,53,2.522,54,2.731,55,3.14,56,1.178,58,0.181,60,1.13,84,1.124,138,1.944,146,1.508,159,2.255,179,4.772,212,2.264,630,3.806,631,6.205,632,3.675,633,4.375,634,4.687,635,3.375,636,4.687,637,4.687,638,5.137,639,2.765,640,6.076]],["title/controllers/CategoriesController.html",[7,1.5,641,2.886]],["body/controllers/CategoriesController.html",[3,0.137,4,0.123,5,0.123,7,1.358,9,0.325,13,0.767,14,0.014,15,0.473,20,0.137,21,1.168,25,0.73,32,0.006,33,0.009,34,0.006,38,2.614,39,2.428,40,2.428,41,2.708,42,2.614,51,0.875,58,0.097,62,1.422,65,2.302,84,0.605,86,1.258,87,1.147,89,0.974,93,2.708,138,1.047,146,1.168,164,3.789,172,4.624,187,2.428,188,0.814,205,1.598,211,2.141,212,1.085,213,1.212,254,1.47,279,2.428,291,3.681,297,2.577,317,2.846,318,2.846,321,4.008,323,2.428,325,2.614,328,5.035,332,2.846,333,2.614,361,1.669,366,2.846,368,3.681,370,2.141,372,2.846,373,2.846,641,3.681,642,3.157,643,3.63,644,3.681,645,3.157,646,5.304,647,3.157,648,3.157,649,3.157,650,3.63,651,3.681,652,3.419,653,2.846,654,2.274,655,1.923,656,2.141,657,2.614,658,2.614,659,4.26,660,3.157,661,3.419,662,3.157,663,3.202,664,3.63,665,2.846,666,2.846,667,3.63,668,3.63,669,2.614,670,3.157,671,3.63,672,3.157,673,3.157,674,3.157,675,3.63,676,3.63,677,3.63,678,3.157]],["title/modules/CategoriesModule.html",[215,1.289,228,2.682]],["body/modules/CategoriesModule.html",[3,0.182,4,0.163,5,0.163,14,0.014,15,0.464,20,0.182,32,0.008,33,0.01,34,0.008,58,0.129,87,1.076,188,1.076,205,2.715,215,2.193,217,2.206,218,2.419,219,2.677,220,2.677,221,2.419,222,3.611,223,2.419,228,5.097,233,3.442,234,2.541,235,2.419,237,2.83,240,3.005,241,2.83,456,3.209,458,3.005,641,4.909,659,5.487,660,4.172,661,3.209,662,4.172,679,4.172,680,4.172,681,4.796,682,4.796,683,4.796,684,4.796]],["title/classes/Category.html",[58,0.108,661,2.682]],["body/classes/Category.html",[3,0.105,4,0.094,5,0.094,9,0.247,10,0.94,13,0.778,14,0.014,15,0.315,17,2.772,20,0.105,21,0.89,25,0.843,26,1.568,32,0.005,33,0.007,34,0.005,51,1.646,52,1.698,53,1.568,54,1.698,55,2.484,56,0.981,58,0.074,60,0.667,62,1.166,84,1.25,87,1.135,89,1.515,131,1.544,133,4.115,138,2.016,196,2.846,212,2.323,258,2.622,269,2.551,297,3.342,575,2.626,576,2.626,577,2.626,578,3.535,579,3.169,580,2.626,581,3.169,582,3.169,583,2.823,584,3.169,587,3.07,588,3.799,590,3.997,591,3.535,601,3.169,602,2.99,611,2.804,614,1.733,661,2.804,685,2.407,686,2.626,687,3.287,688,3.287,689,2.804,690,2.767,691,3.933,692,1.851,693,1.851,694,1.851,695,1.851,696,1.851,697,1.851,698,1.851,699,1.851,700,1.851,701,1.851,702,1.851,703,1.851,704,1.851,705,1.544,706,1.733,707,2.17,708,2.407]],["title/classes/CategoryDto.html",[58,0.108,663,2.511]],["body/classes/CategoryDto.html",[3,0.167,4,0.15,5,0.15,9,0.395,10,1.31,13,0.761,14,0.014,15,0.452,20,0.167,25,1.175,32,0.007,33,0.01,34,0.007,52,2.366,53,2.185,54,2.366,55,2.571,56,1.27,58,0.176,60,1.064,84,1.162,87,1.469,138,2.01,146,1.419,159,2.123,179,3.907,212,2.084,630,4.665,633,4.206,635,3.177,638,4.206,639,2.603,655,2.337,663,3.659,686,2.764,691,3.468,705,2.462,706,2.764,709,3.838,710,3.838,711,4.412,712,3.46,713,3.46,714,3.46,715,5.08,716,3.46,717,3.838]],["title/interfaces/Configuration.html",[0,1.289,189,1.765]],["body/interfaces/Configuration.html",[0,1.922,2,1.778,3,0.14,4,0.126,5,0.126,9,0.33,10,1.161,13,0.832,14,0.014,17,1.438,20,0.14,26,2.235,32,0.006,33,0.009,34,0.006,56,1.57,87,1.161,177,3.841,189,2.63,258,1.281,523,4.907,524,4.907,718,2.661,719,5.343,720,5.03,721,5.343,722,5.343,723,4.71,724,5.221,725,5.343,726,5.343,727,3.727,728,3.463,729,3.727,730,3.727,731,2.898,732,2.898,733,2.898,734,2.898,735,2.898,736,2.898,737,2.898,738,2.898,739,2.472,740,2.472,741,2.898,742,2.898,743,2.898,744,2.898]],["title/classes/CreateCategoryDto.html",[58,0.108,646,2.886]],["body/classes/CreateCategoryDto.html",[3,0.221,4,0.198,5,0.198,14,0.014,15,0.434,20,0.221,25,1.173,32,0.01,33,0.012,34,0.01,58,0.157,60,1.406,87,1.308,146,1.876,158,3.653,646,5.013,663,3.653,666,4.573,745,5.073,746,4.573,747,5.831]],["title/classes/CreateTrackDto.html",[58,0.108,748,2.886]],["body/classes/CreateTrackDto.html",[3,0.218,4,0.196,5,0.196,14,0.014,15,0.431,20,0.218,25,1.159,32,0.01,33,0.012,34,0.01,58,0.155,60,1.389,146,1.853,158,3.609,748,4.977,749,5.011,750,4.518,751,3.609,752,5.011,753,5.761,754,3.854,755,4.149]],["title/classes/CreateUserDto.html",[58,0.108,756,2.886]],["body/classes/CreateUserDto.html",[3,0.217,4,0.195,5,0.195,14,0.014,15,0.43,20,0.217,25,1.154,32,0.01,33,0.012,34,0.01,52,2.324,53,2.147,54,2.324,58,0.154,60,1.383,146,1.846,338,3.202,756,4.965,757,4.991,758,3.839,759,4.499,760,3.04,761,4.499]],["title/injectables/CurrentUserService.html",[270,1.156,762,2.682]],["body/injectables/CurrentUserService.html",[3,0.182,4,0.163,5,0.163,9,0.429,13,0.524,14,0.014,15,0.425,20,0.182,32,0.008,33,0.01,34,0.008,51,1.487,56,0.93,58,0.129,84,1.028,86,1.662,87,1.076,175,2.541,188,1.076,196,3.11,212,1.434,213,1.601,270,1.779,271,2.206,355,3.454,563,4.663,565,3.005,585,4.836,762,4.126,763,5.93,764,4.172,765,6.817,766,4.796,767,4.796,768,4.836,769,4.796,770,4.796,771,4.796,772,6.167,773,3.761,774,4.796,775,4.796,776,4.796,777,4.796,778,4.796,779,4.796]],["title/interfaces/Database.html",[0,1.289,720,2.682]],["body/interfaces/Database.html",[0,2.041,2,1.994,3,0.157,4,0.141,5,0.141,9,0.371,10,1.257,13,0.742,14,0.014,17,1.613,20,0.157,26,1.55,32,0.007,33,0.009,34,0.007,56,1.568,87,1.592,177,3.76,189,2.466,258,1.436,523,4.033,524,4.033,718,2.984,719,4.392,720,4.748,721,4.392,722,4.392,723,4.256,724,5.385,725,4.392,726,4.392,727,5.111,728,4.748,729,4.033,730,4.033,731,3.25,732,3.25,733,3.25,734,3.25,735,3.25,736,3.25,737,3.25,738,3.25,739,2.772,740,2.772,741,3.25,742,3.25,743,3.25,744,3.25]],["title/modules/DbTest.html",[215,1.289,780,3.143]],["body/modules/DbTest.html",[3,0.184,4,0.165,5,0.165,14,0.014,15,0.428,20,0.184,21,1.564,32,0.008,33,0.01,34,0.008,58,0.13,65,1.892,188,1.091,213,1.623,215,2.001,217,2.236,223,2.452,237,2.868,240,3.045,241,2.868,254,2.779,258,2.377,265,3.812,266,3.812,267,3.812,268,3.812,269,2.452,361,2.236,510,4.229,728,4.162,739,3.252,740,3.252,780,4.878,781,3.812,782,3.812,783,5.411,784,4.862,785,4.229,786,3.812,787,5.38,788,4.229,789,4.229,790,4.229,791,4.229,792,4.229]],["title/interfaces/DefaultAuthObject.html",[0,1.289,16,2.365]],["body/interfaces/DefaultAuthObject.html",[0,1.575,2,2.355,3,0.185,4,0.167,5,0.167,9,0.438,10,1.402,13,0.818,14,0.013,16,3.686,18,2.732,20,0.185,26,3.074,32,0.008,33,0.011,34,0.008,51,1.934,69,5.685,81,5.685,583,4.046,644,5.221,793,4.258,794,4.258,795,5.685]],["title/classes/HttpExceptionFilter.html",[58,0.108,796,3.143]],["body/classes/HttpExceptionFilter.html",[3,0.151,4,0.135,5,0.135,9,0.356,13,0.435,14,0.014,15,0.388,20,0.151,21,1.281,32,0.007,33,0.009,34,0.007,51,0.96,56,0.772,58,0.107,60,0.96,62,1.517,84,0.664,86,1.38,87,0.894,89,1.069,164,3.216,167,2.868,168,4.742,170,4.742,173,5.407,187,2.665,188,0.894,196,2.749,254,3.096,333,2.868,506,4.275,514,4.874,565,2.495,602,2.11,727,4.476,768,4.275,796,4.275,797,4.742,798,3.465,799,6.215,800,5.451,801,6.684,802,3.983,803,3.983,804,5.451,805,3.983,806,3.983,807,3.983,808,3.983,809,3.983,810,3.983,811,3.983,812,3.983,813,5.451,814,3.983,815,5.451,816,3.983,817,3.983,818,3.983,819,3.983,820,3.983,821,3.983,822,3.983,823,3.983,824,6.215,825,3.465,826,3.983,827,3.983,828,3.983,829,3.983]],["title/injectables/JwtAuthGuard.html",[270,1.156,656,2.365]],["body/injectables/JwtAuthGuard.html",[3,0.193,4,0.173,5,0.173,9,0.455,13,0.556,14,0.014,15,0.437,20,0.193,25,1.023,32,0.009,33,0.011,34,0.009,51,1.226,58,0.137,62,1.781,84,0.848,86,1.763,87,1.141,89,1.365,188,1.141,189,2.239,213,1.698,249,3.001,258,1.763,270,1.846,271,2.339,447,3.001,554,5.02,558,5.02,559,5.766,561,3.988,568,4.424,656,3.777,830,5.569,831,3.988,832,5.086,833,4.424,834,5.086,835,5.086,836,4.424]],["title/interfaces/JwtPayload.html",[0,1.289,503,2.682]],["body/interfaces/JwtPayload.html",[0,1.748,2,2.614,3,0.206,4,0.185,5,0.185,9,0.486,10,1.497,13,0.788,14,0.013,20,0.206,32,0.009,33,0.011,34,0.009,56,1.572,163,3.049,408,5.902,503,4.462,526,4.715,837,4.726,838,4.726]],["title/injectables/JwtStrategy.html",[270,1.156,441,2.682]],["body/injectables/JwtStrategy.html",[3,0.179,4,0.161,5,0.161,9,0.423,13,0.517,14,0.014,15,0.462,20,0.179,25,0.952,32,0.008,33,0.01,34,0.008,51,1.141,58,0.127,62,1.701,65,2.636,84,1.019,86,1.64,87,1.062,89,1.27,93,3.239,175,3.589,188,1.062,189,2.084,213,1.58,249,2.792,269,2.387,270,1.764,271,2.176,441,4.091,447,2.792,462,3.166,503,3.166,504,4.117,505,5.892,839,4.117,840,4.795,841,4.733,842,6.115,843,4.733,844,4.117,845,4.733,846,4.117,847,3.711,848,4.117,849,4.117,850,4.733,851,4.733,852,4.733,853,4.733,854,4.733]],["title/injectables/LocalAuthGuard.html",[270,1.156,855,3.143]],["body/injectables/LocalAuthGuard.html",[3,0.188,4,0.169,5,0.169,9,0.444,13,0.542,14,0.014,15,0.393,20,0.188,25,0.999,26,1.857,32,0.008,33,0.011,34,0.008,51,1.196,58,0.133,62,1.754,65,2.695,84,0.827,86,1.72,87,1.114,89,1.332,188,1.114,213,1.657,254,2.553,270,1.818,271,2.282,361,2.898,447,2.928,518,5.483,554,4.943,558,4.943,559,5.714,561,3.891,563,3.109,566,4.317,831,3.891,833,4.317,836,4.317,855,4.943,856,5.483,857,4.963,858,4.963,859,4.963]],["title/injectables/LocalStrategy.html",[270,1.156,442,2.682]],["body/injectables/LocalStrategy.html",[3,0.154,4,0.139,5,0.139,9,0.364,13,0.605,14,0.014,15,0.44,20,0.154,21,1.31,25,0.82,32,0.007,33,0.009,34,0.007,51,1.335,56,1.411,58,0.109,62,1.54,65,2.447,84,0.923,86,1.918,87,1.242,89,1.093,163,1.65,175,2.158,188,0.914,211,2.403,213,1.36,254,2.547,258,1.412,270,1.597,271,1.873,310,3.102,322,3.703,341,3.509,342,2.933,361,2.546,370,2.403,374,2.242,442,3.703,447,2.403,563,4.42,571,3.543,773,3.194,840,4.341,844,3.543,846,3.543,847,3.194,848,3.543,849,3.543,860,3.543,861,4.074,862,7.277,863,4.074,864,5.536,865,6.288,866,4.074,867,4.074,868,3.194,869,4.074,870,4.074,871,5.536,872,4.074,873,4.074,874,3.543,875,4.074,876,4.074]],["title/classes/LoginReqDto.html",[58,0.108,160,2.237]],["body/classes/LoginReqDto.html",[3,0.212,4,0.191,5,0.191,14,0.014,15,0.424,20,0.257,25,1.127,32,0.009,33,0.011,34,0.009,56,1.087,58,0.182,60,1.351,146,1.802,158,3.51,160,3.793,163,2.27,293,3.306,310,2.577,337,4.394,338,3.127,347,3.749,360,4.394,877,4.394,878,4.874]],["title/classes/LoginResDto.html",[58,0.108,347,2.682]],["body/classes/LoginResDto.html",[3,0.204,4,0.183,5,0.183,9,0.482,10,1.49,13,0.589,14,0.014,15,0.414,20,0.251,25,1.085,32,0.009,33,0.011,34,0.009,56,1.287,58,0.178,60,1.3,84,0.899,146,1.735,158,3.378,160,3.009,163,2.184,293,3.181,310,2.48,337,4.228,338,3.009,347,4.442,360,5.641,877,4.228,878,4.691,879,5.392]],["title/modules/MailModule.html",[215,1.289,229,2.682]],["body/modules/MailModule.html",[3,0.194,4,0.174,5,0.174,14,0.014,15,0.401,20,0.194,32,0.009,33,0.011,34,0.009,58,0.137,188,1.149,215,2.261,217,2.355,218,2.583,219,2.859,220,2.859,221,2.583,222,3.724,223,3.544,229,5.262,233,3.589,234,2.714,235,2.583,330,4.819,880,4.456,881,4.456,882,5.122,883,5.122,884,5.122]],["title/injectables/MailService.html",[270,1.156,330,2.365]],["body/injectables/MailService.html",[3,0.2,4,0.129,5,0.129,9,0.34,10,1.185,13,0.577,14,0.014,15,0.429,17,1.48,18,2.122,20,0.144,32,0.006,33,0.009,34,0.006,51,0.917,58,0.102,62,1.469,65,2.36,84,1.148,86,1.318,87,0.853,89,1.417,175,3.214,188,0.853,189,2.671,212,1.814,249,2.244,254,2.139,255,4.368,270,1.523,271,1.749,330,3.115,355,5.449,361,1.749,391,4.593,428,2.739,495,2.982,587,1.83,602,2.015,723,2.382,730,2.739,885,3.308,886,6.066,887,6.554,888,5.281,889,5.281,890,3.803,891,5.281,892,6.066,893,3.803,894,3.803,895,3.803,896,6.066,897,5.277,898,5.281,899,3.308,900,3.803,901,3.803,902,3.803,903,3.803,904,3.803,905,3.803,906,3.803,907,3.803,908,3.803,909,3.803,910,3.803,911,3.803,912,5.281,913,3.308,914,3.803,915,3.803,916,3.803,917,3.803,918,3.803,919,3.803,920,3.803]],["title/interfaces/Mailer.html",[0,1.289,723,2.511]],["body/interfaces/Mailer.html",[0,2.084,2,2.078,3,0.164,4,0.147,5,0.147,9,0.386,10,1.292,13,0.629,14,0.014,17,1.681,20,0.164,26,1.616,32,0.007,33,0.01,34,0.007,56,1.563,87,1.292,177,3.432,189,2.535,258,1.497,523,4.147,524,4.147,718,3.11,719,4.515,720,4.622,721,4.515,722,4.515,723,4.509,724,4.976,725,4.515,726,4.515,727,4.147,728,3.852,729,5.183,730,5.183,731,3.387,732,3.387,733,3.387,734,3.387,735,3.387,736,3.387,737,3.387,738,3.387,739,2.89,740,2.89,741,3.387,742,3.387,743,3.387,744,3.387]],["title/classes/PagedCategoryResDto.html",[58,0.108,921,3.143]],["body/classes/PagedCategoryResDto.html",[3,0.221,4,0.198,5,0.198,14,0.014,15,0.434,20,0.221,25,1.173,32,0.01,33,0.012,34,0.01,41,3.089,58,0.157,60,1.406,654,3.653,655,3.089,663,3.653,666,4.573,670,5.073,746,4.573,921,5.459,922,5.073]],["title/classes/PagedReqDto.html",[58,0.108,923,3.143]],["body/classes/PagedReqDto.html",[3,0.169,4,0.152,5,0.152,9,0.398,10,1.319,13,0.764,14,0.014,15,0.278,17,2.287,20,0.169,32,0.007,33,0.01,34,0.007,51,1.863,56,1.356,58,0.158,60,1.074,84,1.166,138,2.017,159,2.142,177,3.705,587,2.827,923,4.608,924,5.701,925,3.874,926,5.721,927,6.577,928,6.577,929,6.577,930,5.876,931,7.614,932,4.453,933,4.453,934,4.453,935,4.453,936,4.453,937,3.931,938,4.453,939,6.577]],["title/classes/PagedTrackResDto.html",[58,0.108,940,3.143]],["body/classes/PagedTrackResDto.html",[3,0.221,4,0.198,5,0.198,14,0.014,15,0.434,20,0.221,25,1.173,32,0.01,33,0.012,34,0.01,41,3.089,58,0.157,60,1.406,654,3.653,655,3.089,750,4.573,751,3.653,752,5.073,940,5.459,941,5.073,942,5.073]],["title/classes/PagedUserResDto.html",[58,0.108,943,3.143]],["body/classes/PagedUserResDto.html",[3,0.221,4,0.198,5,0.198,14,0.014,15,0.434,20,0.221,25,1.173,32,0.01,33,0.012,34,0.01,41,3.089,58,0.157,60,1.406,338,3.254,654,3.653,655,3.089,758,3.901,760,3.089,943,5.459,944,5.073,945,5.073]],["title/classes/PasswordToken.html",[58,0.108,946,3.143]],["body/classes/PasswordToken.html",[3,0.095,4,0.086,5,0.086,9,0.426,10,0.874,13,0.825,14,0.014,15,0.243,17,2.702,20,0.095,21,0.809,25,0.784,26,1.457,32,0.004,33,0.007,34,0.004,35,2.44,51,1.731,52,1.931,53,1.457,54,1.578,55,2.704,56,0.924,58,0.067,60,0.606,62,1.084,84,1.259,89,1.441,131,1.403,133,3.971,138,2.071,196,2.707,212,2.344,258,2.45,269,2.929,297,3.098,334,2.606,335,1.811,336,1.811,374,1.931,380,2.298,448,4.287,534,3.054,575,2.44,576,2.44,577,2.44,578,3.363,579,2.986,580,2.44,581,2.986,582,2.986,583,2.661,584,2.986,587,2.955,588,3.848,590,4.014,591,3.363,601,2.986,602,2.844,614,2.44,689,2.606,691,4.002,692,1.682,693,1.682,694,1.682,695,1.682,696,1.682,697,1.682,698,1.682,699,1.682,700,1.682,701,1.682,702,1.682,703,1.682,704,1.682,946,3.054,947,2.187,948,1.811,949,2.515,950,2.515,951,1.972,952,2.515,953,2.187,954,2.515,955,3.388,956,1.811,957,2.187,958,2.515,959,2.187]],["title/controllers/ProfileController.html",[7,1.5,960,2.886]],["body/controllers/ProfileController.html",[3,0.166,4,0.149,5,0.149,7,1.641,9,0.392,13,0.479,14,0.014,15,0.473,20,0.166,32,0.007,33,0.01,34,0.007,51,1.057,58,0.156,62,1.618,65,2.54,84,0.731,86,1.52,87,0.984,89,1.177,93,3.081,138,1.265,146,1.411,188,0.984,205,1.931,211,2.587,212,1.311,213,1.464,254,1.776,258,2.016,279,2.934,323,2.934,361,2.017,374,2.356,563,4.355,565,2.747,639,2.587,651,4.189,656,2.587,657,3.158,658,3.158,669,3.158,760,2.323,768,5.118,960,4.189,961,3.815,962,4.385,963,5.817,964,4.385,965,4.385,966,4.385,967,4.385,968,4.385,969,4.089,970,3.815,971,4.385,972,4.385,973,4.385,974,4.385,975,4.385,976,4.385]],["title/modules/ProfileModule.html",[215,1.289,230,2.682]],["body/modules/ProfileModule.html",[3,0.185,4,0.166,5,0.166,14,0.014,15,0.452,20,0.185,32,0.008,33,0.01,34,0.008,58,0.131,188,1.095,205,2.745,215,2.21,217,2.243,218,2.46,219,2.722,220,2.722,221,2.46,222,3.64,223,2.46,230,5.27,232,4.515,233,3.479,234,2.584,235,2.46,237,3.678,253,3.825,960,4.948,969,4.794,970,4.243,977,4.243,978,4.878,979,4.243,980,4.878,981,4.878]],["title/injectables/ProfileService.html",[270,1.156,969,2.511]],["body/injectables/ProfileService.html",[3,0.183,4,0.164,5,0.164,9,0.432,13,0.677,14,0.014,15,0.426,20,0.183,32,0.008,33,0.01,34,0.008,51,1.493,56,1.326,58,0.13,62,1.723,65,2.661,84,1.033,86,2.147,87,1.39,89,1.296,93,3.281,163,2.509,175,2.558,188,1.083,211,2.849,212,1.444,213,1.612,270,1.786,271,2.22,339,4.503,340,3.786,369,3.786,374,1.956,473,4.2,502,3.23,969,3.88,982,4.2,983,6.194,984,4.829,985,6.194,986,4.829]],["title/classes/RegisterUserDto.html",[58,0.108,293,2.365]],["body/classes/RegisterUserDto.html",[3,0.192,4,0.172,5,0.172,9,0.453,10,1.433,13,0.554,14,0.014,15,0.436,20,0.242,25,1.02,26,1.896,32,0.009,33,0.011,34,0.009,52,2.053,53,1.896,54,2.053,56,1.239,58,0.188,60,1.222,84,0.845,138,1.462,146,1.63,159,2.438,212,1.515,293,3.768,296,3.39,310,3.216,338,2.828,378,3.974,526,3.175,758,3.39,759,3.974,760,2.685,761,3.974,987,5.009,988,5.556,989,5.068,990,4.408]],["title/classes/RegisterUserResDto.html",[58,0.108,296,2.682]],["body/classes/RegisterUserResDto.html",[3,0.193,4,0.173,5,0.173,9,0.455,10,1.436,13,0.556,14,0.014,15,0.437,20,0.242,25,1.023,26,2.395,32,0.009,33,0.011,34,0.009,52,2.06,53,1.903,54,2.06,56,0.986,58,0.188,60,1.226,84,0.848,146,1.636,159,2.447,212,2.095,293,3.001,296,4.283,310,2.339,338,2.838,378,5.494,526,3.186,758,3.403,759,3.988,760,2.694,761,3.988,987,5.02,988,4.424,990,4.424,991,5.086]],["title/classes/ResetPassInput.html",[58,0.108,300,2.682]],["body/classes/ResetPassInput.html",[3,0.195,4,0.175,5,0.175,9,0.46,10,1.446,13,0.704,14,0.014,15,0.402,20,0.195,25,1.297,32,0.009,33,0.011,34,0.009,56,1.365,58,0.173,60,1.239,84,1.075,138,1.859,155,5.788,159,2.473,300,4.312,313,4.938,352,4.472,380,3.802,415,5.521,691,2.723,840,4.031,992,5.606,993,4.472,994,5.141,995,5.141]],["title/injectables/SessionSerializer.html",[270,1.156,443,2.682]],["body/injectables/SessionSerializer.html",[3,0.165,4,0.148,5,0.148,9,0.389,13,0.632,14,0.014,15,0.405,20,0.165,25,1.163,32,0.007,33,0.01,34,0.007,51,1.394,58,0.117,62,1.608,84,0.964,86,2.004,87,1.297,89,1.552,167,4.163,188,0.975,270,1.667,271,1.998,374,3.306,428,3.129,443,3.868,447,2.564,502,2.907,602,3.669,996,3.78,997,6.497,998,5.782,999,5.782,1000,5.782,1001,7.415,1002,6.926,1003,5.782,1004,4.345,1005,4.534,1006,5.782,1007,4.345,1008,5.782,1009,4.345]],["title/modules/SharedModule.html",[215,1.289,247,2.682]],["body/modules/SharedModule.html",[3,0.176,4,0.158,5,0.158,14,0.014,15,0.376,20,0.176,32,0.008,33,0.01,34,0.008,58,0.125,59,4.348,62,1.291,84,0.774,89,1.246,188,1.041,213,1.549,215,2.286,217,2.134,218,2.34,219,2.59,220,2.59,221,2.34,222,3.765,223,3.044,233,3.369,234,2.459,235,2.34,247,5.145,254,1.88,258,1.608,615,4.734,762,5.052,874,5.837,1010,4.037,1011,4.037,1012,4.641,1013,6.71,1014,4.641,1015,6.71,1016,6.71,1017,5.252,1018,4.641,1019,4.037,1020,4.641]],["title/classes/TemporaryToken.html",[58,0.108,448,2.682]],["body/classes/TemporaryToken.html",[3,0.086,4,0.077,5,0.077,9,0.453,10,0.804,13,0.832,14,0.014,15,0.278,17,2.621,20,0.136,21,0.727,25,0.721,26,1.341,32,0.004,33,0.006,34,0.004,35,2.788,51,1.686,52,1.451,53,1.341,54,1.451,55,2.811,56,1.071,58,0.061,60,0.545,62,0.997,84,1.235,89,1.359,131,1.262,133,3.984,138,2.017,163,1.451,196,2.554,212,2.346,258,2.544,269,3.104,297,2.962,310,1.648,334,3.694,374,2.493,380,2.626,448,2.397,502,1.512,534,3.972,575,2.245,576,2.245,577,2.245,578,3.173,579,2.788,580,2.245,581,2.788,582,2.788,583,2.484,584,2.788,587,2.826,588,3.68,590,4.22,591,3.173,601,2.788,602,2.683,611,3.694,614,3.68,689,3.694,691,3.759,692,1.512,693,1.512,694,1.512,695,1.512,696,1.512,697,1.512,698,1.512,699,1.512,700,1.512,701,1.512,702,1.512,703,1.512,704,1.512,937,1.512,948,1.628,951,1.773,953,1.966,955,3.117,956,1.628,957,1.966,959,1.966,1021,4.33,1022,2.261,1023,2.261,1024,2.261,1025,2.261,1026,2.261,1027,2.81,1028,2.261]],["title/classes/Track.html",[58,0.108,1029,2.682]],["body/classes/Track.html",[3,0.096,4,0.087,5,0.087,9,0.43,10,0.882,13,0.775,14,0.014,15,0.3,17,2.712,20,0.096,21,0.819,25,0.791,26,1.471,32,0.004,33,0.007,34,0.004,35,1.595,51,1.603,52,1.593,53,1.471,54,1.593,55,2.379,56,1.133,58,0.068,60,0.614,62,1.094,84,1.242,89,1.45,131,1.421,133,4.063,138,2.01,196,2.725,212,2.329,258,2.673,269,3.246,297,3.352,575,2.463,576,2.463,577,2.463,578,3.385,579,3.01,580,2.463,581,3.01,582,3.01,583,2.681,584,3.01,587,2.97,588,3.868,590,3.868,591,3.385,601,3.01,602,2.863,611,3.214,614,2.463,686,3.385,687,4.237,688,4.237,689,3.908,691,3.864,692,1.703,693,1.703,694,1.703,695,1.703,696,1.703,697,1.703,698,1.703,699,1.703,700,1.703,701,1.703,702,1.703,703,1.703,704,1.703,705,1.421,706,1.595,707,1.996,708,2.215,754,3.615,755,3.46,1029,2.631,1030,2.215,1031,2.546,1032,2.546,1033,2.546]],["title/classes/TrackDto.html",[58,0.108,751,2.511]],["body/classes/TrackDto.html",[3,0.16,4,0.143,5,0.143,9,0.377,10,1.272,13,0.78,14,0.014,15,0.445,20,0.16,25,1.14,32,0.007,33,0.01,34,0.007,52,2.295,53,2.12,54,2.295,55,2.495,56,1.385,58,0.172,60,1.017,84,1.19,138,2.059,146,1.357,159,2.029,179,4.282,212,2.046,630,4.606,633,4.081,635,3.037,638,4.609,639,2.488,655,2.234,686,2.642,691,3.391,705,2.354,706,2.642,710,3.669,712,3.307,713,3.307,714,3.307,715,4.93,716,3.307,717,3.669,751,3.55,754,4.282,755,4.609,1034,3.669,1035,4.217,1036,4.217,1037,4.217,1038,4.217]],["title/controllers/TracksController.html",[7,1.5,1039,2.886]],["body/controllers/TracksController.html",[3,0.137,4,0.123,5,0.123,7,1.355,9,0.324,13,0.766,14,0.014,15,0.473,20,0.137,21,1.165,25,0.728,32,0.006,33,0.009,34,0.006,38,2.607,39,2.422,40,2.422,41,2.703,42,2.607,51,0.873,58,0.097,62,1.419,65,2.299,84,0.604,86,1.255,87,0.812,89,0.972,93,2.703,138,1.044,146,1.165,164,3.784,172,4.619,187,2.422,188,0.812,205,1.594,211,2.136,212,1.083,213,1.209,254,1.466,279,2.422,291,3.674,297,2.573,317,2.839,318,2.839,321,4.001,323,2.422,325,2.607,328,5.03,332,2.839,333,2.607,361,1.665,366,2.839,368,3.674,370,2.136,372,2.839,373,2.839,644,3.674,645,3.149,647,3.149,648,3.149,649,3.149,651,3.674,652,3.413,653,2.839,654,2.268,655,1.918,656,2.136,657,2.607,658,2.607,665,2.839,669,2.607,672,3.149,673,3.149,674,3.149,678,3.149,748,5.301,751,3.196,754,3.413,942,3.149,1029,3.413,1039,3.674,1040,3.149,1041,3.62,1042,3.62,1043,3.62,1044,3.62,1045,3.149,1046,4.001,1047,3.149,1048,3.62,1049,3.62,1050,3.62,1051,3.62,1052,3.62,1053,3.62,1054,3.62]],["title/modules/TracksModule.html",[215,1.289,231,2.682]],["body/modules/TracksModule.html",[3,0.194,4,0.174,5,0.174,14,0.014,15,0.474,20,0.194,32,0.009,33,0.011,34,0.009,58,0.137,87,1.149,188,1.149,205,2.831,215,2.069,217,2.355,222,2.714,223,2.583,231,4.302,237,3.022,240,3.209,241,3.022,254,2.075,456,3.427,458,3.209,1029,3.427,1039,5.061,1045,4.456,1046,5.042,1047,4.456,1055,4.017,1056,5.122,1057,5.512,1058,4.456,1059,4.456]],["title/classes/User.html",[58,0.108,374,1.624]],["body/classes/User.html",[3,0.062,4,0.056,5,0.056,9,0.319,10,0.618,11,2.565,13,0.77,14,0.014,15,0.351,17,2.716,20,0.104,21,0.886,25,0.554,26,1.562,32,0.003,33,0.005,34,0.003,35,1.026,51,1.459,52,1.115,53,1.03,54,1.115,55,2.22,56,1.26,58,0.074,60,0.395,62,0.766,65,0.637,84,1.23,87,0.618,89,1.439,131,0.914,133,3.735,138,1.966,163,1.691,177,1.459,188,0.367,196,2.105,212,2.338,213,0.919,258,2.683,269,3.136,297,3.211,310,1.638,361,0.753,370,0.966,374,1.443,413,1.096,496,1.284,512,1.425,514,1.284,526,2.231,541,3.098,575,1.725,576,1.725,577,1.725,578,2.616,579,2.231,580,1.725,581,2.231,582,2.231,583,1.988,584,2.231,585,2.159,587,2.58,588,3.79,590,3.16,591,2.917,601,2.231,602,2.982,611,3.917,613,1.284,614,3.526,615,1.284,628,1.425,639,0.966,686,3.526,687,3.955,688,3.955,689,3.587,691,3.443,692,1.096,693,1.096,694,1.096,695,1.096,696,1.096,697,1.096,698,1.096,699,1.096,700,1.096,701,1.096,702,1.096,703,1.096,704,1.096,705,0.914,706,1.026,707,1.284,937,1.842,951,1.284,1005,1.284,1027,2.159,1060,1.284,1061,3.562,1062,3.098,1063,3.098,1064,3.562,1065,4.175,1066,4.175,1067,3.562,1068,2.753,1069,1.638,1070,1.638,1071,1.638,1072,1.638,1073,1.638,1074,1.638,1075,1.638,1076,1.638,1077,3.651,1078,3.098,1079,1.638,1080,1.638,1081,1.638,1082,1.638,1083,1.638,1084,2.753,1085,2.395,1086,1.638,1087,1.638,1088,1.638,1089,1.638,1090,1.638,1091,2.753,1092,1.638,1093,2.753,1094,3.562,1095,1.638,1096,2.395,1097,2.395,1098,2.395,1099,1.638,1100,2.753,1101,1.638,1102,1.638,1103,1.638,1104,4.175,1105,1.638,1106,1.638,1107,1.638,1108,1.638,1109,1.638,1110,1.638]],["title/classes/UserDto.html",[58,0.108,760,2.123]],["body/classes/UserDto.html",[3,0.141,4,0.126,5,0.126,9,0.332,10,1.166,13,0.793,14,0.014,15,0.441,17,1.445,20,0.141,25,1.045,32,0.006,33,0.009,34,0.006,52,2.104,53,1.943,54,2.104,55,2.287,56,1.408,58,0.161,60,0.895,84,1.211,138,2.094,146,1.195,159,1.787,163,2.426,179,4.567,212,1.94,526,3.752,587,1.787,630,4.431,633,3.741,635,2.675,638,4.916,639,2.191,655,1.968,686,2.327,691,3.173,705,2.073,706,2.327,712,2.913,713,2.913,714,2.913,716,2.913,760,2.752,1027,2.913,1062,5.211,1063,5.211,1077,5.087,1078,4.518,1111,3.231,1112,3.714,1113,3.714,1114,5.194,1115,3.714,1116,3.714,1117,3.714,1118,3.714,1119,3.714,1120,5.194,1121,3.714,1122,3.714,1123,5.99,1124,3.714]],["title/controllers/UsersController.html",[7,1.5,1125,2.886]],["body/controllers/UsersController.html",[3,0.176,4,0.158,5,0.158,7,1.736,14,0.014,15,0.491,20,0.176,25,0.934,32,0.008,33,0.01,34,0.008,38,3.342,39,3.105,40,3.105,41,3.198,42,3.342,58,0.125,146,1.493,188,1.041,205,2.043,212,1.388,279,3.105,323,3.105,325,3.342,338,2.59,339,3.959,374,2.445,651,4.348,652,4.039,653,3.639,654,2.907,655,2.459,656,2.738,657,3.342,658,3.342,665,3.639,669,3.342,756,4.348,760,3.555,945,4.037,1125,4.348,1126,4.037,1127,4.641,1128,4.641,1129,4.037,1130,4.037,1131,4.641,1132,4.641,1133,4.641,1134,4.641]],["title/modules/UsersModule.html",[215,1.289,232,2.365]],["body/modules/UsersModule.html",[3,0.177,4,0.159,5,0.159,14,0.014,15,0.46,20,0.177,32,0.008,33,0.01,34,0.008,58,0.125,87,1.36,188,1.048,205,2.669,215,2.165,217,2.148,218,2.356,219,2.607,220,2.607,221,2.356,222,3.212,223,3.394,232,4.356,233,3.384,234,2.475,235,2.356,237,2.756,240,2.926,241,2.756,339,4.606,374,1.892,456,4.056,458,3.798,1125,4.847,1129,4.063,1130,4.063,1135,4.063,1136,4.063,1137,4.671,1138,4.671,1139,6.063,1140,6.063]],["title/classes/ValidateTokenInput.html",[58,0.108,313,2.682]],["body/classes/ValidateTokenInput.html",[3,0.201,4,0.181,5,0.181,9,0.475,10,1.476,13,0.58,14,0.014,15,0.446,20,0.201,25,1.069,32,0.009,33,0.011,34,0.009,56,1.276,58,0.177,60,1.281,84,0.886,138,1.532,146,1.709,155,5.603,158,3.328,159,2.556,160,2.965,161,4.621,162,4.621,163,2.152,313,4.401,380,4.216,1141,5.722,1142,4.621,1143,5.312]],["title/coverage.html",[1144,4.763]],["body/coverage.html",[0,2.038,1,1.811,5,0.063,6,2.815,7,2.371,8,2.815,13,0.204,14,0.014,16,1.101,18,2.181,21,0.6,24,1.248,27,1.248,32,0.003,33,0.005,34,0.003,36,1.623,37,1.623,41,0.989,48,1.463,49,1.623,58,0.207,59,1.344,61,1.623,133,0.989,135,1.463,136,1.623,137,1.623,147,1.344,148,1.623,149,1.623,160,1.041,164,1.101,165,1.623,166,1.623,189,0.821,204,1.344,206,1.623,209,1.169,215,0.6,221,0.941,236,1.463,250,1.463,255,1.344,270,1.978,272,1.623,277,1.344,278,1.623,293,1.101,296,1.248,300,1.248,313,1.248,330,1.101,339,1.101,341,1.041,343,1.344,347,1.248,374,0.756,420,1.248,421,1.623,441,1.248,442,1.248,443,1.248,444,1.344,448,1.248,464,1.623,498,1.463,500,1.463,503,1.248,551,1.463,553,1.623,573,1.623,630,1.169,631,1.623,632,2.406,641,1.344,642,1.623,646,1.344,652,1.248,656,1.101,659,1.344,661,1.248,663,1.169,685,1.623,705,1.041,709,1.623,718,2.815,720,1.248,723,1.169,745,1.623,746,2.406,748,1.344,749,1.623,750,2.406,751,1.169,756,1.344,757,1.623,758,3.029,760,0.989,762,1.248,763,1.623,764,1.623,781,2.406,782,2.406,786,1.463,787,1.463,793,1.623,794,1.623,796,1.463,797,1.623,798,1.623,830,1.623,831,2.406,837,1.623,838,1.623,839,1.623,855,1.463,856,1.623,860,1.623,877,2.406,885,1.623,921,1.463,922,1.623,923,1.463,924,2.406,925,1.623,937,5.514,940,1.463,941,1.623,943,1.463,944,1.623,946,1.463,947,1.623,948,2.21,960,1.344,961,1.623,969,1.169,982,1.623,987,2.406,992,1.623,993,1.623,996,1.623,1005,4.22,1017,1.623,1021,1.463,1029,1.248,1030,1.623,1034,1.623,1039,1.344,1040,1.623,1046,1.463,1055,1.463,1057,1.463,1060,1.463,1111,1.623,1125,1.344,1126,1.623,1141,1.623,1142,1.623,1144,1.623,1145,1.463,1146,1.866,1147,1.866,1148,7.039,1149,6.954,1150,7.675,1151,1.866,1152,3.069,1153,1.623,1154,1.623,1155,5.382,1156,5.688,1157,3.069,1158,3.069,1159,1.866,1160,1.866,1161,4.528,1162,1.866,1163,1.866,1164,1.866,1165,1.866,1166,3.909,1167,4.528,1168,2.406,1169,1.623,1170,2.669,1171,1.623,1172,2.669,1173,1.623,1174,1.623,1175,1.623,1176,1.623,1177,1.623,1178,1.623,1179,1.623,1180,1.463,1181,1.623,1182,1.623,1183,1.623,1184,1.623,1185,1.623,1186,1.866,1187,1.866,1188,1.866,1189,1.866,1190,1.866,1191,2.669,1192,2.669,1193,1.623,1194,1.623,1195,1.623,1196,1.623,1197,1.623,1198,1.866,1199,1.866,1200,1.866,1201,1.866,1202,1.866,1203,1.866,1204,1.866,1205,1.866,1206,1.866]],["title/dependencies.html",[218,2.432,1207,3.345]],["body/dependencies.html",[14,0.014,32,0.007,33,0.009,34,0.007,57,2.679,58,0.147,131,2.235,146,1.288,159,1.927,188,0.899,218,2.02,239,3.484,241,2.363,430,3.141,447,2.363,462,2.679,463,4.76,495,3.141,496,3.141,497,3.484,508,3.484,509,3.484,565,4.197,639,2.363,773,3.141,785,3.484,847,4.888,868,3.141,897,4.76,899,3.484,926,3.484,1180,3.141,1208,4.005,1209,4.005,1210,4.005,1211,4.005,1212,4.005,1213,4.005,1214,4.005,1215,4.005,1216,6.699,1217,4.005,1218,4.005,1219,4.005,1220,4.005,1221,4.005,1222,4.005,1223,4.005,1224,4.005,1225,4.005,1226,4.005,1227,4.005,1228,4.005,1229,4.005,1230,4.005,1231,4.005,1232,4.005,1233,4.005,1234,4.005,1235,4.005,1236,4.005,1237,5.472,1238,4.005,1239,4.005,1240,4.005,1241,4.005,1242,4.005,1243,4.005,1244,4.005,1245,4.005,1246,4.005,1247,4.005,1248,4.005,1249,4.005,1250,4.005,1251,4.005,1252,4.005,1253,5.472,1254,4.005,1255,4.005,1256,4.005,1257,4.005,1258,4.005,1259,4.005,1260,4.005,1261,4.005,1262,4.005,1263,4.005,1264,4.005]],["title/miscellaneous/enumerations.html",[1265,1.867,1266,4.195]],["body/miscellaneous/enumerations.html",[9,0.47,14,0.014,32,0.009,33,0.011,34,0.009,57,4.371,163,2.646,310,3.004,334,4.371,431,5.123,587,3.805,948,4.705,1021,4.12,1060,4.12,1077,5.123,1096,5.683,1097,5.683,1098,5.683,1265,2.932,1266,4.57,1267,5.254,1268,6.533,1269,5.254,1270,6.533,1271,5.254,1272,5.254,1273,5.254,1274,5.254,1275,5.254,1276,5.254]],["title/miscellaneous/functions.html",[1265,1.867,1277,4.195]],["body/miscellaneous/functions.html",[9,0.433,14,0.014,32,0.008,33,0.01,34,0.008,40,3.241,41,3.288,51,1.8,86,2.588,87,1.675,89,2.004,221,3.454,632,4.868,652,4.153,924,3.799,956,5.201,1168,3.799,1169,4.215,1172,5.4,1173,5.4,1174,5.4,1175,5.4,1176,5.4,1177,4.215,1178,5.4,1265,2.704,1277,4.215,1278,4.845,1279,6.207,1280,4.845,1281,4.215,1282,4.845,1283,4.845,1284,4.845,1285,4.845,1286,4.845,1287,4.845]],["title/index.html",[9,0.299,1288,2.91,1289,2.91]],["body/index.html",[4,0.143,14,0.01,32,0.007,33,0.01,34,0.007,171,3.669,235,2.858,400,4.93,563,2.642,795,3.307,868,3.307,1019,3.669,1085,3.669,1145,3.307,1290,6.401,1291,5.667,1292,5.667,1293,4.217,1294,5.667,1295,7.352,1296,4.217,1297,4.217,1298,4.217,1299,4.217,1300,4.217,1301,5.667,1302,4.217,1303,5.667,1304,4.217,1305,4.217,1306,3.669,1307,4.217,1308,4.217,1309,4.217,1310,5.568,1311,4.217,1312,4.217,1313,4.217,1314,4.217,1315,4.217,1316,4.217,1317,4.217,1318,4.217,1319,4.217,1320,4.217,1321,4.217,1322,3.669,1323,4.217,1324,4.217,1325,4.217,1326,4.217,1327,4.217,1328,5.667,1329,4.217,1330,4.217,1331,5.667,1332,4.217,1333,4.217,1334,4.217,1335,4.217,1336,4.217,1337,4.217,1338,4.217,1339,4.217,1340,3.669,1341,4.217,1342,4.217,1343,3.669,1344,4.217,1345,4.217,1346,4.217,1347,4.217,1348,4.217,1349,4.217,1350,4.217,1351,4.217,1352,4.217,1353,4.217,1354,4.217,1355,4.217,1356,5.667,1357,4.217,1358,4.217,1359,4.217,1360,4.217,1361,4.217,1362,4.217,1363,4.217,1364,4.217,1365,4.217,1366,4.217,1367,4.217,1368,4.217,1369,4.217,1370,4.217,1371,4.217,1372,4.217,1373,4.217,1374,4.217,1375,4.217,1376,4.217,1377,4.217,1378,4.217]],["title/license.html",[1288,2.91,1289,2.91,1379,2.91]],["body/license.html",[14,0.01,31,3.278,32,0.008,33,0.01,34,0.008,235,2.296,565,2.852,825,5.186,1145,3.57,1306,6.831,1322,3.96,1340,3.96,1379,3.96,1380,4.553,1381,6.648,1382,4.553,1383,4.553,1384,4.553,1385,4.553,1386,4.553,1387,4.553,1388,4.553,1389,4.553,1390,5.962,1391,4.553,1392,4.553,1393,4.553,1394,6.648,1395,4.553,1396,5.962,1397,4.553,1398,4.553,1399,5.962,1400,4.553,1401,4.553,1402,4.553,1403,4.553,1404,4.553,1405,4.553,1406,4.553,1407,5.962,1408,4.553,1409,4.553,1410,4.553,1411,4.553,1412,4.553,1413,4.553,1414,5.962,1415,5.962,1416,4.553,1417,4.553,1418,4.553,1419,4.553,1420,4.553,1421,4.553,1422,4.553,1423,4.553,1424,4.553,1425,4.553,1426,4.553,1427,4.553,1428,4.553,1429,4.553,1430,4.553,1431,4.553,1432,4.553,1433,4.553,1434,4.553,1435,4.553,1436,4.553,1437,4.553,1438,4.553,1439,4.553,1440,4.553,1441,4.553,1442,4.553,1443,4.553,1444,4.553]],["title/modules.html",[217,2.518]],["body/modules.html",[14,0.011,32,0.009,33,0.011,34,0.009,216,3.883,217,2.48,227,3.607,228,3.607,229,3.607,230,3.607,231,3.607,232,3.181,247,3.607,780,4.228,913,5.775,1310,6.917,1445,7.952,1446,7.952,1447,8.095,1448,6.639]],["title/overview.html",[1449,4.763]],["body/overview.html",[2,1.733,14,0.014,32,0.006,33,0.009,34,0.006,35,2.257,60,0.868,205,1.586,209,3.691,215,1.159,216,5.719,217,1.656,218,1.816,219,2.01,220,2.01,221,1.816,222,1.908,223,1.816,224,3.133,225,3.133,226,3.133,227,5.4,228,4.515,229,4.686,230,4.816,231,3.941,232,4.132,233,2.837,234,1.908,235,1.816,247,4.282,271,1.656,330,4.337,339,3.776,341,4.018,413,2.41,420,3.941,437,3.133,439,3.133,440,3.133,441,3.941,442,3.941,443,3.941,444,4.243,551,2.825,659,4.243,679,3.133,680,3.133,762,3.941,880,3.133,881,3.133,969,3.691,977,3.133,979,3.133,1010,3.133,1011,3.133,1135,3.133,1136,3.133,1449,3.133,1450,3.133,1451,3.133,1452,3.602,1453,3.602]],["title/miscellaneous/typealiases.html",[1265,1.867,1454,4.822]],["body/miscellaneous/typealiases.html",[9,0.493,13,0.603,14,0.013,32,0.009,33,0.011,34,0.009,56,1.07,96,5.857,101,5.857,130,5.857,177,2.923,613,5.279,1265,3.079,1455,5.517,1456,6.733,1457,8.066,1458,6.733,1459,6.733,1460,6.733,1461,6.733,1462,5.517,1463,6.733]],["title/miscellaneous/variables.html",[1265,1.867,1464,4.195]],["body/miscellaneous/variables.html",[9,0.199,13,0.637,14,0.014,16,2.599,17,2.787,18,3.742,21,1.615,26,1.648,32,0.004,33,0.006,34,0.004,56,1.186,65,0.866,69,2.775,81,2.775,87,0.499,163,0.901,177,1.179,195,1.936,196,1.122,213,1.948,215,1.138,236,1.745,250,3.455,254,1.433,255,2.548,256,1.936,257,1.936,258,2.413,259,1.936,260,1.936,261,1.936,262,1.936,265,1.745,266,1.745,267,1.745,268,1.745,269,3.085,310,1.023,322,1.489,361,1.023,380,1.313,413,1.489,456,1.489,458,1.394,462,1.489,498,2.775,500,2.775,583,1.975,587,3.521,644,2.548,705,1.975,724,1.603,728,2.368,729,2.548,739,1.489,740,1.489,754,1.489,755,1.603,781,1.745,782,3.455,783,1.936,786,2.775,787,2.775,788,1.936,789,1.936,790,1.936,791,1.936,792,1.936,795,2.775,937,1.489,956,2.548,1055,1.745,1057,2.775,1058,1.936,1059,1.936,1153,1.936,1154,3.078,1168,1.745,1170,1.936,1171,3.078,1179,1.936,1180,2.775,1181,3.078,1182,3.078,1183,1.936,1184,3.078,1185,1.936,1191,1.936,1192,3.832,1193,4.367,1194,3.078,1195,1.936,1196,3.078,1197,1.936,1265,1.242,1281,1.936,1343,1.936,1450,1.936,1451,1.936,1464,1.936,1465,2.225,1466,4.406,1467,2.225,1468,2.225,1469,2.225,1470,3.539,1471,3.539,1472,2.225,1473,2.225,1474,2.225,1475,3.539,1476,2.225,1477,4.406,1478,4.406,1479,3.539,1480,3.539,1481,2.225,1482,2.225,1483,2.225,1484,2.225,1485,2.225,1486,2.225,1487,2.225,1488,5.02,1489,2.225,1490,6.349,1491,2.225,1492,2.225,1493,2.225,1494,2.225,1495,2.225,1496,2.225,1497,2.225,1498,2.225,1499,2.225,1500,2.225,1501,2.225,1502,2.225,1503,3.539,1504,2.225,1505,2.225,1506,2.225,1507,2.225,1508,2.225,1509,2.225,1510,2.225,1511,2.225,1512,2.225,1513,2.225,1514,5.479,1515,2.225,1516,2.225,1517,2.225,1518,2.225,1519,2.225,1520,2.225,1521,2.225,1522,5.479,1523,2.225,1524,2.225,1525,2.225,1526,2.225,1527,2.225,1528,2.225,1529,2.225,1530,2.225,1531,2.225,1532,2.225,1533,2.225,1534,2.225,1535,2.225,1536,2.225,1537,2.225,1538,2.225,1539,2.225,1540,2.225,1541,2.225,1542,2.225,1543,2.225,1544,2.225,1545,2.225]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":937,"title":{},"body":{"classes/PagedReqDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1256,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1232,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1231,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1222,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1250,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1186,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1189,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1148,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1156,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1155,"title":{},"body":{"coverage.html":{}}}],["0/44",{"_index":1161,"title":{},"body":{"coverage.html":{}}}],["0/46",{"_index":1163,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1166,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1167,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1201,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":35,"title":{"interfaces/AbstractControllerOptions-1.html":{}},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"overview.html":{}}}],["1.0.0",{"_index":1252,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":1243,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1240,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1239,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1234,"title":{},"body":{"dependencies.html":{}}}],["1.8.10",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":930,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["12",{"_index":1202,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1452,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1198,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1249,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1164,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":1382,"title":{},"body":{"license.html":{}}}],["21",{"_index":1187,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["3",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1253,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":1227,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1236,"title":{},"body":{"dependencies.html":{}}}],["3.23.0",{"_index":1245,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1230,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1264,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1188,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1165,"title":{},"body":{"coverage.html":{}}}],["3/16",{"_index":1199,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1158,"title":{},"body":{"coverage.html":{}}}],["3/24",{"_index":1203,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1453,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1251,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1261,"title":{},"body":{"dependencies.html":{}}}],["4.5.10",{"_index":1223,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1225,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1242,"title":{},"body":{"dependencies.html":{}}}],["5.9.18",{"_index":1247,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1451,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["6.4.8",{"_index":1248,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1259,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["60000",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["7.1.3",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1224,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.5.1",{"_index":1246,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1450,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":622,"title":{},"body":{"classes/BaseEntity.html":{}}}],["_${propertykey",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abortearly",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":1322,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":63,"title":{},"body":{"classes/AbstractService.html":{}}}],["abstractcontrollerfactory",{"_index":1178,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontrollerfactory(options",{"_index":1283,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrolleroptions",{"_index":1,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithauth",{"_index":1174,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontrollerwithauth(options",{"_index":1284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrollerwithauthoptions",{"_index":24,"title":{"interfaces/AbstractControllerWithAuthOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithswagger",{"_index":1176,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontrollerwithswagger(options",{"_index":1285,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrollerwithswaggeroptions",{"_index":27,"title":{"interfaces/AbstractControllerWithSwaggerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcrudcontroller",{"_index":652,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcrudcontroller(options",{"_index":1286,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractdocument",{"_index":1456,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["abstractmodel",{"_index":48,"title":{"interfaces/AbstractModel.html":{}},"body":{"interfaces/AbstractModel.html":{},"coverage.html":{}}}],["abstractservice",{"_index":59,"title":{"classes/AbstractService.html":{}},"body":{"classes/AbstractService.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["abstractvm",{"_index":135,"title":{"classes/AbstractVm.html":{}},"body":{"classes/AbstractVm.html":{},"coverage.html":{}}}],["access",{"_index":826,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["accessors",{"_index":585,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/CurrentUserService.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["account",{"_index":917,"title":{},"body":{"injectables/MailService.html":{}}}],["acctverifydto",{"_index":147,"title":{"classes/AcctVerifyDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["achieving",{"_index":1319,"title":{},"body":{"index.html":{}}}],["action",{"_index":1438,"title":{},"body":{"license.html":{}}}],["activate",{"_index":581,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["addons/in",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":1098,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1455,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["amazing",{"_index":1326,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1405,"title":{},"body":{"license.html":{}}}],["api_auth_enabled",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":905,"title":{},"body":{"injectables/MailService.html":{}}}],["api_key_mailgun",{"_index":790,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":651,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["apiconflictresponse",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception",{"_index":164,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TracksController.html":{},"coverage.html":{}}}],["apiexception})@apiresponse({status",{"_index":649,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["apiexception})@apiresponse({type",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(authenticationguard",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiokresponse",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":179,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({enum",{"_index":1117,"title":{},"body":{"classes/UserDto.html":{}}}],["apipropertyoptional",{"_index":143,"title":{},"body":{"classes/AbstractVm.html":{}}}],["apipropertyoptional({type",{"_index":139,"title":{},"body":{"classes/AbstractVm.html":{}}}],["apiresponse",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["apiswaggeroperation",{"_index":1182,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('categories",{"_index":668,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apitags('tracks",{"_index":1049,"title":{},"body":{"controllers/TracksController.html":{}}}],["apitags('users",{"_index":1131,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":210,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_email",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":204,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appemail",{"_index":719,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["applicable",{"_index":1348,"title":{},"body":{"index.html":{}}}],["application",{"_index":1331,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":216,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":209,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectural",{"_index":1336,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":801,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":1442,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1376,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1391,"title":{},"body":{"license.html":{}}}],["async",{"_index":65,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":18,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":449,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.controller.ts",{"_index":1173,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["auth.dto",{"_index":161,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["auth.guard",{"_index":658,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":831,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":857,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":832,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":657,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["auth/models/dto/auth.dto",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_guard_type",{"_index":1171,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":277,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1184,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":343,"title":{"guards/AuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["autherrors",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherrors.expired_token",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_login_attempt",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_token",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["autheventenum",{"_index":431,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["authguard",{"_index":833,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":834,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":858,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authhandler",{"_index":420,"title":{"injectables/AuthHandler.html":{}},"body":{"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":227,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobj",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1431,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":341,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authservice.validateuser(username",{"_index":876,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["available",{"_index":913,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["await",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"modules/DbTest.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["base.entity",{"_index":1026,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["baseentity",{"_index":133,"title":{"classes/BaseEntity.html":{}},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentity:12",{"_index":698,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:14",{"_index":693,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:16",{"_index":700,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:18",{"_index":697,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:20",{"_index":695,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:22",{"_index":694,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:24",{"_index":692,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:26",{"_index":699,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:44",{"_index":703,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:53",{"_index":704,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:62",{"_index":702,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:71",{"_index":701,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:9",{"_index":696,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseresdto",{"_index":630,"title":{"classes/BaseResDto.html":{}},"body":{"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["baseresdto:12",{"_index":714,"title":{},"body":{"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["baseresdto:15",{"_index":712,"title":{},"body":{"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["baseresdto:9",{"_index":713,"title":{},"body":{"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["baseservice",{"_index":1017,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{}}}],["bcrypt",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(plaintoken",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pw",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(plaintoken",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearerauthname",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/LocalAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1367,"title":{},"body":{"index.html":{}}}],["bring",{"_index":1324,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1447,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1445,"title":{},"body":{"modules.html":{}}}],["buildschema",{"_index":610,"title":{},"body":{"classes/BaseEntity.html":{}}}],["buildschema(this",{"_index":616,"title":{},"body":{"classes/BaseEntity.html":{}}}],["built",{"_index":1329,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1226,"title":{},"body":{"dependencies.html":{}}}],["business",{"_index":433,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["c",{"_index":31,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"license.html":{}}}],["cache",{"_index":1228,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":554,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["canactivate(context",{"_index":558,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["canlogin",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["career",{"_index":1314,"title":{},"body":{"index.html":{}}}],["catch",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/User.html":{}}}],["catch(error",{"_index":800,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":806,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories",{"_index":643,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categories.controller",{"_index":682,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":660,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":641,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":228,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["category",{"_index":661,"title":{"classes/Category.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{}}}],["category.dto",{"_index":666,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryResDto.html":{}}}],["category.dto.ts",{"_index":746,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["category.modelname",{"_index":683,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["category.schema",{"_index":684,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categorydto",{"_index":663,"title":{"classes/CategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["categoryservice",{"_index":659,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{},"overview.html":{}}}],["ccn",{"_index":276,"title":{},"body":{"injectables/AppService.html":{}}}],["charge",{"_index":1387,"title":{},"body":{"license.html":{}}}],["check",{"_index":1353,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1434,"title":{},"body":{"license.html":{}}}],["clan",{"_index":1291,"title":{},"body":{"index.html":{}}}],["class",{"_index":58,"title":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{}},"body":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":60,"title":{},"body":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"overview.html":{}}}],["classtype",{"_index":1458,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["click",{"_index":1338,"title":{},"body":{"index.html":{}}}],["client",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["client({transport",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["clientbaseurl",{"_index":150,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["clientredis",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":439,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":438,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":440,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":679,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":680,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":880,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":881,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":882,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_profilemodule",{"_index":977,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":978,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":979,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1010,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":1011,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1135,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1136,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1290,"title":{},"body":{"index.html":{}}}],["codeclannigeria",{"_index":1349,"title":{},"body":{"index.html":{}}}],["codeclannigeria.dev",{"_index":1315,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1313,"title":{},"body":{"index.html":{}}}],["columnsize",{"_index":705,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsize.length128",{"_index":1033,"title":{},"body":{"classes/Track.html":{}}}],["columnsize.length32",{"_index":708,"title":{},"body":{"classes/Category.html":{},"classes/Track.html":{}}}],["columnsize.length64",{"_index":1104,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":1334,"title":{},"body":{"index.html":{}}}],["community",{"_index":1295,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1335,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1233,"title":{},"body":{"dependencies.html":{}}}],["comprised",{"_index":1296,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1352,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1413,"title":{},"body":{"license.html":{}}}],["config",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":190,"title":{},"body":{"classes/ApiException.html":{}}}],["configmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":189,"title":{"interfaces/Configuration.html":{}},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["configuration().appemail",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{}}}],["configuration().environment",{"_index":194,"title":{},"body":{"classes/ApiException.html":{}}}],["configuration().isauthenabled",{"_index":568,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["configuration().jwtsecret",{"_index":854,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["confirmation",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmed",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail",{"_index":1065,"title":{},"body":{"classes/User.html":{}}}],["conflictexception",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["conflictexception('email",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('track",{"_index":1054,"title":{},"body":{"controllers/TracksController.html":{}}}],["conflictexception('user",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception(`${input.name",{"_index":677,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["connect",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["connection",{"_index":1443,"title":{},"body":{"license.html":{}}}],["console.log(context.switchtohttp().getrequest().sessionid",{"_index":835,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["const",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/SharedModule.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":175,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{}}}],["constructor(@optional",{"_index":775,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["constructor(authservice",{"_index":556,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(message",{"_index":176,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(moduleref",{"_index":861,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":211,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TracksController.html":{}}}],["constructor(protected",{"_index":1133,"title":{},"body":{"controllers/UsersController.html":{}}}],["constructor(req",{"_index":766,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["constructor(usersservice",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["context",{"_index":561,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":566,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["contextid",{"_index":871,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contextidfactory",{"_index":867,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contextidfactory.getbyrequest(request",{"_index":872,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contract",{"_index":1439,"title":{},"body":{"license.html":{}}}],["controller",{"_index":7,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('categories",{"_index":667,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('profile",{"_index":971,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('tracks",{"_index":1048,"title":{},"body":{"controllers/TracksController.html":{}}}],["controller('users",{"_index":1132,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllername",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.indexof('controller",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.substr",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":205,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1237,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":1407,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1390,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1381,"title":{},"body":{"license.html":{}}}],["count",{"_index":64,"title":{},"body":{"classes/AbstractService.html":{}}}],["count(filter",{"_index":83,"title":{},"body":{"classes/AbstractService.html":{}}}],["countasync",{"_index":66,"title":{},"body":{"classes/AbstractService.html":{}}}],["countasync(filter",{"_index":91,"title":{},"body":{"classes/AbstractService.html":{}}}],["coverage",{"_index":1144,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":644,"title":{},"body":{"controllers/CategoriesController.html":{},"interfaces/DefaultAuthObject.html":{},"controllers/TracksController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":674,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["create(input",{"_index":645,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["createcategorydto",{"_index":646,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["created",{"_index":1307,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":52,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["createdby",{"_index":575,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["createdto",{"_index":38,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["createtrackdto",{"_index":748,"title":{"classes/CreateTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"controllers/TracksController.html":{},"coverage.html":{}}}],["createtransport",{"_index":887,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":756,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["crypto",{"_index":1094,"title":{},"body":{"classes/User.html":{}}}],["ctx",{"_index":807,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":811,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":810,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":1360,"title":{},"body":{"index.html":{}}}],["currentuser",{"_index":765,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["currentuserservice",{"_index":762,"title":{"injectables/CurrentUserService.html":{}},"body":{"injectables/CurrentUserService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["customname",{"_index":957,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["damages",{"_index":1435,"title":{},"body":{"license.html":{}}}],["data",{"_index":427,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["database",{"_index":720,"title":{"interfaces/Database.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["database_host",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":55,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["date().gettime",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().toisostring",{"_index":200,"title":{},"body":{"classes/ApiException.html":{}}}],["date(date.now",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(new",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["db",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["dbfactory",{"_index":787,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbtest",{"_index":780,"title":{"modules/DbTest.html":{}},"body":{"modules/DbTest.html":{},"modules.html":{}}}],["deactivate",{"_index":582,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deal",{"_index":1393,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1444,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator(target",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":138,"title":{},"body":{"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{}}}],["default",{"_index":17,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthobj",{"_index":1193,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultauthobject",{"_index":16,"title":{"interfaces/DefaultAuthObject.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":461,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":84,"title":{},"body":{"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{}}}],["delete",{"_index":583,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/DefaultAuthObject.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedat",{"_index":576,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deletedby",{"_index":577,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deleteresulttype",{"_index":1459,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":218,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":755,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":998,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(user",{"_index":1000,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["desire",{"_index":1308,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1366,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1301,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1302,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1403,"title":{},"body":{"license.html":{}}}],["doc",{"_index":22,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{}}}],["document",{"_index":50,"title":{},"body":{"interfaces/AbstractModel.html":{}}}],["documentation",{"_index":1145,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentquery",{"_index":1463,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":130,"title":{},"body":{"classes/AbstractService.html":{},"miscellaneous/typealiases.html":{}}}],["domain",{"_index":730,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{}}}],["done",{"_index":1001,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":1008,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["dynamicmodule",{"_index":1015,"title":{},"body":{"modules/SharedModule.html":{}}}],["e",{"_index":1102,"title":{},"body":{"classes/User.html":{}}}],["email",{"_index":163,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"injectables/ProfileService.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email')@httpcode(httpstatus.ok",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["emailparamname",{"_index":151,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["enableimplicitconversion",{"_index":976,"title":{},"body":{"controllers/ProfileController.html":{}}}],["encryptedtoken",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1300,"title":{},"body":{"index.html":{}}}],["engineers",{"_index":1303,"title":{},"body":{"index.html":{}}}],["entity",{"_index":39,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"classes/AbstractService.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["entitydto",{"_index":40,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["enum",{"_index":1027,"title":{},"body":{"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["enumerations",{"_index":1266,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":721,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["envvalidation",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1002,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error",{"_index":167,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":1003,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error.getstatus",{"_index":812,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.name",{"_index":818,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response",{"_index":823,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.error",{"_index":817,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.errors",{"_index":819,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.message",{"_index":824,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.name",{"_index":816,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.stack",{"_index":814,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorname",{"_index":815,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":168,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["ethereal",{"_index":916,"title":{},"body":{"injectables/MailService.html":{}}}],["event",{"_index":1430,"title":{},"body":{"license.html":{}}}],["eventpattern",{"_index":429,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["eventpattern(autheventenum.userregistered",{"_index":425,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["exception",{"_index":828,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":798,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":802,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.model",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TracksController.html":{}}}],["exception.model.ts",{"_index":166,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["exception.model.ts:10",{"_index":182,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:12",{"_index":184,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:14",{"_index":180,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:16",{"_index":181,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:18",{"_index":186,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:20",{"_index":183,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:22",{"_index":178,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.model.ts:8",{"_index":185,"title":{},"body":{"classes/ApiException.html":{}}}],["exceptionfilter",{"_index":799,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":1093,"title":{},"body":{"classes/User.html":{}}}],["excludeextraneousvalues",{"_index":975,"title":{},"body":{"controllers/ProfileController.html":{}}}],["executioncontext",{"_index":559,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["exist",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["exist.id",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.token",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["expandvariables",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["expireafterseconds",{"_index":959,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expireat",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expired",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired_token",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinmins",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["exports",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":638,"title":{},"body":{"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@apiproperty",{"_index":633,"title":{},"body":{"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@apiproperty()@isemail()@maxlength(columnsize.length64",{"_index":1112,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@ismongoid()@apiproperty",{"_index":635,"title":{},"body":{"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length128)@apiproperty",{"_index":1035,"title":{},"body":{"classes/TrackDto.html":{}}}],["expose()@maxlength(columnsize.length32)@apiproperty()@isalphanumeric",{"_index":710,"title":{},"body":{"classes/CategoryDto.html":{},"classes/TrackDto.html":{}}}],["expose()@maxlength(columnsize.length64)@apiproperty",{"_index":1114,"title":{},"body":{"classes/UserDto.html":{}}}],["express",{"_index":565,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AcctVerifyDto.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["extractjwt",{"_index":845,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":851,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["failedsigninattempts",{"_index":1061,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false').default('true",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":1369,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1339,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["files",{"_index":1392,"title":{},"body":{"license.html":{}}}],["filter",{"_index":88,"title":{},"body":{"classes/AbstractService.html":{}}}],["find",{"_index":795,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":67,"title":{},"body":{"classes/AbstractService.html":{}}}],["findall(filter",{"_index":94,"title":{},"body":{"classes/AbstractService.html":{}}}],["findallasync",{"_index":68,"title":{},"body":{"classes/AbstractService.html":{}}}],["findallasync(filter",{"_index":97,"title":{},"body":{"classes/AbstractService.html":{}}}],["findbyid",{"_index":69,"title":{},"body":{"classes/AbstractService.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["findbyid(id",{"_index":99,"title":{},"body":{"classes/AbstractService.html":{}}}],["findbyidasync",{"_index":70,"title":{},"body":{"classes/AbstractService.html":{}}}],["findbyidasync(id",{"_index":102,"title":{},"body":{"classes/AbstractService.html":{}}}],["findone",{"_index":71,"title":{},"body":{"classes/AbstractService.html":{},"injectables/AuthService.html":{}}}],["findone(filter",{"_index":104,"title":{},"body":{"classes/AbstractService.html":{}}}],["findoneasync",{"_index":72,"title":{},"body":{"classes/AbstractService.html":{}}}],["findoneasync(filter",{"_index":106,"title":{},"body":{"classes/AbstractService.html":{}}}],["firstname",{"_index":1062,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["fitness",{"_index":1426,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1346,"title":{},"body":{"index.html":{}}}],["following",{"_index":1412,"title":{},"body":{"license.html":{}}}],["forbiddenexception('invalid",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":1350,"title":{},"body":{"index.html":{}}}],["format",{"_index":140,"title":{},"body":{"classes/AbstractVm.html":{}}}],["forroot",{"_index":1013,"title":{},"body":{"modules/SharedModule.html":{}}}],["fortune",{"_index":1383,"title":{},"body":{"license.html":{}}}],["free",{"_index":1340,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":1299,"title":{},"body":{"index.html":{}}}],["full",{"_index":1085,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fullname",{"_index":1067,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":1005,"title":{},"body":{"injectables/SessionSerializer.html":{},"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":1277,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1410,"title":{},"body":{"license.html":{}}}],["future",{"_index":1297,"title":{},"body":{"index.html":{}}}],["generaterandomtoken",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterandomtoken(64",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken(undefined",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth",{"_index":965,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getauthobj",{"_index":1194,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcurrentuser",{"_index":769,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["getfullname",{"_index":1082,"title":{},"body":{"classes/User.html":{}}}],["gethello",{"_index":207,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":1086,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass",{"_index":1090,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass(this",{"_index":1110,"title":{},"body":{"classes/User.html":{}}}],["getmodelname",{"_index":608,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getprofile",{"_index":963,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":972,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(req",{"_index":964,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofileasync",{"_index":983,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofileasync(email",{"_index":985,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getschema",{"_index":606,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getters",{"_index":618,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getting",{"_index":1288,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwelcome",{"_index":273,"title":{},"body":{"injectables/AppService.html":{}}}],["global",{"_index":1016,"title":{},"body":{"modules/SharedModule.html":{}}}],["goal",{"_index":1320,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1386,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1448,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":551,"title":{"guards/AuthenticationGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":552,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["guards/auth.guard",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{}}}],["handler",{"_index":436,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handlers/auth.handler",{"_index":450,"title":{},"body":{"modules/AuthModule.html":{}}}],["handleuserregistered",{"_index":422,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handleuserregistered(data",{"_index":423,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["hapi/joi",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["harddelete",{"_index":73,"title":{},"body":{"classes/AbstractService.html":{}}}],["harddelete(filter",{"_index":108,"title":{},"body":{"classes/AbstractService.html":{}}}],["harddeletebyid",{"_index":74,"title":{},"body":{"classes/AbstractService.html":{}}}],["harddeletebyid(id",{"_index":110,"title":{},"body":{"classes/AbstractService.html":{}}}],["hash",{"_index":1092,"title":{},"body":{"classes/User.html":{}}}],["hash(this.password",{"_index":1101,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1244,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1385,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1432,"title":{},"body":{"license.html":{}}}],["host",{"_index":727,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Mailer.html":{}}}],["host.switchtohttp",{"_index":808,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":803,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":796,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ethereal.email/message/waqkmgkddxqdoou",{"_index":920,"title":{},"body":{"injectables/MailService.html":{}}}],["httpstatus",{"_index":187,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TracksController.html":{}}}],["httpstatus.bad_request",{"_index":673,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["httpstatus.created",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["httpstatus.forbidden",{"_index":672,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["httpstatus.unauthorized",{"_index":821,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpstatus[statuscode",{"_index":203,"title":{},"body":{"classes/ApiException.html":{}}}],["id",{"_index":53,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":1146,"title":{},"body":{"coverage.html":{}}}],["idtype",{"_index":1460,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ignoreexpiration",{"_index":852,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{}}}],["implied",{"_index":1422,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["imports",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1416,"title":{},"body":{"license.html":{}}}],["including",{"_index":1396,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["info.messageid",{"_index":911,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":691,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["inject",{"_index":771,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["inject(request",{"_index":776,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["injectable",{"_index":270,"title":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["injectables",{"_index":271,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"overview.html":{}}}],["innovators",{"_index":1298,"title":{},"body":{"index.html":{}}}],["input",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["input.email",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.name",{"_index":676,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["input.password",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.title",{"_index":1053,"title":{},"body":{"controllers/TracksController.html":{}}}],["insert",{"_index":75,"title":{},"body":{"classes/AbstractService.html":{}}}],["insert(entity",{"_index":112,"title":{},"body":{"classes/AbstractService.html":{}}}],["insertasync",{"_index":76,"title":{},"body":{"classes/AbstractService.html":{}}}],["insertasync(entity",{"_index":114,"title":{},"body":{"classes/AbstractService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["interface.ts",{"_index":37,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":1088,"title":{},"body":{"classes/User.html":{}}}],["internalservererrorexception(e",{"_index":1103,"title":{},"body":{"classes/User.html":{}}}],["invalid_login_attempt",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_token",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isactive",{"_index":578,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isalphanumeric",{"_index":715,"title":{},"body":{"classes/CategoryDto.html":{},"classes/TrackDto.html":{}}}],["isauthenable",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isauthenabled",{"_index":722,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["isdeleted",{"_index":579,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isemail",{"_index":1120,"title":{},"body":{"classes/UserDto.html":{}}}],["isemailverified",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["isenum",{"_index":1121,"title":{},"body":{"classes/UserDto.html":{}}}],["isenum(userrole",{"_index":1124,"title":{},"body":{"classes/UserDto.html":{}}}],["isglobal",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isjson",{"_index":939,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["isjson()@isoptional",{"_index":933,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["ismongoid",{"_index":640,"title":{},"body":{"classes/BaseResDto.html":{}}}],["isnotempty",{"_index":155,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{}}}],["isoptional",{"_index":931,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["isoptional()@isjson",{"_index":935,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["issue",{"_index":1356,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1354,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":153,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["isvalid",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalAuthGuard.html":{}}}],["isvalidpassword",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":125,"title":{},"body":{"classes/AbstractService.html":{}}}],["joi.number().default(27017",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().default('redis://localhost:6379",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().required",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('true",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1374,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt",{"_index":462,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign(payload",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_secret",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_validity_hours",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":656,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":850,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtpayload",{"_index":503,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["jwtstrategy",{"_index":441,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidityhrs",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["key",{"_index":729,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1421,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":1063,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["legend",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length1024",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length128",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length16",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length256",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length32",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length512",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length64",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length8",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":1362,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1436,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1433,"title":{},"body":{"license.html":{}}}],["license",{"_index":1379,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":926,"title":{},"body":{"classes/PagedReqDto.html":{},"dependencies.html":{}}}],["limitation",{"_index":1397,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1423,"title":{},"body":{"license.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{}}}],["local",{"_index":868,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["localauthguard",{"_index":855,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":442,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lockoutenddate",{"_index":1064,"title":{},"body":{"classes/User.html":{}}}],["logger",{"_index":428,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{}}}],["logger.debug(`message",{"_index":909,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`preview",{"_index":918,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(data",{"_index":435,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["logger.error(error",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log(user",{"_index":1009,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["logic",{"_index":434,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["login",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(input",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginreqdto",{"_index":160,"title":{"classes/LoginReqDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["loginresdto",{"_index":347,"title":{"classes/LoginResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["loginresdto})@apiunauthorizedresponse({type",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":1068,"title":{},"body":{"classes/User.html":{}}}],["mail",{"_index":896,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.options",{"_index":892,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":884,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.service",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["mailer",{"_index":723,"title":{"interfaces/Mailer.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["mailer.domain",{"_index":907,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer.key",{"_index":906,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer_api_key",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain_mailgun",{"_index":791,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mailgun",{"_index":899,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["mailmodule",{"_index":229,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":894,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":330,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1364,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1229,"title":{},"body":{"dependencies.html":{}}}],["mapping.enum.ts",{"_index":1270,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matches",{"_index":1359,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":686,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128",{"_index":1038,"title":{},"body":{"classes/TrackDto.html":{}}}],["maxlength(columnsize.length32",{"_index":717,"title":{},"body":{"classes/CategoryDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length64",{"_index":1123,"title":{},"body":{"classes/UserDto.html":{}}}],["measures",{"_index":1317,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":628,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["members",{"_index":1328,"title":{},"body":{"index.html":{}}}],["memory",{"_index":785,"title":{},"body":{"modules/DbTest.html":{},"dependencies.html":{}}}],["mentee",{"_index":1096,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentor",{"_index":1097,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":1425,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1401,"title":{},"body":{"license.html":{}}}],["message",{"_index":169,"title":{},"body":{"classes/ApiException.html":{}}}],["metadata",{"_index":1255,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":62,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{}}}],["mg",{"_index":898,"title":{},"body":{"injectables/MailService.html":{}}}],["minlength",{"_index":990,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["minlength(6",{"_index":988,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["miscellaneous",{"_index":1265,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1380,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1330,"title":{},"body":{"index.html":{}}}],["model",{"_index":11,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/User.html":{}}}],["modelcreate",{"_index":30,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modelname",{"_index":586,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modeloptions",{"_index":955,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["models/api",{"_index":805,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["models/auth.enums",{"_index":432,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{}}}],["models/base.entity",{"_index":134,"title":{},"body":{"classes/AbstractService.html":{}}}],["models/category.entity",{"_index":662,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["models/dto/acct",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/auth.dto",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["models/dto/category.dto",{"_index":664,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["models/dto/create",{"_index":665,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["models/dto/reset",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/tack.dto",{"_index":1044,"title":{},"body":{"controllers/TracksController.html":{}}}],["models/dto/user.dto",{"_index":1128,"title":{},"body":{"controllers/UsersController.html":{}}}],["models/dto/validate",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/jwt",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["models/track.entity",{"_index":1045,"title":{},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{}}}],["models/user.entity",{"_index":1129,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["modelvm",{"_index":28,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modify",{"_index":1400,"title":{},"body":{"license.html":{}}}],["module",{"_index":215,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["moduleref",{"_index":862,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["modules",{"_index":217,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1235,"title":{},"body":{"dependencies.html":{}}}],["mongod",{"_index":786,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongod.geturi",{"_index":792,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":784,"title":{},"body":{"modules/DbTest.html":{}}}],["mongodb_uri",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongomemoryserver",{"_index":783,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":57,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["mongoosemodule",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":456,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forroot(configuration().database.uri",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":788,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1373,"title":{},"body":{"index.html":{}}}],["name",{"_index":87,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":1357,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["nestjs/bull",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":188,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":773,"title":{},"body":{"injectables/CurrentUserService.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":430,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":447,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":146,"title":{},"body":{"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["new",{"_index":21,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{}}}],["nigeria",{"_index":1292,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":897,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":904,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":919,"title":{},"body":{"injectables/MailService.html":{}}}],["noninfringement",{"_index":1429,"title":{},"body":{"license.html":{}}}],["note",{"_index":1347,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception('token",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception('user",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["notice",{"_index":1414,"title":{},"body":{"license.html":{}}}],["null",{"_index":196,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":177,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["obj.util.ts",{"_index":1192,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.interface",{"_index":19,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["object.interface.ts",{"_index":794,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["objectmapping",{"_index":1268,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["obtaining",{"_index":1389,"title":{},"body":{"license.html":{}}}],["ochi",{"_index":1384,"title":{},"body":{"license.html":{}}}],["official",{"_index":1293,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":759,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["omittype(userdto",{"_index":761,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["ongoing",{"_index":1309,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["operation.decorator.ts",{"_index":1181,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationid",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":51,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"injectables/CurrentUserService.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":956,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["opts",{"_index":927,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["otherwise",{"_index":1441,"title":{},"body":{"license.html":{}}}],["out",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1449,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1207,"title":{"dependencies.html":{}},"body":{}}],["pagedcategoryresdto",{"_index":921,"title":{"classes/PagedCategoryResDto.html":{}},"body":{"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["pagedreqdto",{"_index":923,"title":{"classes/PagedReqDto.html":{}},"body":{"classes/PagedReqDto.html":{},"coverage.html":{}}}],["pagedresdto",{"_index":41,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"controllers/CategoriesController.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pagedresdto(categorydto",{"_index":670,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/PagedCategoryResDto.html":{}}}],["pagedresdto(entitydto",{"_index":1287,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pagedresdto(trackdto",{"_index":942,"title":{},"body":{"classes/PagedTrackResDto.html":{},"controllers/TracksController.html":{}}}],["pagedresdto(userdto",{"_index":945,"title":{},"body":{"classes/PagedUserResDto.html":{},"controllers/UsersController.html":{}}}],["pagedtrackresdto",{"_index":940,"title":{"classes/PagedTrackResDto.html":{}},"body":{"classes/PagedTrackResDto.html":{},"coverage.html":{}}}],["pageduserresdto",{"_index":943,"title":{"classes/PagedUserResDto.html":{}},"body":{"classes/PagedUserResDto.html":{},"coverage.html":{}}}],["pane",{"_index":1355,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":86,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"controllers/TracksController.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1238,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1316,"title":{},"body":{"index.html":{}}}],["partial",{"_index":126,"title":{},"body":{"classes/AbstractService.html":{}}}],["particular",{"_index":1427,"title":{},"body":{"license.html":{}}}],["pass",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":847,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":446,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportserializer",{"_index":997,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":844,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":848,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":869,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password')@httpcode(httpstatus.ok",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["password_reset_tokens",{"_index":958,"title":{},"body":{"classes/PasswordToken.html":{}}}],["passwordhash",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordtoken",{"_index":946,"title":{"classes/PasswordToken.html":{}},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["path",{"_index":170,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["paths",{"_index":1263,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":838,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["permission",{"_index":825,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"license.html":{}}}],["permit",{"_index":1408,"title":{},"body":{"license.html":{}}}],["person",{"_index":1388,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1409,"title":{},"body":{"license.html":{}}}],["picktype",{"_index":158,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(categorydto",{"_index":747,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["picktype(loginreqdto",{"_index":162,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(registeruserdto",{"_index":878,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["picktype(trackdto",{"_index":753,"title":{},"body":{"classes/CreateTrackDto.html":{}}}],["plaintoclass",{"_index":967,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoclass(userdto",{"_index":974,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoken",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["please",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["populate('user",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":724,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1418,"title":{},"body":{"license.html":{}}}],["post",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["post('confirm",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiconflictresponse({type",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apiresponse({type",{"_index":647,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["pre",{"_index":1089,"title":{},"body":{"classes/User.html":{}}}],["pre('save",{"_index":1099,"title":{},"body":{"classes/User.html":{}}}],["prefix",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":912,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CurrentUserService.html":{},"injectables/MailService.html":{}}}],["process",{"_index":1371,"title":{},"body":{"index.html":{}}}],["process.env.api_auth_enabled",{"_index":737,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.app_email",{"_index":738,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_host",{"_index":741,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_name",{"_index":743,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_port",{"_index":742,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_secret",{"_index":733,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_validity_hours",{"_index":734,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_api_key",{"_index":739,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["process.env.mailer_domain",{"_index":740,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["process.env.mongodb_uri",{"_index":744,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.node_env",{"_index":732,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.port",{"_index":731,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.redis_server_url",{"_index":736,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.root_url",{"_index":735,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["production",{"_index":195,"title":{},"body":{"classes/ApiException.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":962,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":981,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.service",{"_index":970,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":960,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":230,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":969,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":93,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TracksController.html":{}}}],["prop",{"_index":611,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({default",{"_index":591,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({enum",{"_index":951,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({ref",{"_index":953,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["prop({required",{"_index":588,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{}}}],["propertydescriptor",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propose",{"_index":1323,"title":{},"body":{"index.html":{}}}],["provide",{"_index":1019,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["provided",{"_index":1419,"title":{},"body":{"license.html":{}}}],["provider",{"_index":874,"title":{},"body":{"injectables/LocalStrategy.html":{},"modules/SharedModule.html":{}}}],["providers",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pub",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["publish",{"_index":1402,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1365,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1428,"title":{},"body":{"license.html":{}}}],["put",{"_index":1341,"title":{},"body":{"index.html":{}}}],["pw",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["pw.dto",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["pw.dto.ts",{"_index":993,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["pw.dto.ts:7",{"_index":994,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["query",{"_index":90,"title":{},"body":{"classes/AbstractService.html":{}}}],["queryitem",{"_index":101,"title":{},"body":{"classes/AbstractService.html":{},"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":96,"title":{},"body":{"classes/AbstractService.html":{},"miscellaneous/typealiases.html":{}}}],["questions",{"_index":1377,"title":{},"body":{"index.html":{}}}],["randombytes(columnsize.length32",{"_index":1107,"title":{},"body":{"classes/User.html":{}}}],["randombytes(size).tostring('hex",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":1241,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":212,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"injectables/CurrentUserService.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["record",{"_index":424,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["redis",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["redis_server_url",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisurl",{"_index":725,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["ref",{"_index":590,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["reflect",{"_index":1254,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(input",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":293,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["registeruserresdto",{"_index":296,"title":{"classes/RegisterUserResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["repeat",{"_index":1370,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1351,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1332,"title":{},"body":{"index.html":{}}}],["req",{"_index":768,"title":{},"body":{"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{}}}],["req.dto.ts",{"_index":925,"title":{},"body":{"classes/PagedReqDto.html":{},"coverage.html":{}}}],["req.dto.ts:10",{"_index":936,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["req.dto.ts:13",{"_index":934,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["req.dto.ts:5",{"_index":938,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["req.dto.ts:7",{"_index":932,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["req.url",{"_index":820,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request",{"_index":563,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/CurrentUserService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"index.html":{}}}],["request.body",{"_index":569,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["request.user",{"_index":572,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["require('nodemailer/lib/mailer",{"_index":900,"title":{},"body":{"injectables/MailService.html":{}}}],["required",{"_index":614,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["res",{"_index":809,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.dto",{"_index":655,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{}}}],["res.dto.ts",{"_index":632,"title":{},"body":{"classes/BaseResDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["res.dto.ts:12",{"_index":637,"title":{},"body":{"classes/BaseResDto.html":{}}}],["res.dto.ts:15",{"_index":634,"title":{},"body":{"classes/BaseResDto.html":{}}}],["res.dto.ts:9",{"_index":636,"title":{},"body":{"classes/BaseResDto.html":{}}}],["res.status(statuscode).json(exception",{"_index":829,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassinput",{"_index":300,"title":{"classes/ResetPassInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"coverage.html":{}}}],["resetpassword",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(@body",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(input",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":827,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":804,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restore",{"_index":584,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["restriction",{"_index":1395,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":623,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret._id",{"_index":625,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret.id",{"_index":624,"title":{},"body":{"classes/BaseEntity.html":{}}}],["return",{"_index":213,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"modules/SharedModule.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["returnmodeltype",{"_index":1091,"title":{},"body":{"classes/User.html":{}}}],["returns",{"_index":89,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1398,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1257,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["root_url",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooturl",{"_index":726,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["rxjs",{"_index":1258,"title":{},"body":{"dependencies.html":{}}}],["saved",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved.isemailverified",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["schema",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"modules/CategoriesModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":772,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["scope.request",{"_index":774,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["scoped",{"_index":873,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["search",{"_index":928,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["secretorkey",{"_index":853,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sell",{"_index":1406,"title":{},"body":{"license.html":{}}}],["sendemailverifytoken",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(@body",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(input",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(@body",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(input",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["sending",{"_index":914,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync",{"_index":888,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync(mailoptions",{"_index":891,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":910,"title":{},"body":{"injectables/MailService.html":{}}}],["serializeuser",{"_index":999,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":1006,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"modules/DbTest.html":{}}}],["services",{"_index":1018,"title":{},"body":{"modules/SharedModule.html":{}}}],["session",{"_index":463,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["session.serializer",{"_index":451,"title":{},"body":{"modules/AuthModule.html":{}}}],["sessionserializer",{"_index":443,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["setrandompass",{"_index":1066,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":601,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shall",{"_index":1415,"title":{},"body":{"license.html":{}}}],["shared",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/base.controller",{"_index":653,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["shared/config/configuration",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{}}}],["shared/constants",{"_index":706,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["shared/errors",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/models/api",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["shared/models/base.entity",{"_index":707,"title":{},"body":{"classes/Category.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shared/models/dto/base",{"_index":716,"title":{},"body":{"classes/CategoryDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["shared/models/dto/paged",{"_index":654,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["shared/models/temporary",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{}}}],["shared/types",{"_index":1095,"title":{},"body":{"classes/User.html":{}}}],["shared/utils/random",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/validations/env.validation",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":247,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedmodule.forroot",{"_index":263,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skill",{"_index":1361,"title":{},"body":{"index.html":{}}}],["skills",{"_index":1342,"title":{},"body":{"index.html":{}}}],["skip",{"_index":929,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["slack",{"_index":1375,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":77,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdelete(filter",{"_index":116,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeleteasync",{"_index":78,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeleteasync(filter",{"_index":118,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyid",{"_index":79,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyid(id",{"_index":120,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyidasync",{"_index":80,"title":{},"body":{"classes/AbstractService.html":{}}}],["softdeletebyidasync(id",{"_index":122,"title":{},"body":{"classes/AbstractService.html":{}}}],["software",{"_index":1306,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1363,"title":{},"body":{"index.html":{}}}],["solved",{"_index":1358,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"index.html":{}}}],["src/.../abstract",{"_index":1279,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../abstract.controller.ts",{"_index":1278,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../abstract.type.ts",{"_index":1457,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.enums.ts",{"_index":1267,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.errors.ts",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticate.decorator.ts",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.controller.ts",{"_index":1280,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../constants.ts",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1281,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../object",{"_index":1269,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../paged",{"_index":1282,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../random",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temporary",{"_index":1271,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tracks.module.ts",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1272,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":208,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":272,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":274,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:110",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:135",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:51",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:61",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:72",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:97",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":445,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:111",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:128",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:53",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:71",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:75",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:95",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":553,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":557,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:17",{"_index":560,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:21",{"_index":564,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/jwt",{"_index":830,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":856,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/handlers/auth.handler.ts",{"_index":421,"title":{},"body":{"injectables/AuthHandler.html":{},"coverage.html":{}}}],["src/auth/handlers/auth.handler.ts:9",{"_index":426,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["src/auth/models/auth.enums.ts",{"_index":1273,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/models/dto/acct",{"_index":148,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts",{"_index":877,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts:11",{"_index":879,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/reset",{"_index":992,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["src/auth/models/dto/validate",{"_index":1141,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["src/auth/models/jwt",{"_index":837,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/models/pass",{"_index":947,"title":{},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts",{"_index":996,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:11",{"_index":1004,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:8",{"_index":1007,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":839,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":843,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":841,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":860,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:16",{"_index":866,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:8",{"_index":863,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/temp",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["src/categories/categories.controller.ts",{"_index":642,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts:43",{"_index":650,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":681,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.service.ts",{"_index":1162,"title":{},"body":{"coverage.html":{}}}],["src/categories/models/category.entity.ts",{"_index":685,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/categories/models/category.entity.ts:13",{"_index":690,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/dto/category.dto.ts",{"_index":709,"title":{},"body":{"classes/CategoryDto.html":{},"coverage.html":{}}}],["src/categories/models/dto/category.dto.ts:12",{"_index":711,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dto/create",{"_index":745,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/categories/models/dto/paged",{"_index":922,"title":{},"body":{"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["src/mail/mail.module.ts",{"_index":883,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":885,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:10",{"_index":895,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:11",{"_index":889,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:16",{"_index":890,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:28",{"_index":893,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":1168,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/profile/profile.controller.ts",{"_index":961,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:16",{"_index":966,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":980,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":982,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:7",{"_index":984,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:9",{"_index":986,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/shared/base.controller.ts",{"_index":1169,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/config/configuration.ts",{"_index":718,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["src/shared/constants.ts",{"_index":1170,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/controllers/abstract",{"_index":1172,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/controllers/abstract.controller.ts",{"_index":1177,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/decorators/api",{"_index":1179,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authenticate.decorator.ts",{"_index":1183,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/errors/auth.errors.ts",{"_index":1185,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/http",{"_index":797,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interfaces/abstract",{"_index":6,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/base",{"_index":36,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"coverage.html":{}}}],["src/shared/interfaces/default",{"_index":793,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["src/shared/interfaces/object",{"_index":1276,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/shared/models/abstract",{"_index":136,"title":{},"body":{"classes/AbstractVm.html":{},"coverage.html":{}}}],["src/shared/models/abstract.model.ts",{"_index":49,"title":{},"body":{"interfaces/AbstractModel.html":{},"coverage.html":{}}}],["src/shared/models/api",{"_index":165,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts",{"_index":573,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts:12",{"_index":597,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:14",{"_index":592,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:16",{"_index":599,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:18",{"_index":596,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:20",{"_index":594,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:22",{"_index":593,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:24",{"_index":589,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:26",{"_index":598,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:27",{"_index":607,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:41",{"_index":609,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:44",{"_index":604,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:53",{"_index":605,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:62",{"_index":603,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:71",{"_index":600,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:9",{"_index":595,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/dto/base",{"_index":631,"title":{},"body":{"classes/BaseResDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/paged",{"_index":924,"title":{},"body":{"classes/PagedReqDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/models/temporary",{"_index":1021,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/shared/services/abstract.service.ts",{"_index":61,"title":{},"body":{"classes/AbstractService.html":{},"coverage.html":{}}}],["src/shared/services/abstract.service.ts:11",{"_index":95,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:12",{"_index":98,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:14",{"_index":105,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:15",{"_index":107,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:17",{"_index":100,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:18",{"_index":103,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:20",{"_index":109,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:21",{"_index":119,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:23",{"_index":111,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:24",{"_index":123,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:26",{"_index":117,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:27",{"_index":121,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:29",{"_index":127,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:30",{"_index":129,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:35",{"_index":85,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:36",{"_index":92,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:8",{"_index":113,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:9",{"_index":115,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/base.service.ts",{"_index":1190,"title":{},"body":{"coverage.html":{}}}],["src/shared/services/current",{"_index":763,"title":{},"body":{"injectables/CurrentUserService.html":{},"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":1012,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/shared.module.ts:8",{"_index":1014,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/types/abstract.type.ts",{"_index":1462,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/shared/utils/get",{"_index":1191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/random",{"_index":1195,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/validations/env.validation.ts",{"_index":1197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/models/dto/create",{"_index":749,"title":{},"body":{"classes/CreateTrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/paged",{"_index":941,"title":{},"body":{"classes/PagedTrackResDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts",{"_index":1034,"title":{},"body":{"classes/TrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts:12",{"_index":1037,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/tack.dto.ts:16",{"_index":1036,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/track.entity.ts",{"_index":1030,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/tracks/models/track.entity.ts:14",{"_index":1032,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:22",{"_index":1031,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/tracks.controller.ts",{"_index":1040,"title":{},"body":{"controllers/TracksController.html":{},"coverage.html":{}}}],["src/tracks/tracks.controller.ts:44",{"_index":1042,"title":{},"body":{"controllers/TracksController.html":{}}}],["src/tracks/tracks.module.ts",{"_index":1055,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.service.ts",{"_index":1200,"title":{},"body":{"coverage.html":{}}}],["src/users/models/dto/create",{"_index":757,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/paged",{"_index":944,"title":{},"body":{"classes/PagedUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/register",{"_index":987,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts",{"_index":1111,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts:13",{"_index":1115,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:17",{"_index":1116,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:22",{"_index":1113,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:26",{"_index":1119,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/user.entity.ts",{"_index":1060,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/models/user.entity.ts:39",{"_index":1071,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:47",{"_index":1073,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:56",{"_index":1069,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:59",{"_index":1076,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:67",{"_index":1079,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:70",{"_index":1072,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:72",{"_index":1074,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:74",{"_index":1070,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:81",{"_index":1083,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:84",{"_index":1081,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:89",{"_index":1080,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:92",{"_index":1087,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1126,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":1137,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1204,"title":{},"body":{"coverage.html":{}}}],["stack",{"_index":171,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["stacktrace",{"_index":813,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stage",{"_index":1312,"title":{},"body":{"index.html":{}}}],["stand",{"_index":1333,"title":{},"body":{"index.html":{}}}],["started",{"_index":1289,"title":{"index.html":{},"license.html":{}},"body":{}}],["startup",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["stated",{"_index":1321,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1147,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":615,"title":{},"body":{"classes/BaseEntity.html":{},"modules/SharedModule.html":{},"classes/User.html":{}}}],["status",{"_index":172,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["statuscode",{"_index":173,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["strategies/jwt.strategy",{"_index":452,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":453,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":846,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":56,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1337,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1411,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1404,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1417,"title":{},"body":{"license.html":{}}}],["suggested",{"_index":1344,"title":{},"body":{"index.html":{}}}],["super",{"_index":849,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(categoryservice",{"_index":671,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["super(trackservice",{"_index":1051,"title":{},"body":{"controllers/TracksController.html":{}}}],["super(usersservice",{"_index":1134,"title":{},"body":{"controllers/UsersController.html":{}}}],["super.canactivate(context",{"_index":836,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["super.create(input",{"_index":678,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["super.login(request",{"_index":859,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["support",{"_index":1310,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1446,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1180,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger.controller.ts",{"_index":1175,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["symbol",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":23,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{}}}],["table",{"_index":1206,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1205,"title":{},"body":{"coverage.html":{}}}],["tack.dto",{"_index":752,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackResDto.html":{}}}],["talents",{"_index":1327,"title":{},"body":{"index.html":{}}}],["target",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor.name",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tcreatedto",{"_index":45,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["technical",{"_index":1304,"title":{},"body":{"index.html":{}}}],["temp",{"_index":454,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["temporarytoken",{"_index":448,"title":{"classes/TemporaryToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"coverage.html":{}}}],["temporarytoken.modelname",{"_index":457,"title":{},"body":{"modules/AuthModule.html":{}}}],["temporarytoken.schema",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{}}}],["temporarytoken:16",{"_index":950,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:19",{"_index":949,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:27",{"_index":952,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:30",{"_index":954,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temptokens",{"_index":1028,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["temptokensservice",{"_index":444,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["tentity",{"_index":43,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["tentitydto",{"_index":44,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["test",{"_index":1343,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":782,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/.../db",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/db",{"_index":781,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":688,"title":{},"body":{"classes/Category.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["thanks",{"_index":1378,"title":{},"body":{"index.html":{}}}],["this.appservice.getwelcome",{"_index":214,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetemptoken",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateemailtoken",{"_index":407,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatepasswordtoken",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":570,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.categoryservice.findoneasync",{"_index":675,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.client.connect",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.emit(autheventenum.userregistered",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config",{"_index":902,"title":{},"body":{"injectables/MailService.html":{}}}],["this.createtransport",{"_index":901,"title":{},"body":{"injectables/MailService.html":{}}}],["this.error",{"_index":192,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":197,"title":{},"body":{"classes/ApiException.html":{}}}],["this.firstname",{"_index":1105,"title":{},"body":{"classes/User.html":{}}}],["this.lastname",{"_index":1106,"title":{},"body":{"classes/User.html":{}}}],["this.mailservice.sendmailasync",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.message",{"_index":191,"title":{},"body":{"classes/ApiException.html":{}}}],["this.moduleref.resolve(authservice",{"_index":875,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.name",{"_index":626,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.path",{"_index":198,"title":{},"body":{"classes/ApiException.html":{}}}],["this.profileservice.getprofileasync(req.user['email",{"_index":973,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.req",{"_index":777,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["this.req.user",{"_index":778,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["this.req.user['id",{"_index":779,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["this.stack",{"_index":193,"title":{},"body":{"classes/ApiException.html":{}}}],["this.status",{"_index":202,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":201,"title":{},"body":{"classes/ApiException.html":{}}}],["this.timestamp",{"_index":199,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tokenservice",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.createentity",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.harddeletebyid(id",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.insertasync(token",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackservice.findoneasync",{"_index":1052,"title":{},"body":{"controllers/TracksController.html":{}}}],["this.transporter",{"_index":903,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":908,"title":{},"body":{"injectables/MailService.html":{}}}],["this.usersservice.createentity(input",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findoneasync",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["this.usersservice.insertasync(user",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.updateasync(doc.id",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validaterequest(request",{"_index":567,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validatetoken",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":915,"title":{},"body":{"injectables/MailService.html":{}}}],["throw",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"injectables/LocalStrategy.html":{},"controllers/TracksController.html":{},"classes/User.html":{}}}],["time",{"_index":141,"title":{},"body":{"classes/AbstractVm.html":{}}}],["timestamp",{"_index":174,"title":{},"body":{"classes/ApiException.html":{}}}],["timestamps",{"_index":574,"title":{},"body":{"classes/BaseEntity.html":{}}}],["title",{"_index":754,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":1325,"title":{},"body":{"index.html":{}}}],["tojson",{"_index":617,"title":{},"body":{"classes/BaseEntity.html":{}}}],["token",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["token')@httpcode(httpstatus.ok",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{}}}],["token.dto.ts",{"_index":1142,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["token.dto.ts:8",{"_index":1143,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.entity",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{}}}],["token.entity.ts",{"_index":948,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["token.entity.ts:16",{"_index":1023,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:19",{"_index":1022,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:27",{"_index":1024,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:30",{"_index":1025,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.service",{"_index":455,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.service.ts",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["token.ts",{"_index":1196,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenparamname",{"_index":152,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["tokenservice",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.email",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokentype.password",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tort",{"_index":1440,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1108,"title":{},"body":{"classes/User.html":{}}}],["towards",{"_index":1318,"title":{},"body":{"index.html":{}}}],["tpagedresdto",{"_index":47,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["track",{"_index":1029,"title":{"classes/Track.html":{}},"body":{"classes/Track.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["track.dto",{"_index":1043,"title":{},"body":{"controllers/TracksController.html":{}}}],["track.dto.ts",{"_index":750,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackResDto.html":{},"coverage.html":{}}}],["track.modelname",{"_index":1058,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["track.schema",{"_index":1059,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["trackdto",{"_index":751,"title":{"classes/TrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackResDto.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"coverage.html":{}}}],["trackmodelconfig",{"_index":1057,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tracks",{"_index":1041,"title":{},"body":{"controllers/TracksController.html":{}}}],["tracks.controller",{"_index":1056,"title":{},"body":{"modules/TracksModule.html":{}}}],["tracks.service",{"_index":1047,"title":{},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{}}}],["tracks/tracks.module",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["trackscontroller",{"_index":1039,"title":{"controllers/TracksController.html":{}},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["trackservice",{"_index":1050,"title":{},"body":{"controllers/TracksController.html":{}}}],["tracksmodule",{"_index":231,"title":{"modules/TracksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["tracksservice",{"_index":1046,"title":{},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["transform",{"_index":621,"title":{},"body":{"classes/BaseEntity.html":{}}}],["transformer",{"_index":639,"title":{},"body":{"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"controllers/ProfileController.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transport",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["transport.redis",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["transporter",{"_index":886,"title":{},"body":{"injectables/MailService.html":{}}}],["trim",{"_index":687,"title":{},"body":{"classes/Category.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["true",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["tsconfig",{"_index":1262,"title":{},"body":{"dependencies.html":{}}}],["tupdatedto",{"_index":46,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AbstractModel.html":{},"classes/AbstractService.html":{},"classes/AbstractVm.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1454,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose/typegoose",{"_index":131,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":612,"title":{},"body":{"classes/BaseEntity.html":{}}}],["typeof",{"_index":822,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["types",{"_index":132,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{}}}],["ui",{"_index":1260,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('password",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception('please",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{}}}],["undefined})@apiresponse({status",{"_index":648,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["undefined})@exclude",{"_index":1075,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":689,"title":{},"body":{"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["update",{"_index":81,"title":{},"body":{"classes/AbstractService.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":124,"title":{},"body":{"classes/AbstractService.html":{}}}],["updateasync",{"_index":82,"title":{},"body":{"classes/AbstractService.html":{}}}],["updateasync(id",{"_index":128,"title":{},"body":{"classes/AbstractService.html":{}}}],["updatedat",{"_index":54,"title":{},"body":{"interfaces/AbstractModel.html":{},"classes/AbstractVm.html":{},"classes/BaseEntity.html":{},"classes/BaseResDto.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["updatedby",{"_index":580,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["updatedto",{"_index":42,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["updateresulttype",{"_index":1461,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["uri",{"_index":728,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["url(clientbaseurl",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(emailparamname",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(tokenparamname",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1399,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":1020,"title":{},"body":{"modules/SharedModule.html":{}}}],["usecreateindex",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":789,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":268,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["useguards(authenticationguard",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":669,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["usenewurlparser",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":374,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/LocalStrategy.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user's",{"_index":1084,"title":{},"body":{"classes/User.html":{}}}],["user.dto",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedUserResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":758,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":989,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:17",{"_index":991,"title":{},"body":{"classes/RegisterUserResDto.html":{}}}],["user.email",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":1122,"title":{},"body":{"classes/UserDto.html":{}}}],["user.fullname",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.isactive",{"_index":571,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{}}}],["user.isemailverified",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.modelname",{"_index":1139,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1140,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.service.ts",{"_index":764,"title":{},"body":{"injectables/CurrentUserService.html":{},"coverage.html":{}}}],["user.service.ts:6",{"_index":767,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["user.service.ts:8",{"_index":770,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["user_registered",{"_index":1275,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userdto",{"_index":760,"title":{"classes/UserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserResDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userid",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{}}}],["username",{"_index":865,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernamefield",{"_index":870,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userregistered",{"_index":1274,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userrole",{"_index":1077,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.mentee",{"_index":1078,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["userrole})@isenum(userrole)@expose",{"_index":1118,"title":{},"body":{"classes/UserDto.html":{}}}],["users",{"_index":1127,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":1138,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1130,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/models/dto/register",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["users/models/dto/user.dto",{"_index":968,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users/models/user.entity",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{}}}],["users/users.module",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["users/users.service",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["userscontroller",{"_index":1125,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":232,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["valid('development",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":840,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/ResetPassInput.html":{}}}],["validate(payload",{"_index":842,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":864,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateemailtoken",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken(input",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken(resetpassinput",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":555,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validaterequest(request",{"_index":562,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validatetoken",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(userid",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetokeninput",{"_index":313,"title":{"classes/ValidateTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["validatetokeninput:8",{"_index":995,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validateuser",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":159,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/BaseResDto.html":{},"classes/CategoryDto.html":{},"classes/PagedReqDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["value",{"_index":587,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1464,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification.dto",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["verification.dto.ts",{"_index":149,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["verification.dto.ts:10",{"_index":157,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:12",{"_index":156,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:8",{"_index":154,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verified",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(@body",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(input",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["versionkey",{"_index":620,"title":{},"body":{"classes/BaseEntity.html":{}}}],["virtuals",{"_index":619,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vm",{"_index":29,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["vm.model.ts",{"_index":137,"title":{},"body":{"classes/AbstractVm.html":{},"coverage.html":{}}}],["vm.model.ts:10",{"_index":144,"title":{},"body":{"classes/AbstractVm.html":{}}}],["vm.model.ts:5",{"_index":142,"title":{},"body":{"classes/AbstractVm.html":{}}}],["vm.model.ts:8",{"_index":145,"title":{},"body":{"classes/AbstractVm.html":{}}}],["void",{"_index":602,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["wait",{"_index":1368,"title":{},"body":{"index.html":{}}}],["want",{"_index":1372,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1424,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1420,"title":{},"body":{"license.html":{}}}],["website",{"_index":1294,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":275,"title":{},"body":{"injectables/AppService.html":{}}}],["wherever",{"_index":1311,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1437,"title":{},"body":{"license.html":{}}}],["without",{"_index":1394,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1345,"title":{},"body":{"index.html":{}}}],["writable",{"_index":613,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["writable).isactive",{"_index":629,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isdeleted",{"_index":627,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isemailverified",{"_index":1109,"title":{},"body":{"classes/User.html":{}}}],["writable).password",{"_index":1100,"title":{},"body":{"classes/User.html":{}}}],["writers",{"_index":1305,"title":{},"body":{"index.html":{}}}],["x",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zoom",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControllerOptions.html":{"url":"interfaces/AbstractControllerOptions.html","title":"interface - AbstractControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerOptions-1.html":{"url":"interfaces/AbstractControllerOptions-1.html","title":"interface - AbstractControllerOptions-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createDto\n                                \n                                \n                                        entity\n                                \n                                \n                                        entityDto\n                                \n                                \n                                        pagedResDto\n                                \n                                \n                                        updateDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDto\n                                    \n                                \n                                \n                                    \n                                        createDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDto\n                                    \n                                \n                                \n                                    \n                                        entityDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagedResDto\n                                    \n                                \n                                \n                                    \n                                        pagedResDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDto\n                                    \n                                \n                                \n                                    \n                                        updateDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AbstractControllerOptions {\n  entity: { new (): TEntity };\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedResDto: { new (): TPagedResDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithAuthOptions.html":{"url":"interfaces/AbstractControllerWithAuthOptions.html","title":"interface - AbstractControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:         DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithSwaggerOptions.html":{"url":"interfaces/AbstractControllerWithSwaggerOptions.html","title":"interface - AbstractControllerWithSwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithSwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        modelCreate\n                                \n                                \n                                        modelVm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        modelCreate\n                                    \n                                \n                                \n                                    \n                                        modelCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelVm\n                                    \n                                \n                                \n                                    \n                                        modelVm:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractModel.html":{"url":"interfaces/AbstractModel.html","title":"interface - AbstractModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/abstract.model.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        createdAt\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose';\n\nexport interface AbstractModel extends Document {\n  createdAt?: Date;\n  updatedAt?: Date;\n  id?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractService.html":{"url":"classes/AbstractService.html","title":"class - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                count\n                            \n                            \n                                    Abstract\n                                    Async\n                                countAsync\n                            \n                            \n                                    Abstract\n                                findAll\n                            \n                            \n                                    Abstract\n                                    Async\n                                findAllAsync\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                    Async\n                                findByIdAsync\n                            \n                            \n                                    Abstract\n                                findOne\n                            \n                            \n                                    Abstract\n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Abstract\n                                hardDelete\n                            \n                            \n                                    Abstract\n                                hardDeleteById\n                            \n                            \n                                    Abstract\n                                insert\n                            \n                            \n                                    Abstract\n                                    Async\n                                insertAsync\n                            \n                            \n                                    Abstract\n                                softDelete\n                            \n                            \n                                    Abstract\n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                    Abstract\n                                softDeleteById\n                            \n                            \n                                    Abstract\n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Abstract\n                                update\n                            \n                            \n                                    Abstract\n                                    Async\n                                updateAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            count\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hardDelete(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insert(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDelete(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentType } from '@typegoose/typegoose';\nimport { Query } from 'mongoose';\n\nimport { QueryItem, QueryList } from '../types';\nimport { BaseEntity } from '../models/base.entity';\n\nexport abstract class AbstractService {\n  abstract insert(entity: T): Promise>;\n  abstract async insertAsync(entity: T): Promise>;\n\n  abstract findAll(filter: any): QueryList;\n  abstract async findAllAsync(filter: any): Promise>>;\n\n  abstract findOne(filter: any): QueryItem;\n  abstract async findOneAsync(filter: any): Promise>;\n\n  abstract findById(id: string): QueryItem;\n  abstract async findByIdAsync(id: string): Promise>;\n\n  abstract hardDelete(filter: any): QueryItem;\n  abstract async softDeleteAsync(filter: any): Promise;\n\n  abstract hardDeleteById(id: string): QueryItem;\n  abstract async softDeleteByIdAsync(id: string): Promise>;\n\n  abstract softDelete(filter: any): QueryItem;\n  abstract softDeleteById(id: string): QueryItem;\n\n  abstract update(id: string, item: Partial): QueryItem;\n  abstract async updateAsync(\n    id: string,\n    item: Partial\n  ): Promise>;\n\n  abstract count(filter: any): Query;\n  abstract async countAsync(filter: any): Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractVm.html":{"url":"classes/AbstractVm.html","title":"class - AbstractVm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractVm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/abstract-vm.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: String, format: 'date-time'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/abstract-vm.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/abstract-vm.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiPropertyOptional({type: String, format: 'date-time'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/abstract-vm.model.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class AbstractVm {\n  @ApiPropertyOptional({ type: String, format: 'date-time' })\n  createdAt?: Date;\n\n  @ApiPropertyOptional({ type: String, format: 'date-time' })\n  updatedAt?: Date;\n\n  @ApiPropertyOptional() id?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctVerifyDto.html":{"url":"classes/AcctVerifyDto.html","title":"class - AcctVerifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctVerifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/acct-verification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBaseUrl\n                            \n                            \n                                emailParamName\n                            \n                            \n                                tokenParamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty, IsUrl } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class AcctVerifyDto extends PickType(LoginReqDto, ['email']) {\n  @IsUrl()\n  clientBaseUrl: string;\n  @IsNotEmpty()\n  tokenParamName: string;\n  @IsNotEmpty()\n  emailParamName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/api-exception.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: any, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/shared/models/api-exception.model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/api-exception.model.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport configuration from '../config/configuration';\n\nexport class ApiException {\n  @ApiProperty()\n  statusCode?: number;\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  status?: string;\n  @ApiProperty()\n  error?: string;\n  @ApiProperty()\n  errors?: any;\n  @ApiProperty()\n  timestamp?: string;\n  @ApiProperty()\n  path?: string;\n  @ApiProperty()\n  stack?: string;\n\n  constructor(\n    message: string,\n    error: string,\n    stack: string,\n    errors: any,\n    path: string,\n    statusCode: number\n  ) {\n    this.message = message;\n    this.error = error;\n    this.stack = configuration().environment === 'production' ? null : stack;\n    this.errors = errors;\n    this.path = path;\n    this.timestamp = new Date().toISOString();\n    this.statusCode = statusCode;\n    this.status = HttpStatus[statusCode];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getWelcome();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { MailModule } from './mail/mail.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { SharedModule } from './shared';\nimport configuration from './shared/config/configuration';\nimport { envValidation } from './shared/validations/env.validation';\nimport { TracksModule } from './tracks/tracks.module';\nimport { UsersModule } from './users/users.module';\n\nexport const config = ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n});\n@Module({\n  imports: [\n    // SharedModule.forRoot(),\n    AuthModule,\n    UsersModule,\n    config,\n    MongooseModule.forRoot(configuration().database.uri, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false\n    }),\n    MailModule,\n    ProfileModule,\n    TracksModule,\n    CategoriesModule\n  ],\n\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWelcome\n                        \n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcome(): string {\n    return 'Welcome to CCN!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                sendEmailVerifyToken\n                            \n                            \n                                    Async\n                                sendForgotPwToken\n                            \n                            \n                                    Async\n                                verifyEmailToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(input: LoginReqDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginResDto})@ApiUnauthorizedResponse({type: ApiException})@UseGuards(AuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                LoginReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(input: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiConflictResponse({type: ApiException})@ApiResponse({type: RegisterUserResDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(input: ResetPassInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPassInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailVerifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerifyToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email-confirmation-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendForgotPwToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendForgotPwToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-password-reset-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmailToken(input: ValidateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ValidateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Post,\n  UnauthorizedException,\n  UseGuards\n} from '@nestjs/common';\nimport {\n  ApiConflictResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n  ApiOkResponse,\n  ApiResponse\n} from '@nestjs/swagger';\n\nimport { LoginReqDto } from '../auth/models/dto/auth.dto';\nimport { MailService } from '../mail/mail.service';\nimport configuration from '../shared/config/configuration';\nimport { ApiException } from '../shared/models/api-exception.model';\nimport { TokenType } from '../shared/models/temporary-token.entity';\nimport {\n  RegisterUserDto,\n  RegisterUserResDto\n} from '../users/models/dto/register-user.dto';\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { AuthenticationGuard } from './guards/auth.guard';\nimport { AcctVerifyDto } from './models/dto/acct-verification.dto';\nimport { LoginResDto } from './models/dto/auth.dto';\nimport { ResetPassInput } from './models/dto/reset-pw.dto';\nimport { ValidateTokenInput } from './models/dto/validate-token.dto';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly mailService: MailService\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: LoginResDto })\n  @ApiUnauthorizedResponse({ type: ApiException })\n  @UseGuards(AuthenticationGuard)\n  async login(@Body() input: LoginReqDto): Promise {\n    const accessToken = await this.authService.login(\n      input.email,\n      input.password\n    );\n    return { accessToken };\n  }\n  @Post('register')\n  @ApiConflictResponse({ type: ApiException })\n  @ApiResponse({ type: RegisterUserResDto, status: HttpStatus.CREATED })\n  async register(@Body() input: RegisterUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    const saved = await this.usersService.insertAsync(user);\n    return { canLogin: saved.isEmailVerified };\n  }\n\n  @Post('send-email-confirmation-token')\n  @HttpCode(HttpStatus.OK)\n  async sendEmailVerifyToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User with email does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email has already been confirmed');\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.EMAIL,\n      expiresInMins: 60 * 24\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please confirm your email here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n  @Post('confirm-email')\n  @HttpCode(HttpStatus.OK)\n  async verifyEmailToken(@Body() input: ValidateTokenInput): Promise {\n    const { email, token } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email already verified');\n    await this.authService.validateEmailToken({\n      userId: user.id,\n      plainToken: token\n    });\n  }\n  @Post('send-password-reset-token')\n  @HttpCode(HttpStatus.OK)\n  async sendForgotPwToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) return;\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.PASSWORD,\n      expiresInMins: 10\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please reset your password here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n\n  @Post('reset-password')\n  @HttpCode(HttpStatus.OK)\n  async resetPassword(@Body() input: ResetPassInput): Promise {\n    const { email, token, newPassword } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new UnauthorizedException('Password reset failed');\n    await this.authService.validatePasswordToken({\n      userId: exist.id,\n      plainToken: token,\n      newPassword\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthHandler.html":{"url":"injectables/AuthHandler.html","title":"injectable - AuthHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/handlers/auth.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleUserRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleUserRegistered\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleUserRegistered(data: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(AuthEventEnum.UserRegistered)\n                \n            \n\n            \n                \n                    Defined in src/auth/handlers/auth.handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { EventPattern } from '@nestjs/microservices';\n\nimport { AuthEventEnum } from '../models/auth.enums';\n\n@Injectable()\nexport class AuthHandler {\n  @EventPattern(AuthEventEnum.UserRegistered)\n  async handleUserRegistered(data: Record) {\n    // business logic\n    Logger.debug(data, 'handler');\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthHandler\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            TempTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { MailService } from '../mail/mail.service';\nimport { TemporaryToken } from '../shared/models/temporary-token.entity';\nimport { UsersModule } from '../users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { AuthHandler } from './handlers/auth.handler';\nimport { SessionSerializer } from './session.serializer';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { TempTokensService } from './temp-token.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n    ]),\n    PassportModule.register({ defaultStrategy: 'jwt', session: true }),\n    UsersModule\n  ],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    JwtStrategy,\n    SessionSerializer,\n    MailService,\n    AuthHandler,\n    TempTokensService\n  ],\n  controllers: [AuthController],\n  exports: [\n    AuthService,\n    MongooseModule.forFeature([\n      { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n    ]),\n    PassportModule.register({ defaultStrategy: 'jwt', session: true })\n  ]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTempToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                pub\n                            \n                            \n                                    Async\n                                validateEmailToken\n                            \n                            \n                                    Async\n                                validatePasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, tokenService: TempTokensService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TempTokensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateTempToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTempToken(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pub\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pub()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmailToken(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePasswordToken(resetPassInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPassInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(userId: string, type: TokenType, plainToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ClientRedis\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Client({transport: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  OnModuleInit,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { Client, ClientRedis, Transport } from '@nestjs/microservices';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport configuration from '~shared/config/configuration';\nimport { authErrors } from '~shared/errors';\nimport { TokenType } from '~shared/models/temporary-token.entity';\nimport { generateRandomToken } from '~shared/utils/random-token';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthEventEnum } from './models/auth.enums';\nimport { JwtPayload } from './models/jwt-payload';\nimport { TempTokensService } from './temp-token.service';\n\n@Injectable()\nexport class AuthService implements OnModuleInit {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly tokenService: TempTokensService\n  ) {}\n  @Client({ transport: Transport.REDIS })\n  private client: ClientRedis;\n\n  async onModuleInit() {\n    // Connect your client to the redis server on startup.\n    try {\n      // await this.client.connect();\n    } catch (error) {\n      //Logger.error(error);\n    }\n  }\n  async validateUser(email: string, pw: string): Promise {\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    if (!user.isEmailVerified)\n      throw new UnauthorizedException('Please confirm your email');\n    try {\n      const isValid = await bcrypt.compare(pw, user.password);\n      if (!isValid) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    } catch (error) {\n      Logger.error(error);\n      throw authErrors.INVALID_LOGIN_ATTEMPT;\n    }\n    return user;\n  }\n\n  async login(email: string, pass: string): Promise {\n    const user = await this.usersService.findOneAsync({ email });\n\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    const isValidPassword = await bcrypt.compare(pass, user.password);\n    if (!isValidPassword) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    const { jwtValidityHrs, jwtSecret } = configuration();\n    const expiresIn = 60 * 60 * jwtValidityHrs;\n    const payload: JwtPayload = {\n      email: user.email,\n      userId: user.id,\n      role: user.role\n    };\n    return jwt.sign(payload, jwtSecret, { expiresIn });\n  }\n\n  async pub(): Promise {\n    this.client.emit(AuthEventEnum.UserRegistered, 'email');\n  }\n\n  async generateTempToken({\n    user,\n    type,\n    expiresInMins\n  }: {\n    user: User;\n    type: TokenType;\n    expiresInMins: number;\n  }): Promise {\n    const plainToken = generateRandomToken(64);\n    const encryptedToken = await bcrypt.hash(plainToken, 10);\n    const token = this.tokenService.createEntity({\n      token: encryptedToken,\n      expireAt: new Date(new Date().getTime() + expiresInMins * 60000),\n      type,\n      user: user.id as any\n    });\n    await this.tokenService.insertAsync(token);\n    return plainToken;\n  }\n  async validateEmailToken(input: {\n    userId: string;\n    plainToken: string;\n  }): Promise {\n    const { userId, plainToken } = input;\n\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.EMAIL,\n      plainToken\n    );\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { isEmailVerified: true });\n    await this.tokenService.hardDeleteById(id);\n  }\n  async validatePasswordToken(resetPassInput: {\n    userId: string;\n    plainToken: string;\n    newPassword: string;\n  }): Promise {\n    const { userId, plainToken, newPassword } = resetPassInput;\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.PASSWORD,\n      plainToken\n    );\n    const passwordHash = await bcrypt.hash(newPassword, 10);\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { password: passwordHash });\n    await this.tokenService.hardDeleteById(id);\n  }\n  private async validateToken(\n    userId: string,\n    type: TokenType,\n    plainToken: string\n  ) {\n    const exist = await this.tokenService\n      .findOne({ user: userId, type })\n      .populate('user');\n\n    if (!exist) throw authErrors.EXPIRED_TOKEN;\n    try {\n      const isValid = await bcrypt.compare(plainToken, exist.token);\n      if (!isValid) throw authErrors.INVALID_TOKEN;\n    } catch (error) {\n      throw authErrors.INVALID_TOKEN;\n    }\n    return exist;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nimport configuration from '../../shared/config/configuration';\nimport { AuthService } from '../auth.service';\nimport { LoginReqDto } from '../models/dto/auth.dto';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n    return await this.validateRequest(request);\n  }\n  async validateRequest(request: Request): Promise {\n    if (!configuration().isAuthEnabled) return true;\n    const { email, password }: LoginReqDto = request.body;\n    const user = await this.authService.validateUser(email, password);\n    if (!user || !user.isActive) throw new UnauthorizedException();\n    request.user = user;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:71\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:62\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:53\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop, Ref } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { Schema } from 'mongoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { Writable } from '../types';\n\nexport class BaseEntity extends TimeStamps {\n  id: string;\n\n  @prop({ required: true, default: false })\n  readonly isDeleted!: boolean;\n  @prop({ default: null, ref: BaseEntity })\n  readonly createdBy?: Ref = null;\n  @prop({ default: null, ref: BaseEntity })\n  readonly updatedBy?: Ref = null;\n  @prop({ required: true, default: true })\n  readonly isActive: boolean = true;\n  @prop({ default: null, ref: BaseEntity })\n  readonly deletedBy?: Ref = null;\n  @prop({ default: null })\n  readonly deletedAt?: Date;\n  @prop({ required: true, default: new Date() })\n  readonly createdAt: Date = new Date();\n  @prop({ required: true, default: new Date() })\n  readonly updatedAt: Date = null;\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true,\n        versionKey: false,\n        transform: (_, ret) => {\n          ret.id = ret._id;\n          delete ret._id;\n        }\n      }\n    });\n  }\n  static get modelName(): string {\n    return this.name;\n  }\n  delete(): void {\n    (this as Writable).isDeleted = true;\n  }\n\n  /**\n   * Sets {isDeleted} to false\n   *\n   * @memberof BaseEntity\n   */\n  restore(): void {\n    (this as Writable).isDeleted = false;\n  }\n\n  /**\n   * Sets {isActive} to true\n   *\n   * @memberof BaseEntity\n   */\n  deactivate(): void {\n    (this as Writable).isActive = false;\n  }\n\n  /**\n   * Sets isActive to false\n   *\n   * @memberof BaseEntity\n   */\n  activate(): void {\n    (this as Writable).isActive = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseResDto.html":{"url":"classes/BaseResDto.html","title":"class - BaseResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/base-res.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base-res.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base-res.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base-res.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nexport class BaseResDto {\n  @Expose()\n  @IsMongoId()\n  @ApiProperty()\n  id: string;\n  @Expose()\n  @ApiProperty()\n  readonly updatedAt: Date;\n  @Expose()\n  @ApiProperty()\n  readonly createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: CreateCategoryDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AbstractCrudController } from '~shared/base.controller';\nimport { ApiException } from '~shared/models/api-exception.model';\nimport { PagedResDto } from '~shared/models/dto/paged-res.dto';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { CategoryService } from './categories.service';\nimport { Category } from './models/category.entity';\nimport { CategoryDto } from './models/dto/category.dto';\nimport { CreateCategoryDto } from './models/dto/create-category.dto';\n\n@Controller('categories')\n@ApiTags('categories')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\nexport class CategoriesController extends AbstractCrudController({\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CreateCategoryDto,\n  updateDto: CreateCategoryDto,\n  pagedResDto: PagedResDto(CategoryDto)\n}) {\n  constructor(private readonly categoryService: CategoryService) {\n    super(categoryService);\n  }\n  @Post()\n  @ApiResponse({ type: CreateCategoryDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateCategoryDto): Promise {\n    const exist = await this.categoryService.findOneAsync({ name: input.name });\n    if (exist) throw new ConflictException(`${input.name} already exists`);\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoryService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { Category } from './models/category.entity';\nimport { CategoriesController } from './categories.controller';\nimport { CategoryService } from './categories.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Category.modelName, schema: Category.schema },\n    ]),\n  ],\n  controllers: [CategoriesController],\n  providers: [CategoryService],\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/category.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/category.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\nimport { prop } from '@typegoose/typegoose';\n\nexport class Category extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: true\n  })\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dto/category.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseResDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dto/category.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:12\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { MaxLength, IsAlphanumeric } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseResDto } from '~shared/models/dto/base-res.dto';\n\nexport class CategoryDto extends BaseResDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appEmail\n                                \n                                \n                                        database\n                                \n                                \n                                        environment\n                                \n                                \n                                        isAuthEnabled\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        jwtValidityHrs\n                                \n                                \n                                        mailer\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUrl\n                                \n                                \n                                        rootUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appEmail\n                                    \n                                \n                                \n                                    \n                                        appEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         Database\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Database\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthEnabled\n                                    \n                                \n                                \n                                    \n                                        isAuthEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtValidityHrs\n                                    \n                                \n                                \n                                    \n                                        jwtValidityHrs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                    \n                                \n                                \n                                    \n                                        mailer:         Mailer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Mailer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUrl\n                                    \n                                \n                                \n                                    \n                                        redisUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CategoryDto } from './category.dto';\n\nexport class CreateCategoryDto extends PickType(CategoryDto, ['name']) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrackDto.html":{"url":"classes/CreateTrackDto.html","title":"class - CreateTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { TrackDto } from './tack.dto';\n\nexport class CreateTrackDto extends PickType(TrackDto, [\n  'title',\n  'description'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto extends OmitType(UserDto, [\n  'id',\n  'updatedAt',\n  'createdAt'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrentUserService.html":{"url":"injectables/CurrentUserService.html","title":"injectable - CurrentUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CurrentUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/current-user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUser\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(req: Request)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/current-user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n\n                \n                    \n                        getcurrentUser()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/current-user.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, Optional, Scope } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CurrentUserService {\n  constructor(@Optional() @Inject(REQUEST) private readonly req: Request) {}\n  get currentUser(): string | null {\n    return !this.req || !this.req.user ? null : this.req.user['id'];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Database.html":{"url":"interfaces/Database.html","title":"interface - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        name\n                                \n                                \n                                        port\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DbTest.html":{"url":"modules/DbTest.html","title":"module - DbTest","body":"\n                   \n\n\n\n\n    Modules\n    DbTest\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/db-test.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst mongod = new MongoMemoryServer();\n\nconst dbFactory = MongooseModule.forRootAsync({\n  useFactory: async () => {\n    process.env.MAILER_API_KEY = 'api_key_mailgun';\n    process.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\n    const uri = await mongod.getUri();\n\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n});\n\n@Module({\n  imports: [dbFactory],\n  exports: [dbFactory]\n})\nexport class DbTest {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultAuthObject.html":{"url":"interfaces/DefaultAuthObject.html","title":"interface - DefaultAuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultAuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        create\n                                \n                                \n                                            Optional\n                                        delete\n                                \n                                \n                                            Optional\n                                        find\n                                \n                                \n                                            Optional\n                                        findById\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultAuthObject {\n  find?: boolean;\n  findById?: boolean;\n  create?: boolean;\n  update?: boolean;\n  delete?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiException } from '../models/api-exception.model';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(error: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse() as Response;\n    const req = ctx.getRequest();\n    const statusCode = error.getStatus();\n    const stacktrace = error.stack;\n    const errorName = error.response.name || error.response.error || error.name;\n    const errors = error.response.errors || null;\n    const path = req ? req.url : null;\n\n    if (statusCode === HttpStatus.UNAUTHORIZED) {\n      if (typeof error.response !== 'string') {\n        error.response.message =\n          error.response.message ||\n          'You do not have permission to access this resource';\n      }\n    }\n\n    const exception = new ApiException(\n      error.response.message,\n      errorName,\n      stacktrace,\n      errors,\n      path,\n      statusCode\n    );\n    res.status(statusCode).json(exception);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport configuration from '../../shared/config/configuration';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // console.log(context.switchToHttp().getRequest().sessionID);\n    return configuration().isAuthEnabled ? super.canActivate(context) : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        role\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  email: string;\n  role: string;\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport configuration from '../../shared/config/configuration';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().jwtSecret,\n    });\n  }\n\n  async validate(payload: any): Promise {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/local-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {\n  async canActivate(context: ExecutionContext) {\n    const isValid = (await super.canActivate(context)) as boolean;\n    const request = context.switchToHttp().getRequest();\n    await super.logIn(request);\n    return isValid;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ContextIdFactory, ModuleRef } from '@nestjs/core';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private moduleRef: ModuleRef) {\n    super({\n      passReqToCallback: true,\n      usernameField: 'email',\n    });\n  }\n\n  async validate(request: Request, username: string, password: string) {\n    const contextId = ContextIdFactory.getByRequest(request);\n    // \"AuthService\" is a request-scoped provider\n    const authService = await this.moduleRef.resolve(AuthService, contextId);\n    const user = await authService.validateUser(username, password);\n    if (!user.isActive) throw new UnauthorizedException();\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReqDto.html":{"url":"classes/LoginReqDto.html","title":"class - LoginReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResDto.html":{"url":"classes/LoginResDto.html","title":"class - LoginResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTransport\n                            \n                            \n                                    Async\n                                sendMailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTransport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMailAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailAsync(mailOptions: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : configuration()\n                        \n                    \n                        \n                            \n                                    Defined in src/mail/mail.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Mail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/mail/mail.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as mg from 'nodemailer-mailgun-transport';\nimport Mail = require('nodemailer/lib/mailer');\nimport configuration from '~shared/config/configuration';\n\n@Injectable()\nexport class MailService {\n  private readonly config = configuration();\n  private transporter: Mail;\n  constructor() {\n    this.createTransport();\n  }\n\n  private createTransport() {\n    const { mailer } = this.config;\n    this.transporter = nodemailer.createTransport(\n      mg({\n        auth: {\n          api_key: mailer.key,\n          domain: mailer.domain\n        }\n      })\n    );\n  }\n\n  async sendMailAsync(mailOptions: Mail.Options) {\n    const info = await this.transporter.sendMail(mailOptions);\n    Logger.debug(`Message sent: ${info.messageId}`);\n\n    // Preview only available when sending through an Ethereal account\n    // Logger.debug(`Preview URL: ${nodemailer.getTestMessageUrl(info)}`);\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mailer.html":{"url":"interfaces/Mailer.html","title":"interface - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCategoryResDto.html":{"url":"classes/PagedCategoryResDto.html","title":"class - PagedCategoryResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCategoryResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dto/paged-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PagedResDto } from '~shared/models/dto/paged-res.dto';\nimport { CategoryDto } from './category.dto';\n\nexport class PagedCategoryResDto extends PagedResDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedReqDto.html":{"url":"classes/PagedReqDto.html","title":"class - PagedReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-req.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                opts\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-req.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            opts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsJSON()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-req.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsJSON()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-req.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-req.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsJSON, IsOptional } from 'class-validator';\n\nexport class PagedReqDto {\n  @IsOptional()\n  skip?: number = 0;\n  @IsOptional()\n  limit?: number = 100;\n  @IsOptional()\n  @IsJSON()\n  search?: string;\n  @IsJSON()\n  @IsOptional()\n  opts?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedTrackResDto.html":{"url":"classes/PagedTrackResDto.html","title":"class - PagedTrackResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedTrackResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/paged-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PagedResDto } from '~shared/models/dto/paged-res.dto';\n\nimport { TrackDto } from './tack.dto';\n\nexport class PagedTrackResDto extends PagedResDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedUserResDto.html":{"url":"classes/PagedUserResDto.html","title":"class - PagedUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/paged-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDto } from './user.dto';\nimport { PagedResDto } from '~shared/models/dto/paged-res.dto';\n\nexport class PagedUserResDto extends PagedResDto(UserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordToken.html":{"url":"classes/PasswordToken.html","title":"class - PasswordToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/pass-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TemporaryToken\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions } from '@typegoose/typegoose';\n\nimport { TemporaryToken } from '../../shared/models/temporary-token.entity';\n\n@modelOptions({ options: { customName: 'password_reset_tokens' } })\n@index({ createdAt: 1 }, { expireAfterSeconds: 1 })\nexport class PasswordToken extends TemporaryToken {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { UserDto } from '../users/models/dto/user.dto';\nimport { ProfileService } from './profile.service';\n\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  async getProfile(@Req() req: Request): Promise {\n    const user = await this.profileService.getProfileAsync(req.user['email']);\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { UsersModule } from '../users/users.module';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\n\n@Module({\n  imports: [UsersModule],\n  providers: [ProfileService],\n  controllers: [ProfileController],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfileAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfileAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileAsync(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly usersService: UsersService) {}\n  async getProfileAsync(email: string): Promise {\n    return this.usersService.findOneAsync({ email });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserResDto.html":{"url":"classes/RegisterUserResDto.html","title":"class - RegisterUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                canLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            canLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassInput.html":{"url":"classes/ResetPassInput.html","title":"class - ResetPassInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/reset-pw.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ValidateTokenInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/reset-pw.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nimport { ValidateTokenInput } from './validate-token.dto';\n\nexport class ResetPassInput extends ValidateTokenInput {\n  @IsNotEmpty()\n  newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n  deserializeUser(user: User, done: (err: Error, user: User) => void): any {\n    //Logger.log(user);\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nCurrentUserService\n\nCurrentUserService\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCurrentUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CurrentUserService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/shared.module.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     DynamicModule\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from '@nestjs/common';\n\nimport { AbstractService, BaseService, CurrentUserService } from './services';\n\n@Global()\n@Module({ providers: [CurrentUserService] })\nexport class SharedModule {\n  static forRoot(): DynamicModule {\n    const provider = { provide: AbstractService, useClass: BaseService };\n    return {\n      module: SharedModule,\n      providers: [provider],\n      exports: [provider],\n      global: true\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemporaryToken.html":{"url":"classes/TemporaryToken.html","title":"class - TemporaryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemporaryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/temporary-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/temporary-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions, prop, Ref } from '@typegoose/typegoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { BaseEntity } from './base.entity';\n\nexport enum TokenType {\n  PASSWORD = 'Password',\n  EMAIL = 'Email',\n}\n\n@index({ user: 1, type: 1 }, { unique: true })\n@modelOptions({ options: { customName: 'temptokens' } })\n@index({ expireAt: 1 }, { expireAfterSeconds: 0 })\nexport class TemporaryToken extends BaseEntity {\n  @prop({ required: true })\n  readonly token!: string;\n\n  @prop({ required: true, type: Date })\n  readonly expireAt!: Date;\n\n  @prop({\n    enum: TokenType,\n    type: String,\n    unique: false,\n    required: true,\n  })\n  readonly type?: TokenType;\n\n  @prop({ ref: User, unique: false, required: true })\n  readonly user?: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/track.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\nimport { index, prop } from '@typegoose/typegoose';\n\n@index({ title: 1 }, { unique: true })\nexport class Track extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackDto.html":{"url":"classes/TrackDto.html","title":"class - TrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/tack.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseResDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length128)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:12\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseResDto } from '~shared/models/dto/base-res.dto';\n\nexport class TrackDto extends BaseResDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TracksController.html":{"url":"controllers/TracksController.html","title":"controller - TracksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TracksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tracks\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTrackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: CreateTrackDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AbstractCrudController } from '~shared/base.controller';\nimport { ApiException } from '~shared/models/api-exception.model';\nimport { PagedResDto } from '~shared/models/dto/paged-res.dto';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { CreateTrackDto } from './models/dto/create-track.dto';\nimport { TrackDto } from './models/dto/tack.dto';\nimport { Track } from './models/track.entity';\nimport { TracksService } from './tracks.service';\n\n@Controller('tracks')\n@ApiTags('tracks')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\nexport class TracksController extends AbstractCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedResDto: PagedResDto(TrackDto)\n}) {\n  constructor(private readonly trackService: TracksService) {\n    super(trackService);\n  }\n\n  @Post()\n  @ApiResponse({ type: CreateTrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTrackDto): Promise {\n    const exist = await this.trackService.findOneAsync({ title: input.title });\n    if (exist)\n      throw new ConflictException('Track with the title already exists');\n\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TracksModule.html":{"url":"modules/TracksModule.html","title":"module - TracksModule","body":"\n                   \n\n\n\n\n    Modules\n    TracksModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tracks/tracks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            TracksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { Track } from './models/track.entity';\nimport { TracksController } from './tracks.controller';\nimport { TracksService } from './tracks.service';\n\nconst trackModelConfig = MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n]);\n@Module({\n  imports: [trackModelConfig],\n  controllers: [TracksController],\n  providers: [TracksService],\n  exports: [trackModelConfig]\n})\nexport class TracksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                failedSignInAttempts\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isEmailVerified\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lockOutEndDate\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                setRandomPass\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, lowercase: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            failedSignInAttempts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lockOutEndDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: UserRole, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRandomPass\n                        \n                        \n                    \n                \n            \n            \n                \nsetRandomPass()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:81\n                                \n                            \n                    \n                        \n                                Get User's full name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:92\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport {\n  index,\n  pre,\n  prop,\n  getModelForClass,\n  ReturnModelType\n} from '@typegoose/typegoose';\nimport { hash } from 'bcrypt';\nimport { Exclude } from 'class-transformer';\nimport * as crypto from 'crypto';\n\nimport { columnSize } from '../../shared/constants';\nimport { BaseEntity } from '../../shared/models/base.entity';\nimport { Writable } from '../../shared/types';\n\nexport enum UserRole {\n  MENTEE = 'MENTEE',\n  MENTOR = 'MENTOR',\n  ADMIN = 'ADMIN'\n}\n\n@pre('save', async function () {\n  try {\n    (this as Writable).password = await hash(this.password, 10);\n  } catch (e) {\n    throw new InternalServerErrorException(e);\n  }\n})\n@index({ email: 1 }, { unique: true })\nexport class User extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly firstName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly lastName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: false\n  })\n  readonly email!: string;\n  @prop({ required: true, maxlength: columnSize.length64 })\n  @Exclude()\n  readonly password!: string;\n\n  @prop({\n    enum: UserRole,\n    type: String,\n    required: true,\n    default: UserRole.MENTEE\n  })\n  readonly role: UserRole = UserRole.MENTEE;\n\n  @prop({ required: true, default: false })\n  readonly isEmailVerified: boolean;\n  @prop({ default: undefined })\n  readonly lockOutEndDate?: Date;\n  @prop({ required: true, default: 0 })\n  readonly failedSignInAttempts!: number;\n  /**\n   * Get User's full name\n   *\n   * @readonly\n   * @memberof User\n   */\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  setRandomPass(): void {\n    (this as Writable).password = crypto\n      .randomBytes(columnSize.length32)\n      .toString();\n  }\n  confirmEmail(): void {\n    (this as Writable).isEmailVerified = true;\n  }\n  static get model(): ReturnModelType {\n    return getModelForClass(this);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseResDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()@IsEmail()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: UserRole})@IsEnum(UserRole)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseResDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseResDto:12\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsEmail, IsEnum, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseResDto } from '~shared/models/dto/base-res.dto';\n\nimport { UserRole } from '../user.entity';\n\nexport class UserDto extends BaseResDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @ApiProperty()\n  firstName: string;\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @ApiProperty()\n  lastName: string;\n  @Expose()\n  @ApiProperty()\n  @IsEmail()\n  @MaxLength(columnSize.length64)\n  email: string;\n  @ApiProperty({ enum: UserRole })\n  @IsEnum(UserRole)\n  @Expose()\n  role: UserRole = UserRole.MENTEE;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { PagedResDto } from '~shared/models/dto/paged-res.dto';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { AbstractCrudController } from '../shared/base.controller';\nimport { CreateUserDto } from './models/dto/create-user.dto';\nimport { UserDto } from './models/dto/user.dto';\nimport { User } from './models/user.entity';\nimport { UsersService } from './users.service';\n\n@ApiTags('Users')\n@Controller('users')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\nexport class UsersController extends AbstractCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: UserDto,\n  pagedResDto: PagedResDto(UserDto)\n}) {\n  constructor(protected readonly usersService: UsersService) {\n    super(usersService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { User } from './models/user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.modelName, schema: User.schema }])\n  ],\n  providers: [UsersService],\n  controllers: [UsersController],\n  exports: [\n    UsersService,\n    MongooseModule.forFeature([{ name: User.modelName, schema: User.schema }])\n  ]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateTokenInput.html":{"url":"classes/ValidateTokenInput.html","title":"class - ValidateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/validate-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class ValidateTokenInput extends PickType(LoginReqDto, ['email']) {\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/handlers/auth.handler.ts\n            \n            injectable\n            AuthHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/acct-verification.dto.ts\n            \n            class\n            AcctVerifyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginReqDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/reset-pw.dto.ts\n            \n            class\n            ResetPassInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/validate-token.dto.ts\n            \n            class\n            ValidateTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/pass-token.entity.ts\n            \n            class\n            PasswordToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/temp-token.service.ts\n            \n            injectable\n            TempTokensService\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/46)\n            \n        \n        \n            \n                \n                src/categories/models/category.entity.ts\n            \n            class\n            Category\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/categories/models/dto/category.dto.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/categories/models/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/models/dto/paged-category.dto.ts\n            \n            class\n            PagedCategoryResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/base.controller.ts\n            \n            function\n            AbstractCrudController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Configuration\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Database\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Mailer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            AUTH_GUARD_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            columnSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract-with-auth.controller.ts\n            \n            function\n            abstractControllerWithAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract-with-swagger.controller.ts\n            \n            function\n            abstractControllerWithSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract.controller.ts\n            \n            function\n            abstractControllerFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/api-swagger-operation.decorator.ts\n            \n            variable\n            ApiSwaggerOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authenticate.decorator.ts\n            \n            variable\n            Authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/errors/auth.errors.ts\n            \n            variable\n            authErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithSwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            DefaultAuthObject\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/abstract-vm.model.ts\n            \n            class\n            AbstractVm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/abstract.model.ts\n            \n            interface\n            AbstractModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/api-exception.model.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/models/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/shared/models/dto/base-res.dto.ts\n            \n            class\n            BaseResDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-req.dto.ts\n            \n            class\n            PagedReqDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-res.dto.ts\n            \n            function\n            PagedResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/models/temporary-token.entity.ts\n            \n            class\n            TemporaryToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/shared/services/abstract.service.ts\n            \n            class\n            AbstractService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            injectable\n            BaseService\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                src/shared/services/current-user.service.ts\n            \n            injectable\n            CurrentUserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            defaultAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            getAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/random-token.ts\n            \n            variable\n            generateRandomToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/validations/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateTrackDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/paged-track.dto.ts\n            \n            class\n            PagedTrackResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/tack.dto.ts\n            \n            class\n            TrackDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tracks/models/track.entity.ts\n            \n            class\n            Track\n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            controller\n            TracksController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            trackModelConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.service.ts\n            \n            class\n            TracksService\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                src/users/models/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/paged-user.dto.ts\n            \n            class\n            PagedUserResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/models/user.entity.ts\n            \n            class\n            User\n            \n                12 %\n                (3/24)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            class\n            UsersService\n            \n                0 %\n                (0/44)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            dbFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            mongod\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs-addons/in-memory-db : ^1.8.10\n        \n            @nestjs/bull : ^0.1.1\n        \n            @nestjs/common : ^7.1.3\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.1.3\n        \n            @nestjs/microservices : ^7.1.3\n        \n            @nestjs/mongoose : ^7.0.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.1.3\n        \n            @nestjs/schedule : ^0.4.0\n        \n            @nestjs/swagger : ^4.5.10\n        \n            @typegoose/typegoose : ^7.2.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.14.0\n        \n            cache-manager : ^3.3.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            compression : ^1.7.4\n        \n            connect-mongo : ^3.2.0\n        \n            cookie-parser : ^1.4.5\n        \n            cookie-session : ^1.4.0\n        \n            express-rate-limit : ^5.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.9.18\n        \n            nodemailer : ^6.4.8\n        \n            nodemailer-mailgun-transport : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n        \n            tsconfig-paths : ^3.9.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthEventEnum   (src/.../auth.enums.ts)\n                        \n                        \n                            ObjectMapping   (src/.../object-mapping.enum.ts)\n                        \n                        \n                            TokenType   (src/.../temporary-token.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/models/auth.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthEventEnum\n                    \n                \n                        \n                            \n                                 UserRegistered\n                            \n                        \n                        \n                            \n                                Value : user_registered\n                            \n                        \n            \n        \n\n    src/shared/interfaces/object-mapping.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ObjectMapping\n                    \n                \n                        \n                            \n                                 Mongoose\n                            \n                        \n                        \n                            \n                                Value : mongoose\n                            \n                        \n            \n        \n\n    src/shared/models/temporary-token.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : Password\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : Email\n                            \n                        \n            \n        \n\n    src/users/models/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MENTEE\n                            \n                        \n                        \n                            \n                                Value : MENTEE\n                            \n                        \n                        \n                            \n                                 MENTOR\n                            \n                        \n                        \n                            \n                                Value : MENTOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            abstractControllerFactory   (src/.../abstract.controller.ts)\n                        \n                        \n                            abstractControllerWithAuth   (src/.../abstract-with-auth.controller.ts)\n                        \n                        \n                            abstractControllerWithSwagger   (src/.../abstract-with-swagger.controller.ts)\n                        \n                        \n                            AbstractCrudController   (src/.../base.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PagedResDto   (src/.../paged-res.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/controllers/abstract.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            abstractControllerFactory\n                        \n                        \n                    \n                \n            \n            \n                \nabstractControllerFactory(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/controllers/abstract-with-auth.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            abstractControllerWithAuth\n                        \n                        \n                    \n                \n            \n            \n                \nabstractControllerWithAuth(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/controllers/abstract-with-swagger.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            abstractControllerWithSwagger\n                        \n                        \n                    \n                \n            \n            \n                \nabstractControllerWithSwagger(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/base.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            AbstractCrudController\n                        \n                        \n                    \n                \n            \n            \n                \nAbstractCrudController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/shared/models/dto/paged-res.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PagedResDto\n                        \n                        \n                    \n                \n            \n            \n                \nPagedResDto(entityDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCode Clan Nigeria\n \nThe official website for code clan nigeria community\nWe are a community comprised of future innovators.\nFront-end developers, DevOps engineers, full stack developers, technical\nwriters, software engineers.\nThis community was created out of a desire to provide ongoing support\nto you wherever stage you are in your coding career.\nThis is codeclannigeria.dev\nAs part of the measures towards achieving out goal stated above, we propose to bring together the amazing talents of our community members to built a website and a mobile application that represents all that we\nstand for.\nHow You Come In\nTo get a complete documentation of the source code and the architectural structure of the application, click here.\nFeel free to put your skills to the test. Here is a suggested workflow for you to follow:\nNote: This is applicable to codeclannigeria community members only.\n\nFork this repository into your local computer\nCheck the issues pane for an issue that needs to be solved\nFind an issue that matches your current skill level and solve it\nMake your pull request to the develop branch\nWait for some feedback.\nRepeat the process\n\nWant more support? Join our slack\ncommunity and ask questions.\nThanks for your support\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Fortune Ochi\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DbTest\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TracksModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoriesModule -->\n\nCategoryService->CategoriesModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nCurrentUserService\n\nCurrentUserService\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCurrentUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    30 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractDocument   (src/.../abstract.type.ts)\n                        \n                        \n                            ClassType   (src/.../abstract.type.ts)\n                        \n                        \n                            DeleteResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            IdType   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryItem   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryList   (src/.../abstract.type.ts)\n                        \n                        \n                            UpdateResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            Writable   (src/.../abstract.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/types/abstract.type.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IdType\n                \n            \n            \n                \n                        string | number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Writable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSwaggerOperation   (src/.../api-swagger-operation.decorator.ts)\n                        \n                        \n                            AUTH_GUARD_TYPE   (src/.../constants.ts)\n                        \n                        \n                            Authenticate   (src/.../authenticate.decorator.ts)\n                        \n                        \n                            authErrors   (src/.../auth.errors.ts)\n                        \n                        \n                            columnSize   (src/.../constants.ts)\n                        \n                        \n                            config   (src/.../app.module.ts)\n                        \n                        \n                            dbFactory   (test/.../db-test.module.ts)\n                        \n                        \n                            defaultAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            generateRandomToken   (src/.../random-token.ts)\n                        \n                        \n                            getAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            mongod   (test/.../db-test.module.ts)\n                        \n                        \n                            trackModelConfig   (src/.../tracks.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/api-swagger-operation.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiSwaggerOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: {\n  title: string;\n  description?: string;\n  operationId?: string;\n  deprecated?: boolean;\n}): MethodDecorator => {\n  return (target, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const controllerName = target.constructor.name;\n    ApiOperation({\n      ...options,\n      operationId: `${controllerName.substr(\n        0,\n        controllerName.indexOf('Controller'),\n      )}_${propertyKey}`,\n    })(target, propertyKey, descriptor);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  length8: 2 ** 3,\n  length16: 2 ** 4,\n  length32: 2 ** 5,\n  length64: 2 ** 6,\n  length128: 2 ** 7,\n  length256: 2 ** 8,\n  length512: 2 ** 9,\n  length1024: 2 ** 10\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authenticate.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthEnable: boolean,\n  decorator: MethodDecorator,\n): MethodDecorator => {\n  return (target: object, key: string | symbol, value: any): any => {\n    if (isAuthEnable) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/errors/auth.errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  INVALID_LOGIN_ATTEMPT: new UnauthorizedException(\n    'Email or Password is incorrect'\n  ),\n  INVALID_TOKEN: new ForbiddenException('Invalid token'),\n  EXPIRED_TOKEN: new NotFoundException('Token expired')\n}\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    test/db-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRootAsync({\n  useFactory: async () => {\n    process.env.MAILER_API_KEY = 'api_key_mailgun';\n    process.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\n    const uri = await mongod.getUri();\n\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mongod\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoMemoryServer()\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/get-auth-obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DefaultAuthObject\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  find: true,\n  findById: true,\n  create: true,\n  update: true,\n  delete: true,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  authObj: DefaultAuthObject | boolean,\n): DefaultAuthObject => {\n  let auth = null;\n\n  if (!!authObj) {\n    return auth;\n  }\n\n  if (authObj === true) {\n    auth = defaultAuthObj;\n  } else if (authObj === false) {\n    auth = {\n      find: false,\n      findById: false,\n      create: false,\n      update: false,\n      delete: false,\n    };\n  } else {\n    auth = {\n      ...defaultAuthObj,\n      ...authObj,\n    };\n  }\n\n  return auth;\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/validations/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): any => {\n  return Joi.object({\n    NODE_ENV: Joi.string()\n      .valid('development', 'production', 'test')\n      .default('development'),\n    PORT: Joi.number().default(3000),\n    JWT_SECRET: Joi.string().required(),\n    JWT_VALIDITY_HOURS: Joi.number().required(),\n    ROOT_URL: Joi.string().uri().required(),\n    REDIS_SERVER_URL: Joi.string().uri().default('redis://localhost:6379'),\n    DATABASE_PORT: Joi.number().default(27017),\n    DATABASE_HOST: Joi.string().default('localhost'),\n    DATABASE_NAME: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n    MAILER_API_KEY: Joi.string().required(),\n    MAILER_DOMAIN: Joi.string().required(),\n    API_AUTH_ENABLED: Joi.string().valid('true', 'false').default('true'),\n    APP_EMAIL: Joi.string().email().required()\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/random-token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandomToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n  randomBytes(size).toString('hex')\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bearerAuthName: 'x-auth'\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            trackModelConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
