var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControllerOptions.html",[0,1.088,1,2.86]],["body/interfaces/AbstractControllerOptions.html",[0,1.908,1,5.015,2,2.215,3,0.156,4,0.14,5,0.14,6,3.889,7,2.473,8,3.889,9,0.519,10,1.374,11,5.642,12,4.579,13,0.776,14,0.012,15,0.221,16,3.244,17,1.874,18,2.522,19,3.415,20,0.216,21,2.086,22,3.231,23,3.231,24,4.579,25,1.041,26,1.654,27,3.631,28,4.213,29,4.213,30,4.213,31,3.889,32,0.007,33,0.009,34,0.007]],["title/interfaces/AbstractControllerWithAuthOptions.html",[0,1.088,24,2.86]],["body/interfaces/AbstractControllerWithAuthOptions.html",[0,1.897,1,4.986,2,2.186,3,0.154,4,0.139,5,0.139,6,3.84,7,2.442,8,3.84,9,0.512,10,1.363,11,3.84,13,0.555,14,0.012,15,0.218,16,3.714,17,1.85,18,2.979,19,3.372,20,0.214,21,2.074,22,3.19,23,3.19,24,4.986,25,1.133,26,2.271,27,3.584,28,4.159,29,4.159,30,4.159,31,3.84,32,0.007,33,0.009,34,0.007]],["title/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.088,27,2.86]],["body/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.878,1,4.479,2,2.139,3,0.151,4,0.136,5,0.136,6,3.756,7,2.389,8,3.756,9,0.501,10,1.344,11,3.756,12,5.2,13,0.85,14,0.012,15,0.213,16,3.173,17,1.809,18,2.466,19,3.298,20,0.212,21,2.053,22,3.12,23,3.12,24,4.935,25,1.122,26,1.597,27,4.479,28,6.034,29,4.069,30,6.034,31,3.756,32,0.007,33,0.009,34,0.007]],["title/classes/AcctVerifyDto.html",[35,0.17,36,3.064]],["body/classes/AcctVerifyDto.html",[3,0.152,4,0.137,5,0.137,9,0.504,10,1.35,13,0.766,14,0.011,15,0.301,20,0.152,25,0.802,32,0.007,33,0.009,34,0.007,35,0.267,36,4.817,37,0.91,38,6.67,39,4.516,40,6.335,41,6.335,42,6.335,43,1.603,44,1.883,45,5.743,46,1.357,47,5.155,48,6.247,49,5.155,50,5.155,51,3.14,52,1.383,53,1.88,54,2.983,55,4.516,56,4.516,57,2.152]],["title/classes/ApiException.html",[35,0.17,58,2.111]],["body/classes/ApiException.html",[3,0.104,4,0.093,5,0.093,9,0.345,10,1.042,13,0.816,14,0.011,15,0.248,20,0.104,21,1.003,32,0.005,33,0.007,34,0.005,35,0.143,37,0.622,43,1.694,44,1.971,46,1.447,52,0.945,58,2.562,59,6.855,60,3.086,61,2.159,62,5.422,63,6.478,64,5.262,65,6.478,66,6.478,67,3.279,68,6.478,69,5.944,70,2.365,71,3.523,72,2.982,73,5.072,74,1.328,75,0.815,76,4.573,77,3.523,78,3.523,79,3.523,80,3.523,81,3.523,82,3.523,83,3.523,84,1.857,85,0.839,86,1.581,87,3.523,88,3.523,89,3.523,90,3.523,91,3.523,92,3.523,93,3.523,94,3.523,95,3.523,96,3.523,97,3.523]],["title/controllers/AppController.html",[7,1.949,98,3.064]],["body/controllers/AppController.html",[3,0.168,4,0.151,5,0.151,7,3.265,9,0.559,14,0.011,15,0.292,20,0.168,32,0.008,33,0.009,34,0.008,35,0.232,43,1.396,44,1.487,46,1.071,85,1.361,98,5.134,99,2.662,100,5.001,101,2.055,102,7.899,103,5.71,104,1.626,105,4.877,106,5.001,107,4.186,108,1.675,109,2.083,110,5.71]],["title/modules/AppModule.html",[111,1.226,112,3.064]],["body/modules/AppModule.html",[3,0.1,4,0.09,5,0.09,14,0.012,15,0.344,20,0.146,32,0.005,33,0.007,34,0.005,35,0.138,85,0.81,86,1.526,98,4.27,99,2.304,105,4.564,106,2.977,111,1.709,112,6.24,113,1.471,114,1.585,115,1.717,116,1.717,117,1.585,118,2.825,119,1.585,120,2.977,121,2.977,122,2.977,123,4.852,124,4.852,125,4.852,126,4.852,127,4.852,128,4.852,129,4.564,130,4.852,131,4.564,132,4.318,133,2.497,134,1.648,135,1.585,136,2.699,137,2.497,138,3.399,139,2.977,140,1.875,141,1.792,142,3.399,143,3.399,144,3.399,145,3.399,146,3.399,147,3.399,148,1.967,149,3.399,150,3.925,151,3.399,152,2.977,153,2.977,154,2.699,155,3.399,156,1.639,157,3.383,158,2.977,159,2.977,160,2.504,161,2.977,162,2.977,163,2.977,164,2.977,165,3.01,166,2.977,167,2.699,168,2.699,169,2.699,170,2.699,171,1.648]],["title/injectables/AppService.html",[105,2.691,172,1.808]],["body/injectables/AppService.html",[3,0.175,4,0.157,5,0.157,9,0.581,14,0.011,15,0.247,20,0.175,32,0.008,33,0.009,34,0.008,35,0.241,43,1.429,46,1.114,85,1.414,101,2.104,104,1.69,105,4.617,109,2.165,172,3.103,173,3.615,174,5.2,175,8.004,176,5.936,177,5.936,178,5.936]],["title/controllers/AuthController.html",[7,1.949,179,3.064]],["body/controllers/AuthController.html",[3,0.058,4,0.052,5,0.052,7,0.92,9,0.193,13,0.738,14,0.012,15,0.312,18,0.744,20,0.058,21,1.897,32,0.003,33,0.004,34,0.003,35,0.08,36,4.389,40,2.838,41,2.838,42,2.838,44,1.475,46,1.063,52,0.529,54,2.762,57,3.121,58,2.083,61,1.475,67,1.787,70,0.92,74,2.135,75,1.311,84,1.04,85,0.47,86,0.886,99,0.92,101,0.951,104,1.613,108,1.21,109,1.923,134,2.314,148,1.142,156,2.503,179,2.376,180,1.728,181,1.728,182,3.267,183,4.123,184,3.24,185,3.24,186,3.24,187,3.24,188,3.24,189,1.973,190,4.186,191,3.266,192,1.973,193,1.973,194,1.973,195,1.973,196,2.838,197,1.973,198,3.25,199,1.973,200,2.907,201,1.973,202,1.973,203,2.822,204,0.824,205,1.973,206,3.976,207,1.973,208,3.266,209,3.24,210,1.973,211,1.973,212,1.973,213,4.773,214,3.24,215,3.24,216,1.973,217,1.973,218,2.411,219,1.973,220,1.973,221,3.266,222,3.24,223,1.973,224,1.973,225,1.973,226,1.202,227,1.973,228,1.728,229,1.202,230,1.567,231,1.142,232,3.24,233,3.24,234,1.973,235,1.973,236,3.24,237,1.202,238,1.973,239,1.973,240,1.728,241,2.511,242,1.728,243,1.567,244,1.202,245,3.183,246,0.854,247,2.386,248,1.447,249,2.511,250,1.567,251,1.447,252,1.973,253,1.973,254,1.973,255,2.218,256,1.728,257,1.973,258,1.973,259,1.973,260,1.728,261,1.447,262,1.567,263,1.567,264,1.973,265,1.973,266,3.023,267,1.973,268,5.272,269,1.973,270,2.573,271,3.065,272,1.973,273,1.973,274,1.202,275,1.973,276,3.451,277,4.186,278,1.973,279,2.988,280,1.973,281,2.511,282,1.202,283,1.973,284,1.973,285,1.973,286,1.567,287,1.973,288,4.488,289,1.973,290,3.24,291,2.838,292,3.24,293,1.973,294,3.24,295,1.728,296,2.838,297,1.728,298,1.973,299,2.838,300,3.24,301,3.24,302,3.24,303,4.773,304,3.24,305,3.24,306,3.24,307,1.973,308,2.838,309,3.24,310,3.24,311,2.838,312,1.306,313,3.24,314,1.973,315,1.973,316,1.973,317,2.573,318,1.728,319,2.838,320,1.973,321,1.728,322,1.447,323,1.973,324,2.573,325,1.973,326,1.973,327,1.973,328,1.973]],["title/modules/AuthModule.html",[111,1.226,123,2.86]],["body/modules/AuthModule.html",[3,0.115,4,0.103,5,0.103,14,0.012,15,0.34,20,0.115,32,0.005,33,0.007,34,0.005,35,0.159,75,0.902,85,0.929,99,2.541,111,1.844,113,1.687,114,1.817,115,1.969,116,1.969,117,1.817,118,3.047,119,2.93,123,5.75,132,4.519,133,2.753,134,1.89,135,1.817,137,2.753,140,2.15,141,2.055,154,3.096,156,1.292,157,4.301,160,1.377,179,4.607,241,4.519,242,3.414,249,4.967,250,3.096,262,3.096,263,3.096,329,3.414,330,3.898,331,3.414,332,3.414,333,5.078,334,5.078,335,5.439,336,3.096,337,3.898,338,2.668,339,3.996,340,1.422,341,3.898,342,2.858,343,3.898,344,3.898,345,3.414,346,3.414,347,2.255,348,3.414,349,2.15,350,3.414,351,3.414,352,3.414,353,3.096]],["title/interfaces/AuthObj.html",[0,1.088,354,2.691]],["body/interfaces/AuthObj.html",[0,1.88,2,2.146,3,0.151,4,0.136,5,0.136,9,0.503,10,1.347,13,0.694,14,0.011,15,0.214,16,2.492,18,1.937,20,0.193,26,2.577,32,0.007,33,0.009,34,0.007,246,2.224,354,5.258,355,3.768,356,3.768,357,5.577,358,5.577,359,3.485,360,3.309,361,4.221,362,4.221,363,3.313,364,3.457,365,2.555]],["title/injectables/AuthService.html",[172,1.808,249,2.545]],["body/injectables/AuthService.html",[3,0.059,4,0.053,5,0.053,9,0.195,10,0.671,12,3.896,13,0.82,14,0.012,15,0.296,20,0.059,21,0.93,22,1.989,32,0.003,33,0.004,34,0.003,35,0.081,43,1.494,44,0.519,46,1.254,57,2.212,61,1.565,62,2.394,64,1.461,70,1.523,72,0.862,74,2.266,75,1.391,84,1.05,85,0.475,86,1.466,101,0.958,104,1.786,108,0.958,109,1.751,148,1.153,156,2.484,160,0.704,172,1.413,173,1.213,182,3.414,198,3.369,204,0.832,206,1.802,208,2.235,218,1.006,245,3.558,246,0.862,247,3.294,248,1.461,249,1.989,261,3.885,262,1.582,263,1.582,266,4.6,271,3.243,276,2.528,277,1.582,279,3.001,288,2.672,291,1.745,295,1.745,296,3.636,297,2.861,311,1.745,317,5.309,318,2.861,319,5.999,321,1.745,322,2.394,324,2.594,335,3.519,345,1.745,346,1.745,366,1.745,367,5.692,368,4.151,369,3.266,370,5.692,371,4.801,372,3.266,373,3.266,374,4.151,375,3.266,376,1.745,377,4.151,378,1.992,379,1.992,380,1.992,381,3.266,382,1.992,383,1.992,384,1.992,385,3.266,386,1.992,387,3.266,388,1.992,389,1.992,390,1.992,391,3.266,392,4.151,393,1.992,394,4.151,395,1.992,396,1.992,397,2.861,398,2.594,399,1.745,400,2.594,401,1.461,402,1.745,403,1.582,404,1.213,405,1.582,406,1.992,407,1.745,408,1.992,409,2.103,410,1.582,411,2.594,412,1.363,413,1.992,414,1.745,415,1.745,416,1.745,417,1.992,418,2.861,419,1.992,420,2.594,421,1.992,422,1.992,423,3.266,424,1.992,425,1.992,426,1.992,427,1.745,428,4.801,429,1.992,430,1.992,431,2.394,432,2.394,433,3.266,434,1.153,435,1.992,436,1.992,437,1.992,438,1.992,439,3.266,440,1.992,441,1.992,442,1.745,443,1.745,444,1.992,445,1.992,446,1.992,447,1.117,448,3.266,449,3.266,450,1.745,451,3.266,452,3.266,453,1.992,454,1.992,455,1.992,456,1.992,457,1.992,458,1.992,459,1.992,460,3.266]],["title/guards/AuthenticationGuard.html",[251,3.064,461,3.319]],["body/guards/AuthenticationGuard.html",[3,0.126,4,0.113,5,0.113,9,0.418,13,0.698,14,0.012,15,0.308,20,0.126,21,1.216,32,0.006,33,0.008,34,0.006,35,0.174,46,1.237,54,3.359,57,1.784,61,1.717,70,1.992,74,2.485,75,1.526,85,1.018,86,1.918,101,1.703,104,1.653,107,3.132,108,1.253,109,2.405,148,2.472,156,2.187,160,2.05,172,2.512,182,3.302,191,5.223,198,3.299,218,2.933,230,4.611,237,2.602,245,3.075,249,4.648,250,3.393,251,4.256,256,3.742,271,2.606,279,2.253,412,2.924,462,3.393,463,3.742,464,5.619,465,5.806,466,4.272,467,4.272,468,4.611,469,5.619,470,4.272,471,3.393,472,5.806,473,4.272,474,3.742,475,4.272,476,3.393,477,4.272,478,4.272,479,4.272,480,3.742]],["title/interfaces/BaseControllerOptions.html",[0,1.088,481,2.86]],["body/interfaces/BaseControllerOptions.html",[0,1.872,2,2.126,3,0.15,4,0.135,5,0.135,7,2.374,9,0.498,10,1.339,12,4.461,13,0.761,14,0.012,15,0.212,16,3.161,17,1.798,18,2.457,19,3.278,20,0.212,21,2.231,22,3.101,23,3.101,25,1.014,26,1.587,32,0.007,33,0.009,34,0.007,481,4.921,482,3.485,483,3.485,484,3.733,485,3.997,486,4.461,487,3.485,488,2.469,489,3.733,490,2.685,491,3.733,492,2.685,493,3.733,494,1.587,495,4.044]],["title/interfaces/BaseControllerWithAuthOptions.html",[0,1.088,486,2.86]],["body/interfaces/BaseControllerWithAuthOptions.html",[0,1.861,2,2.1,3,0.148,4,0.133,5,0.133,7,2.345,9,0.492,10,1.328,13,0.532,14,0.012,15,0.21,16,3.659,17,1.776,18,2.942,19,3.238,20,0.21,21,2.222,22,3.063,23,3.063,25,1.112,26,2.228,32,0.007,33,0.009,34,0.007,481,4.892,482,3.442,483,3.442,484,3.687,485,2.652,486,4.892,487,3.442,488,2.439,489,3.687,490,2.652,491,3.687,492,2.652,493,3.687,494,1.568,495,3.994]],["title/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.088,487,2.86]],["body/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.796,2,1.951,3,0.138,4,0.124,5,0.124,7,2.178,9,0.457,10,1.266,12,5.547,13,0.889,14,0.012,15,0.195,16,2.989,17,1.65,18,2.323,19,3.008,20,0.203,21,2.171,22,2.846,23,2.846,25,1.073,26,1.457,32,0.006,33,0.008,34,0.006,481,4.219,482,3.198,483,3.198,484,3.426,485,2.464,486,4.721,487,4.219,488,3.557,489,3.426,490,3.868,491,3.426,492,3.868,493,3.426,494,2.287,495,3.711]],["title/classes/BaseDto.html",[35,0.17,496,1.808]],["body/classes/BaseDto.html",[3,0.149,4,0.134,5,0.134,9,0.497,10,1.336,13,0.76,14,0.011,15,0.299,20,0.149,32,0.007,33,0.009,34,0.007,35,0.292,37,0.896,43,1.297,44,1.869,46,1.347,52,1.361,53,1.851,76,3.96,108,2.444,312,3.053,447,2.456,496,2.815,497,4.446,498,2.619,499,2.619,500,3.962,501,5.076,502,3.091,503,5.076,504,5.076,505,3.53,506,2.047,507,4.452]],["title/classes/BaseEntity.html",[35,0.17,508,2.204]],["body/classes/BaseEntity.html",[3,0.071,4,0.064,5,0.064,9,0.236,10,0.782,13,0.734,14,0.012,15,0.243,17,2.773,20,0.071,21,1.526,25,0.592,26,1.671,32,0.003,33,0.005,34,0.003,35,0.098,37,0.425,43,0.94,44,1.753,46,1.435,61,1.753,101,1.117,104,1.526,108,2.383,109,1.388,160,2.793,171,3.361,196,2.11,204,2.59,245,1.123,246,1.042,312,2.862,349,3.219,365,2.274,447,1.614,498,1.721,499,1.721,508,3.817,509,2.11,510,5.359,511,2.73,512,2.73,513,2.73,514,3.759,515,3.377,516,2.73,517,3.101,518,3.101,519,3.101,520,3.334,521,4.718,522,2.892,523,3.101,524,2.409,525,4.322,526,4.061,527,3.101,528,2.409,529,2.409,530,2.409,531,2.409,532,2.409,533,2.409,534,2.409,535,2.409,536,2.409,537,3.589,538,3.265,539,2.409,540,2.409,541,2.409,542,2.409,543,2.409,544,2.409,545,2.409,546,2.409,547,4.01,548,1.329,549,2.409,550,2.11,551,1.913,552,2.11,553,3.101,554,3.334,555,2.409,556,2.409,557,2.409,558,2.409,559,2.409,560,2.409,561,2.409,562,2.409,563,3.806,564,2.409,565,3.806,566,4.132,567,3.806]],["title/classes/CategoriesController.html",[35,0.17,568,3.064]],["body/classes/CategoriesController.html",[3,0.108,4,0.097,5,0.097,9,0.36,13,0.793,14,0.012,15,0.333,18,1.387,20,0.108,21,1.048,25,0.814,32,0.005,33,0.007,34,0.005,35,0.15,37,0.649,44,0.958,46,0.982,52,0.987,58,3.077,61,1.363,67,3.659,70,1.716,74,1.972,75,1.409,84,1.941,85,0.877,101,1.535,104,1.048,108,1.08,109,1.342,156,1.735,182,2.635,198,2.44,204,2.185,206,2.887,225,2.241,226,3.187,229,3.187,231,2.129,234,4.04,246,1.592,271,1.652,274,2.241,276,3.187,279,1.941,281,2.241,282,2.241,359,1.536,363,2.644,364,1.941,365,1.434,404,2.241,485,1.941,488,1.785,490,1.941,492,1.941,494,1.147,568,3.837,569,2.923,570,3.709,571,3.68,572,4.863,573,3.68,574,5.234,575,2.241,576,4.863,577,2.519,578,2.698,579,4.435,580,2.369,581,2.698,582,2.698,583,3.68,584,3.187,585,2.887,586,2.698,587,2.03,588,2.369,589,1.941,590,2.887,591,2.369,592,3.224,593,3.921,594,3.224,595,3.369,596,3.68,597,2.698,598,3.224,599,3.369,600,3.582,601,2.519,602,3.68,603,2.241,604,2.369,605,2.369,606,2.369,607,2.369,608,3.68,609,1.3,610,3.68,611,3.68,612,2.369]],["title/modules/CategoriesModule.html",[111,1.226,124,2.86]],["body/modules/CategoriesModule.html",[3,0.145,4,0.13,5,0.13,14,0.012,15,0.331,20,0.145,32,0.006,33,0.008,34,0.006,35,0.2,75,1.136,85,1.17,99,2.289,111,2.073,113,2.124,114,2.289,115,2.48,116,2.48,117,2.289,118,3.088,119,3.295,124,5.302,133,3.216,134,2.381,135,2.289,137,2.48,140,2.708,141,2.589,156,1.628,347,2.841,349,2.708,568,4.668,572,6.069,592,4.3,593,3.161,594,4.3,613,4.3,614,4.3,615,3.899,616,3.684,617,3.161,618,4.909,619,5.612,620,4.3,621,4.3,622,2.841,623,2.99]],["title/classes/Category.html",[35,0.17,593,2.691]],["body/classes/Category.html",[3,0.088,4,0.079,5,0.079,9,0.528,10,0.922,13,0.797,14,0.011,15,0.225,17,2.658,20,0.088,21,0.85,25,0.699,26,1.4,32,0.004,33,0.006,34,0.004,35,0.121,37,0.527,43,1.076,44,1.924,46,1.484,61,1.88,75,1.389,101,1.318,104,1.709,108,2.4,160,2.838,171,3.122,204,2.93,312,2.421,340,1.089,365,2.104,447,1.537,498,1.638,499,1.638,508,4.313,511,2.599,512,2.599,513,2.599,514,3.474,515,3.123,516,2.599,517,3.123,518,3.123,519,3.123,522,3.154,523,3.725,525,3.914,526,3.312,527,3.474,537,3.123,538,2.912,547,2.599,548,1.647,553,1.728,593,2.891,624,2.616,625,1.75,626,2.891,627,2.891,628,3.288,629,3.074,630,2.986,631,3.515,632,1.819,633,1.819,634,1.819,635,1.819,636,1.819,637,1.819,638,1.819,639,1.819,640,1.819,641,1.819,642,1.819,643,1.819,644,1.819,645,1.089,646,1.819,647,1.819,648,2.044]],["title/classes/CategoryDto.html",[35,0.17,579,2.545]],["body/classes/CategoryDto.html",[3,0.134,4,0.121,5,0.121,9,0.446,10,1.245,13,0.801,14,0.011,15,0.303,20,0.178,25,1.06,32,0.006,33,0.008,34,0.006,35,0.295,37,0.804,43,1.507,44,1.969,46,1.419,53,1.662,75,1.576,108,2.281,312,2.444,340,1.662,447,2.074,494,1.42,496,3.364,498,2.211,499,2.211,500,3.692,502,2.775,505,3.176,506,1.837,579,3.692,595,2.933,625,1.775,631,3.058,645,1.662,649,3.618,650,2.655,651,3.34,652,4.556,653,4.556,654,4.556,655,2.933,656,2.933,657,2.933,658,2.721,659,2.209,660,2.402,661,2.402,662,3.991]],["title/interfaces/Configuration.html",[0,1.088,86,1.876]],["body/interfaces/Configuration.html",[0,1.666,2,1.683,3,0.119,4,0.107,5,0.107,9,0.394,10,1.146,13,0.853,14,0.011,17,1.424,20,0.119,26,1.994,32,0.005,33,0.007,34,0.005,43,1.699,72,3.326,75,1.291,86,2.872,160,1.424,165,4.844,431,5.314,432,5.314,663,2.956,664,5.757,665,5.757,666,5.757,667,5.121,668,5.636,669,5.757,670,5.757,671,4.09,672,3.818,673,4.09,674,4.09,675,3.202,676,3.202,677,3.202,678,3.202,679,3.202,680,3.202,681,3.202,682,3.202,683,2.956,684,2.956,685,3.202,686,3.202,687,3.202,688,3.202]],["title/interfaces/ControllerAuth.html",[0,1.088,360,2.691]],["body/interfaces/ControllerAuth.html",[0,1.824,2,2.014,3,0.142,4,0.128,5,0.128,9,0.472,10,1.293,13,0.816,14,0.011,15,0.201,16,2.339,18,1.818,20,0.185,26,2.463,32,0.006,33,0.008,34,0.006,246,2.087,354,5.527,355,3.536,356,3.536,357,3.536,358,3.536,359,3.359,360,4.052,361,4.96,362,4.96,363,3.892,364,4.062,365,3.002]],["title/classes/Course.html",[35,0.17,689,2.86]],["body/classes/Course.html",[3,0.076,4,0.068,5,0.068,9,0.482,10,0.824,13,0.803,14,0.011,15,0.205,17,2.644,20,0.076,21,0.733,25,0.624,26,1.25,32,0.003,33,0.005,34,0.003,35,0.105,37,0.454,43,1.328,44,1.949,46,1.48,61,1.794,72,1.735,101,1.176,104,1.582,108,2.438,160,2.916,171,3.432,204,2.954,312,2.241,340,0.939,365,1.919,447,1.372,498,1.463,499,1.463,508,4.216,511,2.32,512,2.32,513,2.32,514,3.216,515,2.849,516,2.32,517,2.849,518,2.849,519,2.849,522,2.974,523,3.986,525,3.691,526,3.066,527,3.216,537,2.849,538,2.695,547,3.485,548,1.42,553,3.216,609,1.963,625,2.486,626,3.578,627,3.578,628,4.057,629,2.744,631,3.406,632,1.568,633,1.568,634,1.568,635,1.568,636,1.568,637,1.568,638,1.568,639,1.568,640,1.568,641,1.568,642,1.568,643,1.568,644,1.568,645,0.939,646,1.568,647,1.568,648,1.762,650,1.919,689,2.744,690,2.255,691,3.911,692,3.61,693,2.575,694,2.442,695,2.575,696,2.575,697,2.575,698,1.888,699,2.575]],["title/classes/CourseDto.html",[35,0.17,700,2.691]],["body/classes/CourseDto.html",[3,0.12,4,0.108,5,0.108,9,0.4,10,1.158,13,0.817,14,0.012,15,0.314,20,0.166,25,1.003,32,0.005,33,0.007,34,0.005,35,0.283,37,0.722,43,1.538,44,1.961,45,4.477,46,1.448,52,1.098,53,1.492,72,2.439,76,3.557,108,2.341,312,2.273,340,1.492,447,1.928,494,1.276,496,3.259,498,2.056,499,2.056,500,3.433,502,2.492,505,3.24,506,1.65,609,2.277,625,1.595,631,2.894,645,1.492,650,2.513,655,2.634,656,2.634,657,2.634,658,2.53,659,1.984,660,2.158,661,2.158,691,5.121,692,4.727,700,3.629,701,3.25,702,4.092,703,4.092,704,4.092,705,4.092,706,4.092,707,4.092,708,4.092,709,3.261,710,2.634,711,3.584,712,2.8,713,3.584]],["title/classes/CoursesController.html",[35,0.17,714,3.064]],["body/classes/CoursesController.html",[3,0.109,4,0.098,5,0.098,9,0.363,13,0.795,14,0.012,15,0.334,18,1.396,20,0.109,21,1.055,25,0.576,32,0.005,33,0.007,34,0.005,35,0.151,37,0.654,44,0.965,46,0.987,52,0.994,58,3.088,61,1.369,67,3.67,70,1.727,74,1.982,75,1.217,84,1.954,85,0.883,101,1.543,104,1.055,108,1.087,109,1.351,156,1.228,182,2.645,198,2.452,204,2.195,206,2.901,225,2.256,226,3.203,229,3.203,231,2.144,234,4.052,246,1.603,271,1.663,274,2.256,276,3.203,279,1.954,281,2.256,282,2.256,359,1.547,363,3.088,364,1.954,365,1.444,404,2.256,485,1.954,488,1.797,490,1.954,492,1.954,494,1.155,575,2.256,577,2.536,578,2.716,580,2.385,581,2.716,582,2.716,584,3.203,585,2.901,586,2.716,587,2.044,588,2.385,589,1.954,590,2.901,591,2.385,597,2.716,599,3.935,600,4.184,601,2.536,603,2.256,604,2.385,605,2.385,606,2.385,607,2.385,609,1.857,612,2.385,689,4.184,700,4.283,712,3.599,714,3.855,715,3.245,716,3.705,717,4.878,718,3.705,719,5.259,720,5.351,721,3.705,722,3.245,723,3.245,724,3.705,725,3.245,726,3.705,727,3.705,728,2.716,729,2.942]],["title/modules/CoursesModule.html",[111,1.226,125,2.86]],["body/modules/CoursesModule.html",[3,0.141,4,0.127,5,0.127,14,0.012,15,0.328,20,0.141,32,0.006,33,0.008,34,0.006,35,0.194,75,1.106,85,1.139,99,2.229,111,2.047,113,2.069,114,2.229,115,2.415,116,2.415,117,2.229,118,3.383,119,3.253,125,5.496,133,3.161,134,2.318,135,2.229,137,2.415,140,2.637,141,2.521,156,1.585,347,2.766,349,2.637,616,3.621,617,3.078,622,2.766,623,2.912,689,3.272,714,4.588,717,6.212,722,4.188,723,4.188,730,4.188,731,4.188,732,4.188,733,3.797,734,4.781,735,5.541,736,4.188,737,4.188]],["title/classes/CreateCategoryDto.html",[35,0.17,576,3.064]],["body/classes/CreateCategoryDto.html",[3,0.18,4,0.162,5,0.162,14,0.011,15,0.304,20,0.18,25,0.951,32,0.008,33,0.01,34,0.008,35,0.249,37,1.079,51,3.723,52,1.639,75,1.414,576,5.351,579,3.723,598,5.354,650,2.382,738,5.354,739,5.354,740,6.113]],["title/classes/CreateCourseDto.html",[35,0.17,720,3.064]],["body/classes/CreateCourseDto.html",[3,0.179,4,0.161,5,0.161,14,0.011,15,0.303,20,0.179,25,0.947,32,0.008,33,0.01,34,0.008,35,0.248,37,1.075,51,3.709,52,1.633,609,2.151,650,2.373,692,4.465,700,3.921,720,5.339,725,5.334,741,5.334,742,5.334,743,6.09]],["title/classes/CreateStageDto.html",[35,0.17,744,2.86]],["body/classes/CreateStageDto.html",[3,0.179,4,0.161,5,0.161,14,0.011,15,0.303,20,0.179,25,0.947,32,0.008,33,0.01,34,0.008,35,0.248,37,1.075,51,3.709,52,1.633,609,2.151,650,2.373,744,4.984,745,5.334,746,5.334,747,3.709,748,5.334,749,6.09,750,4.465]],["title/classes/CreateTaskDto.html",[35,0.17,751,2.86]],["body/classes/CreateTaskDto.html",[3,0.175,4,0.157,5,0.157,14,0.011,15,0.321,20,0.175,25,0.923,32,0.008,33,0.009,34,0.008,35,0.292,37,1.047,52,1.592,447,2.031,498,2.165,499,2.165,506,2.393,658,3.219,751,4.908,752,5.2,753,5.2,754,4.063,755,3.615,756,5.2,757,5.936]],["title/classes/CreateTrackDto.html",[35,0.17,758,2.86]],["body/classes/CreateTrackDto.html",[3,0.179,4,0.161,5,0.161,14,0.011,15,0.303,20,0.179,25,0.947,32,0.008,33,0.01,34,0.008,35,0.248,37,1.075,52,1.633,447,2.083,498,2.221,499,2.221,754,4.168,758,4.984,759,5.334,760,5.334,761,3.709,762,6.09,763,6.09]],["title/classes/CreateUserDto.html",[35,0.17,764,2.86]],["body/classes/CreateUserDto.html",[3,0.179,4,0.161,5,0.161,14,0.011,15,0.303,20,0.179,25,0.947,32,0.008,33,0.01,34,0.008,35,0.248,37,1.075,52,1.633,244,3.709,447,2.083,498,2.221,499,2.221,754,4.168,764,4.984,765,5.334,766,4.465,767,3.211,768,4.836]],["title/interfaces/Database.html",[0,1.088,165,2.545]],["body/interfaces/Database.html",[0,1.762,2,1.876,3,0.132,4,0.119,5,0.119,9,0.44,10,1.234,13,0.765,14,0.011,17,1.587,20,0.132,26,1.401,32,0.006,33,0.008,34,0.006,43,1.697,72,3.257,75,1.741,86,2.696,160,1.587,165,4.584,431,4.404,432,4.404,663,3.295,664,4.771,665,4.771,666,4.771,667,4.65,668,5.798,669,4.771,670,4.771,671,5.519,672,5.152,673,4.404,674,4.404,675,3.569,676,3.569,677,3.569,678,3.569,679,3.569,680,3.569,681,3.569,682,3.569,683,3.295,684,3.295,685,3.569,686,3.569,687,3.569,688,3.569]],["title/modules/DbTest.html",[111,1.226,769,3.319]],["body/modules/DbTest.html",[3,0.15,4,0.135,5,0.135,14,0.012,15,0.3,20,0.192,21,1.45,32,0.007,33,0.009,34,0.007,35,0.207,85,1.213,109,1.857,111,1.912,113,2.203,119,2.374,137,2.572,140,2.809,141,2.685,156,2.513,160,2.539,167,4.044,168,4.044,169,4.044,170,4.044,171,2.469,182,2.203,271,2.285,416,4.46,672,4.461,683,3.733,684,3.733,769,5.177,770,4.044,771,4.044,772,5.709,773,5.092,774,4.46,775,5.092,776,5.092,777,5.092,778,5.092,779,5.177,780,4.044,781,5.71,782,4.46,783,4.46,784,4.46]],["title/interfaces/DefaultAuthObject.html",[0,1.088,16,2.027]],["body/interfaces/DefaultAuthObject.html",[0,1.75,2,1.851,3,0.131,4,0.117,5,0.117,9,0.434,10,1.223,13,0.793,14,0.012,15,0.185,16,2.887,18,1.671,20,0.175,26,2.65,32,0.006,33,0.008,34,0.006,61,2.135,246,1.918,354,4.967,355,3.25,356,3.25,357,3.25,358,3.25,359,3.562,360,2.854,361,4.824,362,4.824,363,3.785,364,3.951,365,2.92]],["title/classes/FindDto.html",[35,0.17,785,3.319]],["body/classes/FindDto.html",[3,0.144,4,0.129,5,0.129,9,0.478,10,1.303,13,0.79,14,0.011,15,0.203,17,2.24,20,0.144,32,0.006,33,0.008,34,0.006,35,0.258,37,0.861,43,1.487,44,1.942,46,1.4,53,1.78,61,2.13,72,3.228,483,4.822,522,2.957,694,3.863,785,5.037,786,4.275,787,6.172,788,7.046,789,7.046,790,6.343,791,6.409,792,4.88,793,4.88,794,4.88,795,4.88,796,4.88,797,4.88,798,7.046]],["title/classes/HttpExceptionFilter.html",[35,0.17,799,3.319]],["body/classes/HttpExceptionFilter.html",[3,0.127,4,0.115,5,0.115,9,0.424,13,0.458,14,0.012,15,0.277,20,0.127,21,1.232,32,0.006,33,0.008,34,0.006,35,0.176,37,0.764,43,0.863,46,0.812,58,2.959,61,1.127,62,3.173,63,5.131,65,5.131,68,5.815,74,1.631,75,1.001,84,2.282,85,1.031,101,1.718,104,1.232,156,2.678,190,4.652,237,2.636,240,5.131,397,3.791,412,4.009,420,5.272,427,3.791,526,3.231,538,2.099,671,4.867,799,4.652,800,5.131,801,3.791,802,6.639,803,5.857,804,7.114,805,4.329,806,5.857,807,4.329,808,4.329,809,4.329,810,4.329,811,4.329,812,4.329,813,4.329,814,4.329,815,5.857,816,4.329,817,5.857,818,4.329,819,4.329,820,4.329,821,4.329,822,4.329,823,3.791,824,4.329,825,6.639,826,3.791,827,4.329,828,4.329,829,4.329]],["title/interfaces/IBaseController.html",[0,1.088,830,3.319]],["body/interfaces/IBaseController.html",[0,1.118,2,1.793,3,0.126,4,0.114,5,0.114,9,0.42,13,0.785,14,0.011,20,0.126,32,0.006,33,0.008,34,0.006,43,1.607,46,1.391,61,1.93,74,2.794,75,1.715,101,1.709,104,2.11,198,3.801,206,4.216,362,3.751,363,2.943,364,3.072,365,2.27,447,1.993,482,5.231,489,5.604,491,4.848,493,4.848,538,2.825,575,3.548,830,4.627,831,3.762,832,5.826,833,4.295,834,5.826,835,4.295,836,5.826,837,6.612,838,4.295,839,5.826,840,5.826,841,4.295,842,5.826,843,4.295]],["title/interfaces/IPagedListDto.html",[0,1.088,844,3.319]],["body/interfaces/IPagedListDto.html",[0,1.359,2,2.18,3,0.154,4,0.138,5,0.138,9,0.511,10,1.36,13,0.836,14,0.012,15,0.303,20,0.195,23,4.809,32,0.007,33,0.009,34,0.007,35,0.212,52,1.4,72,3.31,76,3.653,85,1.244,109,1.904,412,3.573,488,3.212,494,1.627,844,5.777,845,4.146,846,4.146,847,7.896,848,7.896,849,4.573,850,5.221,851,3.827,852,6.623]],["title/injectables/JwtAuthGuard.html",[172,1.808,589,2.204]],["body/injectables/JwtAuthGuard.html",[3,0.149,4,0.134,5,0.134,9,0.497,13,0.537,14,0.012,15,0.326,20,0.149,25,0.789,26,2.028,32,0.007,33,0.009,34,0.007,35,0.206,46,0.952,61,1.322,74,1.913,75,1.174,85,1.21,86,2.278,101,1.909,104,1.445,109,1.851,148,2.937,160,1.793,172,2.815,173,3.091,198,3.033,338,3.474,339,3.721,340,1.851,464,5.702,468,4.031,469,6.013,471,5.166,476,4.031,589,3.43,853,5.698,854,4.446,855,5.076,856,7.18,857,5.076,858,4.446,859,5.076,860,5.076,861,5.076]],["title/interfaces/JwtPayload.html",[0,1.088,409,2.691]],["body/interfaces/JwtPayload.html",[0,1.482,2,2.375,3,0.168,4,0.151,5,0.151,9,0.557,10,1.435,13,0.801,14,0.011,15,0.237,20,0.168,32,0.008,33,0.009,34,0.008,43,1.643,57,3.293,246,2.462,317,6.265,359,3.293,409,4.499,434,4.565,862,4.984,863,4.984]],["title/injectables/JwtStrategy.html",[172,1.808,333,2.86]],["body/injectables/JwtStrategy.html",[3,0.145,4,0.13,5,0.13,9,0.482,13,0.521,14,0.012,15,0.323,20,0.145,25,0.766,32,0.007,33,0.008,34,0.007,35,0.2,46,1.197,61,1.282,70,3.299,74,1.856,75,1.139,85,1.173,86,2.21,101,1.872,104,1.402,109,1.796,148,2.849,171,2.388,172,2.76,173,2.999,182,3.062,198,2.974,333,4.366,338,3.37,401,3.61,409,4.819,410,3.911,411,5.945,864,4.313,865,6.198,866,4.924,867,4.924,868,7.077,869,4.924,870,4.924,871,4.924,872,4.924,873,4.313,874,4.924,875,4.924,876,4.924,877,4.924,878,4.924,879,4.924,880,4.924]],["title/classes/LoginReqDto.html",[35,0.17,54,2.418]],["body/classes/LoginReqDto.html",[3,0.175,4,0.158,5,0.158,14,0.011,15,0.299,20,0.212,25,0.927,32,0.008,33,0.01,34,0.008,35,0.292,37,1.051,43,1.188,51,3.628,52,1.598,54,4.159,57,2.487,200,3.628,218,3.01,243,4.731,244,3.628,255,4.077,270,4.731,881,4.731,882,5.218]],["title/classes/LoginResDto.html",[35,0.17,255,2.86]],["body/classes/LoginResDto.html",[3,0.169,4,0.152,5,0.152,9,0.563,10,1.445,13,0.609,14,0.011,15,0.293,20,0.207,25,0.894,32,0.008,33,0.009,34,0.008,35,0.286,37,1.014,43,1.402,46,1.079,51,3.502,52,1.542,54,3.327,57,2.4,200,3.502,218,2.905,243,4.566,244,3.502,255,4.814,270,6.035,881,4.566,882,5.036,883,5.75]],["title/modules/MailModule.html",[111,1.226,126,2.86]],["body/modules/MailModule.html",[3,0.161,4,0.145,5,0.145,14,0.011,15,0.285,20,0.161,32,0.007,33,0.009,34,0.007,35,0.223,85,1.306,111,2.182,113,2.372,114,2.556,115,2.769,116,2.769,117,2.556,118,3.607,119,3.468,126,5.669,133,3.45,134,2.658,135,2.556,241,5.231,884,4.801,885,4.801,886,5.482,887,5.482,888,5.482]],["title/injectables/MailService.html",[172,1.808,241,2.545]],["body/injectables/MailService.html",[3,0.167,4,0.11,5,0.11,9,0.405,10,1.168,13,0.602,14,0.012,15,0.305,17,1.463,18,1.562,20,0.122,32,0.005,33,0.008,34,0.005,35,0.168,46,1.373,61,1.079,70,3.026,74,1.562,75,0.959,85,0.987,86,2.913,101,1.668,104,1.619,108,1.904,148,2.397,156,1.885,157,4.442,172,2.46,173,2.523,182,2.808,241,3.463,266,5.866,271,1.86,299,4.98,398,3.291,522,1.932,538,2.009,667,2.667,674,3.038,889,3.629,890,6.491,891,6.985,892,5.686,893,5.686,894,4.143,895,5.686,896,6.491,897,4.143,898,4.143,899,4.143,900,6.491,901,3.629,902,5.685,903,5.686,904,3.629,905,4.143,906,4.143,907,4.143,908,4.143,909,4.143,910,4.143,911,4.143,912,4.143,913,4.143,914,4.143,915,4.143,916,4.143,917,5.686,918,3.629,919,4.143,920,4.143,921,4.143,922,4.143,923,4.143,924,4.143,925,4.143]],["title/interfaces/Mailer.html",[0,1.088,667,2.691]],["body/interfaces/Mailer.html",[0,1.796,2,1.951,3,0.138,4,0.124,5,0.124,9,0.457,10,1.266,13,0.653,14,0.011,17,1.65,20,0.138,26,1.457,32,0.006,33,0.008,34,0.006,43,1.692,72,2.985,75,1.426,86,2.767,160,1.65,165,4.467,431,4.519,432,4.519,663,3.426,664,4.896,665,4.896,666,4.896,667,4.909,668,5.378,669,4.896,670,4.896,671,4.519,672,4.219,673,5.59,674,5.59,675,3.711,676,3.711,677,3.711,678,3.711,679,3.711,680,3.711,681,3.711,682,3.711,683,3.426,684,3.426,685,3.711,686,3.711,687,3.711,688,3.711]],["title/classes/PagedCategoryOutDto.html",[35,0.17,595,2.691]],["body/classes/PagedCategoryOutDto.html",[3,0.165,4,0.148,5,0.148,14,0.011,15,0.327,20,0.204,25,1.076,32,0.007,33,0.009,34,0.007,35,0.319,37,0.987,43,1.378,53,2.04,75,1.294,340,2.04,494,1.744,496,2.992,505,3.5,506,2.255,579,3.406,595,4.452,625,2.18,645,2.04,649,4.442,650,2.18,658,3.104,659,2.712,660,2.949,661,2.949,662,4.899]],["title/classes/PagedCourseOutputDto.html",[35,0.17,712,2.86]],["body/classes/PagedCourseOutputDto.html",[3,0.153,4,0.138,5,0.138,14,0.011,15,0.336,20,0.195,25,1.028,32,0.007,33,0.009,34,0.007,35,0.311,37,0.918,43,1.448,45,5.249,52,1.396,53,1.898,72,2.252,76,4.007,108,1.527,340,1.898,494,1.622,496,2.86,505,3.563,506,2.098,609,1.838,625,2.028,645,1.898,650,2.028,658,2.967,659,2.524,660,2.744,661,2.744,691,4.133,692,3.815,700,3.35,701,4.133,709,3.825,710,3.35,711,4.559,712,4.524,713,4.559]],["title/classes/PagedListStageDto.html",[35,0.17,926,2.691]],["body/classes/PagedListStageDto.html",[3,0.158,4,0.142,5,0.142,14,0.011,15,0.332,20,0.198,25,1.047,32,0.007,33,0.009,34,0.007,35,0.314,37,0.945,43,1.342,53,1.954,72,2.318,340,1.954,494,1.67,496,2.912,505,3.6,506,2.16,609,1.892,625,2.087,645,1.954,650,2.087,658,3.022,659,2.598,660,2.824,661,2.824,709,3.895,710,3.449,747,3.262,750,3.927,926,4.334,927,4.254,928,4.692,929,5.896,930,4.692,931,4.692]],["title/classes/PagedListTaskDto.html",[35,0.17,932,2.691]],["body/classes/PagedListTaskDto.html",[3,0.145,4,0.131,5,0.131,13,0.75,14,0.011,15,0.323,20,0.188,25,0.994,32,0.007,33,0.008,34,0.007,35,0.305,37,0.871,43,1.494,52,1.325,53,1.801,64,3.621,76,3.526,312,3.129,340,1.801,494,1.54,496,2.765,505,3.707,506,1.991,507,4.85,609,1.744,625,1.925,645,1.801,650,1.925,658,2.869,659,2.395,660,2.604,661,2.604,709,3.698,755,3.008,791,5.076,932,4.115,933,3.922,934,5.599,935,4.326,936,2.604,937,2.217,938,4.326,939,3.922,940,3.922,941,4.326]],["title/classes/PagedTrackOutputDto.html",[35,0.17,942,2.691]],["body/classes/PagedTrackOutputDto.html",[3,0.159,4,0.143,5,0.143,14,0.011,15,0.332,20,0.199,25,1.051,32,0.007,33,0.009,34,0.007,35,0.315,37,0.951,43,1.472,53,1.967,340,1.967,494,1.681,496,2.924,505,3.609,506,2.174,507,4.626,609,1.904,625,2.101,645,1.967,650,2.101,658,3.034,659,2.615,660,2.843,661,2.843,709,3.911,710,3.471,761,3.284,937,2.42,942,4.351,943,4.282,944,4.723]],["title/classes/PagedUserOutputDto.html",[35,0.17,945,2.691]],["body/classes/PagedUserOutputDto.html",[3,0.151,4,0.136,5,0.136,14,0.012,15,0.335,20,0.193,25,1.018,32,0.007,33,0.009,34,0.007,35,0.309,37,0.904,43,1.437,52,1.374,53,1.869,57,2.139,76,3.61,340,1.869,359,3.01,434,2.964,494,1.597,496,2.831,505,3.66,506,2.066,625,1.996,645,1.869,658,2.937,659,2.484,767,2.701,945,4.213,946,4.069,947,5.732,948,4.488,949,4.488,950,6.316,951,4.069,952,4.069,953,4.488,954,3.506,955,4.069,956,4.488]],["title/controllers/ProfileController.html",[7,1.949,957,3.064]],["body/controllers/ProfileController.html",[3,0.138,4,0.124,5,0.124,7,2.191,9,0.46,13,0.498,14,0.012,15,0.333,20,0.138,32,0.006,33,0.008,34,0.006,35,0.252,44,1.224,46,0.882,52,1.26,57,1.962,61,1.224,74,1.771,75,1.087,85,1.12,99,2.191,101,1.815,104,1.338,107,3.445,108,1.379,109,1.714,156,1.558,160,2.185,181,4.116,182,2.993,190,5.494,191,5.031,198,2.885,231,2.719,237,2.862,245,2.885,247,3.58,248,3.445,271,2.109,506,1.895,584,3.768,589,2.478,603,2.862,767,2.478,957,4.536,958,4.116,959,4.699,960,6.188,961,4.699,962,4.699,963,4.699,964,4.699,965,4.699,966,4.699,967,4.699,968,4.699,969,4.699,970,4.699,971,4.699,972,4.699,973,4.699,974,4.699,975,4.699]],["title/modules/ProfileModule.html",[111,1.226,127,2.86]],["body/modules/ProfileModule.html",[3,0.149,4,0.134,5,0.134,14,0.011,15,0.315,20,0.149,32,0.007,33,0.009,34,0.007,35,0.206,85,1.206,99,3.027,111,2.103,113,2.189,114,2.359,115,2.556,116,2.556,117,2.359,118,3.476,119,3.342,127,5.698,132,4.874,133,3.28,134,2.454,135,2.359,137,3.28,154,4.019,247,4.916,248,3.71,957,5.256,976,4.432,977,5.06,978,4.432,979,4.432,980,5.06,981,5.06]],["title/classes/RegisterUserDto.html",[35,0.17,200,2.545]],["body/classes/RegisterUserDto.html",[3,0.16,4,0.144,5,0.144,9,0.531,10,1.394,13,0.575,14,0.012,15,0.309,20,0.2,25,0.844,26,1.692,32,0.007,33,0.009,34,0.007,35,0.301,37,0.958,43,1.353,44,1.413,46,1.018,52,1.456,53,1.98,108,1.592,200,4.133,203,3.714,218,3.741,244,3.305,286,4.31,434,3.14,447,1.857,498,1.98,499,1.98,754,3.714,766,3.979,767,2.862,768,4.31,982,5.39,983,5.945,984,5.427,985,4.754]],["title/classes/RegisterUserResDto.html",[35,0.17,203,2.86]],["body/classes/RegisterUserResDto.html",[3,0.16,4,0.144,5,0.144,9,0.533,10,1.397,13,0.577,14,0.011,15,0.309,20,0.2,25,0.847,26,2.12,32,0.007,33,0.009,34,0.007,35,0.302,37,0.961,43,1.085,46,1.022,52,1.461,53,1.986,108,2.176,200,3.316,203,4.654,218,2.751,244,3.316,286,5.89,434,3.151,447,1.863,498,1.986,499,1.986,754,3.727,766,3.992,767,2.871,768,4.325,982,5.401,983,4.77,985,4.77,986,5.445]],["title/classes/ResetPassInput.html",[35,0.17,208,2.86]],["body/classes/ResetPassInput.html",[3,0.162,4,0.146,5,0.146,9,0.538,10,1.406,13,0.725,14,0.011,15,0.285,20,0.162,25,1.064,32,0.007,33,0.009,34,0.007,35,0.278,37,0.97,43,1.485,44,1.782,46,1.284,48,6.191,53,2.006,208,4.683,221,5.335,260,4.817,288,4.406,324,5.917,631,2.469,865,4.817,987,5.994,988,4.817,989,5.5,990,5.5]],["title/guards/RolesGuard.html",[461,3.319,590,2.305]],["body/guards/RolesGuard.html",[3,0.138,4,0.124,5,0.124,9,0.457,13,0.653,14,0.012,15,0.326,20,0.138,26,1.922,32,0.006,33,0.008,34,0.006,35,0.19,46,1.157,61,1.605,70,2.178,74,2.323,75,1.426,85,1.113,86,2.097,101,1.808,104,1.33,107,3.426,109,2.248,148,2.704,156,2.287,160,1.65,172,2.667,191,4.219,237,2.846,246,2.022,359,2.573,409,3.969,410,3.711,411,3.711,412,3.198,434,2.704,462,3.711,464,5.826,468,4.896,469,5.826,471,3.711,474,4.093,476,3.711,480,4.093,587,3.4,590,3.4,991,4.093,992,4.673,993,7.831,994,4.673,995,4.673,996,4.093,997,4.673,998,4.673,999,4.673]],["title/injectables/SessionSerializer.html",[172,1.808,334,2.86]],["body/injectables/SessionSerializer.html",[3,0.138,4,0.124,5,0.124,9,0.46,13,0.655,14,0.012,15,0.288,20,0.138,25,0.962,32,0.006,33,0.008,34,0.006,35,0.191,46,1.161,61,1.611,62,4.536,74,2.332,75,1.431,85,1.12,101,1.815,104,1.762,172,2.677,173,2.862,245,4.004,246,2.033,334,4.235,338,3.216,538,3.565,851,4.536,901,4.116,1000,4.116,1001,6.918,1002,6.188,1003,6.188,1004,6.188,1005,7.844,1006,7.352,1007,6.188,1008,4.699,1009,6.188,1010,4.699,1011,6.188,1012,4.699]],["title/modules/SharedModule.html",[111,1.226,128,2.86]],["body/modules/SharedModule.html",[3,0.181,4,0.163,5,0.163,14,0.011,15,0.257,20,0.181,32,0.008,33,0.01,34,0.008,35,0.25,85,1.467,111,2.151,113,2.664,118,2.986,119,2.871,128,5.017,137,3.111,1013,6.158,1014,7.331]],["title/classes/Stage.html",[35,0.17,937,1.876]],["body/classes/Stage.html",[3,0.079,4,0.071,5,0.071,9,0.496,10,0.853,13,0.801,14,0.011,15,0.211,17,2.672,20,0.079,21,0.767,25,0.646,26,1.294,32,0.004,33,0.005,34,0.004,35,0.11,37,0.475,43,1.226,44,1.941,46,1.48,61,1.82,72,1.796,101,1.218,104,1.621,108,2.427,160,2.912,171,3.283,204,2.919,312,2.295,340,0.982,365,1.974,447,1.42,498,1.514,499,1.514,508,4.247,511,2.402,512,2.402,513,2.402,514,3.294,515,2.931,516,2.402,517,2.931,518,2.931,519,2.931,522,3.029,523,3.917,525,3.759,526,3.14,527,3.294,537,2.931,538,2.761,547,3.294,548,1.485,553,2.931,609,2.011,625,2.218,626,3.665,627,3.665,628,3.745,629,2.841,631,3.44,632,1.64,633,1.64,634,1.64,635,1.64,636,1.64,637,1.64,638,1.64,639,1.64,640,1.64,641,1.64,642,1.64,643,1.64,644,1.64,645,0.982,646,1.64,647,1.64,648,1.843,650,1.974,694,2.528,698,1.974,750,3.714,937,1.863,1015,2.359,1016,2.693,1017,2.693,1018,2.693]],["title/classes/StageDto.html",[35,0.17,747,2.545]],["body/classes/StageDto.html",[3,0.126,4,0.113,5,0.113,9,0.419,10,1.195,13,0.809,14,0.012,15,0.309,20,0.171,25,1.027,32,0.006,33,0.008,34,0.006,35,0.288,37,0.756,43,1.476,44,1.989,46,1.433,53,1.562,72,2.516,108,2.241,312,2.345,340,1.562,447,1.99,494,1.335,496,3.304,498,2.121,499,2.121,500,3.542,502,2.609,505,3.302,506,1.727,609,2.332,625,1.669,631,2.964,645,1.562,650,2.573,651,3.14,655,2.758,656,2.758,657,2.758,658,2.611,659,2.077,660,2.259,661,2.259,709,3.365,710,2.758,747,3.542,750,4.841,926,2.758,927,3.402,928,3.752,929,5.094,930,3.752,931,3.752,1019,4.284,1020,4.284,1021,4.284,1022,3.402,1023,4.284]],["title/classes/StagesController.html",[35,0.17,1024,3.064]],["body/classes/StagesController.html",[3,0.109,4,0.098,5,0.098,9,0.363,13,0.795,14,0.012,15,0.334,18,1.396,20,0.109,21,1.055,25,0.818,32,0.005,33,0.007,34,0.005,35,0.151,37,0.654,44,0.965,46,0.987,52,0.994,58,3.088,61,1.369,67,3.67,70,1.727,74,1.982,75,1.217,84,1.954,85,0.883,101,1.543,104,1.055,109,1.351,156,1.744,182,2.645,198,2.452,204,2.195,206,2.901,225,2.256,226,3.203,229,3.203,231,2.144,234,4.052,246,1.603,271,1.663,274,2.256,276,3.203,279,1.954,281,2.256,282,2.256,359,1.547,363,2.657,364,1.954,365,1.444,404,2.256,485,1.954,488,1.797,490,1.954,492,1.954,494,1.155,570,3.723,575,2.256,577,2.536,578,2.716,580,2.385,581,2.716,582,2.716,584,3.203,585,2.901,586,2.716,587,2.044,588,2.385,589,1.954,590,2.901,591,2.385,597,2.716,599,3.385,601,2.536,603,2.256,604,2.385,605,2.385,606,2.385,607,2.385,609,1.857,612,2.385,728,2.716,729,2.942,744,4.995,747,4.052,748,3.245,926,3.385,937,2.744,1024,3.855,1025,2.942,1026,3.705,1027,4.283,1028,3.705,1029,4.606,1030,3.705,1031,3.705,1032,3.245,1033,3.245,1034,3.705,1035,3.705]],["title/modules/StagesModule.html",[111,1.226,129,2.691]],["body/modules/StagesModule.html",[3,0.14,4,0.126,5,0.126,14,0.012,15,0.328,20,0.14,32,0.006,33,0.008,34,0.006,35,0.193,75,1.097,85,1.129,99,2.21,111,2.038,113,2.051,114,2.21,115,2.394,116,2.394,117,2.21,118,3.369,119,3.239,129,5.159,133,3.144,134,2.298,135,2.21,137,2.394,140,2.614,141,2.499,156,2.063,347,2.743,349,2.614,616,4.433,617,3.051,622,2.743,623,2.887,937,2.128,1024,4.562,1027,5.448,1032,4.152,1033,4.152,1036,4.152,1037,4.152,1038,4.152,1039,3.764,1040,4.74,1041,5.517,1042,4.152,1043,4.152]],["title/classes/Task.html",[35,0.17,1044,2.691]],["body/classes/Task.html",[3,0.066,4,0.059,5,0.059,9,0.438,10,0.734,13,0.812,14,0.011,15,0.234,17,2.684,20,0.105,21,1.459,25,0.556,26,1.114,32,0.003,33,0.005,34,0.003,35,0.091,37,0.393,43,1.255,44,1.934,46,1.463,61,1.705,67,2.47,101,1.049,104,1.459,108,2.437,160,2.902,171,3.054,204,2.893,312,2.416,340,0.812,365,1.745,443,3.922,447,1.223,498,1.304,499,1.304,508,4.111,511,2.068,512,2.068,513,2.068,514,2.966,515,2.591,516,2.068,517,2.591,518,2.591,519,2.591,522,3.052,523,3.643,525,4.24,526,2.827,527,2.966,537,2.591,538,2.486,547,3.643,548,1.228,553,3.908,609,1.81,625,1.997,626,3.3,627,3.3,628,3.418,629,2.446,631,3.289,632,1.356,633,1.356,634,1.356,635,1.356,636,1.356,637,1.356,638,1.356,639,1.356,640,1.356,641,1.356,642,1.356,643,1.356,644,1.356,645,0.812,646,1.356,647,1.356,648,1.524,650,1.745,698,1.632,936,3.16,937,2.69,940,3.556,954,2.446,1044,2.301,1045,1.768,1046,4.478,1047,4.478,1048,3.922,1049,2.227,1050,2.227,1051,2.839,1052,2.227,1053,4.478,1054,1.768,1055,3.922,1056,2.227,1057,2.227,1058,2.227,1059,1.95,1060,2.227,1061,3.131,1062,3.131,1063,3.131]],["title/classes/TaskDto.html",[35,0.17,755,2.545]],["body/classes/TaskDto.html",[3,0.111,4,0.1,5,0.1,9,0.368,10,1.092,13,0.85,14,0.012,15,0.295,20,0.157,25,0.959,32,0.005,33,0.007,34,0.005,35,0.273,37,0.664,43,1.561,44,2.006,46,1.445,52,1.01,53,1.373,61,1.385,64,3.899,76,2.933,108,2.152,312,3.201,340,1.373,447,1.819,494,1.173,496,3.174,498,1.94,499,1.94,500,3.239,502,3.756,505,3.421,506,1.518,507,4.22,609,2.178,625,1.467,631,2.768,645,1.373,650,2.403,651,2.76,655,2.423,656,2.423,657,2.423,658,2.387,659,1.825,660,1.985,661,1.985,709,3.077,755,3.239,791,4.223,932,2.423,933,2.99,934,4.658,935,3.297,936,3.251,937,2.768,938,3.297,939,2.99,940,4.897,941,3.297,1022,2.99,1064,3.764,1065,3.764,1066,3.764,1067,3.764,1068,3.764,1069,3.764,1070,3.764,1071,3.764]],["title/classes/TasksController.html",[35,0.17,1072,3.064]],["body/classes/TasksController.html",[3,0.098,4,0.088,5,0.088,9,0.325,13,0.769,14,0.012,15,0.333,18,1.25,20,0.098,21,1.635,25,0.755,32,0.004,33,0.006,34,0.004,35,0.135,37,0.585,44,0.864,46,0.911,52,0.89,58,3.193,61,1.264,67,3.487,70,2.264,74,1.83,75,1.123,84,1.749,85,0.79,101,1.424,104,0.944,109,1.21,156,2.096,160,1.171,182,2.485,198,2.264,204,2.027,206,2.678,225,2.02,226,2.957,228,2.905,229,2.957,231,1.919,234,3.85,246,1.435,266,4.211,271,2.837,274,2.02,279,3.028,281,2.02,282,2.02,359,1.385,363,2.453,404,2.02,485,1.749,488,1.608,490,1.749,492,1.749,494,1.034,570,3.498,575,2.02,580,2.135,584,2.957,585,2.678,586,2.432,587,1.83,588,2.135,589,1.749,590,2.678,591,2.135,597,2.432,600,2.27,603,2.02,604,2.135,605,2.135,606,2.135,607,2.135,609,1.715,612,2.135,728,2.432,751,4.81,755,3.85,756,2.905,932,3.126,936,2.56,937,2.179,1027,4.07,1029,5.031,1044,4.331,1072,3.56,1073,2.634,1074,3.317,1075,4.81,1076,5.031,1077,4.07,1078,3.317,1079,3.317,1080,3.317,1081,2.905,1082,3.317,1083,3.317,1084,3.317,1085,3.317,1086,3.317,1087,3.317,1088,2.905,1089,2.905,1090,3.317,1091,3.317,1092,3.317,1093,3.317,1094,3.317,1095,3.317,1096,3.317,1097,3.317,1098,4.855,1099,3.317,1100,3.317,1101,3.317]],["title/modules/TasksModule.html",[111,1.226,130,2.86]],["body/modules/TasksModule.html",[3,0.129,4,0.116,5,0.116,14,0.012,15,0.333,20,0.129,32,0.006,33,0.008,34,0.006,35,0.178,75,1.015,85,1.045,99,2.045,111,1.961,113,1.898,114,2.045,115,2.216,116,2.216,117,2.045,118,3.241,119,3.116,129,4.951,130,5.651,131,4.951,133,2.986,134,2.127,135,2.045,137,2.986,140,2.419,141,2.313,152,3.842,153,3.842,156,1.959,347,2.538,349,2.419,616,4.32,617,2.824,622,2.538,623,2.671,1044,2.824,1072,4.333,1075,5.728,1088,3.842,1089,3.842,1102,3.842,1103,4.386,1104,3.842,1105,3.842,1106,3.483,1107,4.386,1108,5.308,1109,3.842,1110,3.842]],["title/classes/TemporaryToken.html",[35,0.17,342,3.064]],["body/classes/TemporaryToken.html",[3,0.074,4,0.067,5,0.067,9,0.537,10,0.809,13,0.853,14,0.012,15,0.202,17,2.538,20,0.116,21,0.716,25,0.612,26,1.228,32,0.003,33,0.005,34,0.003,35,0.102,37,0.444,43,1.188,44,1.938,46,1.474,57,1.05,61,1.938,101,1.155,104,1.563,108,2.431,160,2.751,171,3.202,204,2.638,218,1.271,245,3.079,246,1.089,261,4.368,288,3.124,312,2.756,342,2.887,365,1.891,442,4.808,447,1.347,498,1.436,499,1.436,508,4.2,511,2.279,512,2.279,513,2.279,514,3.176,515,2.807,516,2.279,517,2.807,518,2.807,519,2.807,522,2.946,523,3.656,525,4.159,526,3.028,527,3.176,537,2.807,538,2.662,547,3.448,548,1.388,553,3.656,628,3.629,631,3.387,632,1.532,633,1.532,634,1.532,635,1.532,636,1.532,637,1.532,638,1.532,639,1.532,640,1.532,641,1.532,642,1.532,643,1.532,644,1.532,646,1.532,647,2.955,694,1.532,954,2.695,1051,1.998,1054,1.998,1111,4.732,1112,1.998,1113,2.516,1114,2.516,1115,2.516,1116,2.516,1117,3.938,1118,2.204,1119,2.204,1120,1.998,1121,2.516,1122,2.516,1123,2.516]],["title/classes/Track.html",[35,0.17,936,2.204]],["body/classes/Track.html",[3,0.079,4,0.071,5,0.071,9,0.493,10,0.846,13,0.799,14,0.011,15,0.236,17,2.58,20,0.079,21,0.759,25,0.641,26,1.284,32,0.004,33,0.005,34,0.004,35,0.108,37,0.471,43,1.22,44,1.936,46,1.478,61,1.815,101,1.209,104,1.612,108,2.424,160,2.908,171,3.272,204,2.909,312,2.283,340,0.973,365,1.962,447,1.41,498,1.503,499,1.503,508,4.24,511,2.384,512,2.384,513,2.384,514,3.277,515,2.913,516,2.384,517,2.913,518,2.913,519,2.913,522,3.017,523,3.745,525,4.227,526,3.124,527,3.277,537,2.913,538,2.746,547,3.277,548,1.471,553,3.277,609,2,625,2.207,626,3.646,627,3.646,628,3.729,629,2.82,631,3.432,632,1.624,633,1.624,634,1.624,635,1.624,636,1.624,637,1.624,638,1.624,639,1.624,640,1.624,641,1.624,642,1.624,643,1.624,644,1.624,645,0.973,646,1.624,647,1.624,648,1.825,650,1.962,698,1.955,936,2.173,937,2.905,1051,2.118,1059,2.336,1124,2.336,1125,2.667,1126,2.667,1127,2.667]],["title/classes/TrackDto.html",[35,0.17,761,2.545]],["body/classes/TrackDto.html",[3,0.127,4,0.114,5,0.114,9,0.421,10,1.199,13,0.81,14,0.012,15,0.309,20,0.172,25,1.03,32,0.006,33,0.008,34,0.006,35,0.289,37,0.76,43,1.559,44,1.992,46,1.435,53,1.571,108,2.244,312,2.353,340,1.571,447,1.997,494,1.342,496,3.31,498,2.129,499,2.129,500,3.555,502,2.622,505,3.309,506,1.736,507,3.994,609,2.338,625,1.678,631,2.972,645,1.571,650,2.58,651,3.157,655,2.772,656,2.772,657,2.772,658,2.62,659,2.088,660,2.27,661,2.27,709,3.377,710,2.772,761,3.555,937,2.972,942,2.772,943,3.42,944,3.772,1022,3.42,1128,4.306,1129,4.306,1130,4.306,1131,4.306]],["title/classes/TracksController.html",[35,0.17,1132,3.064]],["body/classes/TracksController.html",[3,0.109,4,0.098,5,0.098,9,0.362,13,0.743,14,0.012,15,0.333,18,1.393,20,0.109,21,1.052,25,0.817,32,0.005,33,0.007,34,0.005,35,0.15,37,0.652,44,0.963,46,0.985,52,0.992,58,3.084,61,1.367,67,3.666,70,1.724,74,1.979,75,1.215,84,1.949,85,0.881,101,1.54,104,1.052,109,1.348,156,1.741,182,2.642,198,2.448,204,1.543,206,2.896,225,2.251,226,3.198,229,3.198,231,2.139,234,4.048,246,1.599,271,2.357,274,2.251,276,3.198,279,1.949,281,2.251,282,2.251,359,1.543,363,2.652,364,1.949,365,1.441,404,2.251,485,1.949,488,1.793,490,1.949,492,1.949,494,1.152,570,3.718,575,2.251,577,2.53,580,2.38,584,3.198,585,2.896,587,2.039,588,2.38,589,1.949,590,2.896,591,2.38,599,3.38,600,4.178,601,2.53,603,2.251,604,2.38,605,2.38,606,2.38,607,2.38,609,1.854,612,2.38,728,2.71,729,2.936,758,4.992,761,4.048,936,3.219,942,3.38,1076,4.599,1077,4.279,1081,3.238,1132,3.849,1133,2.936,1134,3.697,1135,3.697,1136,3.697,1137,3.697,1138,3.697,1139,3.238,1140,3.238,1141,3.697,1142,3.697,1143,3.238,1144,3.238,1145,3.697,1146,3.697]],["title/modules/TracksModule.html",[111,1.226,131,2.691]],["body/modules/TracksModule.html",[3,0.14,4,0.126,5,0.126,14,0.012,15,0.328,20,0.14,32,0.006,33,0.008,34,0.006,35,0.193,75,1.097,85,1.129,99,2.21,111,2.038,113,2.051,114,2.21,115,2.394,116,2.394,117,2.21,118,3.369,119,3.239,131,5.159,133,3.144,134,2.298,135,2.21,137,2.394,140,2.614,141,2.499,156,2.063,347,2.743,349,2.614,616,4.433,617,3.051,622,2.743,623,2.887,936,2.499,1077,5.448,1132,4.562,1143,4.152,1144,4.152,1147,4.152,1148,4.152,1149,4.152,1150,3.764,1151,4.74,1152,5.517,1153,4.152,1154,4.152]],["title/classes/User.html",[35,0.17,245,1.949]],["body/classes/User.html",[3,0.054,4,0.049,5,0.049,9,0.385,10,0.63,11,2.885,13,0.788,14,0.012,15,0.254,17,2.628,20,0.09,21,0.874,25,0.477,26,1.429,32,0.002,33,0.004,34,0.002,35,0.125,37,0.326,43,1.388,44,1.896,46,1.47,57,1.913,61,1.696,72,1.327,75,0.71,85,0.44,101,0.9,104,1.655,108,2.426,109,1.119,160,2.893,171,3.241,182,0.799,204,2.853,218,1.988,245,1.835,271,0.829,279,0.974,312,2.212,322,1.354,340,0.674,359,1.643,365,1.534,400,1.467,418,1.618,420,1.467,434,2.277,447,1.05,450,3.447,498,1.119,499,1.119,506,0.745,508,3.961,511,1.775,512,1.775,513,1.775,514,2.652,515,2.277,516,1.775,517,2.277,518,2.277,519,2.277,520,2.687,522,2.711,523,3.769,525,3.175,526,2.528,527,2.943,537,2.277,538,2.951,547,3.655,548,1.019,551,1.467,552,1.618,553,3.522,554,1.618,566,1.618,625,2.372,626,3.532,627,3.532,628,3.541,631,3.126,632,1.125,633,1.125,634,1.125,635,1.125,636,1.125,637,1.125,638,1.125,639,1.125,640,1.125,641,1.125,642,1.125,643,1.125,644,1.125,645,0.674,646,1.125,647,1.125,658,1.377,694,1.869,851,1.354,951,3.126,952,3.126,954,2.1,955,3.126,1054,1.467,1155,1.467,1156,3.936,1157,3.936,1158,4.584,1159,4.584,1160,3.936,1161,3.068,1162,1.847,1163,1.847,1164,1.847,1165,1.847,1166,1.847,1167,1.847,1168,1.847,1169,1.847,1170,1.847,1171,1.847,1172,1.847,1173,1.847,1174,1.847,1175,3.068,1176,2.687,1177,1.847,1178,1.847,1179,1.847,1180,1.847,1181,1.847,1182,3.068,1183,1.847,1184,3.936,1185,2.687,1186,2.687,1187,2.687,1188,1.847,1189,3.068,1190,1.847,1191,1.847,1192,1.847,1193,4.584,1194,1.847,1195,1.847,1196,1.847,1197,1.847,1198,1.847,1199,1.847]],["title/classes/UserDto.html",[35,0.17,767,2.204]],["body/classes/UserDto.html",[3,0.117,4,0.105,5,0.105,9,0.388,10,1.133,13,0.81,14,0.012,15,0.311,17,1.4,20,0.162,25,0.986,32,0.005,33,0.007,34,0.005,35,0.279,37,0.699,43,1.525,44,1.992,46,1.436,52,1.063,53,1.446,57,2.647,61,1.436,76,3.041,108,2.188,312,2.223,340,1.446,359,2.862,434,3.669,447,1.886,494,1.236,496,3.227,498,2.011,499,2.011,500,3.358,502,2.414,505,3.359,506,1.598,522,1.848,625,1.545,631,2.846,645,1.446,655,2.552,656,2.552,657,2.552,658,2.475,659,1.922,767,2.907,945,2.552,946,3.148,947,4.83,948,3.472,949,3.472,950,5.554,951,5.036,952,5.036,953,3.472,954,2.713,955,4.379,956,3.472,1200,3.964,1201,3.964,1202,5.514,1203,3.964,1204,3.964,1205,3.964,1206,3.964,1207,3.964]],["title/classes/UsersController.html",[35,0.17,1208,3.064]],["body/classes/UsersController.html",[3,0.109,4,0.098,5,0.098,9,0.362,13,0.794,14,0.012,15,0.33,18,1.393,20,0.109,21,1.052,25,0.817,32,0.005,33,0.007,34,0.005,35,0.15,37,0.652,44,0.963,46,0.985,52,0.992,57,1.543,58,3.084,61,1.367,67,3.666,70,1.724,74,1.979,75,1.215,84,1.949,85,0.881,101,1.54,104,1.052,108,1.085,109,1.348,156,1.741,182,2.642,198,2.448,204,2.192,206,2.896,225,2.251,226,3.198,229,3.198,231,2.139,234,4.048,244,2.251,245,2.847,247,4.22,271,1.659,274,2.251,276,3.198,277,2.936,279,1.949,281,2.251,282,2.251,359,1.543,361,2.38,362,2.38,363,2.652,364,1.949,365,1.441,376,3.238,404,2.251,485,1.949,488,1.793,490,1.949,492,1.949,494,1.152,570,3.718,575,2.251,577,2.53,578,2.71,580,2.38,581,2.71,582,2.71,584,3.198,585,2.896,587,2.039,588,2.38,589,1.949,590,2.896,591,2.38,599,4.279,601,2.53,603,2.251,604,2.38,605,2.38,606,2.38,607,2.38,609,1.306,612,2.38,764,4.992,767,3.505,945,3.38,1139,3.238,1140,3.238,1208,3.849,1209,2.936,1210,3.697,1211,3.697,1212,3.697,1213,3.238,1214,3.238,1215,3.697,1216,3.697,1217,3.697]],["title/modules/UsersModule.html",[111,1.226,132,2.545]],["body/modules/UsersModule.html",[3,0.142,4,0.127,5,0.127,14,0.012,15,0.329,20,0.142,32,0.006,33,0.008,34,0.006,35,0.196,75,1.113,85,1.146,99,2.242,111,2.053,113,2.081,114,2.242,115,2.429,116,2.429,117,2.242,118,3.393,119,3.262,132,4.897,133,3.174,134,2.332,135,2.242,137,2.429,140,2.653,141,2.536,156,1.594,245,2.242,247,4.906,347,2.783,349,2.653,616,3.635,617,3.096,622,2.783,623,2.929,1208,4.605,1213,4.212,1214,4.212,1218,4.809,1219,4.809,1220,4.809,1221,3.819,1222,4.809,1223,5.556,1224,4.212,1225,4.212]],["title/classes/ValidateTokenInput.html",[35,0.17,221,2.86]],["body/classes/ValidateTokenInput.html",[3,0.167,4,0.15,5,0.15,9,0.555,10,1.432,13,0.6,14,0.011,15,0.315,20,0.167,25,0.882,32,0.008,33,0.009,34,0.008,35,0.284,37,1.001,43,1.39,44,1.476,46,1.064,48,5.998,51,3.453,52,1.521,53,2.068,54,3.281,55,4.967,56,4.967,57,2.367,221,4.773,288,4.862,1226,6.109,1227,4.967,1228,5.67]],["title/coverage.html",[1229,5.01]],["body/coverage.html",[0,1.826,1,1.155,5,0.045,6,2.704,7,2.843,8,2.704,13,0.179,14,0.012,16,0.819,18,1.822,21,0.481,24,1.155,27,1.155,32,0.002,33,0.004,34,0.002,35,0.336,36,1.237,38,1.478,39,1.478,54,0.977,58,0.853,59,1.478,60,1.478,86,0.758,98,1.237,100,1.478,105,1.087,111,0.495,117,0.787,136,2.26,150,1.341,157,1.947,165,1.733,172,2.873,174,1.478,179,1.237,180,1.478,200,1.028,203,1.155,208,1.155,221,1.155,241,1.028,245,0.787,247,0.977,249,1.028,251,1.237,255,1.155,333,1.155,334,1.155,335,1.237,336,1.341,339,1.237,342,1.237,354,1.087,355,2.704,356,2.704,360,1.087,366,1.478,403,1.341,405,1.341,409,1.087,461,2.26,463,1.478,481,1.155,482,2.964,483,2.524,484,2.704,486,1.155,487,1.155,494,0.526,496,0.73,497,1.478,508,0.89,509,1.478,568,1.237,569,2.26,570,2.945,572,1.237,576,1.237,579,1.028,585,0.931,587,0.931,589,0.89,590,0.931,593,1.087,595,1.087,615,1.341,616,2.506,619,1.341,624,1.478,645,0.616,649,2.26,663,2.704,667,1.087,689,1.155,690,1.478,694,5.293,700,1.087,701,2.26,712,1.155,714,1.237,715,1.478,717,1.237,720,1.237,733,1.341,735,1.341,738,1.478,739,1.478,741,1.478,742,1.478,744,1.155,745,1.478,746,1.478,747,1.028,751,1.155,752,1.478,753,1.478,755,1.028,758,1.155,759,1.478,760,1.478,761,1.028,764,1.155,765,1.478,766,2.704,767,0.89,770,2.929,771,2.929,779,1.341,780,1.341,781,1.341,785,1.341,786,1.478,799,1.341,800,1.478,801,1.478,830,1.341,831,1.478,844,1.341,845,2.26,846,2.26,851,3.175,853,1.478,854,1.478,862,1.478,863,1.478,864,1.478,881,2.26,889,1.478,926,1.087,927,2.26,932,1.087,933,2.26,936,0.89,937,0.758,942,1.087,943,2.26,945,1.087,946,2.26,957,1.237,958,1.478,982,2.26,987,1.478,988,1.478,991,1.478,1000,1.478,1015,1.478,1024,1.237,1025,2.26,1027,1.087,1039,2.26,1041,1.341,1044,1.087,1045,1.341,1072,1.237,1073,2.26,1075,1.155,1077,1.087,1106,2.26,1108,1.341,1111,1.341,1112,1.341,1124,1.478,1132,1.237,1133,2.26,1150,2.26,1152,1.341,1155,1.341,1208,1.237,1209,2.26,1221,1.341,1223,1.341,1226,1.478,1227,1.478,1229,1.478,1230,1.341,1231,1.688,1232,1.688,1233,1.341,1234,1.478,1235,1.478,1236,8.301,1237,6.78,1238,7.938,1239,3.689,1240,2.846,1241,4.33,1242,6.903,1243,2.846,1244,2.846,1245,1.688,1246,1.688,1247,5.859,1248,1.688,1249,1.688,1250,1.688,1251,4.835,1252,1.688,1253,2.846,1254,2.26,1255,3.689,1256,2.492,1257,1.478,1258,1.478,1259,1.341,1260,1.478,1261,1.478,1262,1.478,1263,1.478,1264,1.478,1265,1.688,1266,1.478,1267,1.688,1268,1.688,1269,1.688,1270,2.492,1271,2.492,1272,1.478,1273,1.478,1274,1.478,1275,1.478,1276,1.478,1277,2.846,1278,2.846,1279,1.688,1280,1.688,1281,1.478,1282,1.688,1283,1.688,1284,1.688,1285,1.478,1286,1.688,1287,1.688,1288,1.688,1289,1.688]],["title/dependencies.html",[114,2.346,1290,3.483]],["body/dependencies.html",[14,0.012,32,0.006,33,0.008,34,0.006,35,0.238,52,1.158,53,1.575,85,1.029,114,2.013,139,3.782,141,2.276,237,4.328,338,2.955,353,4.643,398,3.429,399,3.782,400,3.429,401,3.165,402,3.782,414,3.782,415,3.782,506,1.741,548,2.381,550,3.782,774,3.782,787,3.782,858,3.782,873,5.807,902,5.121,904,3.782,996,3.782,1259,3.429,1291,4.317,1292,4.317,1293,4.317,1294,4.317,1295,4.317,1296,4.317,1297,4.317,1298,4.317,1299,7.426,1300,4.317,1301,4.317,1302,4.317,1303,4.317,1304,4.317,1305,4.317,1306,4.317,1307,4.317,1308,4.317,1309,4.317,1310,4.317,1311,4.317,1312,4.317,1313,4.317,1314,4.317,1315,4.317,1316,4.317,1317,4.317,1318,4.317,1319,5.847,1320,4.317,1321,4.317,1322,4.317,1323,4.317,1324,4.317,1325,4.317,1326,4.317,1327,4.317,1328,4.317,1329,4.317,1330,4.317,1331,4.317,1332,4.317,1333,4.317,1334,3.782,1335,4.317,1336,4.317,1337,4.317,1338,5.847,1339,4.317,1340,4.317,1341,4.317,1342,4.317,1343,4.317,1344,4.317,1345,4.317,1346,4.317,1347,4.317,1348,4.317]],["title/miscellaneous/enumerations.html",[1349,2.015,1350,4.407]],["body/miscellaneous/enumerations.html",[9,0.538,14,0.011,32,0.007,33,0.009,34,0.007,57,2.296,218,2.778,261,5.017,359,2.857,407,5.994,522,3.939,1045,4.368,1055,5.994,1061,5.994,1062,5.994,1063,5.994,1111,4.368,1112,5.435,1118,4.817,1119,4.817,1155,4.368,1185,5.994,1186,5.994,1187,5.994,1349,3.182,1350,4.817,1351,5.5,1352,5.5,1353,5.5,1354,5.5,1355,5.5,1356,5.5,1357,5.5]],["title/miscellaneous/functions.html",[1349,2.015,1358,4.407]],["body/miscellaneous/functions.html",[9,0.565,13,0.746,14,0.011,32,0.008,33,0.009,34,0.008,61,1.835,74,2.657,75,1.631,104,2.007,117,3.548,488,2.798,494,2.197,585,3.888,845,4.582,846,5.598,1120,4.582,1233,5.598,1234,6.174,1235,6.666,1254,4.582,1257,5.054,1349,3.338,1358,5.054,1359,5.77,1360,5.054,1361,5.77,1362,5.77,1363,5.77]],["title/index.html",[9,0.341,1364,3.051,1365,3.051]],["body/index.html",[4,0.121,14,0.008,32,0.006,33,0.008,34,0.006,66,4.002,135,2.832,191,3.127,308,5.32,361,2.941,622,2.644,937,2.051,939,3.628,1176,4.002,1230,3.628,1334,4.002,1366,6.822,1367,6.074,1368,6.074,1369,4.569,1370,6.074,1371,7.782,1372,4.569,1373,4.569,1374,4.569,1375,4.569,1376,6.074,1377,4.569,1378,6.074,1379,4.569,1380,4.569,1381,4.002,1382,4.569,1383,4.569,1384,4.569,1385,5.976,1386,4.569,1387,4.569,1388,4.569,1389,4.569,1390,4.569,1391,4.569,1392,4.569,1393,4.569,1394,4.569,1395,4.569,1396,4.002,1397,4.569,1398,4.569,1399,4.569,1400,4.569,1401,4.569,1402,6.074,1403,4.569,1404,4.569,1405,6.074,1406,4.569,1407,4.569,1408,4.569,1409,4.569,1410,4.569,1411,4.569,1412,4.569,1413,4.569,1414,4.002,1415,4.569,1416,4.569,1417,4.002,1418,4.569,1419,4.569,1420,4.569,1421,4.569,1422,4.569,1423,4.569,1424,4.569,1425,4.569,1426,4.569,1427,4.569,1428,4.569,1429,4.569,1430,6.074,1431,4.569,1432,4.569,1433,4.569,1434,4.569,1435,4.569,1436,4.569,1437,4.569,1438,4.569,1439,4.569,1440,4.569,1441,4.569,1442,4.569,1443,4.569,1444,4.569,1445,4.569,1446,4.569,1447,4.569,1448,4.569,1449,4.569,1450,4.569,1451,4.569,1452,4.569]],["title/license.html",[1364,3.051,1365,3.051,1453,3.051]],["body/license.html",[14,0.008,31,3.599,32,0.006,33,0.008,34,0.006,135,2.289,237,2.99,826,5.577,1230,3.899,1233,3.899,1381,7.252,1396,4.3,1414,4.3,1453,4.3,1454,4.909,1455,7.067,1456,4.909,1457,4.909,1458,4.909,1459,4.909,1460,4.909,1461,4.909,1462,4.909,1463,4.909,1464,6.367,1465,4.909,1466,4.909,1467,4.909,1468,7.067,1469,4.909,1470,6.367,1471,4.909,1472,4.909,1473,6.367,1474,4.909,1475,4.909,1476,4.909,1477,4.909,1478,4.909,1479,4.909,1480,6.367,1481,4.909,1482,4.909,1483,4.909,1484,4.909,1485,4.909,1486,4.909,1487,6.367,1488,6.367,1489,4.909,1490,4.909,1491,4.909,1492,4.909,1493,4.909,1494,4.909,1495,4.909,1496,4.909,1497,4.909,1498,4.909,1499,4.909,1500,4.909,1501,4.909,1502,4.909,1503,4.909,1504,4.909,1505,4.909,1506,4.909,1507,4.909,1508,4.909,1509,4.909,1510,4.909,1511,4.909,1512,4.909,1513,4.909,1514,4.909,1515,4.909,1516,4.909,1517,4.909]],["title/modules.html",[113,2.475]],["body/modules.html",[14,0.009,32,0.007,33,0.009,34,0.007,112,4.005,113,2.364,123,3.739,124,3.739,125,3.739,126,3.739,127,3.739,128,3.739,129,3.517,130,3.739,131,3.517,132,3.327,769,4.339,918,5.969,1385,7.443,1518,8.497,1519,8.497,1520,8.585,1521,6.815]],["title/overview.html",[1522,5.01]],["body/overview.html",[2,1.388,14,0.011,32,0.004,33,0.006,34,0.004,37,0.586,99,1.55,105,3.702,111,0.975,112,6.194,113,1.438,114,1.55,115,1.679,116,1.679,117,1.55,118,1.612,119,1.55,120,2.911,121,2.911,122,2.911,123,5.594,124,4.33,125,4.814,126,4.814,127,5.098,128,3.935,129,4.678,130,5.286,131,4.678,132,4.537,133,2.456,134,1.612,135,1.55,173,2.024,241,4.537,247,4.469,249,4.425,329,2.911,331,2.911,332,2.911,333,3.935,334,3.935,335,4.215,462,2.64,572,4.639,613,2.911,614,2.911,717,5.327,730,2.911,731,2.911,732,2.911,884,2.911,885,2.911,976,2.911,978,2.911,979,2.911,1027,4.678,1036,2.911,1037,2.911,1038,2.911,1075,4.972,1077,4.678,1102,2.911,1104,2.911,1105,2.911,1147,2.911,1148,2.911,1149,2.911,1281,2.911,1285,4.259,1522,2.911,1523,2.911,1524,3.324,1525,2.911]],["title/miscellaneous/typealiases.html",[1349,2.015,1526,5.031]],["body/miscellaneous/typealiases.html",[9,0.587,13,0.635,14,0.011,32,0.008,33,0.01,34,0.008,551,5.733,849,6.323,1349,3.472,1527,6.001,1528,7.219,1529,8.442,1530,7.219,1531,7.219,1532,7.219,1533,7.219,1534,6.001,1535,7.219,1536,7.219]],["title/miscellaneous/variables.html",[1349,2.015,1537,4.407]],["body/miscellaneous/variables.html",[9,0.151,13,0.622,14,0.012,16,0.747,17,2.751,18,2.12,21,1.162,26,1.831,32,0.002,33,0.003,34,0.002,43,1.064,57,0.643,72,0.667,75,1.235,109,1.947,111,0.773,136,1.224,150,2.739,156,1.144,157,2.793,158,1.35,159,1.35,160,2.485,161,1.35,162,1.35,163,1.35,164,1.35,165,1.604,166,1.35,167,2.092,168,2.092,169,2.092,170,2.092,171,2.728,182,0.667,218,0.778,230,1.224,245,0.718,271,0.692,288,0.992,322,1.13,336,1.224,339,2.529,347,3.088,348,1.35,349,2.944,350,1.35,351,1.35,352,1.35,353,1.224,354,2.627,357,3.361,358,3.361,359,0.643,360,1.696,361,1.696,362,1.696,363,0.778,364,2.417,365,1.786,401,1.13,403,2.092,405,2.092,485,2.417,488,2.223,490,2.417,492,2.417,494,1.429,522,3.664,569,1.224,570,3.707,579,2.101,585,2.529,587,3.358,593,0.992,595,0.992,599,3.919,600,2.793,609,0.544,615,1.224,616,3.398,619,2.092,620,1.35,621,1.35,622,1.996,623,2.101,645,0.961,650,0.6,668,1.13,672,1.802,673,1.931,694,0.938,733,1.224,735,2.092,736,1.35,737,1.35,744,1.802,747,0.938,751,1.802,755,0.938,758,1.802,761,0.938,764,1.802,767,0.813,770,1.224,771,3.241,772,1.35,779,2.739,780,2.092,781,2.092,782,1.35,783,1.35,784,1.35,823,4.376,926,0.992,932,0.992,936,0.813,937,0.692,942,0.992,945,0.992,1025,1.224,1027,0.992,1039,1.224,1041,2.092,1042,1.35,1043,1.35,1044,0.992,1048,1.35,1073,1.224,1075,1.055,1077,0.992,1106,1.224,1108,2.092,1109,1.35,1110,1.35,1120,2.092,1133,1.224,1150,1.224,1152,2.092,1153,1.35,1154,1.35,1209,1.224,1221,1.224,1223,2.092,1224,1.35,1225,1.35,1254,1.224,1256,1.35,1258,1.35,1259,2.092,1260,2.307,1261,2.307,1262,1.35,1263,2.307,1264,1.35,1266,1.35,1270,1.35,1271,3.021,1272,4.016,1273,2.307,1274,1.35,1275,2.307,1276,1.35,1349,0.892,1360,1.35,1417,1.35,1523,1.35,1525,4.928,1537,1.35,1538,1.541,1539,2.634,1540,1.541,1541,1.541,1542,1.541,1543,1.541,1544,1.541,1545,1.541,1546,1.541,1547,2.634,1548,2.634,1549,2.634,1550,1.541,1551,2.634,1552,1.541,1553,1.541,1554,3.449,1555,2.634,1556,1.541,1557,1.541,1558,1.541,1559,1.541,1560,2.634,1561,1.541,1562,3.449,1563,3.449,1564,2.634,1565,2.634,1566,1.541,1567,1.541,1568,1.541,1569,1.541,1570,1.541,1571,1.541,1572,1.541,1573,4.585,1574,1.541,1575,1.541,1576,1.541,1577,1.541,1578,1.541,1579,1.541,1580,1.541,1581,1.541,1582,1.541,1583,1.541,1584,1.541,1585,1.541,1586,1.541,1587,2.634,1588,1.541,1589,1.541,1590,1.541,1591,1.541,1592,1.541,1593,1.541,1594,1.541,1595,1.541,1596,1.541,1597,1.541,1598,1.541,1599,2.634,1600,2.634,1601,2.634,1602,2.634,1603,2.634,1604,2.634,1605,2.634,1606,2.634,1607,2.634,1608,2.634,1609,1.541,1610,2.634,1611,1.541,1612,1.541,1613,2.634,1614,1.541,1615,1.541,1616,2.634,1617,1.541,1618,1.541,1619,2.634,1620,1.541,1621,1.541,1622,2.634,1623,1.541,1624,1.541,1625,1.541,1626,1.541,1627,1.541,1628,1.541,1629,1.541,1630,1.541,1631,1.541,1632,4.585,1633,1.541,1634,1.541,1635,1.541,1636,1.541,1637,1.541,1638,1.541,1639,1.541,1640,1.541,1641,1.541,1642,1.541,1643,1.541,1644,1.541,1645,1.541,1646,1.541,1647,1.541,1648,1.541,1649,1.541,1650,1.541,1651,1.541,1652,1.541,1653,1.541,1654,1.541,1655,1.541]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":694,"title":{},"body":{"classes/Course.html":{},"classes/FindDto.html":{},"classes/Stage.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1236,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1265,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1240,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1237,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1247,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1241,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1239,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1280,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":647,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["1.0.0",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["1.8.10",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":790,"title":{},"body":{"classes/FindDto.html":{}}}],["12",{"_index":1285,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["15",{"_index":1281,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1525,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":1456,"title":{},"body":{"license.html":{}}}],["21",{"_index":1267,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["3",{"_index":1523,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["3.23.0",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["3/17",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["3/20",{"_index":1282,"title":{},"body":{"coverage.html":{}}}],["3/24",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["4.5.10",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["45",{"_index":1524,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["5.9.18",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.8",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["60000",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":1048,"title":{},"body":{"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseEntity.html":{}}}],["_${propertykey",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abortearly",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":1396,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstractcontrolleroptions",{"_index":1,"title":{"interfaces/AbstractControllerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithauthoptions",{"_index":24,"title":{"interfaces/AbstractControllerWithAuthOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithswaggeroptions",{"_index":27,"title":{"interfaces/AbstractControllerWithSwaggerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractdocument",{"_index":1528,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["access",{"_index":827,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["accessors",{"_index":520,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["account",{"_index":922,"title":{},"body":{"injectables/MailService.html":{}}}],["acctverifydto",{"_index":36,"title":{"classes/AcctVerifyDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["achieving",{"_index":1393,"title":{},"body":{"index.html":{}}}],["action",{"_index":1511,"title":{},"body":{"license.html":{}}}],["activate",{"_index":517,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["addons/in",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":1187,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1527,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["amazing",{"_index":1400,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1478,"title":{},"body":{"license.html":{}}}],["api_auth_enabled",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":910,"title":{},"body":{"injectables/MailService.html":{}}}],["api_key_mailgun",{"_index":775,"title":{},"body":{"modules/DbTest.html":{}}}],["apibearerauth",{"_index":584,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apiconflictresponse",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception",{"_index":58,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["apiexception})@apibearerauth",{"_index":582,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["apiexception})@apiresponse({status",{"_index":581,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["apiexception})@apiresponse({type",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(authenticationguard",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(jwtauthguard",{"_index":1080,"title":{},"body":{"classes/TasksController.html":{}}}],["apiokresponse",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":76,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/CourseDto.html":{},"interfaces/IPagedListDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TaskDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@expose",{"_index":500,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiresponse",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apiswaggeroperation",{"_index":1261,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiunauthorizedresponse",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_email",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":98,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appemail",{"_index":664,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["applicable",{"_index":1422,"title":{},"body":{"index.html":{}}}],["application",{"_index":1405,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":112,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":105,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectural",{"_index":1410,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":804,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":1515,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1450,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1465,"title":{},"body":{"license.html":{}}}],["async",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":18,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/MailService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":55,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["auth.guard",{"_index":966,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth.guard.ts",{"_index":854,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:9",{"_index":855,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{}}}],["auth/auth.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards",{"_index":591,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["auth/guards/jwt",{"_index":965,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth/models/dto/auth.dto",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_guard_type",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":179,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":251,"title":{"guards/AuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["autherrors",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherrors.expired_token",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_login_attempt",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_token",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["autheventenum",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["authguard",{"_index":857,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(auth_guard_type",{"_index":859,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":123,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobj",{"_index":354,"title":{"interfaces/AuthObj.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authobj.create",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.delete",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.find",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.findbyid",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.update",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create?.length",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete?.length",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find?.length",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid?.length",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update?.length",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1504,"title":{},"body":{"license.html":{}}}],["authroles",{"_index":357,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":249,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":918,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["await",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["basecontrolleroptions",{"_index":481,"title":{"interfaces/BaseControllerOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithauthoptions",{"_index":486,"title":{"interfaces/BaseControllerWithAuthOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithswaggeropts",{"_index":487,"title":{"interfaces/BaseControllerWithSwaggerOpts.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecrudcontroller",{"_index":585,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["basecrudcontroller(options",{"_index":1362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["basectrl",{"_index":570,"title":{},"body":{"classes/CategoriesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basedto",{"_index":496,"title":{"classes/BaseDto.html":{}},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["basedto:11",{"_index":657,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:14",{"_index":655,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:8",{"_index":656,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["baseentity",{"_index":508,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentity:12",{"_index":638,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:14",{"_index":633,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:16",{"_index":640,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:18",{"_index":637,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:20",{"_index":635,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:22",{"_index":634,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:24",{"_index":632,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:26",{"_index":639,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:44",{"_index":643,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:53",{"_index":644,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:62",{"_index":642,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:71",{"_index":641,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:9",{"_index":636,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseservice",{"_index":616,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintoken",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pw",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(plaintoken",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["body",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1441,"title":{},"body":{"index.html":{}}}],["bring",{"_index":1398,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1520,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1518,"title":{},"body":{"modules.html":{}}}],["buildschema",{"_index":546,"title":{},"body":{"classes/BaseEntity.html":{}}}],["buildschema(this",{"_index":555,"title":{},"body":{"classes/BaseEntity.html":{}}}],["built",{"_index":1403,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":31,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"license.html":{}}}],["cache",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":464,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":468,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canlogin",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["career",{"_index":1388,"title":{},"body":{"index.html":{}}}],["catch",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/User.html":{}}}],["catch(error",{"_index":803,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":808,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories.controller",{"_index":618,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":592,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":568,"title":{"classes/CategoriesController.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":124,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":572,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":593,"title":{"classes/Category.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category.dto",{"_index":598,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{}}}],["category.dto.ts",{"_index":739,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.modelname",{"_index":620,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["category.schema",{"_index":621,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["categorydto",{"_index":579,"title":{"classes/CategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorymodel",{"_index":619,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryservice",{"_index":574,"title":{},"body":{"classes/CategoriesController.html":{}}}],["ccn",{"_index":178,"title":{},"body":{"injectables/AppService.html":{}}}],["charge",{"_index":1461,"title":{},"body":{"license.html":{}}}],["check",{"_index":1427,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1507,"title":{},"body":{"license.html":{}}}],["clan",{"_index":1367,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"modules/DbTest.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":37,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"overview.html":{}}}],["classtype",{"_index":849,"title":{},"body":{"interfaces/IPagedListDto.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":1412,"title":{},"body":{"index.html":{}}}],["client",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["client({transport",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["clientbaseurl",{"_index":40,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["clientredis",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":329,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":613,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_exports",{"_index":614,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":730,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_exports",{"_index":731,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_providers",{"_index":732,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":884,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":885,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":886,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_profilemodule",{"_index":976,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":978,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":977,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":979,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_stagesmodule",{"_index":1036,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_exports",{"_index":1037,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_providers",{"_index":1038,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":1102,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":1104,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":1103,"title":{},"body":{"modules/TasksModule.html":{}}}],["cluster_tasksmodule_providers",{"_index":1105,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule",{"_index":1147,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_exports",{"_index":1148,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_providers",{"_index":1149,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1218,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_exports",{"_index":1219,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":1220,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1366,"title":{},"body":{"index.html":{}}}],["codeclannigeria",{"_index":1423,"title":{},"body":{"index.html":{}}}],["codeclannigeria.dev",{"_index":1389,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1387,"title":{},"body":{"index.html":{}}}],["columnsize",{"_index":645,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsize.length128",{"_index":698,"title":{},"body":{"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{}}}],["columnsize.length256",{"_index":699,"title":{},"body":{"classes/Course.html":{}}}],["columnsize.length32",{"_index":648,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{}}}],["columnsize.length64",{"_index":1193,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":1408,"title":{},"body":{"index.html":{}}}],["community",{"_index":1371,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1409,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["comprised",{"_index":1372,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1426,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1486,"title":{},"body":{"license.html":{}}}],["config",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":87,"title":{},"body":{"classes/ApiException.html":{}}}],["configmodule",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":86,"title":{"interfaces/Configuration.html":{}},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["configuration().appemail",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["configuration().isauthenabled",{"_index":476,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["configuration().jwtsecret",{"_index":880,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmation",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmed",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail",{"_index":1158,"title":{},"body":{"classes/User.html":{}}}],["conflictexception",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["conflictexception('email",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('user",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["connect",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["connection",{"_index":1516,"title":{},"body":{"license.html":{}}}],["console.log(context.switchtohttp().getrequest().sessionid",{"_index":860,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["const",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(authservice",{"_index":466,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(categoryservice",{"_index":571,"title":{},"body":{"classes/CategoriesController.html":{}}}],["constructor(courseservice",{"_index":716,"title":{},"body":{"classes/CoursesController.html":{}}}],["constructor(message",{"_index":71,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(private",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["constructor(protected",{"_index":601,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(reflector",{"_index":992,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(stageservice",{"_index":1026,"title":{},"body":{"classes/StagesController.html":{}}}],["constructor(tasksservice",{"_index":1074,"title":{},"body":{"classes/TasksController.html":{}}}],["constructor(trackservice",{"_index":1134,"title":{},"body":{"classes/TracksController.html":{}}}],["constructor(usersservice",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["context",{"_index":471,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":998,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":474,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["contract",{"_index":1512,"title":{},"body":{"license.html":{}}}],["controller",{"_index":7,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('profile",{"_index":968,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller.interface.ts",{"_index":831,"title":{},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["controller.interface.ts:10",{"_index":841,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:11",{"_index":843,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:12",{"_index":835,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:8",{"_index":833,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:9",{"_index":838,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controllerauth",{"_index":360,"title":{"interfaces/ControllerAuth.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controllername",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.indexof('controller",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.substr",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":1480,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1464,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1455,"title":{},"body":{"license.html":{}}}],["course",{"_index":689,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["course.dto",{"_index":725,"title":{},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{}}}],["course.dto.ts",{"_index":742,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["course.modelname",{"_index":736,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["course.schema",{"_index":737,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["coursedto",{"_index":700,"title":{"classes/CourseDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["coursemodel",{"_index":735,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courses.controller",{"_index":734,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses.service",{"_index":722,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["courses/courses.module",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["coursescontroller",{"_index":714,"title":{"classes/CoursesController.html":{}},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["courseservice",{"_index":719,"title":{},"body":{"classes/CoursesController.html":{}}}],["coursesmodule",{"_index":125,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesservice",{"_index":717,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1229,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverage.ts",{"_index":1234,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["create",{"_index":363,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":607,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["create(input",{"_index":575,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["createcategorydto",{"_index":576,"title":{"classes/CreateCategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcoursedto",{"_index":720,"title":{"classes/CreateCourseDto.html":{}},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["created",{"_index":1382,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":498,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["createdby",{"_index":511,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["createdto",{"_index":490,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createstagedto",{"_index":744,"title":{"classes/CreateStageDto.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtaskdto",{"_index":751,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtrackdto",{"_index":758,"title":{"classes/CreateTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtransport",{"_index":891,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":764,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["crypto",{"_index":1184,"title":{},"body":{"classes/User.html":{}}}],["ctx",{"_index":809,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":813,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":812,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":1434,"title":{},"body":{"index.html":{}}}],["customdecorator",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customname",{"_index":1121,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["damages",{"_index":1508,"title":{},"body":{"license.html":{}}}],["database",{"_index":165,"title":{"interfaces/Database.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_host",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedListTaskDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["date().getdate",{"_index":1047,"title":{},"body":{"classes/Task.html":{}}}],["date().gettime",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().setdate(new",{"_index":1046,"title":{},"body":{"classes/Task.html":{}}}],["date().toisostring",{"_index":94,"title":{},"body":{"classes/ApiException.html":{}}}],["date(date.now",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(new",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"classes/Task.html":{}}}],["date})@type(undefined",{"_index":1066,"title":{},"body":{"classes/TaskDto.html":{}}}],["db",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["dbfactory",{"_index":781,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver",{"_index":779,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver.geturi",{"_index":784,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["dbtest",{"_index":769,"title":{"modules/DbTest.html":{}},"body":{"modules/DbTest.html":{},"modules.html":{}}}],["deactivate",{"_index":518,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deadline",{"_index":940,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{}}}],["deal",{"_index":1467,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1517,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator(target",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":44,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/FindDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["default",{"_index":17,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultauth.create.authroles",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.create.enableauth",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.authroles",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.enableauth",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.authroles",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.enableauth",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.authroles",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.enableauth",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.authroles",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.enableauth",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthobject",{"_index":16,"title":{"interfaces/DefaultAuthObject.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":46,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["delete",{"_index":365,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["delete(id",{"_index":834,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["deletedat",{"_index":512,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deletedby",{"_index":513,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deleteresulttype",{"_index":1530,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":650,"title":{},"body":{"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":1002,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(user",{"_index":1004,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["desire",{"_index":1383,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1440,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1376,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1377,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1476,"title":{},"body":{"license.html":{}}}],["doc",{"_index":22,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["documentation",{"_index":1230,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentquery",{"_index":1535,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":1536,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["domain",{"_index":674,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{}}}],["done",{"_index":1005,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":1011,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["e",{"_index":1191,"title":{},"body":{"classes/User.html":{}}}],["email",{"_index":57,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email')@httpcode(httpstatus.ok",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["email?.tolowercase",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["email_token",{"_index":1119,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["emailparamname",{"_index":41,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["enableauth",{"_index":358,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["enableimplicitconversion",{"_index":975,"title":{},"body":{"controllers/ProfileController.html":{}}}],["encryptedtoken",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1375,"title":{},"body":{"index.html":{}}}],["engineers",{"_index":1378,"title":{},"body":{"index.html":{}}}],["enrollmentcount",{"_index":691,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["entity",{"_index":485,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["entitydto",{"_index":488,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IPagedListDto.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":954,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["enumerations",{"_index":1350,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":665,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["envvalidation",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1006,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error",{"_index":62,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":1007,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error.getstatus",{"_index":814,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.name",{"_index":820,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response",{"_index":824,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.error",{"_index":819,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.errors",{"_index":821,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.message",{"_index":825,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.name",{"_index":818,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.stack",{"_index":816,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorname",{"_index":817,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":63,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["errors/api",{"_index":807,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errortype",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["ethereal",{"_index":921,"title":{},"body":{"injectables/MailService.html":{}}}],["event",{"_index":1503,"title":{},"body":{"license.html":{}}}],["exception",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":801,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":805,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.ts",{"_index":60,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["exception.ts:10",{"_index":79,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:12",{"_index":81,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:14",{"_index":77,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:16",{"_index":78,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:18",{"_index":83,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:20",{"_index":80,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:22",{"_index":73,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:8",{"_index":82,"title":{},"body":{"classes/ApiException.html":{}}}],["exceptionfilter",{"_index":802,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":658,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["excludeextraneousvalues",{"_index":974,"title":{},"body":{"controllers/ProfileController.html":{}}}],["executioncontext",{"_index":469,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["exist",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["exist.email",{"_index":1217,"title":{},"body":{"classes/UsersController.html":{}}}],["exist.id",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.name",{"_index":611,"title":{},"body":{"classes/CategoriesController.html":{}}}],["exist.title",{"_index":729,"title":{},"body":{"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{}}}],["exist.token",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["expandvariables",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["expireafterseconds",{"_index":1123,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["expireat",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"classes/TemporaryToken.html":{}}}],["expired",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired_token",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinmins",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["exports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":505,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@isdate()@mindate(new",{"_index":1064,"title":{},"body":{"classes/TaskDto.html":{}}}],["expose()@ismongoid",{"_index":1129,"title":{},"body":{"classes/TrackDto.html":{}}}],["expose()@maxlength(columnsize.length128)@apiproperty",{"_index":702,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length32)@apiproperty()@isalphanumeric",{"_index":707,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length64",{"_index":1202,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@min(0)@isint",{"_index":1020,"title":{},"body":{"classes/StageDto.html":{}}}],["express",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["extractjwt",{"_index":871,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":877,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["failedsigninattempts",{"_index":1156,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false').default('true",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":1443,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1413,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["files",{"_index":1466,"title":{},"body":{"license.html":{}}}],["find",{"_index":361,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"classes/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":832,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findall(input",{"_index":836,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findbyid",{"_index":362,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["findbyid(input",{"_index":840,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["finddto",{"_index":785,"title":{"classes/FindDto.html":{}},"body":{"classes/FindDto.html":{},"coverage.html":{}}}],["findone",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstname",{"_index":951,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["fitness",{"_index":1499,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1420,"title":{},"body":{"index.html":{}}}],["following",{"_index":1485,"title":{},"body":{"license.html":{}}}],["forbiddenexception('invalid",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":1424,"title":{},"body":{"index.html":{}}}],["fortune",{"_index":1457,"title":{},"body":{"license.html":{}}}],["found",{"_index":1098,"title":{},"body":{"classes/TasksController.html":{}}}],["free",{"_index":1414,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":1374,"title":{},"body":{"index.html":{}}}],["full",{"_index":1176,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fullname",{"_index":1160,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":851,"title":{},"body":{"interfaces/IPagedListDto.html":{},"injectables/SessionSerializer.html":{},"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":1358,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1483,"title":{},"body":{"license.html":{}}}],["future",{"_index":939,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"index.html":{}}}],["future'})@isoptional()@apiproperty({type",{"_index":1065,"title":{},"body":{"classes/TaskDto.html":{}}}],["generaterandomtoken",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterandomtoken(64",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken(undefined",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth",{"_index":962,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getauthobj",{"_index":1273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getauthtoken",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthtoken(user",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfullname",{"_index":1173,"title":{},"body":{"classes/User.html":{}}}],["gethello",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":1177,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass",{"_index":1180,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass(this",{"_index":1199,"title":{},"body":{"classes/User.html":{}}}],["getmodelname",{"_index":544,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getprofile",{"_index":960,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":970,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(req",{"_index":961,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getschema",{"_index":542,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getters",{"_index":557,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getting",{"_index":1364,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwelcome",{"_index":175,"title":{},"body":{"injectables/AppService.html":{}}}],["global",{"_index":1014,"title":{},"body":{"modules/SharedModule.html":{}}}],["goal",{"_index":1394,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1460,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1521,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":461,"title":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":462,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["hapi/joi",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["hash",{"_index":1183,"title":{},"body":{"classes/User.html":{}}}],["hash(this.password",{"_index":1190,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1459,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1505,"title":{},"body":{"license.html":{}}}],["host",{"_index":671,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Mailer.html":{}}}],["host.switchtohttp",{"_index":810,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":799,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ethereal.email/message/waqkmgkddxqdoou",{"_index":925,"title":{},"body":{"injectables/MailService.html":{}}}],["httpstatus",{"_index":84,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.bad_request",{"_index":606,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.created",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.forbidden",{"_index":605,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.unauthorized",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpstatus[statuscode",{"_index":97,"title":{},"body":{"classes/ApiException.html":{}}}],["ibasecontroller",{"_index":830,"title":{"interfaces/IBaseController.html":{}},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["id",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IBaseController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":1231,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":878,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"guards/RolesGuard.html":{}}}],["implied",{"_index":1495,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["imports",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1489,"title":{},"body":{"license.html":{}}}],["including",{"_index":1470,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["info.messageid",{"_index":916,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":631,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["inject",{"_index":1086,"title":{},"body":{"classes/TasksController.html":{}}}],["inject(stagesservice",{"_index":1090,"title":{},"body":{"classes/TasksController.html":{}}}],["inject(tracksservice",{"_index":1091,"title":{},"body":{"classes/TasksController.html":{}}}],["injectable",{"_index":172,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["injectables",{"_index":173,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{},"overview.html":{}}}],["inmemorydb",{"_index":780,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["innovators",{"_index":1373,"title":{},"body":{"index.html":{}}}],["input",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["input.email",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.email.tolowercase",{"_index":1216,"title":{},"body":{"classes/UsersController.html":{}}}],["input.name.touppercase",{"_index":610,"title":{},"body":{"classes/CategoriesController.html":{}}}],["input.stage",{"_index":1097,"title":{},"body":{"classes/TasksController.html":{}}}],["input.title.touppercase",{"_index":728,"title":{},"body":{"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["input.track",{"_index":1101,"title":{},"body":{"classes/TasksController.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["interface.ts",{"_index":484,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":1179,"title":{},"body":{"classes/User.html":{}}}],["internalservererrorexception(e",{"_index":1192,"title":{},"body":{"classes/User.html":{}}}],["invalid_login_attempt",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_token",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ipagedlistdto",{"_index":844,"title":{"interfaces/IPagedListDto.html":{}},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{}}}],["isactive",{"_index":514,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isalphanumeric",{"_index":709,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["isauthenabled",{"_index":666,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["isauthenticationenabled",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdate",{"_index":934,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["isdeleted",{"_index":515,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isemail",{"_index":947,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isemailverified",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["isenum",{"_index":948,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isenum(userrole",{"_index":953,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isenum(userrole)@apiproperty({enum",{"_index":1205,"title":{},"body":{"classes/UserDto.html":{}}}],["isglobal",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":929,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["isjson",{"_index":798,"title":{},"body":{"classes/FindDto.html":{}}}],["isjson()@isoptional",{"_index":793,"title":{},"body":{"classes/FindDto.html":{}}}],["ismongoid",{"_index":507,"title":{},"body":{"classes/BaseDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["ismongoid()@expose",{"_index":502,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["isnotempty",{"_index":48,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{}}}],["isoptional",{"_index":791,"title":{},"body":{"classes/FindDto.html":{},"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["isoptional()@isjson",{"_index":795,"title":{},"body":{"classes/FindDto.html":{}}}],["issue",{"_index":1430,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1428,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":45,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["isurl()@maxlength(columnsize.length256)@expose",{"_index":705,"title":{},"body":{"classes/CourseDto.html":{}}}],["isvalid",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":847,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["joi.number().default(27017",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().default('redis://localhost:6379",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().required",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('true",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1448,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign(payload",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_secret",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_validity_hours",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":589,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":876,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtpayload",{"_index":409,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["jwtstrategy",{"_index":333,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidityhrs",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["key",{"_index":673,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1494,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":952,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["legend",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length1024",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length128",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length16",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length256",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length32",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length512",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length64",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length8",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":1436,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1509,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1506,"title":{},"body":{"license.html":{}}}],["license",{"_index":1453,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":787,"title":{},"body":{"classes/FindDto.html":{},"dependencies.html":{}}}],["limitation",{"_index":1471,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1496,"title":{},"body":{"license.html":{}}}],["list.dto.ts",{"_index":846,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["local",{"_index":1334,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["lockoutenddate",{"_index":1157,"title":{},"body":{"classes/User.html":{}}}],["logger",{"_index":901,"title":{},"body":{"injectables/MailService.html":{},"injectables/SessionSerializer.html":{}}}],["logger.debug(`message",{"_index":914,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`preview",{"_index":923,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.error(error",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log(user",{"_index":1012,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["login",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(_",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginreqdto",{"_index":54,"title":{"classes/LoginReqDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["loginresdto",{"_index":255,"title":{"classes/LoginResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["loginresdto})@apiunauthorizedresponse({type",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":1161,"title":{},"body":{"classes/User.html":{}}}],["mail",{"_index":900,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.options",{"_index":896,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":888,"title":{},"body":{"modules/MailModule.html":{}}}],["mailer",{"_index":667,"title":{"interfaces/Mailer.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["mailer.domain",{"_index":912,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer.key",{"_index":911,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer_api_key",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain_mailgun",{"_index":778,"title":{},"body":{"modules/DbTest.html":{}}}],["mailgun",{"_index":904,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["mailmodule",{"_index":126,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":898,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":241,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":1235,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["make",{"_index":1438,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":1433,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":625,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128",{"_index":661,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length128)@expose",{"_index":651,"title":{},"body":{"classes/CategoryDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length256",{"_index":711,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["maxlength(columnsize.length32",{"_index":660,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length32)@expose",{"_index":653,"title":{},"body":{"classes/CategoryDto.html":{}}}],["maxlength(columnsize.length32)@isalphanumeric()@expose",{"_index":1022,"title":{},"body":{"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length64",{"_index":950,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length64)@isemail()@expose",{"_index":1200,"title":{},"body":{"classes/UserDto.html":{}}}],["measures",{"_index":1391,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":566,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["members",{"_index":1402,"title":{},"body":{"index.html":{}}}],["memory",{"_index":774,"title":{},"body":{"modules/DbTest.html":{},"dependencies.html":{}}}],["mentee",{"_index":1185,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentor",{"_index":1186,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":1498,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1233,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["message",{"_index":64,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["metadata",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["mg",{"_index":903,"title":{},"body":{"injectables/MailService.html":{}}}],["min",{"_index":928,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["min(0",{"_index":930,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["mindate",{"_index":935,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["mindate(new",{"_index":938,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["minlength",{"_index":985,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["minlength(6",{"_index":983,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["miscellaneous",{"_index":1349,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1454,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1404,"title":{},"body":{"index.html":{}}}],["model",{"_index":11,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/User.html":{}}}],["modelcreate",{"_index":30,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modelname",{"_index":521,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modeloptions",{"_index":1117,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["models/auth.enums",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/category.entity",{"_index":594,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["models/course.entity",{"_index":723,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["models/dto/acct",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/auth.dto",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["models/dto/create",{"_index":1140,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["models/dto/reset",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/tack.dto",{"_index":1142,"title":{},"body":{"classes/TracksController.html":{}}}],["models/dto/user.dto",{"_index":1212,"title":{},"body":{"classes/UsersController.html":{}}}],["models/dto/validate",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dtos/category.dto",{"_index":596,"title":{},"body":{"classes/CategoriesController.html":{}}}],["models/dtos/course.dto",{"_index":724,"title":{},"body":{"classes/CoursesController.html":{}}}],["models/dtos/create",{"_index":597,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["models/dtos/stage.dto.ts",{"_index":1031,"title":{},"body":{"classes/StagesController.html":{}}}],["models/dtos/task.dto",{"_index":1087,"title":{},"body":{"classes/TasksController.html":{}}}],["models/jwt",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["models/stage.entity.ts",{"_index":1032,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{}}}],["models/task.entity",{"_index":1088,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{}}}],["models/temporary",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["models/track.entity",{"_index":1143,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["models/user.entity",{"_index":1213,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["modelvm",{"_index":28,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modify",{"_index":1474,"title":{},"body":{"license.html":{}}}],["module",{"_index":111,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":773,"title":{},"body":{"modules/DbTest.html":{}}}],["mongodb_uri",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongomemoryserver",{"_index":772,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":550,"title":{},"body":{"classes/BaseEntity.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forroot(configuration().database.uri",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forrootasync",{"_index":782,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1447,"title":{},"body":{"index.html":{}}}],["name",{"_index":75,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":1431,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["nestjs/bull",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":85,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":996,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":52,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/BaseDto.html":{},"classes/CategoriesController.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IPagedListDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/StagesController.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["new",{"_index":21,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{}}}],["nigeria",{"_index":1368,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":902,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":909,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":924,"title":{},"body":{"injectables/MailService.html":{}}}],["noninfringement",{"_index":1502,"title":{},"body":{"license.html":{}}}],["not_submitted",{"_index":1061,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["note",{"_index":1421,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"classes/TasksController.html":{}}}],["notfoundexception('token",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception('user",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception(`stage",{"_index":1096,"title":{},"body":{"classes/TasksController.html":{}}}],["notfoundexception(`track",{"_index":1100,"title":{},"body":{"classes/TasksController.html":{}}}],["notice",{"_index":1487,"title":{},"body":{"license.html":{}}}],["null",{"_index":526,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["number",{"_index":72,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["obj.util.ts",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.interface",{"_index":19,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["object.interface.ts",{"_index":356,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["object.values(userrole",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":856,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["obtaining",{"_index":1463,"title":{},"body":{"license.html":{}}}],["ochi",{"_index":1458,"title":{},"body":{"license.html":{}}}],["official",{"_index":1369,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":754,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["omittype(taskdto",{"_index":757,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["omittype(trackdto",{"_index":763,"title":{},"body":{"classes/CreateTrackDto.html":{}}}],["omittype(userdto",{"_index":768,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["ongoing",{"_index":1384,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["operation.decorator.ts",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationid",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":61,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1120,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["opts",{"_index":483,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/FindDto.html":{},"coverage.html":{}}}],["otherwise",{"_index":1514,"title":{},"body":{"license.html":{}}}],["out",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1522,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1290,"title":{"dependencies.html":{}},"body":{}}],["paged",{"_index":852,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["pagedcategoryoutdto",{"_index":595,"title":{"classes/PagedCategoryOutDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedcourseoutputdto",{"_index":712,"title":{"classes/PagedCourseOutputDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["pagedlistdto",{"_index":494,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"interfaces/IPagedListDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["pagedlistdto(categorydto",{"_index":662,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{}}}],["pagedlistdto(coursedto",{"_index":713,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["pagedlistdto(entitydto",{"_index":1363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pagedlistdto(stagedto",{"_index":931,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["pagedlistdto(taskdto",{"_index":941,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["pagedlistdto(trackdto",{"_index":944,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["pagedlistdto(userdto",{"_index":956,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["pagedliststagedto",{"_index":926,"title":{"classes/PagedListStageDto.html":{}},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedlisttaskdto",{"_index":932,"title":{"classes/PagedListTaskDto.html":{}},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedtrackoutputdto",{"_index":942,"title":{"classes/PagedTrackOutputDto.html":{}},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pageduseroutputdto",{"_index":945,"title":{"classes/PagedUserOutputDto.html":{}},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1429,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":74,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1390,"title":{},"body":{"index.html":{}}}],["particular",{"_index":1500,"title":{},"body":{"license.html":{}}}],["passport",{"_index":873,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["passportserializer",{"_index":1001,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":870,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":874,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password')@httpcode(httpstatus.ok",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["password_token",{"_index":1118,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["passwordhash",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":65,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["paths",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["payload.ts",{"_index":863,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["pending",{"_index":1063,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["permission",{"_index":826,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"license.html":{}}}],["permit",{"_index":1481,"title":{},"body":{"license.html":{}}}],["person",{"_index":1462,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1482,"title":{},"body":{"license.html":{}}}],["picktype",{"_index":51,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(categorydto",{"_index":740,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["picktype(coursedto",{"_index":743,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["picktype(loginreqdto",{"_index":56,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(registeruserdto",{"_index":882,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["picktype(stagedto",{"_index":749,"title":{},"body":{"classes/CreateStageDto.html":{}}}],["plaintoclass",{"_index":964,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoclass(userdto",{"_index":973,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoken",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["playlisturl",{"_index":692,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["please",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["pluralize",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["populate('user",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":668,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1491,"title":{},"body":{"license.html":{}}}],["post",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["post('confirm",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiconflictresponse({type",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apiresponse({type",{"_index":1079,"title":{},"body":{"classes/TasksController.html":{}}}],["post()@useguards(jwtauthguard",{"_index":577,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["pre",{"_index":1181,"title":{},"body":{"classes/User.html":{}}}],["pre('save",{"_index":1188,"title":{},"body":{"classes/User.html":{}}}],["prefix",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["preview",{"_index":917,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"classes/TasksController.html":{}}}],["process",{"_index":1445,"title":{},"body":{"index.html":{}}}],["process.env.api_auth_enabled",{"_index":681,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.app_email",{"_index":682,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_host",{"_index":685,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_name",{"_index":687,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_port",{"_index":686,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_secret",{"_index":677,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_validity_hours",{"_index":678,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_api_key",{"_index":683,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_domain",{"_index":684,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongodb_uri",{"_index":688,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongoms_system_binary",{"_index":776,"title":{},"body":{"modules/DbTest.html":{}}}],["process.env.node_env",{"_index":676,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.port",{"_index":675,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.redis_server_url",{"_index":680,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.root_url",{"_index":679,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["production",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":959,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":981,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":957,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":127,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":969,"title":{},"body":{"controllers/ProfileController.html":{}}}],["promise",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["promiselike",{"_index":868,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["prop",{"_index":547,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({default",{"_index":527,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({enum",{"_index":1054,"title":{},"body":{"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({ref",{"_index":1051,"title":{},"body":{"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{}}}],["prop({required",{"_index":523,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{}}}],["propertydescriptor",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propose",{"_index":1397,"title":{},"body":{"index.html":{}}}],["provide",{"_index":622,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1492,"title":{},"body":{"license.html":{}}}],["providers",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pub",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["publish",{"_index":1475,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1439,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1501,"title":{},"body":{"license.html":{}}}],["put",{"_index":1415,"title":{},"body":{"index.html":{}}}],["pw",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["pw.dto",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["pw.dto.ts",{"_index":988,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["pw.dto.ts:7",{"_index":989,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["queryitem",{"_index":1531,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":1532,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["questions",{"_index":1451,"title":{},"body":{"index.html":{}}}],["randombytes(columnsize.length32",{"_index":1196,"title":{},"body":{"classes/User.html":{}}}],["randombytes(size).tostring('hex",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"injectables/MailService.html":{},"classes/PagedCourseOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{}}}],["redis",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["redis_server_url",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisurl",{"_index":669,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["ref",{"_index":525,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["reflect",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":993,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(input",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":200,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["registeruserresdto",{"_index":203,"title":{"classes/RegisterUserResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["repeat",{"_index":1444,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1425,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1406,"title":{},"body":{"index.html":{}}}],["req",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{}}}],["req.url",{"_index":822,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["req.user['email",{"_index":972,"title":{},"body":{"controllers/ProfileController.html":{}}}],["request",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"index.html":{}}}],["request.body",{"_index":477,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["request.user",{"_index":480,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["require('nodemailer/lib/mailer",{"_index":905,"title":{},"body":{"injectables/MailService.html":{}}}],["required",{"_index":553,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["res",{"_index":811,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.status(statuscode).json(exception",{"_index":829,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassinput",{"_index":208,"title":{"classes/ResetPassInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"coverage.html":{}}}],["resetpassword",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(@body",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(input",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":828,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":806,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restore",{"_index":519,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["restriction",{"_index":1469,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":561,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret._id",{"_index":563,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret.id",{"_index":562,"title":{},"body":{"classes/BaseEntity.html":{}}}],["return",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returnmodeltype",{"_index":1182,"title":{},"body":{"classes/User.html":{}}}],["returns",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1472,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["roles",{"_index":587,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(userrole.admin",{"_index":604,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["roles.includes(role",{"_index":999,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":590,"title":{"guards/RolesGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["rolesguard)@roles(userrole.admin",{"_index":1081,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["rolesguard)@roles(userrole.admin)@apiresponse({type",{"_index":578,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["root_url",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooturl",{"_index":670,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["rxjs",{"_index":858,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["saved",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved.isemailverified",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["schema",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":788,"title":{},"body":{"classes/FindDto.html":{}}}],["secretorkey",{"_index":879,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sell",{"_index":1479,"title":{},"body":{"license.html":{}}}],["sendemailverifytoken",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(@body",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(input",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(@body",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(input",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["sending",{"_index":919,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync",{"_index":892,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync(mailoptions",{"_index":895,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":915,"title":{},"body":{"injectables/MailService.html":{}}}],["serializeuser",{"_index":1003,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":1009,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"modules/DbTest.html":{}}}],["session",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.serializer",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{}}}],["sessionserializer",{"_index":334,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["setmetadata(userrole",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setrandompass",{"_index":1159,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":537,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shall",{"_index":1488,"title":{},"body":{"license.html":{}}}],["shared",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/config/configuration",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["shared/constants",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["shared/controllers",{"_index":586,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["shared/controllers/base.controller",{"_index":1139,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/decorators/roles.decorator",{"_index":588,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors/api",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["shared/mail/mail.module",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/mail/mail.service",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["shared/models/base.entity",{"_index":646,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shared/models/dto",{"_index":659,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["shared/models/dto/base.dto",{"_index":710,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TrackDto.html":{}}}],["shared/services",{"_index":617,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["shared/types/abstract.type",{"_index":552,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["shared/utils/random",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/validations/env.validation",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":128,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skill",{"_index":1435,"title":{},"body":{"index.html":{}}}],["skills",{"_index":1416,"title":{},"body":{"index.html":{}}}],["skip",{"_index":789,"title":{},"body":{"classes/FindDto.html":{}}}],["slack",{"_index":1449,"title":{},"body":{"index.html":{}}}],["software",{"_index":1381,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1437,"title":{},"body":{"index.html":{}}}],["solved",{"_index":1432,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"index.html":{}}}],["src/.../abstract.type.ts",{"_index":1529,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.enums.ts",{"_index":1351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.errors.ts",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticate.decorator.ts",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.controller.ts",{"_index":1359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../categories.controller.ts",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../categories.module.ts",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../courses.module.ts",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1360,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../paged",{"_index":1361,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../random",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stages.controller.ts",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stages.module.ts",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.entity.ts",{"_index":1352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tasks.controller.ts",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tasks.module.ts",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temporary",{"_index":1353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tracks.controller.ts",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tracks.module.ts",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.controller.ts",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.module.ts",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":174,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":176,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:101",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:114",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:139",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:54",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:64",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:105",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:122",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:54",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:65",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:69",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:89",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":463,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":467,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:17",{"_index":470,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:21",{"_index":473,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/jwt",{"_index":853,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":991,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":994,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:13",{"_index":995,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/models/auth.enums.ts",{"_index":1355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/models/dto/acct",{"_index":38,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts",{"_index":881,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts:11",{"_index":883,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/reset",{"_index":987,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["src/auth/models/dto/validate",{"_index":1226,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["src/auth/models/jwt",{"_index":862,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/models/temporary",{"_index":1111,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/session.serializer.ts",{"_index":1000,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:11",{"_index":1008,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:8",{"_index":1010,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":864,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":869,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":866,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/temp",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["src/categories/categories.controller.ts",{"_index":569,"title":{},"body":{"classes/CategoriesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.controller.ts:32",{"_index":573,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:44",{"_index":583,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":615,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.service.ts",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["src/categories/models/category.entity.ts",{"_index":624,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/categories/models/category.entity.ts:15",{"_index":630,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/dtos/category.dto.ts",{"_index":649,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{}}}],["src/categories/models/dtos/category.dto.ts:10",{"_index":654,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/category.dto.ts:13",{"_index":652,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/create",{"_index":738,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts",{"_index":715,"title":{},"body":{"classes/CoursesController.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts:36",{"_index":718,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.controller.ts:47",{"_index":721,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.module.ts",{"_index":733,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/courses/courses.service.ts",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["src/courses/models/course.entity.ts",{"_index":690,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/courses/models/course.entity.ts:15",{"_index":697,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:23",{"_index":693,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:30",{"_index":696,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:35",{"_index":695,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/dtos/course.dto.ts",{"_index":701,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["src/courses/models/dtos/course.dto.ts:14",{"_index":708,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:18",{"_index":703,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:22",{"_index":706,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:24",{"_index":704,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/create",{"_index":741,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1254,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/profile/profile.controller.ts",{"_index":958,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:16",{"_index":963,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":980,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/shared/config/configuration.ts",{"_index":663,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["src/shared/constants.ts",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/controllers/base.controller.ts",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/decorators/api",{"_index":1258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authenticate.decorator.ts",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/roles.decorator.ts",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/errors/api",{"_index":59,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/shared/errors/auth.errors.ts",{"_index":1266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/http",{"_index":800,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interfaces/abstract",{"_index":6,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/base",{"_index":482,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{},"coverage.html":{}}}],["src/shared/interfaces/default",{"_index":355,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["src/shared/mail/mail.module.ts",{"_index":887,"title":{},"body":{"modules/MailModule.html":{}}}],["src/shared/mail/mail.service.ts",{"_index":889,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/shared/mail/mail.service.ts:10",{"_index":899,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:11",{"_index":893,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:16",{"_index":894,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:28",{"_index":897,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/models/base.entity.ts",{"_index":509,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts:12",{"_index":533,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:14",{"_index":528,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:16",{"_index":535,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:18",{"_index":532,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:20",{"_index":530,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:22",{"_index":529,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:24",{"_index":524,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:26",{"_index":534,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:27",{"_index":543,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:41",{"_index":545,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:44",{"_index":540,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:53",{"_index":541,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:62",{"_index":539,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:71",{"_index":536,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:9",{"_index":531,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/dto/base.dto.ts",{"_index":497,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/base.dto.ts:11",{"_index":504,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:14",{"_index":501,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:8",{"_index":503,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/find.dto.ts",{"_index":786,"title":{},"body":{"classes/FindDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/find.dto.ts:10",{"_index":796,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:13",{"_index":794,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:5",{"_index":797,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:7",{"_index":792,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/paged",{"_index":845,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/services/base.service.ts",{"_index":1269,"title":{},"body":{"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":1013,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/types/abstract.type.ts",{"_index":1534,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/shared/utils/get",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/random",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/validations/env.validation.ts",{"_index":1276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/models/dtos/create",{"_index":745,"title":{},"body":{"classes/CreateStageDto.html":{},"coverage.html":{}}}],["src/stages/models/dtos/stage.dto.ts.ts",{"_index":927,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"coverage.html":{}}}],["src/stages/models/dtos/stage.dto.ts.ts:12",{"_index":1023,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts.ts:15",{"_index":1019,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts.ts:19",{"_index":1021,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/stage.entity.ts.ts",{"_index":1015,"title":{},"body":{"classes/Stage.html":{},"coverage.html":{}}}],["src/stages/models/stage.entity.ts.ts:15",{"_index":1018,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts.ts:24",{"_index":1016,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts.ts:29",{"_index":1017,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/stages.controller.ts",{"_index":1025,"title":{},"body":{"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/stages.controller.ts:32",{"_index":1028,"title":{},"body":{"classes/StagesController.html":{}}}],["src/stages/stages.controller.ts:44",{"_index":1030,"title":{},"body":{"classes/StagesController.html":{}}}],["src/stages/stages.module.ts",{"_index":1039,"title":{},"body":{"modules/StagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/stages.service.ts",{"_index":1279,"title":{},"body":{"coverage.html":{}}}],["src/tasks/models/dtos/create",{"_index":752,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/task.dto.ts",{"_index":933,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/task.dto.ts:19",{"_index":1070,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:22",{"_index":1068,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:25",{"_index":1071,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:28",{"_index":1069,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:35",{"_index":1067,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/task.entity.ts",{"_index":1045,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/tasks/models/task.entity.ts:24",{"_index":1057,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:33",{"_index":1050,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:40",{"_index":1049,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:48",{"_index":1056,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:51",{"_index":1058,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:54",{"_index":1052,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":1073,"title":{},"body":{"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/tasks.controller.ts:33",{"_index":1078,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:51",{"_index":1083,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.module.ts",{"_index":1106,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/tasks.service.ts",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["src/tracks/models/dto/create",{"_index":759,"title":{},"body":{"classes/CreateTrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts",{"_index":943,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts:12",{"_index":1131,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/tack.dto.ts:15",{"_index":1128,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/tack.dto.ts:19",{"_index":1130,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/track.entity.ts",{"_index":1124,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/tracks/models/track.entity.ts:16",{"_index":1127,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:25",{"_index":1125,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:28",{"_index":1126,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/tracks.controller.ts",{"_index":1133,"title":{},"body":{"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.controller.ts:31",{"_index":1135,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:42",{"_index":1138,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.module.ts",{"_index":1150,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.service.ts",{"_index":1284,"title":{},"body":{"coverage.html":{}}}],["src/users/models/dto/create",{"_index":765,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/register",{"_index":982,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts",{"_index":946,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts:13",{"_index":1203,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:16",{"_index":1204,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:20",{"_index":1201,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:24",{"_index":1207,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/user.entity.ts",{"_index":1155,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/models/user.entity.ts:39",{"_index":1164,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:47",{"_index":1166,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:56",{"_index":1162,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:59",{"_index":1169,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:67",{"_index":1170,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:70",{"_index":1165,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:72",{"_index":1167,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:74",{"_index":1163,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:81",{"_index":1174,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:84",{"_index":1172,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:89",{"_index":1171,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:92",{"_index":1178,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1209,"title":{},"body":{"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts:33",{"_index":1210,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":1211,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1221,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["stack",{"_index":66,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["stacktrace",{"_index":815,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stage",{"_index":937,"title":{"classes/Stage.html":{}},"body":{"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stage.dto.ts",{"_index":748,"title":{},"body":{"classes/CreateStageDto.html":{},"classes/StagesController.html":{}}}],["stage.dto.ts.ts",{"_index":746,"title":{},"body":{"classes/CreateStageDto.html":{},"coverage.html":{}}}],["stage.modelname",{"_index":1042,"title":{},"body":{"modules/StagesModule.html":{},"miscellaneous/variables.html":{}}}],["stage.schema",{"_index":1043,"title":{},"body":{"modules/StagesModule.html":{},"miscellaneous/variables.html":{}}}],["stagedto",{"_index":747,"title":{"classes/StageDto.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stagemodel",{"_index":1041,"title":{},"body":{"modules/StagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stages.controller",{"_index":1040,"title":{},"body":{"modules/StagesModule.html":{}}}],["stages.service",{"_index":1033,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{}}}],["stages/models/stage.entity.ts",{"_index":1059,"title":{},"body":{"classes/Task.html":{},"classes/Track.html":{}}}],["stages/stages.module",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["stages/stages.service",{"_index":1085,"title":{},"body":{"classes/TasksController.html":{}}}],["stagescontroller",{"_index":1024,"title":{"classes/StagesController.html":{}},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{},"coverage.html":{}}}],["stageservice",{"_index":1029,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["stagesmodule",{"_index":129,"title":{"modules/StagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["stagesservice",{"_index":1027,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":1407,"title":{},"body":{"index.html":{}}}],["started",{"_index":1365,"title":{"index.html":{},"license.html":{}},"body":{}}],["startup",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["stated",{"_index":1395,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":554,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["status",{"_index":67,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["statuscode",{"_index":68,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["strategies/jwt.strategy",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":872,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":43,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1411,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1484,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1477,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1062,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["substantial",{"_index":1490,"title":{},"body":{"license.html":{}}}],["suggested",{"_index":1418,"title":{},"body":{"index.html":{}}}],["super",{"_index":875,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super(categoryservice",{"_index":602,"title":{},"body":{"classes/CategoriesController.html":{}}}],["super(courseservice",{"_index":726,"title":{},"body":{"classes/CoursesController.html":{}}}],["super(stageservice",{"_index":1034,"title":{},"body":{"classes/StagesController.html":{}}}],["super(tasksservice",{"_index":1092,"title":{},"body":{"classes/TasksController.html":{}}}],["super(trackservice",{"_index":1145,"title":{},"body":{"classes/TracksController.html":{}}}],["super(usersservice",{"_index":1215,"title":{},"body":{"classes/UsersController.html":{}}}],["super.canactivate(context",{"_index":861,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.create(input",{"_index":612,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["support",{"_index":1385,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1519,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1259,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["symbol",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":23,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IPagedListDto.html":{}}}],["table",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["tack.dto",{"_index":762,"title":{},"body":{"classes/CreateTrackDto.html":{}}}],["talents",{"_index":1401,"title":{},"body":{"index.html":{}}}],["target",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor.name",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["task",{"_index":1044,"title":{"classes/Task.html":{}},"body":{"classes/Task.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.dto",{"_index":756,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/TasksController.html":{}}}],["task.dto.ts",{"_index":753,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["task.modelname",{"_index":1109,"title":{},"body":{"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["task.schema",{"_index":1110,"title":{},"body":{"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["task.title",{"_index":1094,"title":{},"body":{"classes/TasksController.html":{}}}],["taskcount",{"_index":750,"title":{},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{}}}],["taskdto",{"_index":755,"title":{"classes/TaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskmodel",{"_index":1108,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasks.controller",{"_index":1107,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.service",{"_index":1089,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":1072,"title":{"classes/TasksController.html":{}},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":130,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":1075,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["taskstatus",{"_index":1055,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.not_submitted",{"_index":1053,"title":{},"body":{"classes/Task.html":{}}}],["tcreatedto",{"_index":491,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["technical",{"_index":1379,"title":{},"body":{"index.html":{}}}],["temp",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["temporarytoken",{"_index":342,"title":{"classes/TemporaryToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/TemporaryToken.html":{},"coverage.html":{}}}],["temporarytoken.modelname",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temporarytoken.schema",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temptokens",{"_index":1122,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["temptokensservice",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["tentitydto",{"_index":489,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["test",{"_index":1417,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":771,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/.../db",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/db",{"_index":770,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":627,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["thanks",{"_index":1452,"title":{},"body":{"index.html":{}}}],["this.appservice.getwelcome",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetemptoken",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getauthtoken(req.user",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateemailtoken",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatepasswordtoken",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":478,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.categoryservice.findoneasync",{"_index":608,"title":{},"body":{"classes/CategoriesController.html":{}}}],["this.client.connect",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.emit(autheventenum.userregistered",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config",{"_index":907,"title":{},"body":{"injectables/MailService.html":{}}}],["this.courseservice.findoneasync",{"_index":727,"title":{},"body":{"classes/CoursesController.html":{}}}],["this.createtransport",{"_index":906,"title":{},"body":{"injectables/MailService.html":{}}}],["this.error",{"_index":89,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":91,"title":{},"body":{"classes/ApiException.html":{}}}],["this.firstname",{"_index":1194,"title":{},"body":{"classes/User.html":{}}}],["this.lastname",{"_index":1195,"title":{},"body":{"classes/User.html":{}}}],["this.mailservice.sendmailasync",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.message",{"_index":88,"title":{},"body":{"classes/ApiException.html":{}}}],["this.name",{"_index":564,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.path",{"_index":92,"title":{},"body":{"classes/ApiException.html":{}}}],["this.profileservice.findoneasync",{"_index":971,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.reflector.get",{"_index":997,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.stack",{"_index":90,"title":{},"body":{"classes/ApiException.html":{}}}],["this.stageservice.findbyidasync(input.stage",{"_index":1095,"title":{},"body":{"classes/TasksController.html":{}}}],["this.stageservice.findoneasync",{"_index":1035,"title":{},"body":{"classes/StagesController.html":{}}}],["this.status",{"_index":96,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":95,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tasksservice.findoneasync",{"_index":1093,"title":{},"body":{"classes/TasksController.html":{}}}],["this.timestamp",{"_index":93,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tokenservice",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.createentity",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.harddeletebyid(id",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.insertasync(token",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackservice.findbyidasync(input.track",{"_index":1099,"title":{},"body":{"classes/TasksController.html":{}}}],["this.trackservice.findoneasync",{"_index":1146,"title":{},"body":{"classes/TracksController.html":{}}}],["this.transporter",{"_index":908,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":913,"title":{},"body":{"injectables/MailService.html":{}}}],["this.usersservice.createentity(input",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findoneasync",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["this.usersservice.insertasync(user",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.updateasync(doc.id",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validaterequest(request",{"_index":475,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validatetoken",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":920,"title":{},"body":{"injectables/MailService.html":{}}}],["throw",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["timestamp",{"_index":69,"title":{},"body":{"classes/ApiException.html":{}}}],["timestamps",{"_index":510,"title":{},"body":{"classes/BaseEntity.html":{}}}],["title",{"_index":609,"title":{},"body":{"classes/CategoriesController.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":1399,"title":{},"body":{"index.html":{}}}],["tojson",{"_index":556,"title":{},"body":{"classes/BaseEntity.html":{}}}],["token",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["token')@httpcode(httpstatus.ok",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{}}}],["token.dto.ts",{"_index":1227,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["token.dto.ts:8",{"_index":1228,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.entity",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.entity.ts",{"_index":1112,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["token.entity.ts:16",{"_index":1114,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:19",{"_index":1113,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:27",{"_index":1115,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:30",{"_index":1116,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.service",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.service.ts",{"_index":1246,"title":{},"body":{"coverage.html":{}}}],["token.ts",{"_index":1275,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenparamname",{"_index":42,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["tokenservice",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.email",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokentype.password",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tort",{"_index":1513,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1197,"title":{},"body":{"classes/User.html":{}}}],["totalcount",{"_index":848,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["towards",{"_index":1392,"title":{},"body":{"index.html":{}}}],["tpagedentityoutputdto",{"_index":495,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["tpagedinputdto",{"_index":837,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["tpagedoutputdto",{"_index":839,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["track",{"_index":936,"title":{"classes/Track.html":{}},"body":{"classes/PagedListTaskDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["track.dto",{"_index":1141,"title":{},"body":{"classes/TracksController.html":{}}}],["track.dto.ts",{"_index":760,"title":{},"body":{"classes/CreateTrackDto.html":{},"coverage.html":{}}}],["track.modelname",{"_index":1153,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["track.schema",{"_index":1154,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["trackdto",{"_index":761,"title":{"classes/TrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["trackmodel",{"_index":1152,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tracks.controller",{"_index":1151,"title":{},"body":{"modules/TracksModule.html":{}}}],["tracks.service",{"_index":1144,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["tracks/models/track.entity",{"_index":1060,"title":{},"body":{"classes/Task.html":{}}}],["tracks/tracks.module",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["tracks/tracks.service",{"_index":1084,"title":{},"body":{"classes/TasksController.html":{}}}],["trackscontroller",{"_index":1132,"title":{"classes/TracksController.html":{}},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["trackservice",{"_index":1076,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["tracksmodule",{"_index":131,"title":{"modules/TracksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["tracksservice",{"_index":1077,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["transform",{"_index":560,"title":{},"body":{"classes/BaseEntity.html":{}}}],["transformer",{"_index":506,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transport",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["transport.redis",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["transporter",{"_index":890,"title":{},"body":{"injectables/MailService.html":{}}}],["trim",{"_index":626,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["true",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["tsconfig",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["tupdatedto",{"_index":493,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedListTaskDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1526,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose/typegoose",{"_index":548,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":549,"title":{},"body":{"classes/BaseEntity.html":{}}}],["typeof",{"_index":823,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["types/abstract.type",{"_index":850,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["ui",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('password",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["unconfirmed",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["unconfirmed_email",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["undefined})@apibearerauth()@apiresponse({status",{"_index":1137,"title":{},"body":{"classes/TracksController.html":{}}}],["undefined})@apiresponse({status",{"_index":580,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["undefined})@exclude",{"_index":1168,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":628,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["update",{"_index":364,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":842,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["updatedat",{"_index":499,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["updatedby",{"_index":516,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["updatedto",{"_index":492,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["updateresulttype",{"_index":1533,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["uppercase",{"_index":629,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{}}}],["uri",{"_index":672,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["url(clientbaseurl",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(emailparamname",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(tokenparamname",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1473,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":623,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["usecreateindex",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":783,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["useguards(authenticationguard",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":603,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["usenewurlparser",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":245,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/ProfileController.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1175,"title":{},"body":{"classes/User.html":{}}}],["user.dto",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UsersController.html":{}}}],["user.dto.ts",{"_index":766,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":984,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:17",{"_index":986,"title":{},"body":{"classes/RegisterUserResDto.html":{}}}],["user.email",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":949,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["user.fullname",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.isactive",{"_index":479,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["user.isemailverified",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.modelname",{"_index":1224,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user.password",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1225,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user_registered",{"_index":1357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userdto",{"_index":767,"title":{"classes/UserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{}}}],["usermodel",{"_index":1223,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userregistered",{"_index":1356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userrole",{"_index":359,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":599,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentee",{"_index":955,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["userrole.mentor",{"_index":600,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentor)@apibearerauth()@apiresponse({status",{"_index":1082,"title":{},"body":{"classes/TasksController.html":{}}}],["userrole.mentor)@apiresponse({type",{"_index":1136,"title":{},"body":{"classes/TracksController.html":{}}}],["userrole})@expose",{"_index":1206,"title":{},"body":{"classes/UserDto.html":{}}}],["users.controller",{"_index":1222,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1214,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/models/dto/register",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["users/models/dto/user.dto",{"_index":967,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users/models/user.entity",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/TracksController.html":{}}}],["users/users.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["users/users.service",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["userscontroller",{"_index":1208,"title":{"classes/UsersController.html":{}},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":132,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usr/local/bin/mongod",{"_index":777,"title":{},"body":{"modules/DbTest.html":{}}}],["valid('development",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":865,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/ResetPassInput.html":{}}}],["validate(payload",{"_index":867,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateemailtoken",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken(input",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken(resetpassinput",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":465,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validaterequest(request",{"_index":472,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validatetoken",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(userid",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetokeninput",{"_index":221,"title":{"classes/ValidateTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["validatetokeninput:8",{"_index":990,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validateuser",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":53,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/FindDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["value",{"_index":522,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1537,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification.dto",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["verification.dto.ts",{"_index":39,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["verification.dto.ts:10",{"_index":50,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:12",{"_index":49,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:8",{"_index":47,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verified",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(@body",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(input",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["versionkey",{"_index":559,"title":{},"body":{"classes/BaseEntity.html":{}}}],["virtuals",{"_index":558,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vm",{"_index":29,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["void",{"_index":538,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["wait",{"_index":1442,"title":{},"body":{"index.html":{}}}],["want",{"_index":1446,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1497,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1493,"title":{},"body":{"license.html":{}}}],["website",{"_index":1370,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":177,"title":{},"body":{"injectables/AppService.html":{}}}],["wherever",{"_index":1386,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1510,"title":{},"body":{"license.html":{}}}],["without",{"_index":1468,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1419,"title":{},"body":{"index.html":{}}}],["writable",{"_index":551,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["writable).isactive",{"_index":567,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isdeleted",{"_index":565,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isemailverified",{"_index":1198,"title":{},"body":{"classes/User.html":{}}}],["writable).password",{"_index":1189,"title":{},"body":{"classes/User.html":{}}}],["writers",{"_index":1380,"title":{},"body":{"index.html":{}}}],["yes",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["zoom",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControllerOptions.html":{"url":"interfaces/AbstractControllerOptions.html","title":"interface - AbstractControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithAuthOptions.html":{"url":"interfaces/AbstractControllerWithAuthOptions.html","title":"interface - AbstractControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithSwaggerOptions.html":{"url":"interfaces/AbstractControllerWithSwaggerOptions.html","title":"interface - AbstractControllerWithSwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithSwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        modelCreate\n                                \n                                \n                                        modelVm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        modelCreate\n                                    \n                                \n                                \n                                    \n                                        modelCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelVm\n                                    \n                                \n                                \n                                    \n                                        modelVm:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctVerifyDto.html":{"url":"classes/AcctVerifyDto.html","title":"class - AcctVerifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctVerifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/acct-verification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBaseUrl\n                            \n                            \n                                emailParamName\n                            \n                            \n                                tokenParamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty, IsUrl } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class AcctVerifyDto extends PickType(LoginReqDto, ['email']) {\n  @IsUrl()\n  clientBaseUrl: string;\n  @IsNotEmpty()\n  tokenParamName: string;\n  @IsNotEmpty()\n  emailParamName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/errors/api-exception.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: any, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/shared/errors/api-exception.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport configuration from '../config/configuration';\n\nexport class ApiException {\n  @ApiProperty()\n  statusCode?: number;\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  status?: string;\n  @ApiProperty()\n  error?: string;\n  @ApiProperty()\n  errors?: any;\n  @ApiProperty()\n  timestamp?: string;\n  @ApiProperty()\n  path?: string;\n  @ApiProperty()\n  stack?: string;\n\n  constructor(\n    message: string,\n    error: string,\n    stack: string,\n    errors: any,\n    path: string,\n    statusCode: number\n  ) {\n    this.message = message;\n    this.error = error;\n    this.stack = stack;\n    this.errors = errors;\n    this.path = path;\n    this.timestamp = new Date().toISOString();\n    this.statusCode = statusCode;\n    this.status = HttpStatus[statusCode];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getWelcome();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            StagesModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { CoursesModule } from './courses/courses.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { SharedModule } from './shared';\nimport configuration from './shared/config/configuration';\nimport { MailModule } from './shared/mail/mail.module';\nimport { envValidation } from './shared/validations/env.validation';\nimport { StagesModule } from './stages/stages.module';\nimport { TracksModule } from './tracks/tracks.module';\nimport { UsersModule } from './users/users.module';\nimport { TasksModule } from './tasks/tasks.module';\n\nexport const Config = ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n});\nconst Database = MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n});\n@Module({\n  imports: [\n    SharedModule,\n    AuthModule,\n    UsersModule,\n    Config,\n    Database,\n    MailModule,\n    ProfileModule,\n    TracksModule,\n    CoursesModule,\n    CategoriesModule,\n    StagesModule,\n    TasksModule\n  ],\n\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWelcome\n                        \n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcome(): string {\n    return 'Welcome to CCN!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                sendEmailVerifyToken\n                            \n                            \n                                    Async\n                                sendForgotPwToken\n                            \n                            \n                                    Async\n                                verifyEmailToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(_: LoginReqDto, req?: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginResDto})@ApiUnauthorizedResponse({type: ApiException})@UseGuards(AuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                LoginReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(input: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiConflictResponse({type: ApiException})@ApiResponse({type: RegisterUserResDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(input: ResetPassInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPassInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailVerifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerifyToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email-confirmation-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendForgotPwToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendForgotPwToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-password-reset-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmailToken(input: ValidateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ValidateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Post,\n  Req,\n  UnauthorizedException,\n  UseGuards\n} from '@nestjs/common';\nimport {\n  ApiConflictResponse,\n  ApiOkResponse,\n  ApiResponse,\n  ApiTags,\n  ApiUnauthorizedResponse\n} from '@nestjs/swagger';\nimport { Request } from 'express';\n\nimport { LoginReqDto } from '../auth/models/dto/auth.dto';\nimport configuration from '../shared/config/configuration';\nimport { ApiException } from '../shared/errors/api-exception';\nimport { MailService } from '../shared/mail/mail.service';\nimport {\n  RegisterUserDto,\n  RegisterUserResDto\n} from '../users/models/dto/register-user.dto';\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { AuthenticationGuard } from './guards/auth.guard';\nimport { AcctVerifyDto } from './models/dto/acct-verification.dto';\nimport { LoginResDto } from './models/dto/auth.dto';\nimport { ResetPassInput } from './models/dto/reset-pw.dto';\nimport { ValidateTokenInput } from './models/dto/validate-token.dto';\nimport { TokenType } from './models/temporary-token.entity';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly mailService: MailService\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: LoginResDto })\n  @ApiUnauthorizedResponse({ type: ApiException })\n  @UseGuards(AuthenticationGuard)\n  async login(\n    @Body() _: LoginReqDto,\n    @Req() req?: Request\n  ): Promise {\n    const accessToken = await this.authService.getAuthToken(req.user as User);\n    return { accessToken };\n  }\n  @Post('register')\n  @ApiConflictResponse({ type: ApiException })\n  @ApiResponse({ type: RegisterUserResDto, status: HttpStatus.CREATED })\n  async register(@Body() input: RegisterUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    const saved = await this.usersService.insertAsync(user);\n\n    return { canLogin: saved.isEmailVerified };\n  }\n\n  @Post('send-email-confirmation-token')\n  @HttpCode(HttpStatus.OK)\n  async sendEmailVerifyToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User with email does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email has already been confirmed');\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.EMAIL,\n      expiresInMins: 60 * 24\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please confirm your email here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n  @Post('confirm-email')\n  @HttpCode(HttpStatus.OK)\n  async verifyEmailToken(@Body() input: ValidateTokenInput): Promise {\n    const { email, token } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email already verified');\n    await this.authService.validateEmailToken({\n      userId: user.id,\n      plainToken: token\n    });\n  }\n  @Post('send-password-reset-token')\n  @HttpCode(HttpStatus.OK)\n  async sendForgotPwToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) return;\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.PASSWORD,\n      expiresInMins: 10\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please reset your password here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n\n  @Post('reset-password')\n  @HttpCode(HttpStatus.OK)\n  async resetPassword(@Body() input: ResetPassInput): Promise {\n    const { email, token, newPassword } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new UnauthorizedException('Password reset failed');\n    await this.authService.validatePasswordToken({\n      userId: exist.id,\n      plainToken: token,\n      newPassword\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            TempTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\nimport { MailService } from '../shared/mail/mail.service';\nimport { UsersModule } from '../users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { TemporaryToken } from './models/temporary-token.entity';\nimport { SessionSerializer } from './session.serializer';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { TempTokensService } from './temp-token.service';\n\nconst Config = [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n];\n@Module({\n  imports: [UsersModule, ...Config],\n  providers: [\n    AuthService,\n    JwtStrategy,\n    SessionSerializer,\n    MailService,\n    TempTokensService\n  ],\n  controllers: [AuthController],\n  exports: [AuthService, ...Config]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthObj.html":{"url":"interfaces/AuthObj.html","title":"interface - AuthObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authRoles\n                                \n                                \n                                        enableAuth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authRoles\n                                    \n                                \n                                \n                                    \n                                        authRoles:         UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableAuth\n                                    \n                                \n                                \n                                    \n                                        enableAuth:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTempToken\n                            \n                            \n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                pub\n                            \n                            \n                                    Async\n                                validateEmailToken\n                            \n                            \n                                    Async\n                                validatePasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, tokenService: TempTokensService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TempTokensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateTempToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTempToken(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pub\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pub()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmailToken(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePasswordToken(resetPassInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPassInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(userId: string, type: TokenType, plainToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ClientRedis\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Client({transport: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  HttpException,\n  HttpStatus,\n  Injectable,\n  OnModuleInit\n} from '@nestjs/common';\nimport { Client, ClientRedis, Transport } from '@nestjs/microservices';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport configuration from '~shared/config/configuration';\nimport { authErrors } from '~shared/errors';\nimport { generateRandomToken } from '~shared/utils/random-token';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthEventEnum } from './models/auth.enums';\nimport { JwtPayload } from './models/jwt-payload';\nimport { TokenType } from './models/temporary-token.entity';\nimport { TempTokensService } from './temp-token.service';\n\n@Injectable()\nexport class AuthService implements OnModuleInit {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly tokenService: TempTokensService\n  ) {}\n  @Client({ transport: Transport.REDIS })\n  private client: ClientRedis;\n\n  async onModuleInit(): Promise {\n    // Connect your client to the redis server on startup.\n    try {\n      // await this.client.connect();\n    } catch (error) {\n      //Logger.error(error);\n    }\n  }\n  async validateUser(email: string, pw: string): Promise {\n    const user = await this.usersService.findOneAsync({\n      email: email?.toLowerCase()\n    });\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    if (!user.isEmailVerified)\n      throw new HttpException(\n        { message: 'Unconfirmed Email', errorType: 'UNCONFIRMED_EMAIL' },\n        HttpStatus.UNAUTHORIZED\n      );\n    const isValid = await bcrypt.compare(pw, user.password);\n    if (!isValid) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    return user;\n  }\n\n  async getAuthToken(user: User): Promise {\n    const { jwtValidityHrs, jwtSecret } = configuration();\n    const expiresIn = 60 * 60 * jwtValidityHrs;\n    const payload: JwtPayload = {\n      email: user.email,\n      userId: user.id,\n      role: user.role\n    };\n    return jwt.sign(payload, jwtSecret, { expiresIn });\n  }\n\n  async pub(): Promise {\n    this.client.emit(AuthEventEnum.UserRegistered, 'email');\n  }\n\n  async generateTempToken({\n    user,\n    type,\n    expiresInMins\n  }: {\n    user: User;\n    type: TokenType;\n    expiresInMins: number;\n  }): Promise {\n    const plainToken = generateRandomToken(64);\n    const encryptedToken = await bcrypt.hash(plainToken, 10);\n    const token = this.tokenService.createEntity({\n      token: encryptedToken,\n      expireAt: new Date(new Date().getTime() + expiresInMins * 60000),\n      type,\n      user: user.id as any\n    });\n    await this.tokenService.insertAsync(token);\n    return plainToken;\n  }\n  async validateEmailToken(input: {\n    userId: string;\n    plainToken: string;\n  }): Promise {\n    const { userId, plainToken } = input;\n\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.EMAIL,\n      plainToken\n    );\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { isEmailVerified: true });\n    await this.tokenService.hardDeleteById(id);\n  }\n  async validatePasswordToken(resetPassInput: {\n    userId: string;\n    plainToken: string;\n    newPassword: string;\n  }): Promise {\n    const { userId, plainToken, newPassword } = resetPassInput;\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.PASSWORD,\n      plainToken\n    );\n    const passwordHash = await bcrypt.hash(newPassword, 10);\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { password: passwordHash });\n    await this.tokenService.hardDeleteById(id);\n  }\n  private async validateToken(\n    userId: string,\n    type: TokenType,\n    plainToken: string\n  ) {\n    const exist = await this.tokenService\n      .findOne({ user: userId, type })\n      .populate('user');\n\n    if (!exist) throw authErrors.EXPIRED_TOKEN;\n    try {\n      const isValid = await bcrypt.compare(plainToken, exist.token);\n      if (!isValid) throw authErrors.INVALID_TOKEN;\n    } catch (error) {\n      throw authErrors.INVALID_TOKEN;\n    }\n    return exist;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nimport configuration from '../../shared/config/configuration';\nimport { AuthService } from '../auth.service';\nimport { LoginReqDto } from '../models/dto/auth.dto';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    return await this.validateRequest(request);\n  }\n  async validateRequest(request: Request): Promise {\n    if (!configuration().isAuthEnabled) return true;\n    const { email, password }: LoginReqDto = request.body;\n    const user = await this.authService.validateUser(email, password);\n\n    if (!user || !user.isActive) throw new UnauthorizedException();\n    request.user = user;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerOptions.html":{"url":"interfaces/BaseControllerOptions.html","title":"interface - BaseControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithAuthOptions.html":{"url":"interfaces/BaseControllerWithAuthOptions.html","title":"interface - BaseControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithSwaggerOpts.html":{"url":"interfaces/BaseControllerWithSwaggerOpts.html","title":"interface - BaseControllerWithSwaggerOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithSwaggerOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createDto\n                                \n                                \n                                        entityDto\n                                \n                                \n                                        pagedListDto\n                                \n                                \n                                        updateDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDto\n                                    \n                                \n                                \n                                    \n                                        createDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDto\n                                    \n                                \n                                \n                                    \n                                        entityDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagedListDto\n                                    \n                                \n                                \n                                    \n                                        pagedListDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDto\n                                    \n                                \n                                \n                                    \n                                        updateDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/base.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nexport class BaseDto {\n  @IsMongoId()\n  @Expose()\n  readonly id: string;\n  @ApiProperty()\n  @Expose()\n  readonly updatedAt: Date;\n  @ApiProperty()\n  @Expose()\n  readonly createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:71\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:62\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:53\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop, Ref } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { Schema } from 'mongoose';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { User } from '../../users/models/user.entity';\n\nexport class BaseEntity extends TimeStamps {\n  id: string;\n\n  @prop({ required: true, default: false })\n  readonly isDeleted!: boolean;\n  @prop({ default: null, ref: BaseEntity })\n  readonly createdBy?: Ref = null;\n  @prop({ default: null, ref: BaseEntity })\n  readonly updatedBy?: Ref = null;\n  @prop({ required: true, default: true })\n  readonly isActive: boolean = true;\n  @prop({ default: null, ref: BaseEntity })\n  readonly deletedBy?: Ref = null;\n  @prop({ default: null })\n  readonly deletedAt?: Date;\n  @prop({ required: true, default: new Date() })\n  readonly createdAt: Date = new Date();\n  @prop({ required: true, default: new Date() })\n  readonly updatedAt: Date = null;\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true,\n        versionKey: false,\n        transform: (_, ret) => {\n          ret.id = ret._id;\n          delete ret._id;\n        }\n      }\n    });\n  }\n  static get modelName(): string {\n    return this.name;\n  }\n  delete(): void {\n    (this as Writable).isDeleted = true;\n  }\n\n  /**\n   * Sets {isDeleted} to false\n   *\n   * @memberof BaseEntity\n   */\n  restore(): void {\n    (this as Writable).isDeleted = false;\n  }\n\n  /**\n   * Sets {isActive} to true\n   *\n   * @memberof BaseEntity\n   */\n  deactivate(): void {\n    (this as Writable).isActive = false;\n  }\n\n  /**\n   * Sets isActive to false\n   *\n   * @memberof BaseEntity\n   */\n  activate(): void {\n    (this as Writable).isActive = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoriesController.html":{"url":"classes/CategoriesController.html","title":"class - CategoriesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.controller.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: CategoryDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\nimport { CategoryDto, PagedCategoryOutDto } from './models/dtos/category.dto';\nimport { CreateCategoryDto } from './models/dtos/create-category.dto';\n\nconst BaseCtrl = BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedListDto: PagedCategoryOutDto\n});\n\nexport class CategoriesController extends BaseCtrl {\n  constructor(protected readonly categoryService: CategoriesService) {\n    super(categoryService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: CategoryDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateCategoryDto): Promise {\n    const exist = await this.categoryService.findOneAsync({\n      title: input.name.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Category with the name \"${exist.name}\" already exists`\n      );\n\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\n\nCategoriesService \n\nCategoriesService \n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CategoriesController } from './categories.controller';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\n\nconst CategoryModel = MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n]);\n@Module({\n  imports: [CategoryModel],\n  providers: [\n    CategoriesService,\n    { provide: BaseService, useClass: CategoriesService }\n  ],\n  controllers: [CategoriesController],\n  exports: [CategoriesService, CategoryModel]\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/category.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false, uppercase: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/category.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ name: 1 }, { unique: true })\nexport class Category extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false,\n    uppercase: true\n  })\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appEmail\n                                \n                                \n                                        database\n                                \n                                \n                                        environment\n                                \n                                \n                                        isAuthEnabled\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        jwtValidityHrs\n                                \n                                \n                                        mailer\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUrl\n                                \n                                \n                                        rootUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appEmail\n                                    \n                                \n                                \n                                    \n                                        appEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         Database\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Database\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthEnabled\n                                    \n                                \n                                \n                                    \n                                        isAuthEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtValidityHrs\n                                    \n                                \n                                \n                                    \n                                        jwtValidityHrs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                    \n                                \n                                \n                                    \n                                        mailer:         Mailer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Mailer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUrl\n                                    \n                                \n                                \n                                    \n                                        redisUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControllerAuth.html":{"url":"interfaces/ControllerAuth.html","title":"interface - ControllerAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ControllerAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        create\n                                \n                                \n                                        delete\n                                \n                                \n                                        find\n                                \n                                \n                                        findById\n                                \n                                \n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                    Readonly\n                                playlistUrl\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Course extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    unique: false\n  })\n  readonly playlistUrl!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly enrollmentCount!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseDto.html":{"url":"classes/CourseDto.html","title":"class - CourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                playlistUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length128)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()@MaxLength(columnSize.length256)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @Expose()\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoursesController.html":{"url":"classes/CoursesController.html","title":"class - CoursesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CoursesService)\n                    \n                \n                        \n                            \n                                Defined in src/courses/courses.controller.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CoursesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCourseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: CourseDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCourseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\nimport { CourseDto, PagedCourseOutputDto } from './models/dtos/course.dto';\nimport { CreateCourseDto } from './models/dtos/create-course.dto';\n\nexport class CoursesController extends BaseCrudController({\n  entity: Course,\n  entityDto: CourseDto,\n  createDto: CreateCourseDto,\n  updateDto: CreateCourseDto,\n  pagedListDto: PagedCourseOutputDto,\n  auth: {\n    create: [UserRole.MENTOR, UserRole.ADMIN],\n    update: [UserRole.MENTOR, UserRole.ADMIN],\n    delete: [UserRole.MENTOR, UserRole.ADMIN]\n  }\n}) {\n  constructor(protected readonly courseService: CoursesService) {\n    super(courseService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: CourseDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateCourseDto): Promise {\n    const exist = await this.courseService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Course with the title \"${exist.title}\" already exists`\n      );\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nCoursesService \n\nCoursesService \n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CoursesController } from './courses.controller';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\n\nconst CourseModel = MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n]);\n@Module({\n  imports: [CourseModel],\n  providers: [\n    CoursesService,\n    { provide: BaseService, useClass: CoursesService }\n  ],\n  controllers: [CoursesController],\n  exports: [CoursesService, CourseModel]\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/create-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CategoryDto } from './category.dto';\n\nexport class CreateCategoryDto extends PickType(CategoryDto, [\n  'name',\n  'description'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDto.html":{"url":"classes/CreateCourseDto.html","title":"class - CreateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/create-course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CourseDto } from './course.dto';\n\nexport class CreateCourseDto extends PickType(CourseDto, [\n  'title',\n  'description',\n  'playlistUrl'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStageDto.html":{"url":"classes/CreateStageDto.html","title":"class - CreateStageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/create-stage.dto.ts.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { StageDto } from './stage.dto.ts';\n\nexport class CreateStageDto extends PickType(StageDto, [\n  'title',\n  'description',\n  'taskCount'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/create-task.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\n\nimport { TaskDto } from './task.dto';\n\n@Exclude()\nexport class CreateTaskDto extends OmitType(TaskDto, [\n  'createdAt',\n  'updatedAt',\n  'id'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrackDto.html":{"url":"classes/CreateTrackDto.html","title":"class - CreateTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { TrackDto } from './tack.dto';\n\nexport class CreateTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto extends OmitType(UserDto, [\n  'id',\n  'updatedAt',\n  'createdAt'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Database.html":{"url":"interfaces/Database.html","title":"interface - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        name\n                                \n                                \n                                        port\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DbTest.html":{"url":"modules/DbTest.html","title":"module - DbTest","body":"\n                   \n\n\n\n\n    Modules\n    DbTest\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/db-test.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nprocess.env.MAILER_API_KEY = 'api_key_mailgun';\nprocess.env.MONGOMS_SYSTEM_BINARY = '/usr/local/bin/mongod';\nprocess.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\nconst dbServer = new MongoMemoryServer();\nexport const inMemoryDb = dbServer;\n\nconst dbFactory = MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n});\n\n@Module({\n  imports: [dbFactory],\n  exports: [dbFactory]\n})\nexport class DbTest {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultAuthObject.html":{"url":"interfaces/DefaultAuthObject.html","title":"interface - DefaultAuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultAuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        create\n                                \n                                \n                                            Optional\n                                        delete\n                                \n                                \n                                            Optional\n                                        find\n                                \n                                \n                                            Optional\n                                        findById\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindDto.html":{"url":"classes/FindDto.html","title":"class - FindDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/find.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                opts\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            opts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsJSON()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsJSON()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsJSON, IsOptional } from 'class-validator';\n\nexport class FindDto {\n  @IsOptional()\n  skip?: number = 0;\n  @IsOptional()\n  limit?: number = 100;\n  @IsOptional()\n  @IsJSON()\n  search?: string;\n  @IsJSON()\n  @IsOptional()\n  opts?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiException } from '../errors/api-exception';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(error: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse() as Response;\n    const req = ctx.getRequest();\n    const statusCode = error.getStatus();\n    const stacktrace = error.stack;\n    const errorName = error.response.name || error.response.error || error.name;\n    const errors = error.response.errors || null;\n    const path = req ? req.url : null;\n\n    if (statusCode === HttpStatus.UNAUTHORIZED) {\n      if (typeof error.response !== 'string') {\n        error.response.message =\n          error.response.message ||\n          'You do not have permission to access this resource';\n      }\n    }\n\n    const exception = new ApiException(\n      error.response.message,\n      errorName,\n      stacktrace,\n      errors,\n      path,\n      statusCode\n    );\n    res.status(statusCode).json(exception);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseController.html":{"url":"interfaces/IBaseController.html","title":"interface - IBaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    create\n                                \n                                \n                                    delete\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findById\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(input: TCreateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(input: TPagedInputDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TPagedInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPagedOutputDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, input: TUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                            TUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IBaseController {\n  create(input: TCreateDto): TEntityDto | Promise;\n  findAll(input: TPagedInputDto): TPagedOutputDto | Promise;\n  findById(input: string): TEntityDto | Promise;\n  update(id: string, input: TUpdateDto): TEntityDto | Promise;\n  delete(id: string): void | Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagedListDto.html":{"url":"interfaces/IPagedListDto.html","title":"interface - IPagedListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagedListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-list.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        totalCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { ClassType } from '../../types/abstract.type';\n\nexport interface IPagedListDto {\n  totalCount: number;\n  items: T[];\n}\n\nexport function PagedListDto(\n  entityDto: T\n): Type> {\n  class Paged implements IPagedListDto {\n    totalCount: number;\n    @ApiProperty({ type: entityDto })\n    items: T[];\n  }\n\n  return Paged;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport configuration from '~shared/config/configuration';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(AUTH_GUARD_TYPE) {\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise | Observable {\n    // console.log(context.switchToHttp().getRequest().sessionID);\n    return configuration().isAuthEnabled ? super.canActivate(context) : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        role\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\nexport interface JwtPayload {\n  email: string;\n  role: UserRole;\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload | PromiseLike)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload | PromiseLike\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport configuration from '../../shared/config/configuration';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().jwtSecret\n    });\n  }\n\n  async validate(\n    payload: JwtPayload | PromiseLike\n  ): Promise {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReqDto.html":{"url":"classes/LoginReqDto.html","title":"class - LoginReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResDto.html":{"url":"classes/LoginResDto.html","title":"class - LoginResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTransport\n                            \n                            \n                                    Async\n                                sendMailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/mail/mail.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTransport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMailAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailAsync(mailOptions: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : configuration()\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Mail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as mg from 'nodemailer-mailgun-transport';\nimport Mail = require('nodemailer/lib/mailer');\nimport configuration from '~shared/config/configuration';\n\n@Injectable()\nexport class MailService {\n  private readonly config = configuration();\n  private transporter: Mail;\n  constructor() {\n    this.createTransport();\n  }\n\n  private createTransport() {\n    const { mailer } = this.config;\n    this.transporter = nodemailer.createTransport(\n      mg({\n        auth: {\n          api_key: mailer.key,\n          domain: mailer.domain\n        }\n      })\n    );\n  }\n\n  async sendMailAsync(mailOptions: Mail.Options) {\n    const info = await this.transporter.sendMail(mailOptions);\n    Logger.debug(`Message sent: ${info.messageId}`);\n\n    // Preview only available when sending through an Ethereal account\n    // Logger.debug(`Preview URL: ${nodemailer.getTestMessageUrl(info)}`);\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mailer.html":{"url":"interfaces/Mailer.html","title":"interface - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCategoryOutDto.html":{"url":"classes/PagedCategoryOutDto.html","title":"class - PagedCategoryOutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCategoryOutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCourseOutputDto.html":{"url":"classes/PagedCourseOutputDto.html","title":"class - PagedCourseOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCourseOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @Expose()\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListStageDto.html":{"url":"classes/PagedListStageDto.html","title":"class - PagedListStageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/stage.dto.ts.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose, Exclude } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength, Min, IsInt } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class StageDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  taskCount: number;\n}\nexport class PagedListStageDto extends PagedListDto(StageDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListTaskDto.html":{"url":"classes/PagedListTaskDto.html","title":"class - PagedListTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/task.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport {\n  IsAlphanumeric,\n  IsDate,\n  IsMongoId,\n  IsOptional,\n  MaxLength,\n  MinDate\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TaskDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @IsMongoId()\n  @Expose()\n  track: string;\n  @IsMongoId()\n  @Expose()\n  stage: string;\n  @Expose()\n  @IsDate()\n  @MinDate(new Date(), { message: 'Date must be in future' })\n  @IsOptional()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  deadline?: Date;\n}\nexport class PagedListTaskDto extends PagedListDto(TaskDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedTrackOutputDto.html":{"url":"classes/PagedTrackOutputDto.html","title":"class - PagedTrackOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedTrackOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/tack.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsMongoId, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n\n  @Expose()\n  @IsMongoId()\n  stage: string;\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedUserOutputDto.html":{"url":"classes/PagedUserOutputDto.html","title":"class - PagedUserOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedUserOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsEmail, IsEnum, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { UserRole } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n  @Expose()\n  @MaxLength(columnSize.length64)\n  lastName: string;\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  @Expose()\n  email: string;\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  @Expose()\n  role?: UserRole = UserRole.MENTEE;\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { UserDto } from '../users/models/dto/user.dto';\nimport { UsersService } from '../users/users.service';\n\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: UsersService) {}\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  async getProfile(@Req() req: Request): Promise {\n    const user = await this.profileService.findOneAsync({\n      email: req.user['email']\n    });\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nProfileModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { UsersModule } from '../users/users.module';\nimport { UsersService } from '../users/users.service';\nimport { ProfileController } from './profile.controller';\n\n@Module({\n  imports: [UsersModule],\n  providers: [UsersService],\n  controllers: [ProfileController],\n  exports: [UsersService]\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserResDto.html":{"url":"classes/RegisterUserResDto.html","title":"class - RegisterUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                canLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            canLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassInput.html":{"url":"classes/ResetPassInput.html","title":"class - ResetPassInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/reset-pw.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ValidateTokenInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/reset-pw.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nimport { ValidateTokenInput } from './validate-token.dto';\n\nexport class ResetPassInput extends ValidateTokenInput {\n  @IsNotEmpty()\n  newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport configuration from '~shared/config/configuration';\n\nimport { UserRole } from '../../users/models/user.entity';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      UserRole,\n      context.getHandler()\n    );\n    if (!roles || !configuration().isAuthEnabled) return true;\n\n    const request = context.switchToHttp().getRequest();\n    const { role } = request.user as JwtPayload;\n    return roles.includes(role);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n  deserializeUser(user: User, done: (err: Error, user: User) => void): any {\n    //Logger.log(user);\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\n@Global()\n@Module({\n  imports: [],\n  providers: [],\n  exports: []\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stage.html":{"url":"classes/Stage.html","title":"class - Stage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/stage.entity.ts.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                taskCount\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            taskCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Stage extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly taskCount!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StageDto.html":{"url":"classes/StageDto.html","title":"class - StageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/stage.dto.ts.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                taskCount\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@Min(0)@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose, Exclude } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength, Min, IsInt } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class StageDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  taskCount: number;\n}\nexport class PagedListStageDto extends PagedListDto(StageDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StagesController.html":{"url":"classes/StagesController.html","title":"class - StagesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/stages.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stageService: StagesService)\n                    \n                \n                        \n                            \n                                Defined in src/stages/stages.controller.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stageService\n                                                  \n                                                        \n                                                                        StagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateStageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: StageDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/stages/stages.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateStageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateStageDto } from './models/dtos/create-stage.dto.ts';\nimport { PagedListStageDto, StageDto } from './models/dtos/stage.dto.ts';\nimport { Stage } from './models/stage.entity.ts';\nimport { StagesService } from './stages.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Stage,\n  entityDto: StageDto,\n  createDto: CreateStageDto,\n  updateDto: CreateStageDto,\n  pagedListDto: PagedListStageDto,\n  auth: {\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n});\n\nexport class StagesController extends BaseCtrl {\n  constructor(protected stageService: StagesService) {\n    super(stageService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: StageDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateStageDto): Promise {\n    const exist = await this.stageService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Stage with the title \"${exist.title}\" already exists`\n      );\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StagesModule.html":{"url":"modules/StagesModule.html","title":"module - StagesModule","body":"\n                   \n\n\n\n\n    Modules\n    StagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_providers\n\n\n\n\nStagesService \n\nStagesService \n\n\n\nStagesModule\n\nStagesModule\n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stages/stages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StagesService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { Stage } from './models/stage.entity.ts';\nimport { StagesController } from './stages.controller';\nimport { StagesService } from './stages.service';\n\nconst StageModel = MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n]);\nconst baseService = { provide: BaseService, useClass: StagesService };\n@Module({\n  imports: [StageModel],\n  providers: [StagesService, baseService],\n  controllers: [StagesController],\n  exports: [StageModel, StagesService, baseService]\n})\nexport class StagesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                deadline\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                stage\n                            \n                            \n                                    Readonly\n                                status\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date(new Date().setDate(new Date().getDate() + 7))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Stage, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TaskStatus.NOT_SUBMITTED\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TaskStatus, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Track, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { Stage } from '../../stages/models/stage.entity.ts';\nimport { Track } from '../../tracks/models/track.entity';\n\nexport enum TaskStatus {\n  NOT_SUBMITTED = 'NOT_SUBMITTED',\n  SUBMITTED = 'SUBMITTED',\n  PENDING = 'PENDING'\n}\n\n@index({ title: 1 }, { unique: true })\nexport class Task extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    type: Date,\n    default: new Date(new Date().setDate(new Date().getDate() + 7))\n  })\n  readonly deadline = new Date(new Date().setDate(new Date().getDate() + 7));\n\n  @prop({\n    enum: TaskStatus,\n    type: String,\n    required: true,\n    default: TaskStatus.NOT_SUBMITTED\n  })\n  readonly status = TaskStatus.NOT_SUBMITTED;\n\n  @prop({ ref: Track, required: true })\n  readonly track!: Ref;\n\n  @prop({ ref: Stage, required: true })\n  readonly stage!: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskDto.html":{"url":"classes/TaskDto.html","title":"class - TaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/task.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                deadline\n                            \n                            \n                                description\n                            \n                            \n                                stage\n                            \n                            \n                                title\n                            \n                            \n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsDate()@MinDate(new Date(), {message: 'Date must be in future'})@IsOptional()@ApiProperty({type: Date})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport {\n  IsAlphanumeric,\n  IsDate,\n  IsMongoId,\n  IsOptional,\n  MaxLength,\n  MinDate\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TaskDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @IsMongoId()\n  @Expose()\n  track: string;\n  @IsMongoId()\n  @Expose()\n  stage: string;\n  @Expose()\n  @IsDate()\n  @MinDate(new Date(), { message: 'Date must be in future' })\n  @IsOptional()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  deadline?: Date;\n}\nexport class PagedListTaskDto extends PagedListDto(TaskDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TasksController.html":{"url":"classes/TasksController.html","title":"class - TasksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksService: TasksService, stageService: StagesService, trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/tasks.controller.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stageService\n                                                  \n                                                        \n                                                                        StagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: TaskDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TracksService } from './../tracks/tracks.service';\nimport { StagesService } from './../stages/stages.service';\nimport {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards,\n  NotFoundException,\n  Inject\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateTaskDto } from './models/dtos/create-task.dto';\nimport { PagedListTaskDto, TaskDto } from './models/dtos/task.dto';\nimport { Task } from './models/task.entity';\nimport { TasksService } from './tasks.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Task,\n  createDto: CreateTaskDto,\n  pagedListDto: PagedListTaskDto,\n  entityDto: TaskDto,\n  updateDto: CreateTaskDto,\n  auth: true\n});\n\nexport class TasksController extends BaseCtrl {\n  constructor(\n    private tasksService: TasksService,\n    @Inject(StagesService)\n    private stageService: StagesService,\n    @Inject(TracksService)\n    private trackService: TracksService\n  ) {\n    super(tasksService);\n  }\n\n  @Post()\n  @ApiResponse({ type: TaskDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTaskDto): Promise {\n    const task = await this.tasksService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (task) {\n      throw new ConflictException(\n        `Task with the title \"${task.title}\" already exists`\n      );\n    }\n    const stage = await this.stageService.findByIdAsync(input.stage);\n    if (!stage)\n      throw new NotFoundException(`Stage with ${input.stage} not found`);\n    const track = await this.trackService.findByIdAsync(input.track);\n    if (!track)\n      throw new NotFoundException(`Track with ${input.track} not found`);\n    return await super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nStagesModule\n\nStagesModule\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nStagesModule->TasksModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nTasksModule -->\n\nTracksModule->TasksModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StagesModule\n                        \n                        \n                            TracksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { StagesModule } from '../stages/stages.module';\nimport { TracksModule } from '../tracks/tracks.module';\nimport { Task } from './models/task.entity';\nimport { TasksController } from './tasks.controller';\nimport { TasksService } from './tasks.service';\n\nconst TaskModel = MongooseModule.forFeature([\n  { name: Task.modelName, schema: Task.schema }\n]);\nconst baseService = { provide: BaseService, useClass: TasksService };\n@Module({\n  imports: [TaskModel, StagesModule, TracksModule],\n  providers: [TasksService, baseService],\n  controllers: [TasksController],\n  exports: [TaskModel, TasksService, baseService]\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemporaryToken.html":{"url":"classes/TemporaryToken.html","title":"class - TemporaryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemporaryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/temporary-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions, prop, Ref } from '@typegoose/typegoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { BaseEntity } from '../../shared/models/base.entity';\n\nexport enum TokenType {\n  PASSWORD = 'PASSWORD_TOKEN',\n  EMAIL = 'EMAIL_TOKEN'\n}\n\n@index({ user: 1, type: 1 }, { unique: true })\n@modelOptions({ options: { customName: 'temptokens' } })\n@index({ expireAt: 1 }, { expireAfterSeconds: 0 })\nexport class TemporaryToken extends BaseEntity {\n  @prop({ required: true })\n  readonly token!: string;\n\n  @prop({ required: true, type: Date })\n  readonly expireAt!: Date;\n\n  @prop({\n    enum: TokenType,\n    type: String,\n    unique: false,\n    required: true\n  })\n  readonly type?: TokenType;\n\n  @prop({ ref: User, unique: false, required: true })\n  readonly user?: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/track.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                stage\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Stage, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Stage } from './../../stages/models/stage.entity.ts';\nimport { index, prop, Ref } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Track extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({ ref: Stage, required: true })\n  readonly stage!: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackDto.html":{"url":"classes/TrackDto.html","title":"class - TrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/tack.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                stage\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsMongoId, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n\n  @Expose()\n  @IsMongoId()\n  stage: string;\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TracksController.html":{"url":"classes/TracksController.html","title":"class - TracksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TracksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/tracks/tracks.controller.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTrackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({type: TrackDto, status: undefined})@ApiResponse({status: undefined})@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers/base.controller';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateTrackDto } from './models/dto/create-track.dto';\nimport { PagedTrackOutputDto, TrackDto } from './models/dto/tack.dto';\nimport { Track } from './models/track.entity';\nimport { TracksService } from './tracks.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedListDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n});\nexport class TracksController extends BaseCtrl {\n  constructor(protected trackService: TracksService) {\n    super(trackService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ type: TrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTrackDto): Promise {\n    const exist = await this.trackService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Track with the title \"${exist.title}\" already exists`\n      );\n    return await super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TracksModule.html":{"url":"modules/TracksModule.html","title":"module - TracksModule","body":"\n                   \n\n\n\n\n    Modules\n    TracksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\n\nTracksService \n\nTracksService \n\n\n\nTracksModule\n\nTracksModule\n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tracks/tracks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TracksService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TracksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { Track } from './models/track.entity';\nimport { TracksController } from './tracks.controller';\nimport { TracksService } from './tracks.service';\n\nconst TrackModel = MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n]);\nconst baseService = { provide: BaseService, useClass: TracksService };\n@Module({\n  imports: [TrackModel],\n  providers: [TracksService, baseService],\n  controllers: [TracksController],\n  exports: [TrackModel, TracksService, baseService]\n})\nexport class TracksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                failedSignInAttempts\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isEmailVerified\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lockOutEndDate\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                setRandomPass\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, lowercase: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            failedSignInAttempts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lockOutEndDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: UserRole, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRandomPass\n                        \n                        \n                    \n                \n            \n            \n                \nsetRandomPass()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:81\n                                \n                            \n                    \n                        \n                                Get User's full name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:92\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport {\n  getModelForClass,\n  index,\n  pre,\n  prop,\n  ReturnModelType\n} from '@typegoose/typegoose';\nimport { hash } from 'bcrypt';\nimport { Exclude } from 'class-transformer';\nimport * as crypto from 'crypto';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { columnSize } from '../../shared/constants';\nimport { BaseEntity } from '../../shared/models/base.entity';\n\nexport enum UserRole {\n  MENTEE = 'MENTEE',\n  MENTOR = 'MENTOR',\n  ADMIN = 'ADMIN'\n}\n\n@pre('save', async function () {\n  try {\n    (this as Writable).password = await hash(this.password, 10);\n  } catch (e) {\n    throw new InternalServerErrorException(e);\n  }\n})\n@index({ email: 1 }, { unique: true })\nexport class User extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly firstName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly lastName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: false\n  })\n  readonly email!: string;\n  @prop({ required: true, maxlength: columnSize.length64 })\n  @Exclude()\n  readonly password!: string;\n\n  @prop({\n    enum: UserRole,\n    type: String,\n    required: true,\n    default: UserRole.MENTEE\n  })\n  readonly role = UserRole.MENTEE;\n\n  @prop({ required: true, default: false })\n  readonly isEmailVerified: boolean;\n  @prop({ default: undefined })\n  readonly lockOutEndDate?: Date;\n  @prop({ required: true, default: 0 })\n  readonly failedSignInAttempts!: number;\n  /**\n   * Get User's full name\n   *\n   * @readonly\n   * @memberof User\n   */\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  setRandomPass(): void {\n    (this as Writable).password = crypto\n      .randomBytes(columnSize.length32)\n      .toString();\n  }\n  confirmEmail(): void {\n    (this as Writable).isEmailVerified = true;\n  }\n  static get model(): ReturnModelType {\n    return getModelForClass(this);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length64)@IsEmail()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(UserRole)@ApiProperty({enum: UserRole})@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsEmail, IsEnum, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { UserRole } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n  @Expose()\n  @MaxLength(columnSize.length64)\n  lastName: string;\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  @Expose()\n  email: string;\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  @Expose()\n  role?: UserRole = UserRole.MENTEE;\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersController.html":{"url":"classes/UsersController.html","title":"class - UsersController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.controller.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: UserDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { BaseCrudController } from '../shared/controllers/base.controller';\nimport { CreateUserDto } from './models/dto/create-user.dto';\nimport { PagedUserOutputDto, UserDto } from './models/dto/user.dto';\nimport { User, UserRole } from './models/user.entity';\nimport { UsersService } from './users.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedListDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n});\n\nexport class UsersController extends BaseCtrl {\n  constructor(protected readonly usersService: UsersService) {\n    super(usersService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: UserDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({\n      title: input.email.toLowerCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `User with the email \"${exist.email}\" already exists`\n      );\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { User } from './models/user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\nconst UserModel = MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n]);\n@Module({\n  imports: [UserModel],\n  providers: [UsersService, { provide: BaseService, useClass: UsersService }],\n  controllers: [UsersController],\n  exports: [UsersService, UserModel]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateTokenInput.html":{"url":"classes/ValidateTokenInput.html","title":"class - ValidateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/validate-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class ValidateTokenInput extends PickType(LoginReqDto, ['email']) {\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                merge-coverage.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Database\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/acct-verification.dto.ts\n            \n            class\n            AcctVerifyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginReqDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/reset-pw.dto.ts\n            \n            class\n            ResetPassInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/validate-token.dto.ts\n            \n            class\n            ValidateTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/temporary-token.entity.ts\n            \n            class\n            TemporaryToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/temp-token.service.ts\n            \n            injectable\n            TempTokensService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            class\n            CategoriesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.module.ts\n            \n            variable\n            CategoryModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            class\n            CategoriesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/models/category.entity.ts\n            \n            class\n            Category\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            PagedCategoryOutDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.controller.ts\n            \n            class\n            CoursesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/courses.module.ts\n            \n            variable\n            CourseModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.service.ts\n            \n            injectable\n            CoursesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/courses/models/course.entity.ts\n            \n            class\n            Course\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            CourseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            PagedCourseOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/create-course.dto.ts\n            \n            class\n            CreateCourseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Configuration\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Database\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Mailer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            AUTH_GUARD_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            columnSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/base.controller.ts\n            \n            function\n            BaseCrudController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/api-swagger-operation.decorator.ts\n            \n            variable\n            ApiSwaggerOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authenticate.decorator.ts\n            \n            variable\n            Authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/errors/api-exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/errors/auth.errors.ts\n            \n            variable\n            authErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithSwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithSwaggerOpts\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller.interface.ts\n            \n            interface\n            IBaseController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            AuthObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            ControllerAuth\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            DefaultAuthObject\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/shared/models/dto/base.dto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/dto/find.dto.ts\n            \n            class\n            FindDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            interface\n            IPagedListDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            function\n            PagedListDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            defaultAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            getAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/random-token.ts\n            \n            variable\n            generateRandomToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/validations/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/create-stage.dto.ts.ts\n            \n            class\n            CreateStageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/stage.dto.ts.ts\n            \n            class\n            PagedListStageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/stage.dto.ts.ts\n            \n            class\n            StageDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/stages/models/stage.entity.ts.ts\n            \n            class\n            Stage\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/stages/stages.controller.ts\n            \n            class\n            StagesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stages/stages.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.module.ts\n            \n            variable\n            StageModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.service.ts\n            \n            injectable\n            StagesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/task.dto.ts\n            \n            class\n            PagedListTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/task.dto.ts\n            \n            class\n            TaskDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/tasks/models/task.entity.ts\n            \n            class\n            Task\n            \n                15 %\n                (3/20)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            class\n            TasksController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            TaskModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateTrackDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/tack.dto.ts\n            \n            class\n            PagedTrackOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/tack.dto.ts\n            \n            class\n            TrackDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tracks/models/track.entity.ts\n            \n            class\n            Track\n            \n                17 %\n                (3/17)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            class\n            TracksController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            TrackModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.service.ts\n            \n            injectable\n            TracksService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/users/models/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            PagedUserOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/models/user.entity.ts\n            \n            class\n            User\n            \n                12 %\n                (3/24)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            class\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.module.ts\n            \n            variable\n            UserModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            dbFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            dbServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            inMemoryDb\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs-addons/in-memory-db : ^1.8.10\n        \n            @nestjs/bull : ^0.1.1\n        \n            @nestjs/common : ^7.2.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.2.0\n        \n            @nestjs/microservices : ^7.2.0\n        \n            @nestjs/mongoose : ^7.0.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.2.0\n        \n            @nestjs/schedule : ^0.4.0\n        \n            @nestjs/swagger : ^4.5.10\n        \n            @typegoose/typegoose : ^7.2.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.14.0\n        \n            cache-manager : ^3.3.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            compression : ^1.7.4\n        \n            connect-mongo : ^3.2.0\n        \n            cookie-parser : ^1.4.5\n        \n            cookie-session : ^1.4.0\n        \n            express-rate-limit : ^5.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.9.18\n        \n            nodemailer : ^6.4.8\n        \n            nodemailer-mailgun-transport : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pluralize : ^8.0.0\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n        \n            tsconfig-paths : ^3.9.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthEventEnum   (src/.../auth.enums.ts)\n                        \n                        \n                            TaskStatus   (src/.../task.entity.ts)\n                        \n                        \n                            TokenType   (src/.../temporary-token.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/models/auth.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthEventEnum\n                    \n                \n                        \n                            \n                                 UserRegistered\n                            \n                        \n                        \n                            \n                                Value : user_registered\n                            \n                        \n            \n        \n\n    src/tasks/models/task.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 NOT_SUBMITTED\n                            \n                        \n                        \n                            \n                                Value : NOT_SUBMITTED\n                            \n                        \n                        \n                            \n                                 SUBMITTED\n                            \n                        \n                        \n                            \n                                Value : SUBMITTED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n            \n        \n\n    src/auth/models/temporary-token.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : PASSWORD_TOKEN\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL_TOKEN\n                            \n                        \n            \n        \n\n    src/users/models/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MENTEE\n                            \n                        \n                        \n                            \n                                Value : MENTEE\n                            \n                        \n                        \n                            \n                                 MENTOR\n                            \n                        \n                        \n                            \n                                Value : MENTOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BaseCrudController   (src/.../base.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            main   (merge-coverage.ts)\n                        \n                        \n                            PagedListDto   (src/.../paged-list.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/controllers/base.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            BaseCrudController\n                        \n                        \n                    \n                \n            \n            \n                \nBaseCrudController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    merge-coverage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            main\n                        \n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    src/shared/models/dto/paged-list.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PagedListDto\n                        \n                        \n                    \n                \n            \n            \n                \nPagedListDto(entityDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCode Clan Nigeria\n \nThe official website for code clan nigeria community\nWe are a community comprised of future innovators.\nFront-end developers, DevOps engineers, full stack developers, technical\nwriters, software engineers.\nThis community was created out of a desire to provide ongoing support\nto you wherever stage you are in your coding career.\nThis is codeclannigeria.dev\nAs part of the measures towards achieving out goal stated above, we propose to bring together the amazing talents of our community members to built a website and a mobile application that represents all that we\nstand for.\nHow You Come In\nTo get a complete documentation of the source code and the architectural structure of the application, click here.\nFeel free to put your skills to the test. Here is a suggested workflow for you to follow:\nNote: This is applicable to codeclannigeria community members only.\n\nFork this repository into your local computer\nCheck the issues pane for an issue that needs to be solved\nFind an issue that matches your current skill level and solve it\nMake your pull request to the develop branch\nWait for some feedback.\nRepeat the process\n\nWant more support? Join our slack\ncommunity and ask questions.\nThanks for your support\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Fortune Ochi\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DbTest\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TracksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nCoursesService \n\nCoursesService \n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nProfileModule->UsersService \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nStagesModule->TasksModule\n\n\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nStagesService \n\nStagesService \n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTracksModule\n\nTracksModule\n\nTasksModule -->\n\nTracksModule->TasksModule\n\n\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nTracksService \n\nTracksService \n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    45 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractDocument   (src/.../abstract.type.ts)\n                        \n                        \n                            ClassType   (src/.../abstract.type.ts)\n                        \n                        \n                            DeleteResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryItem   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryList   (src/.../abstract.type.ts)\n                        \n                        \n                            UpdateResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            Writable   (src/.../abstract.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/types/abstract.type.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Writable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSwaggerOperation   (src/.../api-swagger-operation.decorator.ts)\n                        \n                        \n                            AUTH_GUARD_TYPE   (src/.../constants.ts)\n                        \n                        \n                            Authenticate   (src/.../authenticate.decorator.ts)\n                        \n                        \n                            authErrors   (src/.../auth.errors.ts)\n                        \n                        \n                            BaseCtrl   (src/.../categories.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../stages.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../tasks.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../tracks.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../users.controller.ts)\n                        \n                        \n                            baseService   (src/.../stages.module.ts)\n                        \n                        \n                            baseService   (src/.../tasks.module.ts)\n                        \n                        \n                            baseService   (src/.../tracks.module.ts)\n                        \n                        \n                            CategoryModel   (src/.../categories.module.ts)\n                        \n                        \n                            columnSize   (src/.../constants.ts)\n                        \n                        \n                            Config   (src/.../app.module.ts)\n                        \n                        \n                            Config   (src/.../auth.module.ts)\n                        \n                        \n                            CourseModel   (src/.../courses.module.ts)\n                        \n                        \n                            Database   (src/.../app.module.ts)\n                        \n                        \n                            dbFactory   (test/.../db-test.module.ts)\n                        \n                        \n                            dbServer   (test/.../db-test.module.ts)\n                        \n                        \n                            defaultAuth   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            generateRandomToken   (src/.../random-token.ts)\n                        \n                        \n                            getAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            inMemoryDb   (test/.../db-test.module.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            StageModel   (src/.../stages.module.ts)\n                        \n                        \n                            TaskModel   (src/.../tasks.module.ts)\n                        \n                        \n                            TrackModel   (src/.../tracks.module.ts)\n                        \n                        \n                            UserModel   (src/.../users.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/api-swagger-operation.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiSwaggerOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: {\n  title: string;\n  description?: string;\n  operationId?: string;\n  deprecated?: boolean;\n}): MethodDecorator => {\n  return (target, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const controllerName = target.constructor.name;\n    ApiOperation({\n      ...options,\n      operationId: `${controllerName.substr(\n        0,\n        controllerName.indexOf('Controller'),\n      )}_${propertyKey}`,\n    })(target, propertyKey, descriptor);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  length8: 2 ** 3,\n  length16: 2 ** 4,\n  length32: 2 ** 5,\n  length64: 2 ** 6,\n  length128: 2 ** 7,\n  length256: 2 ** 8,\n  length512: 2 ** 9,\n  length1024: 2 ** 10\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authenticate.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthenticationEnabled: boolean,\n  decorator: MethodDecorator\n): MethodDecorator => {\n  return (target, key: string | symbol, value: any): any => {\n    if (isAuthenticationEnabled) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/errors/auth.errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  INVALID_LOGIN_ATTEMPT: new UnauthorizedException(\n    'Email or Password is incorrect'\n  ),\n  INVALID_TOKEN: new ForbiddenException('Invalid token'),\n  EXPIRED_TOKEN: new NotFoundException('Token expired')\n}\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedListDto: PagedCategoryOutDto\n})\n                        \n                    \n\n\n            \n        \n\n    src/stages/stages.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Stage,\n  entityDto: StageDto,\n  createDto: CreateStageDto,\n  updateDto: CreateStageDto,\n  pagedListDto: PagedListStageDto,\n  auth: {\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/tasks/tasks.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Task,\n  createDto: CreateTaskDto,\n  pagedListDto: PagedListTaskDto,\n  entityDto: TaskDto,\n  updateDto: CreateTaskDto,\n  auth: true\n})\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedListDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/users/users.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedListDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/stages/stages.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: StagesService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            StageModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/tasks/tasks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: TasksService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Task.modelName, schema: Task.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: TracksService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TrackModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CategoryModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Database\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n})\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n]\n                        \n                    \n\n\n            \n        \n\n    src/courses/courses.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    test/db-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbServer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoMemoryServer()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inMemoryDb\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : dbServer\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/get-auth-obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ControllerAuth\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  create: {\n    enableAuth: true,\n    authRoles: []\n  },\n  update: {\n    enableAuth: true,\n    authRoles: []\n  },\n  find: {\n    enableAuth: true,\n    authRoles: []\n  },\n  findById: {\n    enableAuth: true,\n    authRoles: []\n  },\n  delete: {\n    enableAuth: true,\n    authRoles: []\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  authObj: DefaultAuthObject | boolean\n): ControllerAuth => {\n  const roles = Object.values(UserRole);\n  defaultAuth.create.authRoles = roles;\n  defaultAuth.update.authRoles = roles;\n  defaultAuth.find.authRoles = roles;\n  defaultAuth.findById.authRoles = roles;\n  defaultAuth.delete.authRoles = roles;\n\n  if (typeof authObj === 'boolean') {\n    if (authObj === false) {\n      defaultAuth.create.enableAuth = false;\n      defaultAuth.update.enableAuth = false;\n      defaultAuth.find.enableAuth = false;\n      defaultAuth.findById.enableAuth = false;\n      defaultAuth.delete.enableAuth = false;\n      return defaultAuth;\n    }\n    if (authObj === true) return defaultAuth;\n  }\n\n  if (typeof authObj?.find === 'boolean') {\n    defaultAuth.find.enableAuth = authObj.find;\n  } else if (!!authObj?.find?.length) {\n    defaultAuth.find.authRoles = authObj.find;\n  }\n\n  if (typeof authObj?.findById === 'boolean') {\n    defaultAuth.findById.enableAuth = authObj.findById;\n  } else if (!!authObj?.findById?.length) {\n    defaultAuth.findById.authRoles = authObj.findById;\n  }\n\n  if (typeof authObj?.update === 'boolean') {\n    defaultAuth.update.enableAuth = authObj.update;\n  } else if (!!authObj?.update?.length) {\n    defaultAuth.update.authRoles = authObj.update;\n  }\n\n  if (typeof authObj?.create === 'boolean') {\n    defaultAuth.create.enableAuth = authObj.create;\n  } else if (!!authObj?.create?.length) {\n    defaultAuth.create.authRoles = authObj.create;\n  }\n\n  if (typeof authObj?.delete === 'boolean') {\n    defaultAuth.delete.enableAuth = authObj.delete;\n  } else if (!!authObj?.delete?.length) {\n    defaultAuth.delete.authRoles = authObj.delete;\n  }\n\n  return defaultAuth;\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/validations/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): any => {\n  return Joi.object({\n    NODE_ENV: Joi.string()\n      .valid('development', 'production', 'test')\n      .default('development'),\n    PORT: Joi.number().default(3000),\n    JWT_SECRET: Joi.string().required(),\n    JWT_VALIDITY_HOURS: Joi.number().required(),\n    ROOT_URL: Joi.string().uri().required(),\n    REDIS_SERVER_URL: Joi.string().uri().default('redis://localhost:6379'),\n    DATABASE_PORT: Joi.number().default(27017),\n    DATABASE_HOST: Joi.string().default('localhost'),\n    DATABASE_NAME: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n    MAILER_API_KEY: Joi.string().required(),\n    MAILER_DOMAIN: Joi.string().required(),\n    API_AUTH_ENABLED: Joi.string().valid('true', 'false').default('true'),\n    APP_EMAIL: Joi.string().email().required()\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/random-token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandomToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n  randomBytes(size).toString('hex')\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: UserRole[]): CustomDecorator =>\n  SetMetadata(UserRole, roles)\n                        \n                    \n\n\n            \n        \n\n    src/users/users.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
