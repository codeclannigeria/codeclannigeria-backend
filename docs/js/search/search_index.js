var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControllerOptions.html",[0,1.194,1,3.088]],["body/interfaces/AbstractControllerOptions.html",[0,2.128,1,5.503,2,2.442,3,0.128,4,0.115,5,0.103,6,4.332,7,2.679,8,4.332,9,0.527,10,1.304,11,6.139,12,4.778,13,0.646,14,0.009,15,0.207,16,3.69,17,1.865,18,2.951,19,3.84,20,0.173,21,2.179,22,3.649,23,3.649,24,5.056,25,0.962,26,1.689,27,4.064,28,4.668,29,4.668,30,4.668,31,4.332,32,0.006,33,0.007,34,0.006]],["title/interfaces/AbstractControllerWithAuthOptions.html",[0,1.194,24,3.088]],["body/interfaces/AbstractControllerWithAuthOptions.html",[0,2.117,1,5.475,2,2.415,3,0.127,4,0.114,5,0.101,6,4.283,7,2.649,8,4.283,9,0.522,10,1.295,11,4.283,13,0.471,14,0.009,15,0.205,16,4.187,17,1.844,18,3.446,19,3.797,20,0.172,21,2.168,22,3.608,23,3.608,24,5.475,25,1.041,26,2.276,27,4.018,28,4.615,29,4.615,30,4.615,31,4.283,32,0.006,33,0.007,34,0.006]],["title/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.194,27,3.088]],["body/interfaces/AbstractControllerWithSwaggerOptions.html",[0,2.098,1,4.959,2,2.368,3,0.124,4,0.112,5,0.1,6,4.201,7,2.598,8,4.201,9,0.512,10,1.279,11,4.201,12,5.382,13,0.703,14,0.009,15,0.201,16,3.62,17,1.808,18,2.895,19,3.724,20,0.171,21,2.149,22,3.538,23,3.538,24,5.427,25,1.032,26,1.638,27,4.959,28,6.542,29,4.526,30,6.542,31,4.201,32,0.006,33,0.007,34,0.006]],["title/classes/AcctVerifyDto.html",[35,0.215,36,3.292]],["body/classes/AcctVerifyDto.html",[3,0.125,4,0.112,5,0.1,9,0.514,10,1.284,13,0.638,14,0.009,15,0.277,20,0.125,25,0.754,32,0.006,33,0.007,34,0.006,35,0.347,36,5.305,37,0.816,38,7.187,39,4.99,40,6.852,41,6.852,42,6.852,43,1.235,44,1.781,45,5.441,46,1.272,47,5.656,48,3.876,49,5.656,50,5.656,51,2.892,52,1.208,53,1.73,54,3.395,55,4.99,56,4.99,57,2.381]],["title/classes/ApiException.html",[35,0.215,58,2.254]],["body/classes/ApiException.html",[3,0.089,4,0.08,5,0.071,9,0.367,10,1.025,13,0.681,14,0.009,15,0.202,20,0.089,21,1.12,32,0.004,33,0.006,34,0.004,35,0.197,37,0.582,43,1.303,44,1.871,46,1.357,52,0.862,58,2.901,59,7.411,60,3.56,61,2.027,62,5.966,63,7.048,64,5.149,65,7.048,66,7.048,67,3.618,68,7.048,69,6.56,70,2.538,71,4.035,72,2.411,73,5.673,74,1.517,75,0.97,76,3.614,77,4.035,78,4.035,79,4.035,80,4.035,81,4.035,82,4.035,83,4.035,84,2.064,85,1.018,86,4.035,87,4.035,88,4.035,89,4.035,90,4.035,91,4.035,92,4.035,93,4.035,94,4.035,95,4.035]],["title/controllers/AppController.html",[7,2.036,96,3.292]],["body/controllers/AppController.html",[3,0.133,4,0.12,5,0.107,7,3.417,9,0.549,14,0.009,15,0.285,20,0.133,32,0.006,33,0.007,34,0.006,35,0.295,43,1.067,44,1.386,46,0.989,52,1.291,85,1.523,96,5.526,97,2.79,98,5.329,99,2.053,100,8.337,101,6.04,102,1.636,103,5.296,104,5.329,105,4.511,106,6.04,107,5.329,108,4.511,109,1.487,110,2.271,111,6.04]],["title/modules/AppModule.html",[112,1.382,113,3.292]],["body/modules/AppModule.html",[3,0.084,4,0.075,5,0.067,14,0.009,15,0.314,20,0.12,32,0.004,33,0.005,34,0.004,35,0.185,85,0.955,96,4.732,97,2.505,103,5.043,104,3.342,112,1.987,113,6.763,114,1.695,115,1.808,116,1.937,117,1.937,118,1.808,119,3.128,120,1.808,121,3.342,122,3.342,123,3.342,124,5.336,125,5.336,126,5.043,127,5.336,128,4.792,129,5.336,130,5.336,131,5.043,132,5.336,133,4.792,134,4.201,135,2.774,136,1.87,137,1.749,138,3.048,139,2.774,140,3.788,141,3.342,142,2.089,143,1.808,144,3.788,145,3.788,146,3.788,147,3.342,148,3.788,149,3.788,150,1.695,151,2.177,152,3.788,153,4.365,154,3.788,155,3.342,156,3.048,157,2.508,158,3.788,159,3.048,160,1.788,161,3.8,162,3.342,163,3.342,164,1.921,165,3.342,166,3.342,167,3.342,168,3.342,169,3.256,170,3.342,171,3.048,172,3.048,173,3.048,174,3.048,175,1.695]],["title/injectables/AppService.html",[103,2.918,176,1.803]],["body/injectables/AppService.html",[3,0.141,4,0.127,5,0.113,9,0.582,14,0.009,15,0.228,20,0.141,32,0.006,33,0.008,34,0.006,35,0.312,43,1.105,46,1.048,85,1.614,99,2.126,102,1.734,103,5.074,110,2.406,176,3.134,177,3.678,178,5.647,179,8.502,180,6.4,181,6.4,182,6.4]],["title/controllers/AuthController.html",[7,2.036,183,3.292]],["body/controllers/AuthController.html",[3,0.051,4,0.046,5,0.041,7,1.066,9,0.21,13,0.622,14,0.009,15,0.29,18,0.943,20,0.051,21,2.016,32,0.002,33,0.004,34,0.002,35,0.113,36,4.923,40,3.279,41,3.279,42,3.279,44,1.438,46,1.027,52,0.493,54,3.211,57,3.361,58,2.386,61,1.438,67,2.05,70,1.032,74,2.357,75,1.508,84,1.18,85,0.582,97,1.066,99,1.031,102,1.698,105,1.723,109,1.149,110,2.205,136,2.641,150,1.032,151,1.326,160,2.657,183,2.775,184,2.036,185,1.857,186,3.423,187,4.666,188,3.716,189,3.716,190,3.716,191,3.716,192,3.716,193,2.307,194,4.109,195,3.366,196,2.307,197,2.307,198,2.307,199,2.307,200,3.279,201,2.307,202,3.187,203,2.307,204,3.366,205,2.307,206,2.307,207,3.269,208,0.867,209,2.307,210,3.988,211,2.307,212,3.748,213,3.716,214,2.307,215,2.307,216,2.307,217,5.35,218,3.716,219,3.716,220,2.307,221,2.307,222,2.839,223,2.307,224,2.307,225,3.748,226,3.716,227,2.307,228,2.307,229,2.136,230,1.452,231,1.616,232,1.616,233,1.326,234,1.857,235,1.326,236,3.716,237,3.716,238,2.136,239,3.716,240,1.326,241,3.716,242,2.307,243,2.307,244,2.036,245,2.936,246,2.036,247,1.857,248,1.385,249,3.037,250,0.844,251,2.681,252,1.616,253,2.936,254,1.857,255,1.723,256,2.307,257,2.307,258,2.307,259,2.604,260,2.036,261,2.307,262,2.307,263,2.307,264,2.036,265,1.723,266,1.857,267,1.857,268,2.307,269,2.307,270,2.801,271,2.307,272,4.109,273,2.307,274,2.991,275,3.283,276,2.307,277,2.307,278,1.452,279,2.307,280,3.944,281,4.72,282,2.307,283,3.206,284,2.307,285,2.936,286,1.452,287,2.307,288,2.307,289,2.307,290,1.857,291,2.307,292,5.011,293,2.307,294,3.716,295,3.279,296,3.716,297,2.307,298,3.716,299,2.036,300,3.279,301,2.036,302,2.307,303,3.279,304,3.716,305,3.716,306,3.716,307,5.866,308,2.307,309,2.036,310,2.307,311,2.307,312,2.307,313,2.307,314,3.716,315,3.716,316,3.279,317,1.29,318,3.716,319,2.307,320,2.307,321,2.307,322,2.461,323,2.036,324,3.279,325,2.307,326,2.036,327,1.723,328,2.307,329,2.307,330,2.307,331,2.036,332,2.307,333,2.991,334,2.307,335,2.307,336,2.307,337,2.307]],["title/modules/AuthModule.html",[112,1.382,124,3.088]],["body/modules/AuthModule.html",[3,0.097,4,0.087,5,0.078,14,0.009,15,0.31,20,0.097,32,0.004,33,0.006,34,0.004,35,0.215,75,1.058,85,1.11,97,2.782,112,2.154,114,1.969,115,2.1,116,2.25,117,2.25,118,2.1,119,3.391,120,3.278,124,6.258,134,4.407,135,3.081,136,2.172,137,2.032,139,3.081,142,2.427,143,2.1,157,2.913,160,1.451,161,4.812,164,1.11,183,5.13,245,5.026,246,3.882,253,5.473,254,3.541,266,3.541,267,3.541,338,3.882,339,4.4,340,3.882,341,3.882,342,5.597,343,5.597,344,5.967,345,3.541,346,4.4,347,3.083,348,4.499,349,1.451,350,4.4,351,3.286,352,4.4,353,4.4,354,3.882,355,3.882,356,2.529,357,3.882,358,2.427,359,3.882,360,3.882,361,3.882,362,3.541]],["title/interfaces/AuthObj.html",[0,1.194,363,2.918]],["body/interfaces/AuthObj.html",[0,2.101,2,2.375,3,0.124,4,0.112,5,0.1,9,0.513,10,1.281,13,0.583,14,0.009,15,0.201,16,2.884,18,2.306,20,0.156,26,2.559,32,0.006,33,0.007,34,0.006,250,2.064,363,5.752,364,4.212,365,4.212,366,6.077,367,6.077,368,3.732,369,3.734,370,4.461,371,4.695,372,3.763,373,3.763,374,2.595]],["title/injectables/AuthService.html",[176,1.803,253,2.773]],["body/injectables/AuthService.html",[3,0.056,4,0.05,5,0.045,9,0.23,12,4.318,13,0.689,14,0.009,15,0.272,20,0.056,21,1.374,22,2.512,32,0.003,33,0.004,34,0.003,35,0.123,43,1.183,46,1.119,57,2.371,61,1.567,62,1.885,64,2.643,70,1.786,72,0.811,74,2.568,75,1.643,84,1.291,85,0.636,99,1.108,102,1.767,109,0.983,110,2.117,137,1.166,150,1.786,151,1.45,160,2.705,164,0.636,176,1.633,177,1.45,186,3.482,202,3.145,210,2.042,212,2.797,222,1.339,249,3.427,250,0.924,251,3.748,252,1.768,253,2.512,265,4.581,266,2.031,267,2.031,270,3.682,275,3.494,280,3.116,281,2.031,283,3.494,292,3.279,295,2.227,299,2.227,300,4.37,301,3.522,316,2.227,322,4.945,323,3.522,324,6.723,326,2.227,327,2.982,333,3.213,344,4.205,354,2.227,355,2.227,375,2.227,376,4.953,377,3.992,378,3.992,379,3.992,380,4.953,381,3.992,382,2.227,383,4.953,384,2.524,385,2.524,386,2.524,387,3.992,388,2.524,389,3.992,390,2.524,391,3.992,392,2.524,393,2.524,394,2.524,395,3.992,396,4.953,397,2.524,398,4.37,399,3.213,400,1.885,401,2.227,402,2.031,403,1.515,404,2.031,405,2.524,406,2.643,407,2.031,408,3.213,409,2.524,410,3.992,411,2.524,412,2.227,413,2.524,414,3.992,415,2.524,416,3.522,417,2.524,418,2.524,419,2.524,420,5.63,421,2.524,422,2.524,423,2.524,424,2.797,425,2.797,426,3.992,427,1.515,428,2.524,429,2.524,430,2.524,431,3.992,432,2.524,433,2.524,434,2.227,435,2.227,436,2.524,437,2.524,438,2.524,439,1.081,440,3.992,441,3.992,442,2.227,443,3.992,444,3.992,445,2.524,446,2.524,447,2.524,448,2.524,449,2.524,450,2.227,451,2.524,452,2.524,453,3.992,454,2.031]],["title/guards/AuthenticationGuard.html",[255,3.292,455,3.547]],["body/guards/AuthenticationGuard.html",[3,0.105,4,0.095,5,0.085,9,0.435,13,0.589,14,0.009,15,0.284,20,0.105,21,1.327,32,0.005,33,0.006,34,0.005,35,0.233,46,1.174,54,3.825,57,2.013,61,1.644,70,2.139,74,2.694,75,1.723,85,1.206,99,1.768,102,1.726,108,3.571,109,1.178,110,2.694,150,2.139,151,2.748,160,2.363,164,1.607,176,2.606,186,3.447,195,5.151,202,3.218,222,3.381,234,5.128,240,2.748,249,2.93,253,5.151,254,3.848,255,4.759,260,4.219,275,2.764,283,2.445,456,3.848,457,4.219,458,6.15,459,6.372,460,4.782,461,4.782,462,5.128,463,6.15,464,4.782,465,3.848,466,6.372,467,4.782,468,3.571,469,4.219,470,4.782,471,3.848,472,4.782,473,4.782,474,4.782,475,4.219]],["title/classes/AvatarUploadDto.html",[35,0.215,476,3.292]],["body/classes/AvatarUploadDto.html",[3,0.139,4,0.125,5,0.15,9,0.573,10,1.372,13,0.624,14,0.009,15,0.225,20,0.139,32,0.006,33,0.008,34,0.006,35,0.308,37,0.909,43,1.095,44,1.445,46,1.032,52,1.346,76,3.104,476,5.67,477,6.698,478,5.56,479,5.56,480,5.319,481,5.319,482,6.301]],["title/interfaces/BaseControllerOptions.html",[0,1.194,483,3.088]],["body/interfaces/BaseControllerOptions.html",[0,2.093,2,2.355,3,0.123,4,0.111,5,0.099,7,2.583,9,0.509,10,1.275,12,4.67,13,0.635,14,0.009,15,0.2,16,3.607,17,1.798,18,2.885,19,3.703,20,0.17,21,2.321,22,3.519,23,3.519,25,0.94,26,1.629,32,0.006,33,0.007,34,0.006,483,5.413,484,3.919,485,3.519,486,4.177,487,4.475,488,4.942,489,3.919,490,2.861,491,4.177,492,3.085,493,4.177,494,3.085,495,4.177,496,1.669,497,4.501]],["title/interfaces/BaseControllerWithAuthOptions.html",[0,1.194,488,3.088]],["body/interfaces/BaseControllerWithAuthOptions.html",[0,2.082,2,2.33,3,0.122,4,0.11,5,0.098,7,2.555,9,0.503,10,1.266,13,0.455,14,0.009,15,0.197,16,4.133,17,1.779,18,3.409,19,3.663,20,0.17,21,2.313,22,3.481,23,3.481,25,1.024,26,2.239,32,0.006,33,0.007,34,0.006,483,5.386,484,3.876,485,3.481,486,4.132,487,3.052,488,5.386,489,3.876,490,2.83,491,4.132,492,3.052,493,4.132,494,3.052,495,4.132,496,1.651,497,4.453]],["title/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.194,489,3.088]],["body/interfaces/BaseControllerWithSwaggerOpts.html",[0,2.019,2,2.182,3,0.114,4,0.103,5,0.092,7,2.393,9,0.471,10,1.214,12,5.719,13,0.733,14,0.009,15,0.185,16,3.435,17,1.666,18,2.747,19,3.431,20,0.164,21,2.267,22,3.26,23,3.26,25,0.993,26,1.509,32,0.005,33,0.007,34,0.005,483,4.706,484,3.63,485,3.26,486,3.87,487,2.858,488,5.222,489,4.706,490,4.033,491,3.87,492,4.35,493,3.87,494,4.35,495,3.87,496,2.353,497,4.17]],["title/classes/BaseDto.html",[35,0.215,498,1.703]],["body/classes/BaseDto.html",[3,0.123,4,0.111,5,0.099,9,0.507,10,1.272,13,0.634,14,0.009,15,0.275,20,0.123,32,0.006,33,0.007,34,0.006,35,0.377,37,0.805,43,1.016,44,1.77,46,1.264,52,1.192,53,1.706,76,3.156,109,2.179,317,2.813,439,2.09,498,2.721,499,4.922,500,2.544,501,2.544,502,3.884,503,5.578,504,2.853,505,5.578,506,5.578,507,2.966,508,1.706,509,4.43]],["title/classes/BaseEntity.html",[35,0.215,510,2.103]],["body/classes/BaseEntity.html",[3,0.062,4,0.056,5,0.05,9,0.256,10,0.786,13,0.62,14,0.009,15,0.231,17,2.709,20,0.062,21,1.658,25,0.58,26,1.74,32,0.003,33,0.004,34,0.003,35,0.137,37,0.406,43,0.766,44,1.686,46,1.349,61,1.686,99,1.207,102,1.619,109,2.138,110,1.635,164,2.138,175,3.375,200,2.485,208,2.567,249,1.152,250,1.031,317,2.675,358,3.563,374,2.364,439,1.439,500,1.752,501,1.752,510,3.743,511,2.485,512,5.976,513,2.623,514,2.718,515,2.718,516,3.64,517,3.303,518,2.623,519,3.056,520,3.056,521,3.056,522,3.838,523,5.314,524,2.792,525,3.056,526,2.816,527,4.124,528,3.93,529,3.056,530,2.816,531,2.816,532,2.816,533,2.816,534,2.816,535,2.816,536,2.816,537,2.816,538,2.816,539,3.492,540,3.289,541,2.816,542,2.816,543,2.816,544,2.816,545,2.816,546,2.816,547,2.816,548,2.816,549,3.858,550,1.26,551,2.816,552,2.103,553,2.266,554,2.485,555,3.056,556,3.838,557,2.816,558,2.816,559,2.816,560,2.816,561,2.816,562,2.816,563,2.816,564,2.816,565,4.35,566,2.816,567,4.35,568,4.688,569,4.35]],["title/interfaces/BufferedFile.html",[0,1.194,570,2.431]],["body/interfaces/BufferedFile.html",[0,1.54,2,2.395,3,0.125,4,0.113,5,0.101,9,0.517,10,1.288,13,0.705,14,0.009,20,0.125,32,0.006,33,0.007,34,0.006,43,1.317,72,2.503,309,7.201,570,3.932,571,5.018,572,5.018,573,8.703,574,8.162,575,8.162,576,8.162,577,7.201]],["title/classes/CategoriesController.html",[35,0.215,578,3.292]],["body/classes/CategoriesController.html",[3,0.092,4,0.083,5,0.074,9,0.38,13,0.663,14,0.009,15,0.305,18,1.707,20,0.092,21,1.158,25,0.774,32,0.004,33,0.006,34,0.004,35,0.204,37,0.602,44,0.958,46,0.951,52,0.892,58,3.417,61,1.333,67,3.984,70,1.868,74,2.184,75,1.607,84,2.135,85,1.053,99,1.612,102,1.131,109,1.028,110,1.57,160,1.916,186,2.813,202,2.446,208,2.184,210,2.971,229,2.399,230,3.655,233,3.339,235,2.399,238,4.151,250,1.528,275,1.812,278,2.627,280,3.655,283,2.135,285,2.627,286,2.627,368,1.758,372,3.083,373,2.216,374,1.528,403,2.506,487,2.303,490,2.135,492,2.303,494,2.303,496,1.246,578,4.339,579,3.36,580,4.204,581,4.175,582,5.395,583,4.175,584,5.81,585,2.627,586,5.395,587,2.925,588,3.118,589,4.946,590,2.764,591,3.118,592,3.118,593,4.175,594,3.487,595,3.339,596,3.118,597,2.216,598,2.506,599,2.216,600,3.083,601,2.506,602,3.684,603,4.424,604,3.684,605,3.847,606,4.175,607,3.118,608,3.684,609,3.655,610,4.07,611,3.36,612,4.175,613,2.506,614,2.764,615,2.925,616,2.627,617,2.764,618,4.175,619,1.488,620,4.175,621,4.175,622,2.764]],["title/modules/CategoriesModule.html",[112,1.382,125,3.088]],["body/modules/CategoriesModule.html",[3,0.119,4,0.108,5,0.096,14,0.009,15,0.302,20,0.119,32,0.005,33,0.007,34,0.005,35,0.264,75,1.302,85,1.366,97,2.501,112,2.386,114,2.423,115,2.584,116,2.77,117,2.77,118,2.584,119,3.412,120,3.632,125,5.803,135,3.534,136,2.673,137,2.501,139,2.77,142,2.987,143,2.584,160,1.786,356,3.112,358,2.987,578,5.161,582,6.573,602,4.778,603,3.586,604,4.778,623,4.778,624,4.778,625,4.358,626,4.148,627,3.586,628,5.416,629,6.125,630,4.778,631,4.778,632,3.251,633,3.407]],["title/classes/Category.html",[35,0.215,603,2.918]],["body/classes/Category.html",[3,0.076,4,0.068,5,0.061,9,0.546,10,0.915,13,0.667,14,0.009,15,0.214,17,2.607,20,0.076,21,0.955,25,0.674,26,1.474,32,0.003,33,0.005,34,0.003,35,0.168,37,0.497,43,0.866,44,1.83,46,1.388,61,1.793,75,1.591,99,1.404,102,1.792,109,2.15,164,2.167,175,3.153,208,2.864,317,2.296,349,1.135,374,2.196,439,1.371,500,1.669,501,1.669,510,4.167,513,2.498,514,2.588,515,2.588,516,3.383,517,3.069,518,2.498,519,3.069,520,3.069,521,3.069,524,3.014,525,3.604,527,3.769,528,3.266,529,3.383,539,3.069,540,2.96,549,2.588,550,1.541,555,1.761,603,3.351,634,3.038,635,1.757,636,3.184,637,3.184,638,3.448,639,3.546,640,3.443,641,3.246,642,1.827,643,1.827,644,1.827,645,1.827,646,1.827,647,1.827,648,1.827,649,1.827,650,1.827,651,1.827,652,1.827,653,1.827,654,1.827,655,1.135,656,1.827,657,1.7,658,2.771]],["title/classes/CategoryDto.html",[35,0.215,589,2.773]],["body/classes/CategoryDto.html",[3,0.112,4,0.101,5,0.09,9,0.461,10,1.196,13,0.667,14,0.009,15,0.279,20,0.146,25,0.983,32,0.005,33,0.007,34,0.005,35,0.382,37,0.731,43,1.17,44,1.861,46,1.329,53,1.549,75,1.773,109,2.049,317,2.298,349,1.67,439,1.793,496,1.512,498,3.215,500,2.183,501,2.183,502,3.651,504,2.591,507,2.698,508,1.549,589,4.165,605,3.354,635,1.759,641,2.849,655,1.67,659,4.077,660,2.559,661,4.077,662,5.066,663,5.066,664,5.066,665,2.911,666,2.911,667,2.911,668,2.787,669,2.013,670,3.354,671,2.794,672,4.47]],["title/interfaces/Cloudinary.html",[0,1.194,673,2.646]],["body/interfaces/Cloudinary.html",[0,2.08,2,2.037,3,0.107,4,0.096,5,0.086,9,0.44,10,1.16,13,0.592,14,0.009,17,1.555,20,0.107,26,1.409,32,0.005,33,0.006,34,0.005,43,1.31,72,2.317,75,2.016,150,2.873,164,1.22,169,4.609,424,4.499,425,4.499,673,4.797,674,3.39,675,5.872,676,5.968,677,4.499,678,5.38,679,4.252,680,4.831,681,4.499,682,4.796,683,4.796,684,4.796,685,4.796,686,4.796,687,3.613,688,3.613,689,3.613,690,3.613,691,3.613,692,3.613,693,3.613,694,3.613,695,3.39,696,3.39,697,3.613,698,3.613,699,3.613,700,3.613,701,3.613,702,3.613,703,3.613]],["title/interfaces/Configuration.html",[0,1.194,150,1.972]],["body/interfaces/Configuration.html",[0,1.976,2,1.799,3,0.094,4,0.085,5,0.076,9,0.388,10,1.066,13,0.705,14,0.009,17,1.373,20,0.094,26,1.969,32,0.004,33,0.006,34,0.004,43,1.307,72,2.609,75,1.754,150,3.026,164,1.077,169,5.039,424,5.364,425,5.364,673,5.039,674,2.993,675,5.111,676,4.408,677,4.135,678,5.685,679,3.908,680,5.281,681,4.135,682,5.718,683,5.718,684,5.718,685,5.718,686,5.718,687,3.19,688,3.19,689,3.19,690,3.19,691,3.19,692,3.19,693,3.19,694,3.19,695,2.993,696,2.993,697,3.19,698,3.19,699,3.19,700,3.19,701,3.19,702,3.19,703,3.19]],["title/interfaces/ControllerAuth.html",[0,1.194,369,2.918]],["body/interfaces/ControllerAuth.html",[0,2.046,2,2.245,3,0.118,4,0.106,5,0.094,9,0.485,10,1.236,13,0.678,14,0.009,15,0.19,16,2.726,18,2.18,20,0.151,26,2.456,32,0.005,33,0.007,34,0.005,250,1.951,363,6.023,364,3.981,365,3.981,366,3.981,367,3.981,368,3.612,369,4.53,370,5.186,371,5.458,372,4.374,373,4.374,374,3.016]],["title/classes/Course.html",[35,0.215,704,2.533]],["body/classes/Course.html",[3,0.066,4,0.06,5,0.053,9,0.502,10,0.825,13,0.672,14,0.009,15,0.197,17,2.596,20,0.066,21,0.832,25,0.608,26,1.329,32,0.003,33,0.005,34,0.003,35,0.146,37,0.432,43,1.05,44,1.853,46,1.386,61,1.72,72,1.467,99,1.266,102,1.673,109,2.181,164,2.221,175,3.437,208,2.888,317,2.143,349,0.989,374,2.022,439,1.236,500,1.505,501,1.505,510,4.086,513,2.253,514,2.334,515,2.334,516,3.158,517,2.825,518,2.253,519,2.825,520,2.825,521,2.825,524,2.862,525,3.835,527,3.579,528,3.048,529,3.158,539,2.825,540,2.763,549,3.398,550,1.342,555,3.158,619,2.2,635,2.429,636,3.885,637,3.885,638,4.181,639,3.197,641,3.158,642,1.591,643,1.591,644,1.591,645,1.591,646,1.591,647,1.591,648,1.591,649,1.591,650,1.591,651,1.591,652,1.591,653,1.591,654,1.591,655,0.989,656,1.591,657,1.48,660,1.918,704,2.622,705,2.645,706,4.446,707,4.126,708,2.998,709,2.622,710,2.998,711,2.998,712,2.998,713,3.408,714,2.413]],["title/classes/CourseDto.html",[35,0.215,715,2.918]],["body/classes/CourseDto.html",[3,0.099,4,0.089,5,0.079,9,0.407,10,1.102,13,0.675,14,0.009,15,0.287,20,0.135,25,0.924,32,0.004,33,0.006,34,0.004,35,0.363,37,0.646,43,1.185,44,1.885,45,4.271,46,1.346,48,3.436,52,0.957,53,1.369,72,1.96,76,3.043,109,2.112,164,1.537,317,2.116,349,1.476,439,1.651,496,1.336,498,3.104,500,2.01,501,2.01,502,3.362,504,2.29,507,2.848,508,1.369,619,2.47,635,1.554,641,2.678,655,1.476,660,2.406,665,2.573,666,2.573,667,2.573,668,2.567,669,1.779,706,5.578,707,5.176,715,4.036,716,3.603,717,4.478,718,4.478,719,4.478,720,4.478,721,4.478,722,4.478,723,4.478,724,4.478,725,2.47,726,3.659,727,2.688,728,3.137,729,3.95]],["title/classes/CoursesController.html",[35,0.215,730,3.292]],["body/classes/CoursesController.html",[3,0.093,4,0.083,5,0.074,9,0.382,13,0.664,14,0.009,15,0.305,18,1.718,20,0.093,21,1.166,25,0.56,32,0.004,33,0.006,34,0.004,35,0.205,37,0.606,44,0.964,46,0.956,52,0.898,58,3.428,61,1.338,67,3.995,70,1.88,74,2.194,75,1.403,84,2.148,85,1.059,99,1.619,102,1.138,109,1.035,110,1.579,160,1.385,186,2.823,202,2.457,208,2.194,210,2.984,229,2.414,230,3.671,233,3.353,235,2.414,238,4.162,250,1.537,275,1.823,278,2.643,280,3.671,283,2.148,285,2.643,286,2.643,368,1.769,372,3.557,373,2.229,374,1.537,403,2.522,487,2.317,490,2.148,492,2.317,494,2.317,496,1.254,585,2.643,587,2.943,588,3.138,590,2.782,591,3.138,592,3.138,594,3.502,595,3.353,596,3.138,597,2.229,598,2.522,599,2.229,600,3.096,601,2.522,607,3.138,609,4.217,610,4.696,611,3.381,613,2.522,614,2.782,615,2.943,616,2.643,617,2.782,619,2.079,622,2.782,704,3.852,715,4.795,728,4.088,730,4.358,731,3.707,732,4.201,733,5.074,734,4.201,735,5.835,736,5.882,737,4.201,738,3.707,739,3.707,740,4.201,741,3.707,742,4.201,743,4.201,744,3.138,745,3.707]],["title/modules/CoursesModule.html",[112,1.382,126,2.918]],["body/modules/CoursesModule.html",[3,0.117,4,0.105,5,0.094,14,0.009,15,0.3,20,0.117,32,0.005,33,0.007,34,0.005,35,0.258,75,1.272,85,1.334,97,2.443,112,2.36,114,2.367,115,2.524,116,2.705,117,2.705,118,2.524,119,3.716,120,3.592,126,5.669,135,3.481,136,2.611,137,2.443,139,2.705,142,2.917,143,2.524,160,1.744,356,3.039,358,2.917,626,4.086,627,3.502,632,3.175,633,3.328,704,3.039,730,5.084,733,6.298,738,4.667,739,4.667,746,4.667,747,4.667,748,4.667,749,4.257,750,5.289,751,6.058,752,4.667,753,4.667]],["title/classes/CreateCategoryDto.html",[35,0.215,586,3.292]],["body/classes/CreateCategoryDto.html",[3,0.145,4,0.13,5,0.116,14,0.009,15,0.278,20,0.145,25,0.875,32,0.007,33,0.008,34,0.007,35,0.32,37,0.947,51,3.357,52,1.403,75,1.579,586,5.81,589,4.13,608,5.792,660,2.279,754,5.792,755,5.792,756,6.565]],["title/classes/CreateCourseDto.html",[35,0.215,736,3.292]],["body/classes/CreateCourseDto.html",[3,0.144,4,0.13,5,0.116,14,0.009,15,0.277,20,0.144,25,0.872,32,0.007,33,0.008,34,0.007,35,0.319,37,0.944,51,3.346,52,1.398,619,2.332,660,2.271,707,4.887,715,4.332,736,5.799,741,5.773,757,5.773,758,5.773,759,6.544]],["title/classes/CreateStageDto.html",[35,0.215,760,3.088]],["body/classes/CreateStageDto.html",[3,0.131,4,0.118,5,0.105,9,0.54,10,1.323,13,0.488,14,0.009,15,0.296,20,0.131,25,0.791,32,0.006,33,0.007,34,0.006,35,0.387,37,0.856,43,1.056,44,1.361,46,0.972,51,3.035,52,1.268,53,1.815,504,3.035,507,2.678,508,1.815,509,4.605,619,2.115,660,2.06,760,5.128,761,6.458,762,5.236,763,3.246,764,5.935,765,3.563,766,5.236,767,5.935,768,3.93,769,4.158]],["title/classes/CreateSubmissionDto.html",[35,0.215,770,3.292]],["body/classes/CreateSubmissionDto.html",[3,0.145,4,0.131,5,0.117,14,0.009,15,0.278,20,0.145,25,0.878,32,0.007,33,0.008,34,0.007,35,0.321,37,0.95,51,3.368,52,1.407,770,5.821,771,5.3,772,5.811,773,3.953,774,5.3,775,5.811,776,4.919,777,4.919]],["title/classes/CreateTaskDto.html",[35,0.215,778,3.088]],["body/classes/CreateTaskDto.html",[3,0.141,4,0.127,5,0.113,14,0.009,15,0.293,20,0.141,25,0.853,32,0.006,33,0.008,34,0.006,35,0.374,37,0.923,52,1.368,439,1.734,500,2.11,501,2.11,508,1.957,668,3.227,771,5.15,778,5.369,779,5.647,780,4.237,781,4.026,782,5.647,783,6.4]],["title/classes/CreateTrackDto.html",[35,0.215,784,2.773]],["body/classes/CreateTrackDto.html",[3,0.124,4,0.111,5,0.099,13,0.461,14,0.009,15,0.299,20,0.171,25,0.942,32,0.006,33,0.007,34,0.006,35,0.409,37,0.809,43,1.019,52,1.198,53,1.715,76,2.89,439,1.914,480,3.93,481,3.93,500,2.33,501,2.33,507,2.586,508,1.715,509,4.446,570,3.898,780,3.714,784,4.446,785,4.189,786,4.189,787,4.514,788,4.514,789,2.769,790,4.189,791,5.687,792,4.446,793,3.898,794,3.714,795,4.189,796,3.714,797,3.714]],["title/classes/CreateUserDto.html",[35,0.215,798,2.918]],["body/classes/CreateUserDto.html",[3,0.143,4,0.129,5,0.115,14,0.009,15,0.276,20,0.143,25,0.866,32,0.007,33,0.008,34,0.007,35,0.317,37,0.938,52,1.389,248,3.903,439,1.761,500,2.144,501,2.144,780,4.305,798,5.122,799,5.737,800,4.856,801,3.45,802,6.502,803,4.555]],["title/classes/CreateWithThumbnailTrackDto.html",[35,0.215,794,2.918]],["body/classes/CreateWithThumbnailTrackDto.html",[3,0.118,4,0.106,5,0.095,9,0.487,10,1.24,13,0.564,14,0.009,15,0.295,20,0.167,25,0.915,32,0.005,33,0.007,34,0.005,35,0.403,37,0.773,43,1.092,44,1.229,46,0.878,52,1.145,53,1.639,76,2.807,439,1.859,479,4.728,480,4.809,481,4.809,500,2.263,501,2.263,507,2.512,508,1.639,509,4.319,570,4.178,780,3.548,784,3.371,785,5.127,786,4.002,787,4.312,788,4.312,789,2.645,790,4.002,791,5.524,792,4.319,793,3.786,794,4.545,795,5.656,796,3.548,797,3.548,804,5.359]],["title/interfaces/Database.html",[0,1.194,169,2.646]],["body/interfaces/Database.html",[0,2.066,2,2.004,3,0.105,4,0.095,5,0.084,9,0.433,10,1.148,13,0.627,14,0.009,17,1.53,20,0.105,26,1.386,32,0.005,33,0.006,34,0.005,43,1.308,72,2.555,75,2.007,150,2.842,164,1.2,169,4.771,424,4.45,425,4.45,673,4.579,674,3.334,675,5.344,676,4.744,677,5.568,678,5.848,679,5.262,680,4.799,681,4.45,682,4.744,683,4.744,684,4.744,685,4.744,686,4.744,687,3.554,688,3.554,689,3.554,690,3.554,691,3.554,692,3.554,693,3.554,694,3.554,695,3.334,696,3.334,697,3.554,698,3.554,699,3.554,700,3.554,701,3.554,702,3.554,703,3.554]],["title/modules/DbTest.html",[112,1.382,805,3.547]],["body/modules/DbTest.html",[3,0.123,4,0.111,5,0.099,14,0.009,15,0.276,20,0.156,21,1.552,32,0.006,33,0.007,34,0.006,35,0.273,85,1.411,110,2.103,112,2.212,114,2.503,120,2.669,139,2.861,142,3.085,143,2.669,160,2.675,164,1.948,171,4.501,172,4.501,173,4.501,174,4.501,175,2.503,186,2.355,275,2.427,679,4.67,695,3.919,696,3.919,805,5.677,806,4.501,807,4.501,808,6.224,809,5.594,810,5.594,811,5.594,812,5.594,813,5.594,814,5.594,815,5.594,816,5.677,817,4.501,818,6.218,819,4.935,820,4.935,821,4.935]],["title/interfaces/DefaultAuthObject.html",[0,1.194,16,2.254]],["body/interfaces/DefaultAuthObject.html",[0,1.973,2,2.082,3,0.109,4,0.098,5,0.087,9,0.45,10,1.177,13,0.661,14,0.009,15,0.176,16,3.331,18,2.022,20,0.144,26,2.627,32,0.005,33,0.007,34,0.005,61,2.003,250,1.809,363,5.472,364,3.692,365,3.692,366,3.692,367,3.692,368,3.811,369,3.273,370,5.063,371,5.329,372,4.27,373,4.27,374,2.945]],["title/classes/FindDto.html",[35,0.215,822,3.088]],["body/classes/FindDto.html",[3,0.119,4,0.107,5,0.095,9,0.49,10,1.245,13,0.658,14,0.009,15,0.192,17,2.214,20,0.119,32,0.005,33,0.007,34,0.005,35,0.336,37,0.777,43,1.154,44,1.836,46,1.311,53,1.648,61,1.997,72,2.572,485,4.777,524,2.817,709,3.958,822,4.825,823,4.753,824,5.319,825,6.11,826,5.67,827,6.077,828,4.245,829,5.387,830,5.387,831,5.387,832,5.387,833,5.387,834,5.387,835,7.593]],["title/classes/GradeSubmissionDto.html",[35,0.215,836,3.292]],["body/classes/GradeSubmissionDto.html",[3,0.145,4,0.131,5,0.117,14,0.009,15,0.278,20,0.145,25,0.878,32,0.007,33,0.008,34,0.007,35,0.321,37,0.95,51,3.368,52,1.407,773,3.953,774,5.3,775,5.811,836,5.821,837,5.811,838,5.811,839,4.919,840,4.919]],["title/classes/HttpExceptionFilter.html",[35,0.215,841,3.547]],["body/classes/HttpExceptionFilter.html",[3,0.105,4,0.094,5,0.084,9,0.431,13,0.389,14,0.009,15,0.272,20,0.105,21,1.314,32,0.005,33,0.006,34,0.005,35,0.231,37,0.683,43,0.683,46,0.776,58,3.238,61,1.087,62,3.538,63,5.587,65,5.587,68,6.293,74,1.781,75,1.139,84,2.423,85,1.195,99,1.757,102,1.283,150,2.12,151,2.722,160,2.829,194,4.436,240,2.722,244,5.587,398,4.18,416,4.18,454,5.74,468,4.729,528,3.521,540,2.12,677,4.997,841,5.096,842,5.587,843,4.18,844,7.133,845,6.332,846,7.614,847,4.737,848,6.332,849,4.737,850,4.737,851,4.737,852,4.737,853,4.737,854,4.737,855,4.737,856,4.737,857,6.332,858,4.737,859,4.18,860,4.737,861,6.332,862,4.737,863,4.737,864,4.737,865,4.737,866,4.737,867,4.18,868,4.737,869,7.133,870,4.18,871,4.737,872,4.737,873,4.737]],["title/interfaces/IBaseController.html",[0,1.194,874,3.547]],["body/interfaces/IBaseController.html",[0,1.301,2,2.023,3,0.106,4,0.095,5,0.085,9,0.437,13,0.655,14,0.009,20,0.106,32,0.005,33,0.006,34,0.005,43,1.241,46,1.306,61,1.829,74,2.997,75,1.917,99,1.773,102,2.159,202,3.659,210,4.192,371,4.232,372,3.392,373,3.392,374,2.339,439,1.731,484,5.743,491,6.122,493,5.365,495,5.365,540,2.86,585,4.021,874,5.144,875,4.239,876,6.392,877,4.804,878,6.392,879,4.804,880,6.392,881,7.183,882,4.804,883,6.392,884,6.392,885,4.804,886,6.392,887,4.804]],["title/interfaces/IPagedListDto.html",[0,1.194,888,3.547]],["body/interfaces/IPagedListDto.html",[0,1.549,2,2.408,3,0.126,4,0.114,5,0.101,9,0.52,10,1.293,13,0.692,14,0.009,15,0.279,20,0.158,23,5.297,32,0.006,33,0.007,34,0.006,35,0.279,52,1.222,72,2.629,76,2.925,85,1.442,110,2.15,468,4.271,490,3.658,496,1.707,888,6.281,889,4.602,890,4.602,891,5.899,892,5.575,893,5.046,894,5.719,895,4.271,896,7.153]],["title/injectables/JwtAuthGuard.html",[176,1.803,599,2.339]],["body/injectables/JwtAuthGuard.html",[3,0.123,4,0.111,5,0.099,9,0.507,13,0.459,14,0.009,15,0.298,20,0.123,25,0.743,26,2.051,32,0.006,33,0.007,34,0.006,35,0.272,46,0.914,61,1.28,74,2.097,75,1.342,85,1.407,99,1.954,102,1.511,110,2.097,150,2.496,151,3.206,164,1.407,176,2.88,177,3.206,202,2.965,347,3.908,348,4.166,349,1.839,458,6.21,462,4.489,463,6.523,465,5.667,471,4.489,599,3.737,897,6.213,898,4.922,899,5.578,900,7.717,901,5.578,902,4.922,903,5.578,904,5.578,905,5.578]],["title/interfaces/JwtPayload.html",[0,1.194,406,2.918]],["body/interfaces/JwtPayload.html",[0,1.671,2,2.597,3,0.136,4,0.123,5,0.109,9,0.561,10,1.354,13,0.664,14,0.009,15,0.22,20,0.136,32,0.006,33,0.008,34,0.006,43,1.262,57,3.536,250,2.257,322,5.56,368,3.536,406,4.962,427,5.04,906,5.442,907,5.442]],["title/injectables/JwtStrategy.html",[176,1.803,342,3.088]],["body/injectables/JwtStrategy.html",[3,0.12,4,0.108,5,0.096,9,0.494,13,0.446,14,0.009,15,0.296,20,0.12,25,0.724,32,0.005,33,0.007,34,0.005,35,0.265,46,1.134,61,1.246,70,3.41,74,2.041,75,1.306,85,1.369,99,1.921,102,1.471,110,2.041,150,2.43,151,3.12,175,2.43,176,2.831,177,3.12,186,3.209,202,2.915,342,4.85,347,3.804,400,4.055,406,5.314,407,4.37,408,6.459,908,4.791,909,6.724,910,5.43,911,5.43,912,7.621,913,5.43,914,5.43,915,5.43,916,5.43,917,4.791,918,5.43,919,5.43,920,5.43,921,5.43,922,5.43,923,5.43,924,5.43]],["title/classes/LoginReqDto.html",[35,0.215,54,2.646]],["body/classes/LoginReqDto.html",[3,0.142,4,0.128,5,0.114,14,0.009,15,0.274,20,0.169,25,0.856,32,0.006,33,0.008,34,0.006,35,0.375,37,0.926,43,0.926,51,3.283,52,1.372,54,4.609,57,2.703,204,4.039,222,3.407,247,5.167,248,3.854,259,4.498,274,5.167,925,5.167,926,5.664]],["title/classes/LoginResDto.html",[35,0.215,259,3.088]],["body/classes/LoginResDto.html",[3,0.137,4,0.124,5,0.11,9,0.566,10,1.362,13,0.512,14,0.009,15,0.269,20,0.166,25,0.829,32,0.006,33,0.008,34,0.006,35,0.368,37,0.898,43,1.087,46,1.019,51,3.183,52,1.33,54,3.736,57,2.621,204,3.916,222,3.303,247,5.009,248,3.736,259,5.279,274,6.522,925,5.009,926,5.492,927,6.224]],["title/modules/MailModule.html",[112,1.382,127,3.088]],["body/modules/MailModule.html",[3,0.132,4,0.119,5,0.106,14,0.009,15,0.262,20,0.132,32,0.006,33,0.007,34,0.006,35,0.291,85,1.505,112,2.495,114,2.671,115,2.849,116,3.053,117,3.053,118,2.849,119,3.928,120,3.797,127,6.161,135,3.757,136,2.947,137,2.757,245,5.72,928,5.267,929,5.267,930,5.97,931,5.97,932,5.97]],["title/injectables/MailService.html",[176,1.803,245,2.773]],["body/injectables/MailService.html",[3,0.138,4,0.092,5,0.082,9,0.421,10,1.127,13,0.513,14,0.009,15,0.281,17,1.488,18,1.893,20,0.102,32,0.005,33,0.006,34,0.005,35,0.226,46,1.29,61,1.062,70,3.155,74,1.741,75,1.113,85,1.167,99,1.73,102,1.689,109,1.736,150,3.155,151,2.66,160,2.056,161,4.94,176,2.55,177,2.66,186,2.969,202,2.626,245,3.923,270,5.126,275,2.009,303,5.502,524,1.893,540,2.071,680,2.913,681,3.244,933,4.085,934,7.051,935,7.544,936,6.236,937,6.236,938,4.63,939,6.236,940,7.051,941,4.63,942,4.63,943,4.63,944,7.051,945,4.63,946,6.221,947,6.236,948,4.085,949,4.085,950,4.63,951,4.63,952,4.63,953,4.63,954,4.63,955,4.085,956,4.63,957,4.63,958,4.63,959,4.63,960,4.63,961,4.63,962,6.236,963,4.085,964,4.63,965,4.63,966,4.63,967,4.63,968,4.63,969,4.63,970,4.63]],["title/interfaces/Mailer.html",[0,1.194,680,2.773]],["body/interfaces/Mailer.html",[0,2.094,2,2.072,3,0.109,4,0.098,5,0.087,9,0.447,10,1.173,13,0.534,14,0.009,17,1.582,20,0.109,26,1.433,32,0.005,33,0.007,34,0.005,43,1.305,72,2.337,75,1.859,150,2.905,164,1.241,169,4.64,424,4.549,425,4.549,673,4.64,674,3.447,675,5.896,676,4.849,677,4.549,678,5.415,679,4.299,680,5.055,681,5.63,682,4.849,683,4.849,684,4.849,685,4.849,686,4.849,687,3.674,688,3.674,689,3.674,690,3.674,691,3.674,692,3.674,693,3.674,694,3.674,695,3.447,696,3.447,697,3.674,698,3.674,699,3.674,700,3.674,701,3.674,702,3.674,703,3.674]],["title/controllers/MentorController.html",[7,2.036,971,3.292]],["body/controllers/MentorController.html",[3,0.075,4,0.067,5,0.06,7,1.566,9,0.308,13,0.64,14,0.009,15,0.302,20,0.075,21,0.941,32,0.003,33,0.005,34,0.003,35,0.244,43,0.858,44,1.148,46,0.82,52,0.725,58,3.582,61,1.148,67,3.622,70,1.518,74,1.882,75,1.204,84,1.735,85,0.855,97,1.566,99,1.389,102,1.356,105,2.533,110,1.275,143,1.619,160,2.619,164,1.262,185,2.729,186,3.086,194,5.566,195,4.77,202,2.765,208,2.236,210,3.359,229,2.876,231,2.376,232,2.376,233,1.949,235,1.949,238,4.025,240,1.949,250,1.241,270,2.036,272,3.507,275,2.849,283,1.735,322,3.314,368,1.428,370,2.134,403,2.036,439,0.919,485,2.134,508,1.037,518,1.674,550,1.518,594,3.571,597,1.8,598,2.036,599,1.8,600,3.156,601,2.036,613,3.005,616,3.149,669,1.348,773,2.036,774,2.729,797,3.314,822,4.601,824,2.376,825,2.729,826,2.533,836,4.905,891,3.507,892,3.314,971,3.738,972,2.992,973,2.533,974,5.005,975,5.005,976,3.392,977,3.392,978,2.992,979,5.005,980,3.392,981,5.794,982,3.392,983,3.392,984,2.992,985,3.392,986,6.567,987,2.729,988,2.729,989,3.738,990,2.533,991,3.392,992,3.314,993,3.392,994,3.742,995,2.992,996,3.392,997,3.392,998,3.392,999,2.376,1000,3.392,1001,3.738,1002,4.416,1003,3.392,1004,3.738,1005,2.992,1006,3.314,1007,2.992,1008,2.729,1009,4.416,1010,3.392,1011,2.036,1012,3.392,1013,3.392,1014,3.392,1015,2.992,1016,2.533,1017,2.533,1018,3.392,1019,3.392,1020,3.392,1021,3.392,1022,2.729,1023,3.392,1024,3.392,1025,2.729]],["title/classes/MentorDto.html",[35,0.215,1026,3.088]],["body/classes/MentorDto.html",[3,0.142,4,0.128,5,0.114,14,0.009,15,0.274,20,0.142,25,0.856,32,0.006,33,0.008,34,0.006,35,0.313,37,0.926,51,3.283,52,1.372,439,1.739,660,2.665,801,3.407,1026,5.379,1027,5.664,1028,5.167,1029,5.167,1030,4.251,1031,4.251,1032,4.795,1033,4.251,1034,4.795,1035,4.795,1036,4.795,1037,4.498]],["title/classes/MentorInput.html",[35,0.215,796,2.918]],["body/classes/MentorInput.html",[3,0.119,4,0.107,5,0.096,9,0.491,10,1.247,13,0.567,14,0.009,15,0.295,20,0.168,25,0.919,32,0.005,33,0.007,34,0.005,35,0.404,37,0.779,43,1.096,44,1.239,46,0.885,52,1.154,53,1.652,76,2.821,439,1.869,480,3.784,481,3.784,500,2.275,501,2.275,504,2.762,507,2.525,508,1.652,509,4.34,570,3.805,780,3.576,784,3.398,785,5.153,786,4.034,787,4.347,788,4.347,789,2.666,790,4.034,791,5.552,792,4.34,793,3.805,794,3.576,795,4.034,796,4.568,797,5.033,1038,5.401]],["title/classes/MentorMentee.html",[35,0.215,1039,3.088]],["body/classes/MentorMentee.html",[3,0.076,4,0.068,5,0.061,9,0.312,10,0.911,13,0.675,14,0.009,15,0.214,17,2.604,20,0.076,21,0.95,25,0.672,26,1.468,32,0.003,33,0.005,34,0.003,35,0.167,37,0.494,43,0.494,44,1.858,46,1.397,61,1.79,99,1.399,102,1.787,109,2.174,164,2.071,175,2.677,208,2.766,249,2.876,250,1.254,317,2.291,374,2.189,439,1.366,500,1.662,501,1.662,510,4.164,513,2.489,514,2.579,515,2.579,516,3.375,517,3.06,518,2.489,519,3.06,520,3.06,521,3.06,524,3.008,525,3.375,527,4.292,528,3.258,529,3.375,539,3.06,540,2.953,549,3.06,550,1.533,555,3.375,641,3.243,642,1.818,643,1.818,644,1.818,645,1.818,646,1.818,647,1.818,648,1.818,649,1.818,650,1.818,651,1.818,652,1.818,653,1.818,654,1.818,656,1.818,1011,3.592,1039,3.533,1040,5.279,1041,3.023,1042,4.469,1043,2.898,1044,3.426,1045,3.426]],["title/modules/MentorModule.html",[112,1.382,128,2.773]],["body/modules/MentorModule.html",[3,0.105,4,0.095,5,0.085,14,0.009,15,0.303,20,0.105,32,0.005,33,0.006,34,0.005,35,0.233,75,1.723,85,1.206,97,2.943,112,2.247,114,2.139,115,2.282,116,2.445,117,2.445,118,2.282,119,3.538,120,3.42,128,5.407,134,4.516,135,3.259,136,2.36,137,2.208,139,3.259,142,2.637,143,2.282,157,3.166,160,2.363,356,4.118,358,3.953,971,5.352,994,3.008,995,4.219,999,4.464,1039,3.35,1046,4.219,1047,4.782,1048,4.219,1049,4.219,1050,5.546,1051,3.848,1052,3.166,1053,3.848,1054,3.848,1055,4.782,1056,4.782,1057,4.219,1058,4.219,1059,4.759,1060,4.219,1061,4.219,1062,5.021,1063,3.848,1064,3.848,1065,3.848,1066,3.848]],["title/injectables/MentorService.html",[176,1.803,1050,2.773]],["body/injectables/MentorService.html",[3,0.074,4,0.067,5,0.059,9,0.304,12,4.32,13,0.651,14,0.009,15,0.26,20,0.074,32,0.003,33,0.005,34,0.003,35,0.163,43,1.242,46,1.141,61,1.598,70,2.218,72,2.098,74,2.619,75,1.675,85,0.844,99,1.375,102,1.767,110,2.453,143,1.597,160,2.556,176,2.027,177,1.923,186,3.482,202,3.264,210,2.535,249,2.414,250,1.225,270,2.975,275,3.363,513,1.652,550,1.498,763,2.027,797,5.41,824,3.473,826,3.702,892,4.32,973,3.702,988,2.694,989,5.638,1004,3.702,1006,3.282,1011,4.653,1039,2.345,1042,4.873,1050,3.118,1052,3.908,1053,2.694,1054,2.694,1057,2.953,1058,2.953,1059,3.702,1062,4.135,1067,2.953,1068,4.957,1069,4.957,1070,4.373,1071,3.702,1072,3.347,1073,3.347,1074,4.957,1075,3.347,1076,5.757,1077,4.957,1078,6.525,1079,3.347,1080,5.208,1081,4.957,1082,3.347,1083,4.957,1084,3.347,1085,3.347,1086,3.347,1087,3.347,1088,3.347,1089,3.347,1090,3.347,1091,6.525,1092,4.957,1093,4.957,1094,4.957,1095,3.347,1096,4.957,1097,4.957,1098,4.957,1099,6.525,1100,3.347,1101,3.347,1102,4.957,1103,4.373,1104,4.373,1105,3.347,1106,3.347,1107,3.347]],["title/classes/PagedCategoryOutDto.html",[35,0.215,605,2.918]],["body/classes/PagedCategoryOutDto.html",[3,0.134,4,0.121,5,0.108,14,0.009,15,0.298,20,0.164,25,0.99,32,0.006,33,0.007,34,0.006,35,0.408,37,0.876,43,1.071,53,1.858,75,1.461,349,2.003,496,1.813,498,2.87,507,2.935,508,1.858,589,3.823,605,4.917,635,2.109,655,2.003,659,4.89,660,2.109,668,3.127,669,2.415,670,4.023,671,3.352,672,5.361]],["title/classes/PagedCourseOutputDto.html",[35,0.215,728,3.088]],["body/classes/PagedCourseOutputDto.html",[3,0.123,4,0.111,5,0.099,14,0.009,15,0.305,20,0.155,25,0.938,32,0.006,33,0.007,34,0.006,35,0.396,37,0.805,43,1.113,45,4.934,48,3.743,52,1.192,53,1.706,72,1.793,76,3.314,109,1.734,164,1.407,349,1.839,496,1.665,498,2.721,507,3.058,508,1.706,619,1.988,635,1.936,655,1.839,660,1.936,668,2.965,669,2.217,706,4.489,707,4.166,715,3.693,716,4.489,725,3.077,726,4.227,727,3.349,728,4.934,729,4.922]],["title/classes/PagedListStageDto.html",[35,0.215,1108,2.176]],["body/classes/PagedListStageDto.html",[3,0.118,4,0.106,5,0.094,13,0.621,14,0.009,15,0.306,20,0.151,25,0.912,32,0.005,33,0.007,34,0.005,35,0.389,37,0.769,43,0.987,48,3.489,52,1.139,53,1.63,72,2.199,76,2.798,109,1.685,164,1.344,349,1.758,496,1.591,498,2.644,507,3.087,508,1.63,619,1.899,635,1.85,655,1.758,657,2.632,660,1.85,668,2.881,669,2.118,725,2.94,726,3.2,727,3.2,763,2.18,765,3.2,768,3.529,769,3.735,789,3.935,828,3.377,1108,3.377,1109,4.29,1110,5.642,1111,3.354,1112,3.981,1113,4.53,1114,4.703]],["title/classes/PagedListStageDto-1.html",[35,0.179,657,1.814,1108,1.814]],["body/classes/PagedListStageDto-1.html",[3,0.128,4,0.115,5,0.102,14,0.009,15,0.301,20,0.159,25,0.96,32,0.006,33,0.007,34,0.006,35,0.401,37,0.834,43,1.039,48,3.327,53,1.769,72,1.859,349,1.907,496,1.726,498,2.784,507,3.005,508,1.769,619,2.061,635,2.008,655,1.907,657,2.855,660,2.008,668,3.033,669,2.298,670,3.829,671,3.19,725,3.19,768,3.829,828,3.556,1108,3.556,1110,5.38,1111,3.639,1113,3.829,1115,4.654,1116,3.829,1117,5.103]],["title/classes/PagedListStageDto-2.html",[35,0.179,1108,1.814,1118,2.574]],["body/classes/PagedListStageDto-2.html",[3,0.123,4,0.111,5,0.099,13,0.634,14,0.009,15,0.309,20,0.155,25,0.938,26,1.624,32,0.006,33,0.007,34,0.006,35,0.396,37,0.805,48,3.252,52,1.192,53,1.706,72,1.793,76,2.88,109,1.734,164,1.407,349,1.839,496,1.665,498,2.721,507,2.966,508,1.706,635,1.936,655,1.839,668,2.965,669,2.217,670,3.693,671,3.077,725,3.077,1108,3.476,1116,5.366,1119,4.489,1120,4.922,1121,3.509,1122,4.489,1123,4.489,1124,2.42,1125,4.922]],["title/classes/PagedListSubmissionDto.html",[35,0.215,992,2.918]],["body/classes/PagedListSubmissionDto.html",[3,0.127,4,0.114,5,0.102,14,0.009,15,0.292,20,0.158,25,0.957,32,0.006,33,0.007,34,0.006,35,0.4,37,0.83,43,1.129,45,5.029,53,1.759,72,1.849,349,1.896,496,1.716,498,2.774,507,3.086,508,1.759,635,1.996,655,1.896,669,2.286,671,3.959,773,3.452,776,4.295,777,4.295,828,3.863,839,4.295,840,4.295,992,4.753,1111,3.618,1113,3.808,1118,4.029,1126,4.628,1127,6.333,1128,4.628,1129,5.074,1130,5.074,1131,5.074]],["title/classes/PagedListTaskDto.html",[35,0.215,1132,2.918]],["body/classes/PagedListTaskDto.html",[3,0.118,4,0.106,5,0.095,13,0.622,14,0.009,15,0.294,20,0.151,25,0.913,32,0.005,33,0.007,34,0.005,35,0.389,37,0.771,43,1.19,48,3.493,52,1.142,53,1.635,64,3.539,76,2.802,317,2.863,349,1.762,496,1.595,498,2.648,507,3.141,508,1.635,509,5.019,619,1.904,635,1.855,655,1.762,660,1.855,668,2.885,669,2.124,704,3.071,726,3.208,727,3.208,763,2.186,781,3.362,828,3.734,1124,2.319,1132,4.537,1133,4.301,1134,5.118,1135,4.716,1136,4.716,1137,4.301,1138,4.301,1139,4.716]],["title/classes/PagedTrackOutputDto.html",[35,0.215,1140,2.918]],["body/classes/PagedTrackOutputDto.html",[3,0.119,4,0.107,5,0.095,13,0.624,14,0.009,15,0.307,20,0.152,25,0.918,32,0.005,33,0.007,34,0.005,35,0.391,37,0.777,43,1.095,48,3.506,52,1.151,53,1.648,76,3.105,109,1.971,164,1.915,349,1.776,496,1.608,498,2.662,507,3.026,508,1.648,619,1.92,635,1.87,655,1.776,660,1.87,668,2.9,669,2.141,725,2.971,726,3.234,727,3.234,789,2.659,792,3.389,793,2.971,828,3.4,1121,5.034,1140,4.56,1141,4.335,1142,4.335,1143,4.023,1144,4.753]],["title/classes/PagedUserOutputDto.html",[35,0.215,1145,2.646]],["body/classes/PagedUserOutputDto.html",[3,0.097,4,0.087,5,0.078,13,0.656,14,0.009,15,0.292,20,0.133,25,0.8,32,0.004,33,0.006,34,0.004,35,0.36,37,0.632,43,1.232,52,0.936,53,1.34,57,1.845,64,2.901,72,1.931,76,3.341,109,1.816,164,1.948,317,2.379,349,1.445,368,2.886,427,2.63,496,1.307,498,2.321,507,3.222,508,1.34,635,1.521,655,1.445,658,3.526,660,1.521,668,2.529,669,1.741,671,2.417,789,3.64,801,2.325,803,3.07,828,3.814,1030,2.901,1031,2.901,1032,3.272,1033,2.901,1034,3.272,1035,3.272,1036,3.272,1037,5.166,1112,3.272,1134,4.486,1143,5.507,1145,3.605,1146,3.526,1147,5.299,1148,3.866,1149,3.866,1150,3.866,1151,3.866,1152,7.04,1153,3.866,1154,4.208,1155,3.526,1156,3.866,1157,3.526,1158,3.866,1159,3.866,1160,5.299,1161,3.866,1162,3.866,1163,3.866,1164,3.866,1165,3.526,1166,3.866]],["title/controllers/ProfileController.html",[7,2.036,1167,3.292]],["body/controllers/ProfileController.html",[3,0.052,4,0.047,5,0.095,7,1.081,9,0.213,13,0.625,14,0.009,15,0.291,20,0.052,21,1.308,32,0.002,33,0.004,34,0.002,35,0.184,44,1.356,46,0.968,52,0.5,61,1.356,67,4.027,74,2.222,75,1.421,84,1.198,85,0.59,97,1.081,99,1.043,102,1.601,105,1.749,108,1.749,109,0.577,110,2.222,160,2.58,164,1.841,185,1.884,186,3.336,194,5.756,195,5.037,202,3.074,208,2.029,210,2.41,229,1.346,231,1.641,233,1.346,235,1.346,238,3.626,240,2.161,249,2.712,250,0.857,251,2.161,252,1.641,270,2.258,272,1.641,275,2.877,283,2.41,368,0.986,439,1.277,476,2.809,485,2.366,508,0.716,570,2.976,594,3.788,597,1.242,598,1.406,599,1.242,600,2.501,601,1.406,613,3.981,660,0.813,669,0.931,709,1.346,797,1.55,801,3.519,803,1.641,822,4.646,824,3.78,825,3.026,826,4.03,891,3.78,892,3.573,973,2.809,981,5.851,990,1.749,1001,4.414,1002,2.066,1004,4.03,1005,3.318,1006,3.573,1007,3.318,1008,4.342,1016,4.414,1017,4.414,1026,1.641,1028,1.884,1050,2.965,1070,3.318,1071,2.809,1076,2.066,1103,3.318,1124,1.016,1145,3.548,1165,1.884,1167,2.809,1168,2.066,1169,2.342,1170,3.761,1171,3.761,1172,3.761,1173,2.342,1174,2.342,1175,2.342,1176,2.342,1177,2.342,1178,2.342,1179,2.342,1180,2.342,1181,2.342,1182,2.342,1183,2.342,1184,2.342,1185,4.03,1186,2.342,1187,2.342,1188,2.342,1189,2.342,1190,2.342,1191,3.761,1192,3.761,1193,3.761,1194,2.342,1195,2.342,1196,2.342,1197,2.066,1198,3.318,1199,2.066,1200,2.066,1201,2.066,1202,2.066,1203,1.884,1204,3.318,1205,2.066,1206,1.884,1207,2.342,1208,2.342,1209,2.066,1210,2.066,1211,2.342,1212,2.342,1213,2.342,1214,2.342,1215,3.12,1216,2.066,1217,2.342,1218,2.342,1219,2.066,1220,2.342,1221,2.342,1222,2.342,1223,2.342,1224,1.884,1225,4.713,1226,2.342,1227,2.066,1228,2.342,1229,2.342,1230,3.318,1231,2.342,1232,2.342,1233,2.342,1234,2.342,1235,2.342,1236,2.342,1237,2.342,1238,2.066,1239,2.066,1240,2.342,1241,3.761,1242,4.158,1243,2.066,1244,2.342,1245,2.342,1246,2.342,1247,1.884,1248,2.066,1249,2.066,1250,2.066,1251,2.342,1252,2.342]],["title/modules/ProfileModule.html",[112,1.382,129,3.088]],["body/modules/ProfileModule.html",[3,0.114,4,0.103,5,0.092,14,0.009,15,0.299,20,0.114,32,0.005,33,0.007,34,0.005,35,0.253,85,1.307,97,3.102,112,2.337,114,2.319,115,2.473,116,2.65,117,2.65,118,2.473,119,3.68,120,3.557,128,5.267,129,6.281,134,4.618,135,3.435,136,2.558,137,2.393,139,3.435,157,3.431,159,4.17,251,4.811,252,3.63,1167,5.567,1215,5.906,1216,4.572,1253,4.572,1254,5.182,1255,4.572,1256,4.572,1257,5.182,1258,5.182]],["title/injectables/ProfileService.html",[176,1.803,1215,2.918]],["body/injectables/ProfileService.html",[3,0.114,4,0.103,5,0.119,9,0.471,13,0.552,14,0.009,15,0.299,20,0.114,32,0.005,33,0.007,34,0.005,35,0.253,43,1.075,46,1.1,61,1.541,70,2.319,74,2.525,75,1.616,85,1.307,99,1.864,102,1.404,109,1.276,143,2.473,160,1.709,176,2.747,177,2.978,186,3.139,202,2.829,249,2.119,250,1.896,275,2.915,322,5.41,550,2.319,570,4.35,988,4.17,989,5.89,1025,4.17,1033,4.448,1206,4.17,1215,4.448,1259,4.572,1260,6.718,1261,5.182,1262,5.182,1263,6.718,1264,6.718,1265,5.182,1266,3.87,1267,4.572,1268,4.572,1269,5.182,1270,4.17,1271,5.182,1272,4.572,1273,5.182]],["title/classes/RegisterUserDto.html",[35,0.215,204,2.773]],["body/classes/RegisterUserDto.html",[3,0.131,4,0.118,5,0.105,9,0.54,10,1.323,13,0.488,14,0.009,15,0.283,20,0.161,25,0.791,26,1.728,32,0.006,33,0.007,34,0.006,35,0.387,37,0.856,43,1.056,44,1.361,46,0.972,51,3.035,52,1.268,53,1.815,57,2.499,109,1.462,204,4.605,207,4.158,222,4.211,248,3.563,290,4.776,800,4.432,801,3.149,1029,4.776,1030,3.93,1031,3.93,1274,5.89,1275,6.458,1276,5.935,1277,5.236]],["title/classes/RegisterUserResDto.html",[35,0.215,207,3.088]],["body/classes/RegisterUserResDto.html",[3,0.131,4,0.118,5,0.105,9,0.541,10,1.325,13,0.489,14,0.009,15,0.284,20,0.162,25,0.793,26,2.135,32,0.006,33,0.007,34,0.006,35,0.388,37,0.859,43,0.859,46,0.975,51,3.044,52,1.272,53,1.82,57,2.506,109,1.957,204,3.745,207,5.137,222,3.158,248,3.573,290,6.395,800,4.445,801,3.158,1029,4.79,1030,3.941,1031,3.941,1274,5.901,1275,5.252,1277,5.252,1278,5.952]],["title/classes/ResetPassInput.html",[35,0.215,212,3.088]],["body/classes/ResetPassInput.html",[3,0.132,4,0.119,5,0.106,9,0.545,10,1.33,13,0.605,14,0.009,15,0.263,20,0.132,25,0.981,32,0.006,33,0.007,34,0.006,35,0.359,37,0.864,43,1.149,44,1.688,46,1.205,48,3.838,53,1.831,212,5.156,225,5.823,264,5.282,292,4.872,333,6.412,641,2.314,909,5.282,1279,6.493,1280,5.282,1281,5.987,1282,5.987]],["title/guards/RolesGuard.html",[455,3.547,600,2.339]],["body/guards/RolesGuard.html",[3,0.114,4,0.103,5,0.092,9,0.471,13,0.552,14,0.009,15,0.299,20,0.114,26,1.956,32,0.005,33,0.007,34,0.005,35,0.253,46,1.1,61,1.541,70,2.319,74,2.525,75,1.616,85,1.307,99,1.864,102,1.404,108,3.87,110,2.525,150,2.319,151,2.978,160,2.458,164,1.307,176,2.747,195,4.226,240,2.978,250,1.896,368,2.829,406,4.448,407,4.17,408,4.17,427,3.111,456,4.17,458,6.346,462,5.406,463,6.346,465,4.17,468,3.87,469,4.572,471,4.17,475,4.572,597,3.564,600,3.564,1283,4.572,1284,5.182,1285,8.372,1286,5.182,1287,5.182,1288,4.572,1289,5.182,1290,5.182,1291,5.182]],["title/injectables/SessionSerializer.html",[176,1.803,343,3.088]],["body/injectables/SessionSerializer.html",[3,0.116,4,0.104,5,0.093,9,0.476,13,0.556,14,0.009,15,0.267,20,0.116,25,0.901,32,0.005,33,0.007,34,0.005,35,0.255,46,1.107,61,1.551,62,5.05,74,2.542,75,1.626,85,1.32,99,1.876,102,1.832,176,2.765,177,3.008,249,3.724,250,1.916,343,4.737,347,3.668,540,3.542,895,5.05,1292,4.619,1293,7.49,1294,6.762,1295,6.762,1296,6.762,1297,8.395,1298,7.917,1299,6.762,1300,5.235,1301,6.762,1302,5.235,1303,6.762]],["title/modules/SharedModule.html",[112,1.382,130,3.088]],["body/modules/SharedModule.html",[3,0.146,4,0.131,5,0.117,14,0.009,15,0.236,20,0.146,32,0.007,33,0.008,34,0.007,35,0.322,85,1.666,112,2.448,114,2.956,119,3.262,120,3.153,130,5.471,139,3.379,1304,6.607,1305,7.809]],["title/classes/Stage.html",[35,0.215,1124,1.912]],["body/classes/Stage.html",[3,0.063,4,0.057,5,0.05,9,0.486,10,0.792,13,0.672,14,0.009,15,0.232,17,2.627,20,0.063,21,0.789,25,0.584,26,1.276,32,0.003,33,0.004,34,0.003,35,0.139,37,0.41,43,0.936,44,1.854,46,1.382,61,1.692,72,1.931,99,1.216,102,1.627,109,2.185,164,2.232,175,3.195,208,2.772,317,2.085,349,0.938,374,1.956,439,1.187,500,1.445,501,1.445,510,4.053,513,2.163,514,2.241,515,2.241,516,3.072,517,2.734,518,2.163,519,2.734,520,2.734,521,2.734,524,2.803,525,3.771,527,3.951,528,2.965,529,3.072,539,2.734,540,2.688,549,3.505,550,1.272,552,2.124,555,3.505,619,2.14,635,2.085,636,3.779,637,3.779,638,3.728,639,3.07,641,3.123,642,1.509,643,1.509,644,1.509,645,1.509,646,1.509,647,1.509,648,1.509,649,1.509,650,1.509,651,1.509,652,1.509,653,1.509,654,1.509,655,0.938,656,1.509,657,2.639,660,1.856,709,2.518,713,2.124,714,2.289,763,2.803,768,3.54,769,3.746,1043,1.634,1124,1.901,1306,2.509,1307,2.844,1308,2.844,1309,2.844,1310,2.844,1311,4.834,1312,2.844,1313,2.509,1314,2.124,1315,2.509]],["title/classes/StageDto.html",[35,0.215,765,2.646]],["body/classes/StageDto.html",[3,0.092,4,0.083,5,0.074,9,0.378,10,1.047,13,0.702,14,0.009,15,0.288,17,1.337,20,0.128,25,0.888,32,0.004,33,0.006,34,0.004,35,0.352,37,0.6,43,1.094,44,1.885,46,1.346,48,3.079,52,0.889,53,1.272,61,1.329,72,2.318,76,2.369,109,2.103,164,1.049,317,2.011,349,1.371,439,1.569,496,1.241,498,3.034,500,1.91,501,1.91,502,3.195,504,2.127,507,2.873,508,1.272,524,1.7,619,2.376,635,1.443,641,2.576,655,1.371,657,2.86,660,2.314,665,2.39,666,2.39,667,2.39,668,2.439,669,1.653,725,2.294,726,2.496,727,2.496,763,2.726,765,3.478,768,4.414,769,4.671,789,3.876,828,2.86,1108,2.053,1109,3.346,1110,4.979,1111,2.616,1112,3.106,1113,3.836,1114,3.669,1316,3.669,1317,4.158,1318,4.158,1319,4.158,1320,3.669,1321,4.158,1322,3.669,1323,4.158,1324,3.669,1325,3.669,1326,4.158]],["title/classes/StageOnlyDto.html",[35,0.215,1116,2.918]],["body/classes/StageOnlyDto.html",[3,0.103,4,0.093,5,0.083,9,0.426,10,1.135,13,0.669,14,0.009,15,0.282,17,1.505,20,0.139,25,0.945,32,0.005,33,0.006,34,0.005,35,0.37,37,0.675,43,1.14,44,1.867,46,1.333,48,2.902,53,1.432,61,1.441,72,2.02,109,2.004,317,2.181,349,1.544,439,1.702,496,1.397,498,3.145,500,2.072,501,2.072,502,3.466,504,2.395,507,2.773,508,1.432,524,1.915,619,2.527,635,1.625,641,2.74,655,1.544,657,3.102,660,2.462,661,3.769,665,2.691,666,2.691,667,2.691,668,2.646,669,1.861,670,3.1,671,2.583,725,2.583,768,4.695,828,3.102,1108,2.312,1110,4.693,1111,2.946,1113,3.1,1115,3.769,1116,4.16,1117,4.132,1320,4.132,1327,4.683,1328,4.683,1329,4.132,1330,4.683]],["title/classes/StagesController.html",[35,0.215,1331,3.292]],["body/classes/StagesController.html",[3,0.086,4,0.078,5,0.069,9,0.356,13,0.651,14,0.009,15,0.304,18,1.599,20,0.086,21,1.54,25,0.739,32,0.004,33,0.006,34,0.004,35,0.191,37,0.564,44,0.897,46,0.909,52,0.836,58,3.298,61,1.273,67,3.871,70,2.483,74,2.086,75,1.335,84,2,85,0.986,99,1.54,102,1.059,110,1.471,160,2.126,186,2.716,202,2.337,208,2.086,210,2.838,229,2.248,230,3.491,232,3.888,233,3.189,235,2.248,238,4.033,250,1.431,270,2.348,275,2.798,278,2.461,280,2.461,283,2.838,285,2.461,286,2.461,368,1.647,372,2.945,373,2.075,374,1.431,403,2.348,439,1.059,487,2.157,490,2,492,2.157,494,2.157,496,1.167,580,4.057,585,2.461,587,2.74,588,2.921,590,2.59,591,2.921,592,2.921,594,3.331,595,3.189,596,2.921,597,2.075,598,2.348,599,2.075,600,2.945,601,2.348,607,2.921,609,3.491,613,2.348,614,2.59,615,2.74,616,2.461,617,2.59,619,1.977,622,2.59,744,2.921,760,5.393,763,2.637,765,4.213,766,3.451,1108,2.739,1124,3.215,1270,3.148,1331,4.144,1332,3.148,1333,3.911,1334,4.647,1335,5.19,1336,4.416,1337,3.911,1338,4.896,1339,3.911,1340,3.148,1341,3.451,1342,3.911,1343,3.451,1344,3.451,1345,3.451,1346,3.911,1347,3.451,1348,3.451,1349,3.911,1350,3.911]],["title/modules/StagesModule.html",[112,1.382,131,2.918]],["body/modules/StagesModule.html",[3,0.111,4,0.1,5,0.089,14,0.009,15,0.302,20,0.111,32,0.005,33,0.007,34,0.005,35,0.246,75,1.212,85,1.271,97,2.328,112,2.306,114,2.256,115,2.406,116,2.578,117,2.578,118,2.406,119,3.631,120,3.51,131,5.75,133,5.227,135,3.374,136,2.489,137,2.328,139,3.374,142,2.781,143,2.406,156,4.057,160,2.175,356,2.897,358,2.781,626,4.862,627,3.338,632,3.026,633,3.172,1124,2.187,1331,4.928,1334,5.914,1343,4.448,1344,4.448,1351,4.448,1352,5.041,1353,4.448,1354,4.448,1355,4.057,1356,5.041,1357,5.493,1358,4.057,1359,4.057]],["title/classes/Submission.html",[35,0.215,994,2.773]],["body/classes/Submission.html",[3,0.061,4,0.055,5,0.049,9,0.253,10,0.778,13,0.681,14,0.009,15,0.229,17,2.684,20,0.061,21,0.771,25,0.574,26,1.728,32,0.003,33,0.004,34,0.003,35,0.136,37,0.401,43,1.021,44,1.884,46,1.394,61,1.679,72,1.384,99,1.194,102,1.607,109,2.206,164,2.106,175,3.169,208,2.983,249,2.154,250,1.017,317,2.059,349,0.916,374,1.928,439,1.166,500,1.419,501,1.419,510,4.038,513,2.125,514,2.201,515,2.201,516,3.034,517,2.694,518,2.125,519,2.694,520,2.694,521,2.694,524,2.776,525,3.283,527,4.112,528,3.496,529,3.283,539,2.694,540,2.655,549,3.742,550,1.243,555,3.283,635,2.059,636,2.708,637,2.708,638,2.473,641,3.107,642,1.474,643,1.474,644,1.474,645,1.474,646,1.474,647,1.474,648,1.474,649,1.474,650,1.474,651,1.474,652,1.474,653,1.474,654,1.474,655,0.916,656,1.474,709,2.473,776,3.934,777,3.934,827,3.797,839,3.934,840,3.934,994,2.708,1011,3.162,1043,2.473,1111,1.748,1128,3.463,1360,2.451,1361,5.268,1362,4.271,1363,2.778,1364,2.778,1365,2.778,1366,3.797,1367,2.778,1368,2.778,1369,2.778,1370,2.778,1371,2.778,1372,2.778,1373,4.24]],["title/classes/SubmissionDto.html",[35,0.215,773,2.646]],["body/classes/SubmissionDto.html",[3,0.101,4,0.091,5,0.081,9,0.415,10,1.117,13,0.679,14,0.009,15,0.268,20,0.136,25,0.933,32,0.005,33,0.006,34,0.005,35,0.366,37,0.659,43,1.191,44,1.895,45,4.329,46,1.353,53,1.397,61,1.721,72,1.986,109,1.99,317,2.145,349,1.506,439,1.674,496,1.363,498,3.122,500,2.037,501,2.037,502,3.408,504,2.336,507,2.868,508,1.397,635,1.585,641,2.706,655,1.506,665,2.625,666,2.625,667,2.625,669,1.815,671,3.408,773,3.709,776,5.23,777,5.23,828,3.457,839,5.23,840,5.23,992,3.024,1111,2.874,1113,3.024,1118,3.2,1126,3.676,1127,5.452,1128,3.676,1129,4.03,1130,4.03,1131,4.03,1374,4.568,1375,4.568,1376,4.568,1377,6.179,1378,4.568,1379,4.568,1380,4.568,1381,4.568]],["title/classes/Task.html",[35,0.215,1362,2.773]],["body/classes/Task.html",[3,0.058,4,0.052,5,0.047,9,0.463,10,0.746,13,0.674,14,0.009,15,0.237,17,2.612,20,0.091,21,1.6,25,0.55,26,1.203,32,0.003,33,0.004,34,0.003,35,0.129,37,0.38,43,0.903,44,1.844,46,1.374,61,1.649,99,1.146,102,1.562,109,2.183,164,2.201,175,3.107,208,2.779,317,2.306,349,0.869,374,1.864,435,4.493,439,1.119,500,1.362,501,1.362,510,4.003,513,2.039,514,2.112,515,2.112,516,2.948,517,2.605,518,2.039,519,2.605,520,2.605,521,2.605,524,2.84,525,3.551,527,4.194,528,3.091,529,2.948,539,2.605,540,2.58,549,3.551,550,1.179,555,3.551,619,2.054,635,1.768,636,3.627,637,3.627,638,3.598,639,2.893,641,3.07,642,1.398,643,1.398,644,1.398,645,1.398,646,1.398,647,1.398,648,1.398,649,1.398,650,1.398,651,1.398,652,1.398,653,1.398,654,1.398,655,0.869,656,1.398,657,1.301,660,1.768,704,3.817,713,1.968,714,2.12,763,2.716,1043,2.927,1124,2.882,1138,4.099,1154,1.846,1314,1.968,1362,2.598,1382,2.12,1383,2.635,1384,5.093,1385,5.093,1386,4.493,1387,2.635,1388,2.635,1389,2.635,1390,2.635,1391,2.635,1392,2.635,1393,1.968,1394,2.325,1395,3.084,1396,3.644,1397,3.644]],["title/classes/TaskDto.html",[35,0.215,781,2.773]],["body/classes/TaskDto.html",[3,0.09,4,0.081,5,0.073,9,0.373,10,1.037,13,0.706,14,0.009,15,0.269,20,0.127,25,0.882,32,0.004,33,0.006,34,0.004,35,0.35,37,0.591,43,1.229,44,1.908,46,1.362,48,3.056,52,0.876,53,1.254,61,1.644,64,3.798,76,2.346,109,1.925,317,2.925,349,1.352,439,1.554,496,1.223,498,3.02,500,1.891,501,1.891,502,3.164,504,3.384,507,2.936,508,1.254,509,4.509,619,2.358,635,1.423,641,2.557,655,1.352,660,2.297,665,2.356,666,2.356,667,2.356,668,2.415,669,1.629,704,3.802,726,2.461,727,2.461,763,2.706,781,3.609,828,3.266,1124,2.871,1132,2.715,1133,3.299,1134,4.284,1135,3.617,1136,3.617,1137,3.299,1138,5.325,1139,3.617,1322,3.617,1398,4.1,1399,4.1,1400,4.1,1401,4.1,1402,3.617,1403,4.1,1404,4.1,1405,4.1,1406,4.1,1407,4.1,1408,4.1]],["title/classes/TasksController.html",[35,0.215,1409,3.292]],["body/classes/TasksController.html",[3,0.06,4,0.054,5,0.048,9,0.248,13,0.666,14,0.009,15,0.297,18,1.116,20,0.06,21,1.87,25,0.566,32,0.003,33,0.004,34,0.003,35,0.207,37,0.394,43,0.972,44,1.195,46,0.963,52,0.583,58,3.598,61,1.348,67,3.718,70,1.9,74,2.21,75,1.414,84,1.396,85,0.688,99,1.178,102,1.411,110,1.959,160,2.519,164,1.482,186,3.147,202,2.838,208,2.21,210,3.256,229,2.44,230,2.671,231,1.912,232,1.912,233,2.44,235,1.569,238,4.043,250,0.999,270,3.528,272,1.912,275,3.242,278,1.717,283,3.447,285,1.717,286,1.717,368,1.149,372,2.253,373,1.448,374,0.999,403,1.639,439,0.739,487,1.506,490,1.396,492,1.506,494,1.506,496,0.815,508,0.835,580,3.278,585,1.717,590,1.807,594,3.528,595,2.44,596,2.039,597,1.448,598,1.639,599,1.448,600,3.119,601,1.639,607,3.171,609,2.671,610,3.65,613,3.127,614,1.807,616,3.278,617,1.807,619,1.513,622,1.807,704,2.44,733,4.93,744,2.039,763,1.736,770,4.389,773,2.549,778,4.723,781,3.698,782,2.408,891,2.974,892,1.807,978,2.408,987,2.197,990,2.039,992,2.811,994,2.671,1001,2.039,1009,3.746,1015,3.746,1016,3.171,1017,3.171,1022,5.124,1071,3.171,1124,1.842,1132,2.811,1227,3.746,1334,3.891,1335,4.193,1336,3.698,1338,4.597,1340,2.197,1341,2.408,1345,2.408,1347,2.408,1348,2.408,1362,4.806,1409,3.171,1410,2.197,1411,4.246,1412,2.73,1413,4.723,1414,2.73,1415,2.73,1416,2.408,1417,2.408,1418,2.73,1419,2.73,1420,2.73,1421,4.246,1422,2.73,1423,6.741,1424,2.73,1425,2.73,1426,2.73,1427,2.73,1428,2.73,1429,2.73,1430,2.73,1431,2.73,1432,2.73,1433,2.408,1434,2.408,1435,2.73,1436,2.73,1437,2.73,1438,2.73,1439,2.73,1440,2.73,1441,2.73,1442,2.73,1443,3.746,1444,2.73,1445,2.73,1446,2.73,1447,2.73,1448,2.73,1449,4.246,1450,2.73,1451,2.73,1452,2.73,1453,2.73,1454,2.73,1455,2.73]],["title/modules/TasksModule.html",[112,1.382,132,3.088]],["body/modules/TasksModule.html",[3,0.09,4,0.081,5,0.073,14,0.009,15,0.309,20,0.09,32,0.004,33,0.006,34,0.004,35,0.2,75,1.724,85,1.034,97,1.893,112,2.075,114,1.834,115,1.956,116,2.097,117,2.097,118,1.956,119,3.266,120,3.157,126,5.175,131,5.175,132,6.144,133,4.917,134,4.311,135,2.934,136,2.024,137,1.893,139,2.934,142,2.261,143,1.956,147,3.617,155,3.617,156,3.299,157,2.715,160,2.487,356,4.118,358,3.953,626,4.528,627,2.715,632,2.461,633,2.579,793,2.261,994,2.579,999,4.019,1052,2.715,1053,3.299,1054,3.299,1062,4.019,1063,3.299,1064,3.299,1065,3.299,1066,3.299,1362,2.579,1409,4.284,1413,6.068,1433,3.617,1434,3.617,1456,3.617,1457,4.1,1458,3.617,1459,3.617,1460,3.299,1461,3.617,1462,4.1,1463,4.1,1464,5.325,1465,3.617,1466,3.617,1467,4.284,1468,3.299,1469,3.299]],["title/classes/TemporaryToken.html",[35,0.215,351,3.292]],["body/classes/TemporaryToken.html",[3,0.065,4,0.058,5,0.052,9,0.555,10,0.811,13,0.709,14,0.009,15,0.195,17,2.504,20,0.099,21,0.814,25,0.598,26,1.307,32,0.003,33,0.005,34,0.003,35,0.143,37,0.423,43,0.949,44,1.844,46,1.38,57,1.235,61,1.844,99,1.245,102,1.654,109,2.176,164,2.11,175,3.231,208,2.609,222,1.557,249,2.953,250,1.074,265,4.914,292,3.609,317,2.585,351,3.352,374,1.995,434,5.387,439,1.216,500,1.48,501,1.48,510,4.073,513,2.216,514,2.295,515,2.295,516,3.123,517,2.788,518,2.216,519,2.788,520,2.788,521,2.788,524,2.838,525,3.549,527,3.984,528,3.014,529,3.123,539,2.788,540,2.732,549,3.365,550,1.313,555,3.549,638,3.781,641,3.144,642,1.557,643,1.557,644,1.557,645,1.557,646,1.557,647,1.557,648,1.557,649,1.557,650,1.557,651,1.557,652,1.557,653,1.557,654,1.557,656,1.557,657,2.691,709,1.686,1006,1.942,1043,1.686,1154,3.144,1470,5.295,1471,2.361,1472,2.934,1473,2.934,1474,2.588,1475,2.934,1476,2.934,1477,4.488,1478,2.588,1479,2.588,1480,2.934,1481,2.934,1482,2.934]],["title/classes/Track.html",[35,0.215,763,1.803]],["body/classes/Track.html",[3,0.065,4,0.059,5,0.052,9,0.498,10,0.815,13,0.67,14,0.009,15,0.219,17,2.672,20,0.065,21,0.82,25,0.601,26,1.314,32,0.003,33,0.005,34,0.003,35,0.144,37,0.426,43,1.044,44,1.847,46,1.382,61,1.712,99,1.252,102,1.66,109,2.178,164,2.186,175,3.239,208,2.934,317,2.127,349,0.974,374,2.004,439,1.222,500,1.488,501,1.488,510,4.077,513,2.228,514,2.308,515,2.308,516,3.134,517,2.8,518,2.228,519,2.8,520,2.8,521,2.8,524,3.053,525,3.559,527,3.992,528,3.574,529,3.376,539,2.8,540,2.742,549,3.376,550,1.322,555,2.308,619,2.184,635,2.127,636,3.856,637,3.856,638,3.793,639,3.162,641,3.149,642,1.568,643,1.568,644,1.568,645,1.568,646,1.568,647,1.568,648,1.568,649,1.568,650,1.568,651,1.568,652,1.568,653,1.568,654,1.568,655,0.974,656,1.568,657,1.459,660,1.901,713,2.207,763,1.845,792,3.445,1043,1.698,1124,2.376,1373,2.378,1393,2.207,1483,2.607,1484,4.831,1485,2.955,1486,2.955,1487,2.955,1488,2.955]],["title/classes/TrackDto.html",[35,0.215,789,2.176]],["body/classes/TrackDto.html",[3,0.094,4,0.085,5,0.076,9,0.388,10,1.066,13,0.705,14,0.009,15,0.29,20,0.13,25,0.901,32,0.004,33,0.006,34,0.004,35,0.356,37,0.616,43,1.17,44,1.862,46,1.329,48,3.123,52,0.913,53,1.306,61,1.354,76,2.765,109,2.16,164,1.931,317,2.049,349,1.408,439,1.599,496,1.275,498,3.059,500,1.946,501,1.946,502,3.256,504,2.184,507,2.801,508,1.306,619,2.41,635,1.483,641,2.613,655,1.408,660,2.347,665,2.455,666,2.455,667,2.455,668,2.485,669,1.697,725,2.356,726,2.564,727,2.564,789,2.914,792,4.255,793,3.73,828,2.914,1121,4.816,1140,2.828,1141,3.437,1142,3.437,1143,4.408,1144,3.769,1316,3.769,1489,4.271,1490,5.207,1491,3.769,1492,4.271,1493,4.271,1494,4.271,1495,4.271,1496,4.271]],["title/classes/TrackMentor.html",[35,0.215,1052,2.918]],["body/classes/TrackMentor.html",[3,0.075,4,0.068,5,0.06,9,0.309,10,0.906,13,0.674,14,0.009,15,0.235,17,2.718,20,0.075,21,0.943,25,0.668,26,1.459,32,0.003,33,0.005,34,0.003,35,0.166,37,0.49,43,0.49,44,1.854,46,1.395,61,1.786,99,1.39,102,1.78,109,2.172,164,1.913,175,2.664,208,2.927,249,2.435,250,1.243,317,2.281,374,2.179,439,1.357,500,1.652,501,1.652,510,4.159,513,2.474,514,2.563,515,2.563,516,3.361,517,3.045,518,2.474,519,3.045,520,3.045,521,3.045,524,2.999,525,3.361,527,4.286,528,3.621,529,3.361,539,3.045,540,2.941,549,3.045,550,1.52,641,3.238,642,1.803,643,1.803,644,1.803,645,1.803,646,1.803,647,1.803,648,1.803,649,1.803,650,1.803,651,1.803,652,1.803,653,1.803,654,1.803,656,1.803,763,2.999,1011,3.574,1043,2.88,1052,3.318,1497,5.253,1498,2.997,1499,3.397,1500,3.397,1501,3.397]],["title/classes/TracksController.html",[35,0.215,1502,3.292]],["body/classes/TracksController.html",[3,0.038,4,0.034,5,0.031,9,0.157,13,0.682,14,0.009,15,0.285,18,0.706,20,0.038,21,1.923,25,0.39,32,0.002,33,0.003,34,0.002,35,0.143,37,0.249,43,1.058,44,1.33,46,0.999,52,0.369,58,3.689,61,1.399,67,4.105,70,1.309,74,2.292,75,1.466,84,0.883,85,0.436,99,0.812,102,1.57,110,1.884,160,2.611,164,1.372,186,3.307,194,4.961,195,4.135,202,3.038,208,2.471,210,3.459,229,2.574,230,2.394,231,1.21,232,1.21,233,1.681,235,0.993,238,4.214,240,1.681,250,0.632,251,2.574,252,1.21,272,3.51,275,3.31,278,1.841,280,2.818,283,3.545,285,1.841,286,1.841,322,1.937,368,0.727,372,1.552,373,0.917,374,1.071,403,1.037,427,1.756,439,1.357,487,0.953,490,0.883,492,0.953,494,0.953,496,0.516,508,0.528,570,2.47,580,2.394,585,1.087,587,1.21,590,1.937,594,3.66,595,1.681,597,0.917,598,1.037,599,0.917,600,2.376,601,1.037,609,1.841,610,3.812,613,3.48,614,2.52,615,2.05,616,3.423,617,1.144,619,1.596,622,1.144,744,2.185,745,2.581,763,2.95,765,1.037,784,3.423,789,2.686,790,1.29,792,1.841,794,2.965,795,3.345,796,3.839,891,3.812,892,3.318,973,2.185,984,1.524,987,1.39,990,1.29,1001,3.345,1008,1.39,1011,2.688,1016,2.842,1017,2.842,1022,4.666,1025,2.354,1026,1.21,1028,1.39,1050,3.648,1071,2.842,1080,6.566,1104,4.421,1108,1.879,1121,1.087,1140,1.937,1142,1.39,1145,1.756,1197,1.524,1199,1.524,1200,2.581,1201,1.524,1202,1.524,1203,1.39,1205,1.524,1206,1.39,1209,1.524,1210,1.524,1219,3.357,1230,1.524,1238,1.524,1239,1.524,1242,3.357,1243,1.524,1247,1.39,1248,1.524,1249,1.524,1250,1.524,1266,1.29,1267,1.524,1268,1.524,1270,3.604,1272,1.524,1335,2.354,1336,2.818,1340,1.39,1416,2.581,1417,2.581,1443,4.421,1484,2.581,1502,2.185,1503,1.39,1504,3.805,1505,3.805,1506,3.805,1507,3.805,1508,3.805,1509,1.728,1510,4.33,1511,1.728,1512,1.728,1513,1.728,1514,1.728,1515,1.728,1516,1.728,1517,1.728,1518,1.728,1519,1.728,1520,1.728,1521,1.728,1522,1.728,1523,1.728,1524,1.728,1525,1.728,1526,1.728,1527,1.728,1528,1.728,1529,1.728,1530,1.728,1531,1.728,1532,2.926,1533,1.728,1534,1.728,1535,1.728,1536,1.728,1537,1.524,1538,1.728,1539,1.524,1540,1.728,1541,1.524,1542,1.524,1543,1.524,1544,2.354,1545,1.728,1546,1.728,1547,2.926,1548,1.728,1549,1.728,1550,1.728,1551,1.728,1552,1.728,1553,1.728,1554,1.728,1555,1.728,1556,1.728,1557,1.728,1558,1.728,1559,1.728,1560,1.728,1561,5.011,1562,5.011,1563,1.728,1564,1.728,1565,1.728,1566,1.728,1567,2.926,1568,1.728,1569,1.728,1570,1.728,1571,1.728,1572,1.728,1573,1.728,1574,1.728,1575,2.926,1576,2.926,1577,1.728,1578,1.728,1579,1.728,1580,1.728,1581,1.728,1582,1.728]],["title/modules/TracksModule.html",[112,1.382,133,2.773]],["body/modules/TracksModule.html",[3,0.097,4,0.087,5,0.078,14,0.009,15,0.308,20,0.097,32,0.004,33,0.006,34,0.004,35,0.214,75,1.65,85,1.107,97,2.028,112,2.151,114,1.965,115,2.095,116,2.245,117,2.245,118,2.095,119,3.387,120,3.274,128,5.023,133,5.508,134,4.404,135,3.076,136,2.168,137,2.028,139,3.076,142,2.422,143,2.095,157,2.907,159,3.534,160,2.433,356,3.943,358,3.785,626,4.641,627,2.907,632,2.636,633,2.762,763,1.796,793,2.422,1124,1.905,1336,5.508,1357,4.492,1358,3.534,1359,3.534,1393,3.279,1461,3.874,1467,4.492,1468,3.534,1469,3.534,1502,4.492,1510,5.963,1541,3.874,1542,3.874,1543,3.874,1583,3.874,1584,4.391,1585,3.874,1586,3.874,1587,3.534,1588,4.391,1589,5.522,1590,3.874,1591,3.874]],["title/classes/UpdateProfileDto.html",[35,0.215,1185,3.292]],["body/classes/UpdateProfileDto.html",[3,0.144,4,0.13,5,0.116,14,0.009,15,0.277,20,0.144,25,0.872,32,0.007,33,0.008,34,0.007,35,0.319,37,0.944,52,1.398,57,2.755,248,3.928,427,3.928,780,4.332,798,4.332,1033,4.332,1185,5.799,1592,5.773,1593,5.773,1594,6.544,1595,6.544]],["title/classes/User.html",[35,0.215,249,1.803]],["body/classes/User.html",[3,0.036,4,0.032,5,0.029,9,0.331,10,0.502,11,2.717,13,0.681,14,0.009,15,0.221,17,2.757,20,0.08,21,0.771,25,0.37,26,1.253,32,0.002,33,0.003,34,0.002,35,0.136,37,0.234,43,1.179,44,1.844,46,1.372,57,1.812,61,1.473,72,1.384,75,0.668,85,0.41,99,0.771,102,1.525,109,2.2,110,1.045,164,2.205,175,2.518,186,0.685,208,3.004,222,1.93,249,1.488,275,0.705,283,0.831,317,2.228,327,1.214,349,0.536,368,1.532,374,1.331,399,1.308,427,2.184,439,0.753,442,3.21,450,1.434,454,1.308,500,0.916,501,0.916,508,0.497,510,3.626,513,1.372,514,1.421,515,1.421,516,2.201,517,1.861,518,1.372,519,1.861,520,1.861,521,1.861,522,2.451,524,2.896,525,3.283,527,3.283,528,3.751,529,2.694,539,1.861,540,2.655,549,3.886,550,0.727,553,1.308,554,1.434,555,3.034,556,1.434,568,1.434,635,2.357,636,4.455,637,4.455,638,2.091,641,2.683,642,0.863,643,0.863,644,0.863,645,0.863,646,0.863,647,0.863,648,0.863,649,0.863,650,0.863,651,0.863,652,0.863,653,0.863,654,0.863,655,0.536,656,0.863,657,0.803,660,1.263,668,1.532,709,2.473,763,1.488,803,2.549,895,1.214,989,2.075,1011,1.668,1030,2.409,1031,2.409,1032,2.717,1033,2.409,1034,2.717,1035,2.717,1036,2.717,1037,4.157,1042,2.075,1043,0.934,1154,3.015,1155,2.928,1157,2.928,1314,1.214,1366,3.797,1373,1.308,1474,2.451,1596,1.308,1597,3.638,1598,3.638,1599,3.638,1600,4.304,1601,4.304,1602,3.638,1603,1.626,1604,1.626,1605,1.626,1606,2.778,1607,1.626,1608,2.778,1609,1.626,1610,1.626,1611,1.626,1612,3.638,1613,1.626,1614,1.626,1615,1.626,1616,1.626,1617,1.626,1618,1.626,1619,1.626,1620,1.626,1621,1.626,1622,1.626,1623,1.626,1624,1.626,1625,1.626,1626,1.626,1627,1.626,1628,1.626,1629,1.626,1630,2.778,1631,2.451,1632,1.626,1633,1.626,1634,1.626,1635,1.626,1636,1.626,1637,1.626,1638,3.638,1639,2.451,1640,2.451,1641,2.451,1642,2.451,1643,1.626,1644,2.778,1645,1.626,1646,1.626,1647,1.626,1648,5.629,1649,1.626,1650,1.626,1651,1.626,1652,1.626,1653,1.626,1654,1.626]],["title/classes/UserDto.html",[35,0.215,801,2.339]],["body/classes/UserDto.html",[3,0.066,4,0.059,5,0.053,9,0.271,10,0.821,13,0.719,14,0.009,15,0.259,17,0.958,20,0.1,25,0.734,32,0.003,33,0.005,34,0.003,35,0.3,37,0.43,43,1.24,44,1.925,46,1.374,52,0.637,53,0.912,57,2.318,61,1.795,64,3.008,72,1.979,76,2.969,109,2.031,164,1.831,208,1.121,317,2.424,349,0.983,368,2.79,427,3.304,439,1.231,496,0.89,498,2.698,500,1.498,501,1.498,502,2.506,504,1.524,507,3.019,508,0.912,524,1.219,635,1.035,641,2.127,655,0.983,658,3.656,660,1.911,665,1.713,666,1.713,667,1.713,668,1.913,669,1.185,671,1.644,789,3.272,801,2.411,803,3.857,828,3.272,1030,3.645,1031,3.645,1032,4.111,1033,3.645,1034,4.111,1035,4.111,1036,4.111,1037,5.244,1112,2.226,1134,3.393,1143,4.949,1145,1.789,1146,2.399,1147,4.008,1148,2.63,1149,2.63,1150,2.63,1151,2.63,1152,6.161,1153,2.63,1154,3.183,1155,3.656,1156,2.63,1157,4.43,1158,2.63,1159,4.008,1160,5.432,1161,4.008,1162,4.008,1163,2.63,1164,2.63,1165,3.656,1166,2.63,1402,2.63,1490,4.008,1491,2.63,1655,6.156,1656,2.981,1657,2.981,1658,2.981,1659,2.981,1660,2.981,1661,2.981,1662,2.981,1663,2.981,1664,2.981,1665,2.981,1666,2.981,1667,2.981,1668,2.981,1669,2.981,1670,2.981,1671,2.981,1672,2.981,1673,2.981,1674,2.981,1675,2.981,1676,2.981,1677,2.981,1678,2.981,1679,2.981]],["title/classes/UserStage.html",[35,0.215,793,2.431]],["body/classes/UserStage.html",[3,0.065,4,0.058,5,0.052,9,0.496,10,0.812,13,0.676,14,0.009,15,0.248,17,2.585,20,0.065,21,0.815,25,0.599,26,1.779,32,0.003,33,0.005,34,0.003,35,0.143,37,0.424,43,0.424,44,1.867,46,1.39,61,1.709,72,1.444,99,1.247,102,1.655,109,2.192,164,2.164,175,2.946,208,2.61,249,2.839,250,1.075,317,2.121,374,1.996,439,1.217,500,1.481,501,1.481,510,4.073,513,2.218,514,2.298,515,2.298,516,3.125,517,2.79,518,2.218,519,2.79,520,2.79,521,2.79,524,2.839,525,3.125,527,4.28,528,3.017,529,3.551,539,2.79,540,2.734,549,3.551,550,1.314,552,2.194,555,3.551,619,1.047,638,1.688,641,3.145,642,1.559,643,1.559,644,1.559,645,1.559,646,1.559,647,1.559,648,1.559,649,1.559,650,1.559,651,1.559,652,1.559,653,1.559,654,1.559,656,1.559,657,2.693,763,2.839,793,2.478,1043,3.135,1122,4.391,1123,4.391,1124,3.013,1311,5.997,1313,2.592,1314,2.194,1315,2.592,1393,2.194,1680,2.592,1681,2.938,1682,2.938,1683,2.938,1684,2.938,1685,2.938]],["title/classes/UserStageDto.html",[35,0.215,1121,2.773]],["body/classes/UserStageDto.html",[3,0.101,4,0.091,5,0.081,9,0.414,10,1.115,13,0.7,14,0.009,15,0.295,20,0.136,25,0.932,26,1.797,32,0.005,33,0.006,34,0.005,35,0.366,37,0.657,43,0.657,44,1.852,46,1.322,48,2.849,52,0.974,53,1.394,72,1.983,76,2.523,109,2.138,164,1.149,317,2.142,349,1.503,439,1.671,496,1.36,498,3.12,500,2.034,501,2.034,502,3.403,504,2.331,507,2.743,508,1.394,635,1.582,641,2.703,655,1.503,661,3.668,665,2.619,666,2.619,667,2.619,668,2.598,669,1.811,670,3.017,671,2.514,725,2.514,1108,2.25,1116,5.346,1119,3.668,1120,4.021,1121,3.881,1122,5.629,1123,5.629,1124,3.035,1125,4.021,1324,4.021,1325,4.021,1329,4.021,1686,4.557,1687,4.557,1688,4.557]],["title/classes/UsersController.html",[35,0.215,1689,3.292]],["body/classes/UsersController.html",[3,0.092,4,0.083,5,0.074,9,0.38,13,0.663,14,0.009,15,0.302,18,1.707,20,0.092,21,1.158,25,0.774,32,0.004,33,0.006,34,0.004,35,0.204,37,0.602,44,0.958,46,0.951,52,0.892,57,1.758,58,3.417,61,1.333,67,3.984,70,1.868,74,2.184,75,1.397,84,2.135,85,1.053,99,1.612,102,1.131,109,1.028,110,1.57,160,1.916,186,2.813,202,2.446,208,2.184,210,2.971,229,2.399,230,3.655,233,3.339,235,2.399,238,4.151,248,2.506,249,2.732,251,4.517,275,1.812,278,2.627,280,3.655,281,3.36,283,2.135,285,2.627,286,2.627,368,1.758,370,2.627,371,2.764,372,3.083,373,2.216,374,1.528,382,3.684,403,2.506,487,2.303,490,2.135,492,2.303,494,2.303,496,1.246,580,4.204,585,2.627,587,2.925,588,3.118,590,2.764,591,3.118,592,3.118,594,3.487,595,3.339,597,2.216,598,2.506,599,2.216,600,3.083,601,2.506,609,4.544,611,3.36,613,2.506,614,2.764,615,2.925,616,2.627,617,2.764,619,1.488,622,2.764,798,5.205,801,3.833,1145,3.487,1537,3.684,1539,3.684,1689,4.339,1690,3.36,1691,4.175,1692,4.175,1693,4.175,1694,3.684,1695,3.684,1696,4.175,1697,4.175,1698,4.175]],["title/modules/UsersModule.html",[112,1.382,134,2.431]],["body/modules/UsersModule.html",[3,0.117,4,0.105,5,0.094,14,0.009,15,0.3,20,0.15,32,0.005,33,0.007,34,0.005,35,0.258,75,1.272,85,1.334,97,2.443,112,2.36,114,2.367,115,2.524,116,2.705,117,2.705,118,2.524,119,3.716,120,3.592,134,4.723,135,3.481,136,2.611,137,2.443,139,2.705,142,2.917,143,2.524,160,1.744,249,2.163,251,5.166,356,3.039,358,2.917,626,4.086,627,3.502,632,3.175,633,3.328,1689,5.084,1694,4.667,1695,4.667,1699,4.667,1700,4.667,1701,5.289,1702,4.257,1703,5.289,1704,6.058,1705,4.667,1706,4.667]],["title/classes/ValidateTokenInput.html",[35,0.215,225,3.088]],["body/classes/ValidateTokenInput.html",[3,0.136,4,0.122,5,0.109,9,0.559,10,1.352,13,0.505,14,0.009,15,0.288,20,0.136,25,0.819,32,0.006,33,0.008,34,0.006,35,0.365,37,0.887,43,1.079,44,1.411,46,1.007,48,3.723,51,3.145,52,1.314,53,1.881,54,3.691,55,5.426,56,5.426,57,2.589,225,5.241,292,5.338,1707,6.6,1708,5.426,1709,6.149]],["title/coverage.html",[1710,5.321]],["body/coverage.html",[0,2.02,1,1.161,5,0.029,6,2.756,7,2.987,8,2.756,13,0.136,14,0.009,16,0.848,18,2,21,0.46,24,1.161,27,1.161,32,0.002,33,0.003,34,0.002,35,0.433,36,1.238,38,1.462,39,1.462,54,0.995,58,0.848,59,1.462,60,1.462,96,1.238,98,1.462,103,1.097,112,0.52,118,0.791,138,2.273,150,0.742,153,1.334,161,1.979,169,1.695,176,2.964,178,1.462,183,1.238,184,1.462,204,1.043,207,1.161,212,1.161,225,1.161,245,1.043,249,0.678,251,0.952,253,1.043,255,1.238,259,1.161,342,1.161,343,1.161,344,1.238,345,1.334,348,1.238,351,1.238,363,1.097,364,2.756,365,2.756,369,1.097,375,1.462,402,1.334,404,1.334,406,1.097,455,2.273,457,1.462,476,1.238,477,1.462,478,1.462,483,1.161,484,3.054,485,2.322,486,2.756,488,1.161,489,1.161,496,0.495,498,0.64,499,1.462,510,0.791,511,1.462,570,0.914,571,1.462,572,1.462,578,1.238,579,2.273,580,3.077,582,1.238,586,1.238,589,1.043,595,0.952,597,0.879,599,0.879,600,0.879,603,1.097,605,1.097,625,1.334,626,2.617,629,1.334,634,1.462,655,0.546,659,2.273,673,0.995,674,3.054,680,1.043,704,0.952,705,1.462,709,5.298,715,1.097,716,2.273,728,1.161,730,1.238,731,1.462,733,1.161,736,1.238,749,1.334,751,1.334,754,1.462,755,1.462,757,1.462,758,1.462,760,1.161,761,1.462,762,1.462,763,0.678,765,0.995,770,1.238,771,2.273,772,1.462,773,0.995,778,1.161,779,1.462,781,1.043,784,1.043,785,2.756,786,2.756,789,0.818,793,0.914,794,1.097,796,1.097,798,1.097,799,1.462,800,2.756,801,0.879,806,2.97,807,2.97,816,1.334,817,1.334,818,1.334,822,1.161,823,1.462,836,1.238,837,1.462,838,1.462,841,1.334,842,1.462,843,1.462,874,1.334,875,1.462,888,1.334,889,2.273,890,2.273,895,3.256,897,1.462,898,1.462,906,1.462,907,1.462,908,1.462,925,2.273,933,1.462,971,1.238,972,1.462,992,1.097,994,1.043,999,1.979,1026,1.161,1027,1.462,1039,1.161,1040,1.462,1041,1.462,1050,1.043,1051,2.97,1052,1.097,1059,1.238,1062,1.979,1067,1.462,1108,1.822,1109,2.273,1115,2.273,1116,1.097,1119,2.273,1121,1.043,1124,0.719,1126,2.273,1132,1.097,1133,2.273,1140,1.097,1141,2.273,1145,0.995,1146,2.273,1167,1.238,1168,1.462,1185,1.238,1215,1.097,1259,1.462,1266,1.238,1274,2.273,1279,1.462,1280,1.462,1283,1.462,1292,1.462,1306,1.462,1331,1.238,1332,2.273,1334,1.097,1336,1.043,1355,2.273,1357,2.109,1360,1.462,1362,1.043,1382,1.334,1409,1.238,1410,2.273,1413,1.161,1460,3.936,1464,1.334,1467,2.109,1470,1.334,1471,1.334,1483,1.462,1497,1.462,1498,1.462,1502,1.238,1503,2.97,1510,1.238,1544,1.334,1587,3.508,1589,1.334,1592,1.462,1593,1.462,1596,1.334,1680,1.462,1689,1.238,1690,2.273,1702,1.334,1704,1.334,1707,1.462,1708,1.462,1710,1.462,1711,1.334,1712,1.657,1713,1.657,1714,1.334,1715,1.462,1716,1.462,1717,8.895,1718,7.358,1719,8.575,1720,4.359,1721,4.359,1722,4.891,1723,7.124,1724,3.691,1725,3.691,1726,1.657,1727,1.657,1728,4.359,1729,1.657,1730,1.657,1731,1.657,1732,5.683,1733,1.657,1734,2.273,1735,2.824,1736,2.824,1737,1.657,1738,4.359,1739,2.492,1740,1.462,1741,1.462,1742,1.334,1743,1.462,1744,1.462,1745,1.462,1746,1.462,1747,1.462,1748,1.462,1749,1.462,1750,1.462,1751,2.824,1752,1.462,1753,1.657,1754,1.657,1755,1.657,1756,2.492,1757,2.492,1758,1.462,1759,1.462,1760,1.462,1761,1.462,1762,1.462,1763,1.462,1764,1.462,1765,2.824,1766,3.256,1767,2.824,1768,1.657,1769,2.824,1770,1.657,1771,1.657,1772,1.657,1773,1.657,1774,2.824,1775,1.657,1776,1.657,1777,1.462,1778,1.657,1779,1.657,1780,1.657,1781,1.657,1782,1.657,1783,1.657]],["title/dependencies.html",[115,2.532,1784,3.674]],["body/dependencies.html",[14,0.009,32,0.005,33,0.006,34,0.005,35,0.312,52,1.029,53,1.473,85,1.214,115,2.298,141,4.249,143,2.298,240,4.404,347,3.374,362,5.152,399,3.875,400,3.596,401,4.249,508,1.473,550,2.155,552,4.781,673,2.891,824,3.374,902,4.249,917,6.345,946,5.648,948,4.249,949,4.249,1203,3.875,1288,4.249,1311,3.875,1742,3.875,1785,4.815,1786,4.815,1787,4.815,1788,4.815,1789,7.191,1790,4.815,1791,4.815,1792,4.815,1793,4.815,1794,4.815,1795,4.815,1796,4.815,1797,4.815,1798,4.815,1799,4.815,1800,4.815,1801,4.815,1802,4.815,1803,4.815,1804,6.402,1805,4.815,1806,4.815,1807,4.815,1808,4.815,1809,4.815,1810,4.815,1811,6.402,1812,4.815,1813,4.815,1814,4.815,1815,4.249,1816,4.815,1817,4.815,1818,4.815,1819,4.815,1820,4.815,1821,4.815,1822,4.815,1823,4.815,1824,4.815,1825,4.815,1826,4.815,1827,4.815,1828,4.249,1829,4.815,1830,4.815,1831,4.815,1832,4.815,1833,6.402,1834,4.815,1835,4.815,1836,4.815,1837,4.815,1838,4.815,1839,4.815,1840,4.815,1841,4.815,1842,4.815,1843,4.815]],["title/miscellaneous/enumerations.html",[1844,2.205,1845,4.681]],["body/miscellaneous/enumerations.html",[9,0.534,14,0.009,32,0.006,33,0.007,34,0.006,57,2.47,222,3.113,265,5.428,368,3.06,524,3.693,1011,4.362,1037,5.092,1042,5.428,1382,4.721,1394,6.412,1395,5.428,1396,6.412,1397,6.412,1470,4.721,1471,5.849,1478,5.176,1479,5.176,1596,4.721,1639,6.412,1640,6.412,1641,6.412,1642,6.412,1844,3.522,1845,5.176,1846,7.268,1847,5.867,1848,5.867]],["title/miscellaneous/functions.html",[1844,2.205,1849,4.681]],["body/miscellaneous/functions.html",[9,0.568,13,0.621,14,0.009,32,0.006,33,0.008,34,0.006,61,1.732,74,2.838,75,1.816,102,2.045,118,3.873,490,3.193,496,2.253,595,4.338,889,5.024,890,6.076,1006,4.134,1714,6.076,1715,6.661,1716,7.16,1734,5.024,1740,5.509,1844,3.748,1849,5.509,1850,6.244,1851,5.509,1852,6.244,1853,6.244,1854,6.244]],["title/index.html",[9,0.334,1395,2.744,1855,3.241]],["body/index.html",[4,0.101,14,0.007,32,0.005,33,0.007,34,0.005,66,4.481,107,4.481,137,3.062,195,3.195,331,5.85,370,3.195,632,3.049,769,3.558,1124,2.204,1137,4.087,1198,4.481,1224,4.087,1631,4.481,1711,4.087,1828,4.481,1856,7.382,1857,6.63,1858,6.63,1859,5.079,1860,6.63,1861,8.326,1862,5.079,1863,5.079,1864,5.079,1865,5.079,1866,6.63,1867,5.079,1868,6.63,1869,5.079,1870,5.079,1871,4.481,1872,5.079,1873,5.079,1874,5.079,1875,6.513,1876,5.079,1877,5.079,1878,5.079,1879,5.079,1880,5.079,1881,5.079,1882,5.079,1883,5.079,1884,5.079,1885,5.079,1886,5.079,1887,5.079,1888,5.079,1889,5.079,1890,5.079,1891,6.63,1892,5.079,1893,5.079,1894,6.63,1895,5.079,1896,5.079,1897,5.079,1898,5.079,1899,5.079,1900,5.079,1901,5.079,1902,5.079,1903,4.481,1904,5.079,1905,4.481,1906,5.079,1907,5.079,1908,5.079,1909,5.079,1910,5.079,1911,5.079,1912,5.079,1913,5.079,1914,5.079,1915,5.079,1916,5.079,1917,6.63,1918,5.079,1919,5.079,1920,5.079,1921,5.079,1922,5.079,1923,5.079,1924,5.079,1925,5.079,1926,5.079,1927,5.079,1928,5.079,1929,5.079,1930,5.079,1931,5.079,1932,5.079,1933,5.079,1934,5.079,1935,5.079,1936,5.079,1937,5.079,1938,5.079]],["title/license.html",[1395,2.744,1855,3.241,1939,3.241]],["body/license.html",[14,0.007,31,4.045,32,0.005,33,0.007,34,0.005,137,2.501,240,3.112,870,6.097,1004,4.045,1224,4.358,1711,4.358,1714,4.358,1871,7.765,1903,4.778,1939,4.778,1940,5.416,1941,7.611,1942,5.416,1943,5.416,1944,5.416,1945,5.416,1946,5.416,1947,5.416,1948,5.416,1949,5.416,1950,6.911,1951,5.416,1952,5.416,1953,5.416,1954,7.611,1955,5.416,1956,6.911,1957,5.416,1958,5.416,1959,6.911,1960,5.416,1961,5.416,1962,5.416,1963,5.416,1964,5.416,1965,5.416,1966,6.911,1967,5.416,1968,5.416,1969,5.416,1970,5.416,1971,5.416,1972,6.911,1973,6.911,1974,5.416,1975,5.416,1976,5.416,1977,5.416,1978,5.416,1979,5.416,1980,5.416,1981,5.416,1982,5.416,1983,5.416,1984,5.416,1985,5.416,1986,5.416,1987,5.416,1988,5.416,1989,5.416,1990,5.416,1991,5.416,1992,5.416,1993,5.416,1994,5.416,1995,5.416,1996,5.416,1997,5.416,1998,5.416,1999,5.416,2000,5.416,2001,5.416,2002,5.416]],["title/modules.html",[114,2.698]],["body/modules.html",[14,0.007,32,0.006,33,0.007,34,0.006,113,4.382,114,2.625,124,4.11,125,4.11,126,3.884,127,4.11,128,3.691,129,4.11,130,4.11,131,3.884,132,4.11,133,3.691,134,3.236,805,4.721,963,6.412,1875,7.969,2003,9.032,2004,9.032,2005,9.107,2006,7.268]],["title/overview.html",[2007,5.321]],["body/overview.html",[2,1.428,14,0.009,32,0.003,33,0.005,34,0.003,37,0.489,97,1.566,103,3.938,112,1.063,113,6.665,114,1.518,115,1.619,116,1.735,117,1.735,118,1.619,119,1.674,120,1.619,121,2.992,122,2.992,123,2.992,124,6.007,125,4.601,126,5.02,127,5.135,128,5.084,129,5.81,130,4.167,131,5.26,132,5.921,133,5.317,134,4.52,135,2.56,136,1.674,137,1.566,177,1.949,245,4.896,251,4.472,253,4.77,338,2.992,340,2.992,341,2.992,342,4.167,343,4.167,344,4.443,456,2.729,582,4.905,623,2.992,624,2.992,733,5.311,746,2.992,747,2.992,748,2.992,928,2.992,929,2.992,1046,2.992,1048,2.992,1049,2.992,1050,4.77,1118,2.376,1215,5.02,1253,2.992,1255,2.992,1256,2.992,1334,5.02,1336,4.77,1351,2.992,1353,2.992,1354,2.992,1413,5.311,1456,2.992,1458,2.992,1459,2.992,1510,4.443,1583,2.992,1585,2.992,1586,2.992,1699,2.992,1700,2.992,1766,2.992,2007,2.992,2008,3.392,2009,2.992,2010,3.392,2011,3.392]],["title/miscellaneous/typealiases.html",[1844,2.205,2012,5.306]],["body/miscellaneous/typealiases.html",[9,0.588,13,0.531,14,0.009,32,0.006,33,0.008,34,0.006,553,6.202,893,6.799,1844,3.878,2013,6.461,2014,7.706,2015,8.937,2016,7.706,2017,7.706,2018,7.706,2019,7.706,2020,6.461,2021,7.706,2022,7.706]],["title/miscellaneous/variables.html",[1844,2.205,2023,4.681]],["body/miscellaneous/variables.html",[5,0.046,9,0.137,10,0.272,13,0.543,14,0.009,16,0.77,17,2.715,18,2.34,21,1.28,26,1.744,32,0.002,33,0.003,34,0.002,43,0.953,57,0.634,72,0.836,75,1.693,110,2.152,112,0.815,138,1.211,150,0.673,153,2.762,160,1.785,161,3.233,162,1.328,163,1.328,164,1.856,165,1.328,166,1.328,167,1.328,168,1.328,169,1.561,170,1.328,171,2.092,172,2.092,173,2.092,174,2.092,175,2.561,186,1.095,202,0.634,222,0.798,234,1.211,249,0.615,275,1.128,292,0.996,327,1.124,345,1.211,348,2.563,356,4.045,357,1.328,358,3.947,359,1.328,360,1.328,361,1.328,362,1.211,363,2.272,366,3.446,367,3.446,368,0.634,369,1.721,370,1.636,371,1.721,372,0.798,373,2.679,374,1.848,400,1.124,402,2.092,404,2.092,412,1.328,480,1.054,481,1.054,487,2.545,490,2.36,492,2.545,494,2.545,496,1.377,524,3.472,555,1.33,570,0.83,577,1.328,579,1.211,580,3.914,589,2.159,595,2.652,597,3.301,603,0.996,605,0.996,609,4.155,610,3.537,619,0.536,625,1.211,626,3.596,629,2.092,630,1.328,631,1.328,632,2.06,633,2.159,655,0.857,660,1.191,673,0.903,675,1.821,678,1.054,679,1.721,709,0.865,749,1.211,751,2.092,752,1.328,753,1.328,760,1.821,763,0.615,765,0.903,778,1.821,781,0.947,784,1.636,789,0.743,798,1.721,801,0.798,806,1.211,807,3.289,808,1.328,816,2.762,817,2.092,818,2.092,819,1.328,820,1.328,821,1.328,859,1.328,867,4.455,955,1.328,999,2.863,1006,1.721,1051,1.211,1059,1.942,1060,1.328,1061,1.328,1062,2.863,1063,2.092,1064,2.092,1065,2.092,1066,2.092,1108,0.743,1118,4.01,1124,0.653,1132,0.996,1140,0.996,1145,0.903,1204,1.328,1247,1.211,1266,1.942,1332,1.211,1334,0.996,1336,0.947,1355,1.211,1357,3.052,1358,2.092,1359,2.092,1362,0.947,1386,1.328,1410,1.211,1413,1.054,1460,1.211,1464,2.092,1465,1.328,1466,1.328,1467,3.052,1468,2.092,1469,2.092,1503,1.211,1544,2.092,1587,1.211,1589,2.092,1590,1.328,1591,1.328,1690,1.211,1702,1.211,1704,2.092,1705,1.328,1706,1.328,1734,1.211,1739,1.328,1741,1.328,1742,2.092,1743,2.294,1744,2.294,1745,1.328,1746,2.294,1747,1.328,1748,2.294,1749,2.294,1750,1.328,1752,1.328,1756,1.328,1757,3.028,1758,4.071,1759,2.294,1760,1.328,1761,2.294,1762,1.328,1763,2.294,1764,1.328,1777,1.328,1815,1.328,1844,0.903,1851,1.328,1905,1.328,2009,1.328,2023,1.328,2024,1.505,2025,1.505,2026,2.6,2027,1.505,2028,1.505,2029,1.505,2030,1.505,2031,1.505,2032,1.505,2033,2.6,2034,4.614,2035,2.6,2036,4.087,2037,1.505,2038,2.6,2039,1.505,2040,1.505,2041,3.432,2042,2.6,2043,1.505,2044,1.505,2045,3.432,2046,1.505,2047,1.505,2048,1.505,2049,2.6,2050,4.087,2051,4.614,2052,4.087,2053,4.087,2054,2.6,2055,5.049,2056,2.6,2057,1.505,2058,1.505,2059,1.505,2060,1.505,2061,1.505,2062,1.505,2063,1.505,2064,1.505,2065,1.505,2066,1.505,2067,1.505,2068,1.505,2069,1.505,2070,1.505,2071,1.505,2072,1.505,2073,1.505,2074,1.505,2075,2.6,2076,1.505,2077,1.505,2078,1.505,2079,1.505,2080,1.505,2081,1.505,2082,1.505,2083,1.505,2084,1.505,2085,1.505,2086,1.505,2087,2.6,2088,2.6,2089,2.6,2090,2.6,2091,2.6,2092,2.6,2093,2.6,2094,2.6,2095,2.6,2096,2.6,2097,1.505,2098,2.6,2099,1.505,2100,1.505,2101,2.6,2102,1.505,2103,1.505,2104,2.6,2105,1.505,2106,1.505,2107,2.6,2108,1.505,2109,1.505,2110,2.6,2111,1.505,2112,1.505,2113,1.505,2114,1.505,2115,1.505,2116,1.505,2117,1.505,2118,1.505,2119,5.723,2120,1.505,2121,1.505,2122,1.505,2123,1.505,2124,1.505,2125,1.505,2126,1.505,2127,1.505,2128,1.505,2129,1.505,2130,1.505,2131,1.505,2132,1.505,2133,1.505,2134,1.505,2135,1.505,2136,1.505,2137,1.505,2138,1.505,2139,1.505,2140,1.505,2141,1.505,2142,1.505,2143,1.505,2144,1.505,2145,1.505,2146,2.6,2147,1.505,2148,1.505,2149,1.505,2150,1.505,2151,1.505,2152,1.505,2153,1.505,2154,1.505,2155,1.505,2156,1.505,2157,2.6,2158,1.505,2159,1.505,2160,1.505,2161,1.505,2162,1.505]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":709,"title":{},"body":{"classes/Course.html":{},"classes/FindDto.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1794,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1790,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1717,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1751,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1737,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1776,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1718,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1728,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1738,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":657,"title":{"classes/PagedListStageDto-1.html":{}},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["1.0.0",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["1.23.0",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":827,"title":{},"body":{"classes/FindDto.html":{},"classes/Submission.html":{}}}],["1024",{"_index":1247,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":2008,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":1766,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["16",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":2011,"title":{},"body":{"overview.html":{}}}],["17.1.1",{"_index":1786,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1735,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1118,"title":{"classes/PagedListStageDto-2.html":{}},"body":{"classes/PagedListSubmissionDto.html":{},"classes/SubmissionDto.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1730,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1248,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["200kb",{"_index":1250,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["2020",{"_index":1942,"title":{},"body":{"license.html":{}}}],["21",{"_index":1753,"title":{},"body":{"coverage.html":{}}}],["2347063644568",{"_index":1163,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["2347063644568'})@maxlength(columnsize.length64)@isoptional",{"_index":1669,"title":{},"body":{"classes/UserDto.html":{}}}],["24",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["2})@min(0)@max(100)@expose",{"_index":1375,"title":{},"body":{"classes/SubmissionDto.html":{}}}],["3",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["3.18.0",{"_index":1799,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1810,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1754,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["3/16",{"_index":1736,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1725,"title":{},"body":{"coverage.html":{}}}],["3/19",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["3/20",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["3/21",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["3/34",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":2009,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["4.1.0",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1795,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1797,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["5.10.1",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.11",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["6.6.2",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["60000",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["62",{"_index":2010,"title":{},"body":{"overview.html":{}}}],["7",{"_index":1386,"title":{},"body":{"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":1791,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":1792,"title":{},"body":{"dependencies.html":{}}}],["7.3.4",{"_index":1796,"title":{},"body":{"dependencies.html":{}}}],["7.4.2",{"_index":1789,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1777,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":2073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseEntity.html":{}}}],["_${propertykey",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":1025,"title":{},"body":{"controllers/MentorController.html":{},"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["abortearly",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":1224,"title":{},"body":{"controllers/ProfileController.html":{},"index.html":{},"license.html":{}}}],["abstractcontrolleroptions",{"_index":1,"title":{"interfaces/AbstractControllerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithauthoptions",{"_index":24,"title":{"interfaces/AbstractControllerWithAuthOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithswaggeroptions",{"_index":27,"title":{"interfaces/AbstractControllerWithSwaggerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractdocument",{"_index":2014,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["access",{"_index":871,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["accessors",{"_index":522,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["account",{"_index":967,"title":{},"body":{"injectables/MailService.html":{}}}],["acctverifydto",{"_index":36,"title":{"classes/AcctVerifyDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["achieving",{"_index":1883,"title":{},"body":{"index.html":{}}}],["action",{"_index":1996,"title":{},"body":{"license.html":{}}}],["activate",{"_index":519,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["admin",{"_index":1639,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":2013,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["amazing",{"_index":1889,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1964,"title":{},"body":{"license.html":{}}}],["api_auth_enabled",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":955,"title":{},"body":{"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["api_key_mailgun",{"_index":812,"title":{},"body":{"modules/DbTest.html":{}}}],["api_secret",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":594,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apibody",{"_index":1204,"title":{},"body":{"controllers/ProfileController.html":{},"miscellaneous/variables.html":{}}}],["apiconflictresponse",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":1205,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["apiconsumes('multipart/form",{"_index":1238,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["apiexception",{"_index":58,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MentorController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["apiexception})@apibearerauth",{"_index":592,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["apiexception})@apiresponse({status",{"_index":591,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["apiexception})@apiresponse({type",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(authenticationguard",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1520,"title":{},"body":{"classes/TracksController.html":{}}}],["apifile",{"_index":1749,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":2060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":76,"title":{},"body":{"classes/ApiException.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/CourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/IPagedListDto.html":{},"classes/MentorInput.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["apiproperty()@expose",{"_index":502,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["apiproperty({readonly",{"_index":1490,"title":{},"body":{"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({type",{"_index":479,"title":{},"body":{"classes/AvatarUploadDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{}}}],["apiresponse",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apiswaggeroperation",{"_index":1744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{}}}],["apitags(\"health",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(\"mentors",{"_index":997,"title":{},"body":{"controllers/MentorController.html":{}}}],["apitags(\"profile",{"_index":1217,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('auth",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiunauthorizedresponse",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_email",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":96,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appemail",{"_index":686,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["applicable",{"_index":1910,"title":{},"body":{"index.html":{}}}],["application",{"_index":1894,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":113,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":103,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectural",{"_index":1899,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":846,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":2000,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1936,"title":{},"body":{"index.html":{}}}],["assignmentor",{"_index":1068,"title":{},"body":{"injectables/MentorService.html":{}}}],["assignmentor(menteeid",{"_index":1074,"title":{},"body":{"injectables/MentorService.html":{}}}],["assignmentortotrack",{"_index":1069,"title":{},"body":{"injectables/MentorService.html":{}}}],["assignmentortotrack(trackid",{"_index":1077,"title":{},"body":{"injectables/MentorService.html":{}}}],["associated",{"_index":1951,"title":{},"body":{"license.html":{}}}],["async",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":18,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/MailService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":55,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["auth.guard",{"_index":1208,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth.guard.ts",{"_index":898,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:9",{"_index":899,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{}}}],["auth/auth.module",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards",{"_index":601,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["auth/guards/jwt",{"_index":1207,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth/models/dto/auth.dto",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_guard_type",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":183,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1746,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":255,"title":{"guards/AuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["autherrors",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherrors.expired_token",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_login_attempt",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_token",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":901,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(auth_guard_type",{"_index":903,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":124,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobj",{"_index":363,"title":{"interfaces/AuthObj.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authobj.create",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.delete",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.find",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.findbyid",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.update",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create?.length",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete?.length",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find?.length",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid?.length",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update?.length",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1989,"title":{},"body":{"license.html":{}}}],["authroles",{"_index":366,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":253,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["autopopulate",{"_index":1311,"title":{},"body":{"classes/Stage.html":{},"classes/UserStage.html":{},"dependencies.html":{}}}],["available",{"_index":963,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["avatar",{"_index":1192,"title":{},"body":{"controllers/ProfileController.html":{}}}],["avatars",{"_index":1272,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["avataruploaddto",{"_index":476,"title":{"classes/AvatarUploadDto.html":{}},"body":{"classes/AvatarUploadDto.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["avataruploaddto})@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":1194,"title":{},"body":{"controllers/ProfileController.html":{}}}],["await",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["badrequestexception",{"_index":1197,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["badrequestexception(\"file",{"_index":1241,"title":{},"body":{"controllers/ProfileController.html":{}}}],["badrequestexception('file",{"_index":1554,"title":{},"body":{"classes/TracksController.html":{}}}],["badrequestexception('thumbnail",{"_index":1550,"title":{},"body":{"classes/TracksController.html":{}}}],["basecontrolleroptions",{"_index":483,"title":{"interfaces/BaseControllerOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithauthoptions",{"_index":488,"title":{"interfaces/BaseControllerWithAuthOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithswaggeropts",{"_index":489,"title":{"interfaces/BaseControllerWithSwaggerOpts.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecrudcontroller",{"_index":595,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["basecrudcontroller(options",{"_index":1853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["basectrl",{"_index":580,"title":{},"body":{"classes/CategoriesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basedto",{"_index":498,"title":{"classes/BaseDto.html":{}},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{},"coverage.html":{}}}],["basedto:11",{"_index":667,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["basedto:14",{"_index":665,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["basedto:8",{"_index":666,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["baseentity",{"_index":510,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{},"coverage.html":{}}}],["baseentity:12",{"_index":648,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:14",{"_index":643,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:16",{"_index":650,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:18",{"_index":647,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:20",{"_index":645,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:22",{"_index":644,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:24",{"_index":642,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:26",{"_index":649,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:44",{"_index":653,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:53",{"_index":654,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:62",{"_index":652,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:71",{"_index":651,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseentity:9",{"_index":646,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["baseservice",{"_index":626,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintoken",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pw",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(plaintoken",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["binary",{"_index":481,"title":{},"body":{"classes/AvatarUploadDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/MentorMentee.html":{},"classes/PagedListStageDto-2.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1927,"title":{},"body":{"index.html":{}}}],["bring",{"_index":1887,"title":{},"body":{"index.html":{}}}],["browse",{"_index":2005,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2003,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":573,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["bufferedfile",{"_index":570,"title":{"interfaces/BufferedFile.html":{}},"body":{"interfaces/BufferedFile.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buildschema",{"_index":548,"title":{},"body":{"classes/BaseEntity.html":{}}}],["buildschema(this",{"_index":557,"title":{},"body":{"classes/BaseEntity.html":{}}}],["built",{"_index":1892,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1798,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":31,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"license.html":{}}}],["cache",{"_index":1800,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":458,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":462,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canlogin",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["career",{"_index":1878,"title":{},"body":{"index.html":{}}}],["catch",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/User.html":{}}}],["catch(error",{"_index":845,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":850,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories.controller",{"_index":628,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":602,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":578,"title":{"classes/CategoriesController.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":125,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":582,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":603,"title":{"classes/Category.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category.dto",{"_index":608,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{}}}],["category.dto.ts",{"_index":755,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.modelname",{"_index":630,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["category.schema",{"_index":631,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["categorydto",{"_index":589,"title":{"classes/CategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorymodel",{"_index":629,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryservice",{"_index":584,"title":{},"body":{"classes/CategoriesController.html":{}}}],["ccn",{"_index":182,"title":{},"body":{"injectables/AppService.html":{}}}],["ccn/${foldername",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charge",{"_index":1947,"title":{},"body":{"license.html":{}}}],["check",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["city",{"_index":1034,"title":{},"body":{"classes/MentorDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["claim",{"_index":1992,"title":{},"body":{"license.html":{}}}],["clan",{"_index":1857,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"modules/DbTest.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":37,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"overview.html":{}}}],["classtype",{"_index":893,"title":{},"body":{"interfaces/IPagedListDto.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":1901,"title":{},"body":{"index.html":{}}}],["clientbaseurl",{"_index":40,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["cloud_name",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary",{"_index":673,"title":{"interfaces/Cloudinary.html":{}},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cloudinary.v2.config",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary.v2.uploader.upload(content",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary_api_key",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary_api_secret",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary_name",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":623,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_exports",{"_index":624,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":746,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_exports",{"_index":747,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_providers",{"_index":748,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":928,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":929,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":930,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_mentormodule",{"_index":1046,"title":{},"body":{"modules/MentorModule.html":{},"overview.html":{}}}],["cluster_mentormodule_exports",{"_index":1048,"title":{},"body":{"modules/MentorModule.html":{},"overview.html":{}}}],["cluster_mentormodule_imports",{"_index":1047,"title":{},"body":{"modules/MentorModule.html":{}}}],["cluster_mentormodule_providers",{"_index":1049,"title":{},"body":{"modules/MentorModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":1253,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":1255,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1254,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":1256,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_stagesmodule",{"_index":1351,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_exports",{"_index":1353,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_imports",{"_index":1352,"title":{},"body":{"modules/StagesModule.html":{}}}],["cluster_stagesmodule_providers",{"_index":1354,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":1456,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":1458,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":1457,"title":{},"body":{"modules/TasksModule.html":{}}}],["cluster_tasksmodule_providers",{"_index":1459,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule",{"_index":1583,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_exports",{"_index":1585,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_imports",{"_index":1584,"title":{},"body":{"modules/TracksModule.html":{}}}],["cluster_tracksmodule_providers",{"_index":1586,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1699,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1700,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1701,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1856,"title":{},"body":{"index.html":{}}}],["codeclannigeria",{"_index":1911,"title":{},"body":{"index.html":{}}}],["codeclannigeria.dev",{"_index":1879,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1877,"title":{},"body":{"index.html":{}}}],["columnsize",{"_index":655,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsize.length1024",{"_index":714,"title":{},"body":{"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{}}}],["columnsize.length128",{"_index":1373,"title":{},"body":{"classes/Submission.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["columnsize.length256",{"_index":713,"title":{},"body":{"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{}}}],["columnsize.length32",{"_index":658,"title":{},"body":{"classes/Category.html":{},"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["columnsize.length64",{"_index":1648,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":1897,"title":{},"body":{"index.html":{}}}],["community",{"_index":1861,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1898,"title":{},"body":{"index.html":{}}}],["completed",{"_index":1397,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["compression",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["comprised",{"_index":1862,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1914,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1004,"title":{},"body":{"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"license.html":{}}}],["config",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.key",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.name",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.secret",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":150,"title":{"interfaces/Configuration.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration().appemail",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["configuration().environment",{"_index":858,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["configuration().isauthenabled",{"_index":471,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["configuration().jwtsecret",{"_index":924,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirmation",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmed",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail",{"_index":1600,"title":{},"body":{"classes/User.html":{}}}],["conflictexception",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["conflictexception('email",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('user",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["connect",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":2001,"title":{},"body":{"license.html":{}}}],["console.log(context.switchtohttp().getrequest().sessionid",{"_index":904,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["const",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"injectables/MentorService.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(@injectmodel(user.modelname",{"_index":1269,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor(authservice",{"_index":460,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(categoryservice",{"_index":581,"title":{},"body":{"classes/CategoriesController.html":{}}}],["constructor(courseservice",{"_index":732,"title":{},"body":{"classes/CoursesController.html":{}}}],["constructor(mentormenteemodel",{"_index":1072,"title":{},"body":{"injectables/MentorService.html":{}}}],["constructor(message",{"_index":71,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(private",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["constructor(protected",{"_index":611,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/UsersController.html":{}}}],["constructor(reflector",{"_index":1284,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(stageservice",{"_index":1333,"title":{},"body":{"classes/StagesController.html":{}}}],["constructor(tasksservice",{"_index":1412,"title":{},"body":{"classes/TasksController.html":{}}}],["constructor(trackservice",{"_index":1509,"title":{},"body":{"classes/TracksController.html":{}}}],["constructor(userentity",{"_index":1261,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor(usersservice",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["content",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":465,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1290,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":469,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["contract",{"_index":1997,"title":{},"body":{"license.html":{}}}],["controller",{"_index":7,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('mentors",{"_index":996,"title":{},"body":{"controllers/MentorController.html":{}}}],["controller('profile",{"_index":1218,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller.interface.ts",{"_index":875,"title":{},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["controller.interface.ts:10",{"_index":885,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:11",{"_index":887,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:12",{"_index":879,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:8",{"_index":877,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:9",{"_index":882,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controllerauth",{"_index":369,"title":{"interfaces/ControllerAuth.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controllername",{"_index":2058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.indexof('controller",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.substr",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"controllers/MentorController.html":{},"modules/MentorModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":1966,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1950,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1941,"title":{},"body":{"license.html":{}}}],["countdocuments",{"_index":1098,"title":{},"body":{"injectables/MentorService.html":{}}}],["country",{"_index":1035,"title":{},"body":{"classes/MentorDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["course",{"_index":704,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/PagedListTaskDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{}}}],["course.dto",{"_index":741,"title":{},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{}}}],["course.dto.ts",{"_index":758,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["course.modelname",{"_index":752,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["course.schema",{"_index":753,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["coursedto",{"_index":715,"title":{"classes/CourseDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["coursemodel",{"_index":751,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courses.controller",{"_index":750,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses.service",{"_index":738,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["courses/courses.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["courses/courses.service",{"_index":1428,"title":{},"body":{"classes/TasksController.html":{}}}],["courses/models/course.entity",{"_index":1392,"title":{},"body":{"classes/Task.html":{}}}],["coursescontroller",{"_index":730,"title":{"classes/CoursesController.html":{}},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["courseservice",{"_index":735,"title":{},"body":{"classes/CoursesController.html":{}}}],["coursesmodule",{"_index":126,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesservice",{"_index":733,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/TasksController.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1710,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverage.ts",{"_index":1715,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["create",{"_index":372,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":617,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["create(input",{"_index":585,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["createcategorydto",{"_index":586,"title":{"classes/CreateCategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcoursedto",{"_index":736,"title":{"classes/CreateCourseDto.html":{}},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["created",{"_index":1872,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":500,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{}}}],["createdby",{"_index":513,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["createdto",{"_index":492,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["creatementors",{"_index":1504,"title":{},"body":{"classes/TracksController.html":{}}}],["creatementors(trackid",{"_index":1514,"title":{},"body":{"classes/TracksController.html":{}}}],["createstagedto",{"_index":760,"title":{"classes/CreateStageDto.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createsubmissiondto",{"_index":770,"title":{"classes/CreateSubmissionDto.html":{}},"body":{"classes/CreateSubmissionDto.html":{},"classes/TasksController.html":{},"coverage.html":{}}}],["createtaskdto",{"_index":778,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtrack",{"_index":1505,"title":{},"body":{"classes/TracksController.html":{}}}],["createtrack(input",{"_index":1518,"title":{},"body":{"classes/TracksController.html":{}}}],["createtrackdto",{"_index":784,"title":{"classes/CreateTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtransport",{"_index":935,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":798,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createwiththumbnailtrackdto",{"_index":794,"title":{"classes/CreateWithThumbnailTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/TracksController.html":{},"coverage.html":{}}}],["crypto",{"_index":1638,"title":{},"body":{"classes/User.html":{}}}],["ctx",{"_index":851,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":855,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":854,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":1921,"title":{},"body":{"index.html":{}}}],["currentuserid",{"_index":1078,"title":{},"body":{"injectables/MentorService.html":{}}}],["customdecorator",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customname",{"_index":1480,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["damages",{"_index":1993,"title":{},"body":{"license.html":{}}}],["data",{"_index":1239,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["data')@apibearerauth",{"_index":1521,"title":{},"body":{"classes/TracksController.html":{}}}],["data')@apibody({description",{"_index":1190,"title":{},"body":{"controllers/ProfileController.html":{}}}],["database",{"_index":169,"title":{"interfaces/Database.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_host",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datauri",{"_index":1815,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["datauri.format(`.${file.originalname.split('.')[0",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datauriparser",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/MentorMentee.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{}}}],["date().getdate",{"_index":1385,"title":{},"body":{"classes/Task.html":{}}}],["date().gettime",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().setdate(new",{"_index":1384,"title":{},"body":{"classes/Task.html":{}}}],["date().toisostring",{"_index":92,"title":{},"body":{"classes/ApiException.html":{}}}],["date(date.now",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(new",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"classes/Task.html":{}}}],["date})@type(undefined",{"_index":1402,"title":{},"body":{"classes/TaskDto.html":{},"classes/UserDto.html":{}}}],["dbfactory",{"_index":818,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver",{"_index":816,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver.geturi",{"_index":821,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["dbtest",{"_index":805,"title":{"modules/DbTest.html":{}},"body":{"modules/DbTest.html":{},"modules.html":{}}}],["deactivate",{"_index":520,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["deadline",{"_index":1138,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{}}}],["deal",{"_index":1953,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2002,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":2076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator(target",{"_index":2078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":44,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"controllers/MentorController.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["default",{"_index":17,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth",{"_index":1758,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultauth.create.authroles",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.create.enableauth",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.authroles",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.enableauth",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.authroles",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.enableauth",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.authroles",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.enableauth",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.authroles",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.enableauth",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthobject",{"_index":16,"title":{"interfaces/DefaultAuthObject.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":361,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":46,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["delete",{"_index":374,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserStage.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["delete(id",{"_index":878,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["deletedat",{"_index":514,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["deletedby",{"_index":515,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["deleteresulttype",{"_index":2016,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":115,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":2057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":660,"title":{},"body":{"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/MentorDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":2053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":1294,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(user",{"_index":1296,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["desire",{"_index":1873,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1926,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1866,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1867,"title":{},"body":{"index.html":{}}}],["discard_original_filename",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1962,"title":{},"body":{"license.html":{}}}],["dob",{"_index":1157,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["doc",{"_index":22,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["documentation",{"_index":1711,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentquery",{"_index":2021,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":2022,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["domain",{"_index":681,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{}}}],["done",{"_index":1297,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":1303,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["dto",{"_index":1556,"title":{},"body":{"classes/TracksController.html":{}}}],["dto.thumbnail",{"_index":1558,"title":{},"body":{"classes/TracksController.html":{}}}],["dto.thumbnailurl",{"_index":1557,"title":{},"body":{"classes/TracksController.html":{}}}],["dto/avatar",{"_index":1211,"title":{},"body":{"controllers/ProfileController.html":{}}}],["dto/update",{"_index":1213,"title":{},"body":{"controllers/ProfileController.html":{}}}],["e",{"_index":1646,"title":{},"body":{"classes/User.html":{}}}],["each",{"_index":1165,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/UserDto.html":{}}}],["email",{"_index":57,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email')@httpcode(httpstatus.ok",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["email?.tolowercase",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["email_token",{"_index":1479,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["emailparamname",{"_index":41,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["empty",{"_index":1243,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["enableauth",{"_index":367,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["enableimplicitconversion",{"_index":1016,"title":{},"body":{"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["encoding",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/BufferedFile.html":{}}}],["encryptedtoken",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1865,"title":{},"body":{"index.html":{}}}],["engineers",{"_index":1868,"title":{},"body":{"index.html":{}}}],["enroll",{"_index":1506,"title":{},"body":{"classes/TracksController.html":{}}}],["enroll(trackid",{"_index":1523,"title":{},"body":{"classes/TracksController.html":{}}}],["enrollmentcount",{"_index":706,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["entity",{"_index":487,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["entitydto",{"_index":490,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IPagedListDto.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":1154,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["enumerations",{"_index":1845,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":682,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["envvalidation",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1298,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error",{"_index":62,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":1299,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error.getstatus",{"_index":856,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.name",{"_index":864,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response",{"_index":868,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.error",{"_index":863,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.errors",{"_index":865,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.message",{"_index":869,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.name",{"_index":862,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.stack",{"_index":860,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorname",{"_index":861,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":63,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["errors/api",{"_index":849,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errortype",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["ethereal",{"_index":966,"title":{},"body":{"injectables/MailService.html":{}}}],["event",{"_index":1988,"title":{},"body":{"license.html":{}}}],["exception",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":843,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:15",{"_index":847,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.ts",{"_index":60,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["exception.ts:10",{"_index":81,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:12",{"_index":77,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:14",{"_index":78,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:16",{"_index":83,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:18",{"_index":80,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:20",{"_index":73,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:6",{"_index":82,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:8",{"_index":79,"title":{},"body":{"classes/ApiException.html":{}}}],["exceptionfilter",{"_index":844,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":668,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["exclude()@prop({default",{"_index":1617,"title":{},"body":{"classes/User.html":{}}}],["excludeextraneousvalues",{"_index":1017,"title":{},"body":{"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["executioncontext",{"_index":463,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["exist",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["exist.email",{"_index":1698,"title":{},"body":{"classes/UsersController.html":{}}}],["exist.id",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.name",{"_index":621,"title":{},"body":{"classes/CategoriesController.html":{}}}],["exist.title",{"_index":745,"title":{},"body":{"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["exist.token",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["expandvariables",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["expireafterseconds",{"_index":1482,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["expireat",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"classes/TemporaryToken.html":{}}}],["expired",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired_token",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinmins",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["exports",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":507,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["expose()@apiproperty({readonly",{"_index":719,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@apiproperty({type",{"_index":1324,"title":{},"body":{"classes/StageDto.html":{},"classes/UserStageDto.html":{}}}],["expose()@isarray()@length(1",{"_index":1674,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isdate()@apiproperty({type",{"_index":1660,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isdate()@mindate(new",{"_index":1400,"title":{},"body":{"classes/TaskDto.html":{}}}],["expose()@isenum(gender)@apiproperty({enum",{"_index":1665,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isenum(userrole)@apiproperty({enum",{"_index":1672,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isnotempty",{"_index":1404,"title":{},"body":{"classes/TaskDto.html":{}}}],["expose()@isoptional()@maxlength(columnsize.length128",{"_index":1658,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isphonenumber('zz",{"_index":1668,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length1024)@isnotempty()@apiproperty",{"_index":717,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length256)@apiproperty()@isnotempty",{"_index":723,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length64",{"_index":1655,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length64)@isemail",{"_index":1662,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@min(0)@isint",{"_index":1318,"title":{},"body":{"classes/StageDto.html":{}}}],["expose()@min(0)@isint()@isoptional",{"_index":1320,"title":{},"body":{"classes/StageDto.html":{},"classes/StageOnlyDto.html":{}}}],["express",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/GradeSubmissionDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["extractjwt",{"_index":915,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":921,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["failedsigninattempts",{"_index":1597,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{},"miscellaneous/variables.html":{}}}],["false').default('true",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":1929,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1902,"title":{},"body":{"index.html":{}}}],["female",{"_index":1641,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["fieldname",{"_index":574,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.buffer",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.interface",{"_index":788,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{}}}],["file.interface.ts",{"_index":572,"title":{},"body":{"interfaces/BufferedFile.html":{},"coverage.html":{}}}],["file.mimetype.split('/')[0",{"_index":1244,"title":{},"body":{"controllers/ProfileController.html":{}}}],["file.size",{"_index":1246,"title":{},"body":{"controllers/ProfileController.html":{}}}],["fileinterceptor",{"_index":1202,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["filename",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1952,"title":{},"body":{"license.html":{}}}],["find",{"_index":370,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"controllers/MentorController.html":{},"classes/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":876,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findall(input",{"_index":880,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findbyid",{"_index":371,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["findbyid(input",{"_index":884,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["finddto",{"_index":822,"title":{"classes/FindDto.html":{}},"body":{"classes/FindDto.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["findone",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstname",{"_index":1030,"title":{},"body":{"classes/MentorDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["fitness",{"_index":1984,"title":{},"body":{"license.html":{}}}],["folder",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foldername",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["follow",{"_index":1908,"title":{},"body":{"index.html":{}}}],["following",{"_index":1971,"title":{},"body":{"license.html":{}}}],["forbiddenexception('invalid",{"_index":2082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":1912,"title":{},"body":{"index.html":{}}}],["format",{"_index":480,"title":{},"body":{"classes/AvatarUploadDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"miscellaneous/variables.html":{}}}],["fortune",{"_index":1943,"title":{},"body":{"license.html":{}}}],["found",{"_index":1022,"title":{},"body":{"controllers/MentorController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["free",{"_index":1903,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":1864,"title":{},"body":{"index.html":{}}}],["fs",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["fs.promises.readfile(\"./src/templates/welcome.html",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["full",{"_index":1631,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fullname",{"_index":1602,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":895,"title":{},"body":{"interfaces/IPagedListDto.html":{},"injectables/SessionSerializer.html":{},"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":1849,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1969,"title":{},"body":{"license.html":{}}}],["future",{"_index":1137,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"index.html":{}}}],["future'})@isoptional()@apiproperty({type",{"_index":1401,"title":{},"body":{"classes/TaskDto.html":{}}}],["gender",{"_index":1037,"title":{},"body":{"classes/MentorDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["gender.unspecified",{"_index":1612,"title":{},"body":{"classes/User.html":{}}}],["generaterandomtoken",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterandomtoken(64",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken(undefined",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(\"mentees",{"_index":1231,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(\"mentors",{"_index":1226,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get(':taskid/submissions",{"_index":1447,"title":{},"body":{"classes/TasksController.html":{}}}],["get(':taskid/submissions')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1420,"title":{},"body":{"classes/TasksController.html":{}}}],["get(':trackid/mentors",{"_index":1571,"title":{},"body":{"classes/TracksController.html":{}}}],["get(':trackid/mentors')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1527,"title":{},"body":{"classes/TracksController.html":{}}}],["get(':trackid/stages",{"_index":1560,"title":{},"body":{"classes/TracksController.html":{}}}],["get(':trackid/stages')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1531,"title":{},"body":{"classes/TracksController.html":{}}}],["get(':trackid/user_stages",{"_index":1566,"title":{},"body":{"classes/TracksController.html":{}}}],["get(':trackid/user_stages')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1535,"title":{},"body":{"classes/TracksController.html":{}}}],["get('mentees')@useguards(jwtauthguard)@useguards(jwtauthguard",{"_index":1174,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('mentors')@useguards(jwtauthguard)@useguards(jwtauthguard",{"_index":1178,"title":{},"body":{"controllers/ProfileController.html":{}}}],["get('submissions",{"_index":1000,"title":{},"body":{"controllers/MentorController.html":{}}}],["get('submissions')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":977,"title":{},"body":{"controllers/MentorController.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":1182,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getauthobj",{"_index":1759,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getauthtoken",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthtoken(user",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfullname",{"_index":1628,"title":{},"body":{"classes/User.html":{}}}],["gethello",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["getmentees",{"_index":1070,"title":{},"body":{"injectables/MentorService.html":{},"controllers/ProfileController.html":{}}}],["getmentees(@query",{"_index":1232,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmentees(input",{"_index":1081,"title":{},"body":{"injectables/MentorService.html":{}}}],["getmentees(query",{"_index":1173,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmentors",{"_index":1071,"title":{},"body":{"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["getmentors(@param(\"taskid",{"_index":1448,"title":{},"body":{"classes/TasksController.html":{}}}],["getmentors(@query",{"_index":1228,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmentors(input",{"_index":1083,"title":{},"body":{"injectables/MentorService.html":{}}}],["getmentors(query",{"_index":1177,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getmentors(taskid",{"_index":1419,"title":{},"body":{"classes/TasksController.html":{}}}],["getmentors(trackid",{"_index":1526,"title":{},"body":{"classes/TracksController.html":{}}}],["getmodel",{"_index":1632,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass",{"_index":1635,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass(this",{"_index":1654,"title":{},"body":{"classes/User.html":{}}}],["getmodelname",{"_index":546,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getprofile",{"_index":1170,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":1220,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(req",{"_index":1181,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getschema",{"_index":544,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getstages",{"_index":1507,"title":{},"body":{"classes/TracksController.html":{}}}],["getstages(trackid",{"_index":1530,"title":{},"body":{"classes/TracksController.html":{}}}],["getsubmissions",{"_index":974,"title":{},"body":{"controllers/MentorController.html":{}}}],["getsubmissions(@query",{"_index":1003,"title":{},"body":{"controllers/MentorController.html":{}}}],["getsubmissions(query",{"_index":976,"title":{},"body":{"controllers/MentorController.html":{}}}],["getters",{"_index":559,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getting",{"_index":1855,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuserstages",{"_index":1508,"title":{},"body":{"classes/TracksController.html":{}}}],["getuserstages(trackid",{"_index":1534,"title":{},"body":{"classes/TracksController.html":{}}}],["getwelcome",{"_index":179,"title":{},"body":{"injectables/AppService.html":{}}}],["global",{"_index":1305,"title":{},"body":{"modules/SharedModule.html":{}}}],["goal",{"_index":1884,"title":{},"body":{"index.html":{}}}],["gradepercentage",{"_index":839,"title":{},"body":{"classes/GradeSubmissionDto.html":{},"classes/PagedListSubmissionDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{}}}],["gradesubmissiondto",{"_index":836,"title":{"classes/GradeSubmissionDto.html":{}},"body":{"classes/GradeSubmissionDto.html":{},"controllers/MentorController.html":{},"coverage.html":{}}}],["gradetask",{"_index":975,"title":{},"body":{"controllers/MentorController.html":{}}}],["gradetask(@param(\"submissionid",{"_index":1019,"title":{},"body":{"controllers/MentorController.html":{}}}],["gradetask(submissionid",{"_index":982,"title":{},"body":{"controllers/MentorController.html":{}}}],["granted",{"_index":1946,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2006,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":455,"title":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":456,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["hapi/joi",{"_index":1785,"title":{},"body":{"dependencies.html":{}}}],["hash",{"_index":1637,"title":{},"body":{"classes/User.html":{}}}],["hash(this.password",{"_index":1645,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1945,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1990,"title":{},"body":{"license.html":{}}}],["host",{"_index":677,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Mailer.html":{}}}],["host.switchtohttp",{"_index":852,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["html.replace('%fullname",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["httpcode(httpstatus.ok",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["httpexception",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":841,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ethereal.email/message/waqkmgkddxqdoou",{"_index":970,"title":{},"body":{"injectables/MailService.html":{}}}],["httpstatus",{"_index":84,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.bad_request",{"_index":616,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.created",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.forbidden",{"_index":615,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.ok",{"_index":1001,"title":{},"body":{"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["httpstatus.unauthorized",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpstatus[statuscode",{"_index":95,"title":{},"body":{"classes/ApiException.html":{}}}],["ibasecontroller",{"_index":874,"title":{"interfaces/IBaseController.html":{}},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["id",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/IBaseController.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{}}}],["identifier",{"_index":1712,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":922,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1242,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["img.util",{"_index":1268,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["img.util.ts",{"_index":1763,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":468,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"guards/RolesGuard.html":{}}}],["implied",{"_index":1980,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["imports",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1974,"title":{},"body":{"license.html":{}}}],["including",{"_index":1956,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":2080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["info.messageid",{"_index":961,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":641,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/MentorMentee.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{}}}],["inject",{"_index":1340,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["inject(coursesservice",{"_index":1436,"title":{},"body":{"classes/TasksController.html":{}}}],["inject(stagesservice",{"_index":1435,"title":{},"body":{"classes/TasksController.html":{}}}],["inject(tracksservice",{"_index":1345,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["inject(usersservice",{"_index":1545,"title":{},"body":{"classes/TracksController.html":{}}}],["injectable",{"_index":176,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/MentorService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/MentorService.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["injectables",{"_index":177,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/MentorService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"overview.html":{}}}],["injectmodel",{"_index":988,"title":{},"body":{"controllers/MentorController.html":{},"injectables/MentorService.html":{},"injectables/ProfileService.html":{}}}],["injectmodel(mentormentee.modelname",{"_index":1085,"title":{},"body":{"injectables/MentorService.html":{}}}],["injectmodel(submission.modelname",{"_index":998,"title":{},"body":{"controllers/MentorController.html":{}}}],["injectmodel(trackmentor.modelname",{"_index":1086,"title":{},"body":{"injectables/MentorService.html":{}}}],["inmemorydb",{"_index":817,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["innovators",{"_index":1863,"title":{},"body":{"index.html":{}}}],["input",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["input.conditions",{"_index":1092,"title":{},"body":{"injectables/MentorService.html":{}}}],["input.course",{"_index":1446,"title":{},"body":{"classes/TasksController.html":{}}}],["input.email",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.email.tolowercase",{"_index":1697,"title":{},"body":{"classes/UsersController.html":{}}}],["input.menteeid",{"_index":1093,"title":{},"body":{"injectables/MentorService.html":{}}}],["input.mentorid",{"_index":1104,"title":{},"body":{"injectables/MentorService.html":{},"classes/TracksController.html":{}}}],["input.name.touppercase",{"_index":620,"title":{},"body":{"classes/CategoriesController.html":{}}}],["input.options",{"_index":1094,"title":{},"body":{"injectables/MentorService.html":{}}}],["input.stage",{"_index":1442,"title":{},"body":{"classes/TasksController.html":{}}}],["input.title.touppercase",{"_index":744,"title":{},"body":{"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["input.track",{"_index":1348,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["interface.ts",{"_index":486,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":1634,"title":{},"body":{"classes/User.html":{}}}],["internalservererrorexception(e",{"_index":1647,"title":{},"body":{"classes/User.html":{}}}],["invalid",{"_index":1159,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["invalid_login_attempt",{"_index":2079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_token",{"_index":2081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ipagedlistdto",{"_index":888,"title":{"interfaces/IPagedListDto.html":{}},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{}}}],["isactive",{"_index":516,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["isarray",{"_index":1143,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["isauthenabled",{"_index":685,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["isauthenticationenabled",{"_index":2075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscompleted",{"_index":1123,"title":{},"body":{"classes/PagedListStageDto-2.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{}}}],["isdate",{"_index":1134,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TaskDto.html":{},"classes/UserDto.html":{}}}],["isdeleted",{"_index":517,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["isemail",{"_index":1147,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isemailverified",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["isenum",{"_index":1148,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isenum(gender",{"_index":1156,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isenum(userrole",{"_index":1153,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isglobal",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isgraded",{"_index":1361,"title":{},"body":{"classes/Submission.html":{}}}],["isint",{"_index":1110,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{}}}],["isjson",{"_index":835,"title":{},"body":{"classes/FindDto.html":{}}}],["isjson()@isoptional",{"_index":830,"title":{},"body":{"classes/FindDto.html":{}}}],["ismongoid",{"_index":509,"title":{},"body":{"classes/BaseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["ismongoid()@expose",{"_index":504,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/MentorInput.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["ismongoid()@expose()@isoptional",{"_index":1398,"title":{},"body":{"classes/TaskDto.html":{}}}],["isnotempty",{"_index":48,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/ResetPassInput.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserStageDto.html":{},"classes/ValidateTokenInput.html":{}}}],["isnumber",{"_index":1127,"title":{},"body":{"classes/PagedListSubmissionDto.html":{},"classes/SubmissionDto.html":{}}}],["isnumber({maxdecimalplaces",{"_index":1374,"title":{},"body":{"classes/SubmissionDto.html":{}}}],["isoptional",{"_index":828,"title":{},"body":{"classes/FindDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["isoptional()@isjson",{"_index":832,"title":{},"body":{"classes/FindDto.html":{}}}],["isphonenumber",{"_index":1149,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isphonenumber(\"zz",{"_index":1158,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["issue",{"_index":1917,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1915,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":45,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListSubmissionDto.html":{},"classes/SubmissionDto.html":{}}}],["isurl()@expose",{"_index":1380,"title":{},"body":{"classes/SubmissionDto.html":{}}}],["isurl()@maxlength(columnsize.length256)@isnotempty()@expose",{"_index":721,"title":{},"body":{"classes/CourseDto.html":{}}}],["isvalid",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":891,"title":{},"body":{"interfaces/IPagedListDto.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["joi.number().default(27017",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().default('redis://localhost:6379",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().required",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('true",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1934,"title":{},"body":{"index.html":{}}}],["json.parse(opts",{"_index":1007,"title":{},"body":{"controllers/MentorController.html":{},"controllers/ProfileController.html":{}}}],["json.parse(search",{"_index":1005,"title":{},"body":{"controllers/MentorController.html":{},"controllers/ProfileController.html":{}}}],["jsonwebtoken",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign(payload",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_secret",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_validity_hours",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":599,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":920,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtpayload",{"_index":406,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["jwtstrategy",{"_index":342,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidityhrs",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["key",{"_index":675,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1979,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1249,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["lastname",{"_index":1031,"title":{},"body":{"classes/MentorDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["legend",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":1150,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["length(1",{"_index":1164,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["length1024",{"_index":2074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length128",{"_index":2070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length16",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length256",{"_index":2071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length32",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length512",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length64",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length8",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":769,"title":{},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"index.html":{}}}],["liability",{"_index":1994,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1991,"title":{},"body":{"license.html":{}}}],["license",{"_index":1939,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":824,"title":{},"body":{"classes/FindDto.html":{},"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"dependencies.html":{}}}],["limit(input.limit",{"_index":1096,"title":{},"body":{"injectables/MentorService.html":{}}}],["limit(limit",{"_index":1012,"title":{},"body":{"controllers/MentorController.html":{}}}],["limitation",{"_index":1957,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1981,"title":{},"body":{"license.html":{}}}],["list.dto.ts",{"_index":890,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"injectables/MentorService.html":{}}}],["local",{"_index":1828,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["locked",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["lockoutenddate",{"_index":1598,"title":{},"body":{"classes/User.html":{}}}],["logger",{"_index":945,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`message",{"_index":959,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`preview",{"_index":968,"title":{},"body":{"injectables/MailService.html":{}}}],["login",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(_",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginattemptcount",{"_index":1599,"title":{},"body":{"classes/User.html":{}}}],["loginreqdto",{"_index":54,"title":{"classes/LoginReqDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["loginresdto",{"_index":259,"title":{"classes/LoginResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["loginresdto})@apiunauthorizedresponse({type",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":1608,"title":{},"body":{"classes/User.html":{}}}],["mail",{"_index":944,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.options",{"_index":940,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":932,"title":{},"body":{"modules/MailModule.html":{}}}],["mailer",{"_index":680,"title":{"interfaces/Mailer.html":{}},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["mailer.domain",{"_index":957,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer.key",{"_index":956,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer_api_key",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain_mailgun",{"_index":815,"title":{},"body":{"modules/DbTest.html":{}}}],["mailgun",{"_index":948,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["mailmodule",{"_index":127,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":942,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":245,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":1716,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["make",{"_index":1924,"title":{},"body":{"index.html":{}}}],["male",{"_index":1640,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["manager",{"_index":1801,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":1920,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":1128,"title":{},"body":{"classes/PagedListSubmissionDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{}}}],["max(100",{"_index":1130,"title":{},"body":{"classes/PagedListSubmissionDto.html":{},"classes/SubmissionDto.html":{}}}],["maxdecimalplaces",{"_index":1129,"title":{},"body":{"classes/PagedListSubmissionDto.html":{},"classes/SubmissionDto.html":{}}}],["maxlength",{"_index":635,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["maxlength(columnsize.length1024",{"_index":727,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length1024)@expose()@isnotempty",{"_index":1316,"title":{},"body":{"classes/StageDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length128",{"_index":671,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["maxlength(columnsize.length128)@expose",{"_index":661,"title":{},"body":{"classes/CategoryDto.html":{},"classes/StageOnlyDto.html":{},"classes/UserStageDto.html":{}}}],["maxlength(columnsize.length128)@isoptional()@expose",{"_index":1377,"title":{},"body":{"classes/SubmissionDto.html":{}}}],["maxlength(columnsize.length256",{"_index":726,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length256)@expose()@isnotempty",{"_index":1493,"title":{},"body":{"classes/TrackDto.html":{}}}],["maxlength(columnsize.length256)@isnotempty()@expose",{"_index":1322,"title":{},"body":{"classes/StageDto.html":{},"classes/TaskDto.html":{}}}],["maxlength(columnsize.length32",{"_index":670,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/StageOnlyDto.html":{},"classes/UserStageDto.html":{}}}],["maxlength(columnsize.length32)@expose",{"_index":663,"title":{},"body":{"classes/CategoryDto.html":{}}}],["maxlength(columnsize.length32)@isnotempty()@expose",{"_index":1329,"title":{},"body":{"classes/StageOnlyDto.html":{},"classes/UserStageDto.html":{}}}],["maxlength(columnsize.length64",{"_index":1152,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["measures",{"_index":1881,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":568,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["members",{"_index":1891,"title":{},"body":{"index.html":{}}}],["memory",{"_index":810,"title":{},"body":{"modules/DbTest.html":{}}}],["mentee",{"_index":1042,"title":{},"body":{"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentee.entity",{"_index":1058,"title":{},"body":{"modules/MentorModule.html":{},"injectables/MentorService.html":{}}}],["mentee.entity.ts",{"_index":1041,"title":{},"body":{"classes/MentorMentee.html":{},"coverage.html":{}}}],["mentee.entity.ts:10",{"_index":1044,"title":{},"body":{"classes/MentorMentee.html":{}}}],["mentee.entity.ts:8",{"_index":1045,"title":{},"body":{"classes/MentorMentee.html":{}}}],["menteecomment",{"_index":776,"title":{},"body":{"classes/CreateSubmissionDto.html":{},"classes/PagedListSubmissionDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{}}}],["menteeid",{"_index":1076,"title":{},"body":{"injectables/MentorService.html":{},"controllers/ProfileController.html":{}}}],["mentees",{"_index":1103,"title":{},"body":{"injectables/MentorService.html":{},"controllers/ProfileController.html":{}}}],["mentees.map(x",{"_index":1106,"title":{},"body":{"injectables/MentorService.html":{}}}],["mentor",{"_index":1011,"title":{},"body":{"controllers/MentorController.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"classes/Submission.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentor.controller",{"_index":1055,"title":{},"body":{"modules/MentorModule.html":{}}}],["mentor.entity",{"_index":1054,"title":{},"body":{"modules/MentorModule.html":{},"injectables/MentorService.html":{},"modules/TasksModule.html":{}}}],["mentor.entity.ts",{"_index":1498,"title":{},"body":{"classes/TrackMentor.html":{},"coverage.html":{}}}],["mentor.entity.ts:11",{"_index":1500,"title":{},"body":{"classes/TrackMentor.html":{}}}],["mentor.entity.ts:9",{"_index":1499,"title":{},"body":{"classes/TrackMentor.html":{}}}],["mentor.id",{"_index":1581,"title":{},"body":{"classes/TracksController.html":{}}}],["mentor.service",{"_index":1056,"title":{},"body":{"modules/MentorModule.html":{}}}],["mentor/mentor.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{}}}],["mentor/mentor.service",{"_index":1209,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["mentor/models/mentor.dto",{"_index":1210,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["mentorcomment",{"_index":840,"title":{},"body":{"classes/GradeSubmissionDto.html":{},"classes/PagedListSubmissionDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{}}}],["mentorcontroller",{"_index":971,"title":{"controllers/MentorController.html":{}},"body":{"controllers/MentorController.html":{},"modules/MentorModule.html":{},"coverage.html":{}}}],["mentordto",{"_index":1026,"title":{"classes/MentorDto.html":{}},"body":{"classes/MentorDto.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"coverage.html":{}}}],["mentorid",{"_index":797,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"controllers/MentorController.html":{},"classes/MentorInput.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{}}}],["mentorinput",{"_index":796,"title":{"classes/MentorInput.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/TracksController.html":{},"coverage.html":{}}}],["mentormentee",{"_index":1039,"title":{"classes/MentorMentee.html":{}},"body":{"classes/MentorMentee.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"coverage.html":{}}}],["mentormentee.modelname",{"_index":1060,"title":{},"body":{"modules/MentorModule.html":{},"miscellaneous/variables.html":{}}}],["mentormentee.schema",{"_index":1061,"title":{},"body":{"modules/MentorModule.html":{},"miscellaneous/variables.html":{}}}],["mentormenteemodel",{"_index":1059,"title":{},"body":{"modules/MentorModule.html":{},"injectables/MentorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mentormodule",{"_index":128,"title":{"modules/MentorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["mentors",{"_index":973,"title":{},"body":{"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["mentors.length",{"_index":1573,"title":{},"body":{"classes/TracksController.html":{}}}],["mentors.map(x",{"_index":1100,"title":{},"body":{"injectables/MentorService.html":{}}}],["mentorservice",{"_index":1050,"title":{"injectables/MentorService.html":{}},"body":{"modules/MentorModule.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"coverage.html":{},"overview.html":{}}}],["merchantability",{"_index":1983,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1714,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["message",{"_index":64,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TaskDto.html":{},"classes/UserDto.html":{}}}],["metadata",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":2050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserStage.html":{},"classes/UsersController.html":{}}}],["mg",{"_index":947,"title":{},"body":{"injectables/MailService.html":{}}}],["mimetype",{"_index":575,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["min",{"_index":1111,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListSubmissionDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{}}}],["min(0",{"_index":1113,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListSubmissionDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{}}}],["mindate",{"_index":1135,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["mindate(new",{"_index":1136,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["minlength",{"_index":1277,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["minlength(6",{"_index":1275,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["miscellaneous",{"_index":1844,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1940,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1893,"title":{},"body":{"index.html":{}}}],["model",{"_index":11,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/User.html":{}}}],["modelcreate",{"_index":30,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modelname",{"_index":523,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modeloptions",{"_index":1477,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["models/category.entity",{"_index":604,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["models/course.entity",{"_index":739,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["models/dto/acct",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/auth.dto",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["models/dto/create",{"_index":1539,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["models/dto/reset",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/track.dto",{"_index":1540,"title":{},"body":{"classes/TracksController.html":{}}}],["models/dto/user.dto",{"_index":1693,"title":{},"body":{"classes/UsersController.html":{}}}],["models/dto/validate",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dtos/category.dto",{"_index":606,"title":{},"body":{"classes/CategoriesController.html":{}}}],["models/dtos/course.dto",{"_index":740,"title":{},"body":{"classes/CoursesController.html":{}}}],["models/dtos/create",{"_index":607,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["models/dtos/stage.dto",{"_index":1342,"title":{},"body":{"classes/StagesController.html":{}}}],["models/dtos/submission.dto",{"_index":1431,"title":{},"body":{"classes/TasksController.html":{}}}],["models/dtos/task.dto",{"_index":1432,"title":{},"body":{"classes/TasksController.html":{}}}],["models/jwt",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["models/mentor",{"_index":1057,"title":{},"body":{"modules/MentorModule.html":{},"injectables/MentorService.html":{}}}],["models/stage.entity",{"_index":1343,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{}}}],["models/submission.entity",{"_index":1462,"title":{},"body":{"modules/TasksModule.html":{}}}],["models/task.entity",{"_index":1433,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{}}}],["models/temporary",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["models/track.entity",{"_index":1541,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["models/user.entity",{"_index":1694,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["modelvm",{"_index":28,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modify",{"_index":1960,"title":{},"body":{"license.html":{}}}],["module",{"_index":112,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":114,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":809,"title":{},"body":{"modules/DbTest.html":{}}}],["mongodb_uri",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongomemoryserver",{"_index":808,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":552,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Stage.html":{},"classes/UserStage.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MentorModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MentorModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forroot(configuration().database.uri",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forrootasync",{"_index":819,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1933,"title":{},"body":{"index.html":{}}}],["name",{"_index":75,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":1918,"title":{},"body":{"index.html":{}}}],["nestjs/bull",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":85,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1288,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"controllers/MentorController.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"injectables/ProfileService.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1203,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":1793,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":52,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/CategoriesController.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/GradeSubmissionDto.html":{},"interfaces/IPagedListDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["new",{"_index":21,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MentorController.html":{},"classes/MentorMentee.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserStage.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{}}}],["nigeria",{"_index":1858,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":946,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":954,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":969,"title":{},"body":{"injectables/MailService.html":{}}}],["noninfringement",{"_index":1987,"title":{},"body":{"license.html":{}}}],["note",{"_index":1909,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MentorController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["notfoundexception('token",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception('user",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception(`course",{"_index":1445,"title":{},"body":{"classes/TasksController.html":{}}}],["notfoundexception(`mentor",{"_index":1576,"title":{},"body":{"classes/TracksController.html":{}}}],["notfoundexception(`stage",{"_index":1441,"title":{},"body":{"classes/TasksController.html":{}}}],["notfoundexception(`submission",{"_index":1021,"title":{},"body":{"controllers/MentorController.html":{}}}],["notfoundexception(`task",{"_index":1450,"title":{},"body":{"classes/TasksController.html":{}}}],["notfoundexception(`track",{"_index":1443,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["notice",{"_index":1972,"title":{},"body":{"license.html":{}}}],["null",{"_index":528,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["number",{"_index":72,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/Mailer.html":{},"injectables/MentorService.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"miscellaneous/variables.html":{}}}],["obj.util.ts",{"_index":1757,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":2055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.interface",{"_index":19,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["object.interface.ts",{"_index":365,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["object.values(userrole",{"_index":2086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":900,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["obtaining",{"_index":1949,"title":{},"body":{"license.html":{}}}],["ochi",{"_index":1944,"title":{},"body":{"license.html":{}}}],["official",{"_index":1859,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":780,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/UpdateProfileDto.html":{}}}],["omittype(createuserdto",{"_index":1595,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["omittype(taskdto",{"_index":783,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["omittype(trackdto",{"_index":791,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{}}}],["omittype(userdto",{"_index":802,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["one_kb",{"_index":1544,"title":{},"body":{"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ongoing",{"_index":1874,"title":{},"body":{"index.html":{}}}],["operation.decorator.ts",{"_index":1743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationid",{"_index":2056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":61,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1006,"title":{},"body":{"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"classes/TemporaryToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["opts",{"_index":485,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/FindDto.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["originalname",{"_index":576,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["otherwise",{"_index":1999,"title":{},"body":{"license.html":{}}}],["out",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":2007,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1784,"title":{"dependencies.html":{}},"body":{}}],["paged",{"_index":896,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["pagedcategoryoutdto",{"_index":605,"title":{"classes/PagedCategoryOutDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedcourseoutputdto",{"_index":728,"title":{"classes/PagedCourseOutputDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["pagedlistdto",{"_index":496,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"interfaces/IPagedListDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["pagedlistdto(categorydto",{"_index":672,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{}}}],["pagedlistdto(coursedto",{"_index":729,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["pagedlistdto(entitydto",{"_index":1854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pagedlistdto(stagedto",{"_index":1114,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["pagedlistdto(stageonlydto",{"_index":1117,"title":{},"body":{"classes/PagedListStageDto-1.html":{},"classes/StageOnlyDto.html":{}}}],["pagedlistdto(submissiondto",{"_index":1131,"title":{},"body":{"classes/PagedListSubmissionDto.html":{},"classes/SubmissionDto.html":{}}}],["pagedlistdto(taskdto",{"_index":1139,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["pagedlistdto(trackdto",{"_index":1144,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["pagedlistdto(userdto",{"_index":1166,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["pagedlistdto(userstagedto",{"_index":1125,"title":{},"body":{"classes/PagedListStageDto-2.html":{},"classes/UserStageDto.html":{}}}],["pagedliststagedto",{"_index":1108,"title":{"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{}},"body":{"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UserStageDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedliststagedto})@useguards(jwtauthguard)@apibearerauth()@apiresponse({status",{"_index":1532,"title":{},"body":{"classes/TracksController.html":{}}}],["pagedlistsubmissiondto",{"_index":992,"title":{"classes/PagedListSubmissionDto.html":{}},"body":{"controllers/MentorController.html":{},"classes/PagedListSubmissionDto.html":{},"classes/SubmissionDto.html":{},"classes/TasksController.html":{},"coverage.html":{}}}],["pagedlistsubmissiondto})@useguards(jwtauthguard",{"_index":978,"title":{},"body":{"controllers/MentorController.html":{},"classes/TasksController.html":{}}}],["pagedlisttaskdto",{"_index":1132,"title":{"classes/PagedListTaskDto.html":{}},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedtrackoutputdto",{"_index":1140,"title":{"classes/PagedTrackOutputDto.html":{}},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pageduseroutputdto",{"_index":1145,"title":{"classes/PagedUserOutputDto.html":{}},"body":{"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pageduseroutputdto})@useguards(jwtauthguard)@apibearerauth()@apiresponse({status",{"_index":1528,"title":{},"body":{"classes/TracksController.html":{}}}],["pane",{"_index":1916,"title":{},"body":{"index.html":{}}}],["param",{"_index":987,"title":{},"body":{"controllers/MentorController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["param('trackid",{"_index":1561,"title":{},"body":{"classes/TracksController.html":{}}}],["parameters",{"_index":74,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1880,"title":{},"body":{"index.html":{}}}],["particular",{"_index":1985,"title":{},"body":{"license.html":{}}}],["passport",{"_index":917,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":360,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["passportserializer",{"_index":1293,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":914,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":918,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password')@httpcode(httpstatus.ok",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["password_token",{"_index":1478,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["passwordhash",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":65,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["paths",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["payload.ts",{"_index":907,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["permission",{"_index":870,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"license.html":{}}}],["permit",{"_index":1967,"title":{},"body":{"license.html":{}}}],["person",{"_index":1948,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1968,"title":{},"body":{"license.html":{}}}],["phone",{"_index":1160,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["phonenumber",{"_index":1036,"title":{},"body":{"classes/MentorDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["photo",{"_index":1193,"title":{},"body":{"controllers/ProfileController.html":{}}}],["photourl",{"_index":1033,"title":{},"body":{"classes/MentorDto.html":{},"classes/PagedUserOutputDto.html":{},"injectables/ProfileService.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["picktype",{"_index":51,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/MentorDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(categorydto",{"_index":756,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["picktype(coursedto",{"_index":759,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["picktype(loginreqdto",{"_index":56,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(registeruserdto",{"_index":926,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["picktype(stagedto",{"_index":767,"title":{},"body":{"classes/CreateStageDto.html":{}}}],["picktype(submissiondto",{"_index":775,"title":{},"body":{"classes/CreateSubmissionDto.html":{},"classes/GradeSubmissionDto.html":{}}}],["picktype(userdto",{"_index":1029,"title":{},"body":{"classes/MentorDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["plaintoclass",{"_index":990,"title":{},"body":{"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["plaintoclass(mentordto",{"_index":1230,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["plaintoclass(stagedto",{"_index":1565,"title":{},"body":{"classes/TracksController.html":{}}}],["plaintoclass(submissiondto",{"_index":1015,"title":{},"body":{"controllers/MentorController.html":{},"classes/TasksController.html":{}}}],["plaintoclass(userdto",{"_index":1225,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoclass(userstagedto",{"_index":1570,"title":{},"body":{"classes/TracksController.html":{}}}],["plaintoken",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["playlisturl",{"_index":707,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["please",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["plugin",{"_index":1313,"title":{},"body":{"classes/Stage.html":{},"classes/UserStage.html":{}}}],["plugin(autopopulate",{"_index":1315,"title":{},"body":{"classes/Stage.html":{},"classes/UserStage.html":{}}}],["pluralize",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["populate('mentee",{"_index":1105,"title":{},"body":{"injectables/MentorService.html":{}}}],["populate('mentor",{"_index":1095,"title":{},"body":{"injectables/MentorService.html":{}}}],["populate('user",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":678,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1976,"title":{},"body":{"license.html":{}}}],["post",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["post(':taskid/submissions",{"_index":1453,"title":{},"body":{"classes/TasksController.html":{}}}],["post(':taskid/submissions')@apiresponse({type",{"_index":1425,"title":{},"body":{"classes/TasksController.html":{}}}],["post(':trackid/enroll",{"_index":1579,"title":{},"body":{"classes/TracksController.html":{}}}],["post(':trackid/enroll')@useguards(jwtauthguard)@httpcode(httpstatus.ok)@apibearerauth()@apiresponse({status",{"_index":1524,"title":{},"body":{"classes/TracksController.html":{}}}],["post(':trackid/mentors",{"_index":1574,"title":{},"body":{"classes/TracksController.html":{}}}],["post(':trackid/mentors')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1515,"title":{},"body":{"classes/TracksController.html":{}}}],["post('confirm",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create_with_thumbnail",{"_index":1548,"title":{},"body":{"classes/TracksController.html":{}}}],["post('create_with_thumbnail')@useguards(jwtauthguard",{"_index":1519,"title":{},"body":{"classes/TracksController.html":{}}}],["post('grade/:submissionid",{"_index":1018,"title":{},"body":{"controllers/MentorController.html":{}}}],["post('grade/:submissionid')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":983,"title":{},"body":{"controllers/MentorController.html":{}}}],["post('login",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiconflictresponse({type",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload_profile_photo",{"_index":1236,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post('upload_profile_photo')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1189,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post()@apibearerauth()@useguards(jwtauthguard",{"_index":1415,"title":{},"body":{"classes/TasksController.html":{}}}],["post()@useguards(jwtauthguard",{"_index":587,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["pre",{"_index":1636,"title":{},"body":{"classes/User.html":{}}}],["pre('save",{"_index":1643,"title":{},"body":{"classes/User.html":{}}}],["prefix",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{}}}],["preview",{"_index":962,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["process",{"_index":1931,"title":{},"body":{"index.html":{}}}],["process.env.api_auth_enabled",{"_index":693,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.app_email",{"_index":694,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_api_key",{"_index":702,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_api_secret",{"_index":701,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_name",{"_index":703,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_host",{"_index":697,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_name",{"_index":699,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_port",{"_index":698,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_secret",{"_index":689,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_validity_hours",{"_index":690,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_api_key",{"_index":695,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_domain",{"_index":696,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongodb_uri",{"_index":700,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongoms_system_binary",{"_index":813,"title":{},"body":{"modules/DbTest.html":{}}}],["process.env.node_env",{"_index":688,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.port",{"_index":687,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.redis_server_url",{"_index":692,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.root_url",{"_index":691,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["production",{"_index":859,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":1169,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":1258,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":1214,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.dto.ts",{"_index":1593,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.service",{"_index":1216,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":1167,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":129,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":1215,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["promiselike",{"_index":912,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["prop",{"_index":549,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["prop({default",{"_index":529,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["prop({enum",{"_index":1474,"title":{},"body":{"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({maxlength",{"_index":1366,"title":{},"body":{"classes/Submission.html":{},"classes/User.html":{}}}],["prop({min",{"_index":1363,"title":{},"body":{"classes/Submission.html":{}}}],["prop({ref",{"_index":1043,"title":{},"body":{"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["prop({required",{"_index":525,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["prop({type",{"_index":1606,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"interfaces/AuthObj.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["propertydescriptor",{"_index":2054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":2052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propose",{"_index":1886,"title":{},"body":{"index.html":{}}}],["protected",{"_index":1270,"title":{},"body":{"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{}}}],["provide",{"_index":632,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1977,"title":{},"body":{"license.html":{}}}],["providers",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public_id",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":1961,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1925,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1986,"title":{},"body":{"license.html":{}}}],["put",{"_index":1198,"title":{},"body":{"controllers/ProfileController.html":{},"index.html":{}}}],["put()@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":1186,"title":{},"body":{"controllers/ProfileController.html":{}}}],["pw",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["pw.dto",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["pw.dto.ts",{"_index":1280,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["pw.dto.ts:7",{"_index":1281,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["query",{"_index":981,"title":{},"body":{"controllers/MentorController.html":{},"controllers/ProfileController.html":{}}}],["queryitem",{"_index":2017,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":2018,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["questions",{"_index":1937,"title":{},"body":{"index.html":{}}}],["randombytes(columnsize.length32",{"_index":1651,"title":{},"body":{"classes/User.html":{}}}],["randombytes(size).tostring('hex",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"injectables/MailService.html":{},"classes/MentorMentee.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{}}}],["redis",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["redis_server_url",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisurl",{"_index":684,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["ref",{"_index":527,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["reflect",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1285,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(input",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":204,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["registeruserresdto",{"_index":207,"title":{"classes/RegisterUserResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["repeat",{"_index":1930,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1913,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1895,"title":{},"body":{"index.html":{}}}],["req",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["req.url",{"_index":866,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["req.user[\"userid",{"_index":1023,"title":{},"body":{"controllers/MentorController.html":{}}}],["req.user['id",{"_index":1578,"title":{},"body":{"classes/TracksController.html":{}}}],["req.user['userid",{"_index":1008,"title":{},"body":{"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["request",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"index.html":{}}}],["request.body",{"_index":472,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["request.user",{"_index":475,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["require('nodemailer/lib/mailer",{"_index":950,"title":{},"body":{"injectables/MailService.html":{}}}],["required",{"_index":555,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserStage.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":853,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.status(statuscode).json(exception",{"_index":873,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassinput",{"_index":212,"title":{"classes/ResetPassInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"coverage.html":{}}}],["resetpassword",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(@body",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(input",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":872,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":848,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restore",{"_index":521,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["restriction",{"_index":1955,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":563,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret._id",{"_index":565,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret.id",{"_index":564,"title":{},"body":{"classes/BaseEntity.html":{}}}],["return",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returnmodeltype",{"_index":989,"title":{},"body":{"controllers/MentorController.html":{},"injectables/MentorService.html":{},"injectables/ProfileService.html":{},"classes/User.html":{}}}],["returns",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/MentorController.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserStage.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1958,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["roles",{"_index":597,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(userrole.admin",{"_index":614,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["roles(userrole.mentee",{"_index":1227,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TasksController.html":{}}}],["roles(userrole.mentor",{"_index":1002,"title":{},"body":{"controllers/MentorController.html":{},"controllers/ProfileController.html":{}}}],["roles.includes(role",{"_index":1291,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":600,"title":{"guards/RolesGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["rolesguard)@roles(userrole.admin",{"_index":1416,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["rolesguard)@roles(userrole.admin)@apibearerauth()@apiresponse({status",{"_index":1516,"title":{},"body":{"classes/TracksController.html":{}}}],["rolesguard)@roles(userrole.admin)@apiresponse({type",{"_index":588,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["rolesguard)@roles(userrole.mentee)@apibearerauth()@apiresponse({status",{"_index":1421,"title":{},"body":{"classes/TasksController.html":{}}}],["rolesguard)@roles(userrole.mentee)@apibearerauth()@apiresponse({type",{"_index":1179,"title":{},"body":{"controllers/ProfileController.html":{}}}],["rolesguard)@roles(userrole.mentor)@apibearerauth()@apiresponse({status",{"_index":979,"title":{},"body":{"controllers/MentorController.html":{}}}],["rolesguard)@roles(userrole.mentor)@apibearerauth()@apiresponse({type",{"_index":1175,"title":{},"body":{"controllers/ProfileController.html":{}}}],["root_url",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooturl",{"_index":683,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["rxjs",{"_index":902,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["sample",{"_index":1162,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["saved",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved.isemailverified",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["schema",{"_index":358,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MentorModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":825,"title":{},"body":{"classes/FindDto.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{}}}],["secret",{"_index":676,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["secretorkey",{"_index":923,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure_url",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sell",{"_index":1965,"title":{},"body":{"license.html":{}}}],["sendemailverifytoken",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(@body",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(input",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(@body",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(input",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["sending",{"_index":964,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync",{"_index":936,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync(mailoptions",{"_index":939,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":960,"title":{},"body":{"injectables/MailService.html":{}}}],["serializeuser",{"_index":1295,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":1301,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":811,"title":{},"body":{"modules/DbTest.html":{}}}],["session",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.serializer",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{}}}],["sessionserializer",{"_index":343,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["setmetadata(userrole",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setrandompass",{"_index":1601,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":539,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["shall",{"_index":1973,"title":{},"body":{"license.html":{}}}],["shared",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/config/configuration",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["shared/constants",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["shared/controllers",{"_index":596,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["shared/controllers/base.controller",{"_index":1537,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/decorators/roles.decorator",{"_index":598,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors/api",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["shared/interfaces",{"_index":1206,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["shared/interfaces/buffer",{"_index":787,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{}}}],["shared/mail/mail.module",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/mail/mail.service",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["shared/models/base.entity",{"_index":656,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["shared/models/dto",{"_index":669,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"controllers/MentorController.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{}}}],["shared/models/dto/base.dto",{"_index":725,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/TrackDto.html":{},"classes/UserStageDto.html":{}}}],["shared/services",{"_index":627,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["shared/types/abstract.type",{"_index":554,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["shared/utils/random",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/utils/upload",{"_index":1267,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["shared/validations/env.validation",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":130,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":577,"title":{},"body":{"interfaces/BufferedFile.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":1922,"title":{},"body":{"index.html":{}}}],["skills",{"_index":1904,"title":{},"body":{"index.html":{}}}],["skip",{"_index":826,"title":{},"body":{"classes/FindDto.html":{},"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{}}}],["skip(input.skip",{"_index":1097,"title":{},"body":{"injectables/MentorService.html":{}}}],["skip(skip",{"_index":1013,"title":{},"body":{"controllers/MentorController.html":{}}}],["slack",{"_index":1935,"title":{},"body":{"index.html":{}}}],["software",{"_index":1871,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1923,"title":{},"body":{"index.html":{}}}],["solved",{"_index":1919,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/GradeSubmissionDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"modules/MentorModule.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"index.html":{}}}],["src/.../abstract.type.ts",{"_index":2015,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":2025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":2038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.errors.ts",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":2039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticate.decorator.ts",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.controller.ts",{"_index":1850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../categories.controller.ts",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../categories.module.ts",{"_index":2037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../courses.module.ts",{"_index":2040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":2043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":2042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1851,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../mentor.module.ts",{"_index":2045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../paged",{"_index":1852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../random",{"_index":2044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":2046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stages.controller.ts",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stages.module.ts",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.entity.ts",{"_index":1847,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tasks.controller.ts",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tasks.module.ts",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temporary",{"_index":1848,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tracks.controller.ts",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tracks.module.ts",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../upload",{"_index":2047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1846,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.controller.ts",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.module.ts",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":178,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":180,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:104",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:117",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:142",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:55",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:65",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:77",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:113",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:15",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:48",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:60",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:80",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:96",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":457,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":461,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:17",{"_index":464,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:21",{"_index":467,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/jwt",{"_index":897,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":1283,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":1286,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:13",{"_index":1287,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/models/dto/acct",{"_index":38,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts",{"_index":925,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts:11",{"_index":927,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/reset",{"_index":1279,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["src/auth/models/dto/validate",{"_index":1707,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["src/auth/models/jwt",{"_index":906,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/models/temporary",{"_index":1470,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/session.serializer.ts",{"_index":1292,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:11",{"_index":1300,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:8",{"_index":1302,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":908,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":913,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":910,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/temp",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["src/categories/categories.controller.ts",{"_index":579,"title":{},"body":{"classes/CategoriesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.controller.ts:32",{"_index":583,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:44",{"_index":593,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":625,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.service.ts",{"_index":1729,"title":{},"body":{"coverage.html":{}}}],["src/categories/models/category.entity.ts",{"_index":634,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/categories/models/category.entity.ts:15",{"_index":640,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/dtos/category.dto.ts",{"_index":659,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{}}}],["src/categories/models/dtos/category.dto.ts:10",{"_index":664,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/category.dto.ts:13",{"_index":662,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/create",{"_index":754,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts",{"_index":731,"title":{},"body":{"classes/CoursesController.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts:36",{"_index":734,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.controller.ts:47",{"_index":737,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.module.ts",{"_index":749,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/courses/courses.service.ts",{"_index":1733,"title":{},"body":{"coverage.html":{}}}],["src/courses/models/course.entity.ts",{"_index":705,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/courses/models/course.entity.ts:15",{"_index":712,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:23",{"_index":708,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:30",{"_index":711,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:35",{"_index":710,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/dtos/course.dto.ts",{"_index":716,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["src/courses/models/dtos/course.dto.ts:14",{"_index":724,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:19",{"_index":718,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:24",{"_index":722,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:28",{"_index":720,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/create",{"_index":757,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1734,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/mentor/mentor.controller.ts",{"_index":972,"title":{},"body":{"controllers/MentorController.html":{},"coverage.html":{}}}],["src/mentor/mentor.controller.ts:43",{"_index":980,"title":{},"body":{"controllers/MentorController.html":{}}}],["src/mentor/mentor.controller.ts:70",{"_index":985,"title":{},"body":{"controllers/MentorController.html":{}}}],["src/mentor/mentor.module.ts",{"_index":1051,"title":{},"body":{"modules/MentorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mentor/mentor.service.ts",{"_index":1067,"title":{},"body":{"injectables/MentorService.html":{},"coverage.html":{}}}],["src/mentor/mentor.service.ts:10",{"_index":1073,"title":{},"body":{"injectables/MentorService.html":{}}}],["src/mentor/mentor.service.ts:16",{"_index":1075,"title":{},"body":{"injectables/MentorService.html":{}}}],["src/mentor/mentor.service.ts:21",{"_index":1079,"title":{},"body":{"injectables/MentorService.html":{}}}],["src/mentor/mentor.service.ts:26",{"_index":1084,"title":{},"body":{"injectables/MentorService.html":{}}}],["src/mentor/mentor.service.ts:46",{"_index":1082,"title":{},"body":{"injectables/MentorService.html":{}}}],["src/mentor/models/mentor",{"_index":1040,"title":{},"body":{"classes/MentorMentee.html":{},"coverage.html":{}}}],["src/mentor/models/mentor.dto.ts",{"_index":1027,"title":{},"body":{"classes/MentorDto.html":{},"coverage.html":{}}}],["src/profile/dto/avatar",{"_index":477,"title":{},"body":{"classes/AvatarUploadDto.html":{},"coverage.html":{}}}],["src/profile/dto/update",{"_index":1592,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts",{"_index":1168,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:101",{"_index":1187,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:120",{"_index":1196,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:44",{"_index":1183,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:61",{"_index":1180,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:82",{"_index":1176,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":1257,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":1259,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:10",{"_index":1262,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:16",{"_index":1265,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/shared/config/configuration.ts",{"_index":674,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["src/shared/constants.ts",{"_index":1739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/controllers/base.controller.ts",{"_index":1740,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/decorators/api",{"_index":1741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authenticate.decorator.ts",{"_index":1745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/file",{"_index":1747,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/roles.decorator.ts",{"_index":1750,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/errors/api",{"_index":59,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/shared/errors/auth.errors.ts",{"_index":1752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/http",{"_index":842,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interfaces/abstract",{"_index":6,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/base",{"_index":484,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{},"coverage.html":{}}}],["src/shared/interfaces/buffer",{"_index":571,"title":{},"body":{"interfaces/BufferedFile.html":{},"coverage.html":{}}}],["src/shared/interfaces/default",{"_index":364,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["src/shared/mail/mail.module.ts",{"_index":931,"title":{},"body":{"modules/MailModule.html":{}}}],["src/shared/mail/mail.service.ts",{"_index":933,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/shared/mail/mail.service.ts:10",{"_index":937,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:15",{"_index":938,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:27",{"_index":941,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:9",{"_index":943,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/models/base.entity.ts",{"_index":511,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts:12",{"_index":535,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:14",{"_index":530,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:16",{"_index":537,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:18",{"_index":534,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:20",{"_index":532,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:22",{"_index":531,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:24",{"_index":526,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:26",{"_index":536,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:27",{"_index":545,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:41",{"_index":547,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:44",{"_index":542,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:53",{"_index":543,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:62",{"_index":541,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:71",{"_index":538,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:9",{"_index":533,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/dto/base.dto.ts",{"_index":499,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/base.dto.ts:11",{"_index":506,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:14",{"_index":503,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:8",{"_index":505,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/find.dto.ts",{"_index":823,"title":{},"body":{"classes/FindDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/find.dto.ts:10",{"_index":833,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:13",{"_index":831,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:5",{"_index":834,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:7",{"_index":829,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/paged",{"_index":889,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/services/base.service.ts",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":1304,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/types/abstract.type.ts",{"_index":2020,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/shared/utils/get",{"_index":1756,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/random",{"_index":1760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/upload",{"_index":1762,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/validations/env.validation.ts",{"_index":1764,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/models/dtos/create",{"_index":761,"title":{},"body":{"classes/CreateStageDto.html":{},"coverage.html":{}}}],["src/stages/models/dtos/stage.dto.ts",{"_index":1109,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"coverage.html":{}}}],["src/stages/models/dtos/stage.dto.ts:15",{"_index":1323,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts:19",{"_index":1317,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts:24",{"_index":1321,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts:28",{"_index":1319,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts:32",{"_index":1326,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/stage.entity.ts",{"_index":1306,"title":{},"body":{"classes/Stage.html":{},"coverage.html":{}}}],["src/stages/models/stage.entity.ts:19",{"_index":1310,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts:28",{"_index":1307,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts:34",{"_index":1308,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts:40",{"_index":1309,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts:47",{"_index":1312,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/stages.controller.ts",{"_index":1332,"title":{},"body":{"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/stages.controller.ts:27",{"_index":1337,"title":{},"body":{"classes/StagesController.html":{}}}],["src/stages/stages.controller.ts:43",{"_index":1339,"title":{},"body":{"classes/StagesController.html":{}}}],["src/stages/stages.module.ts",{"_index":1355,"title":{},"body":{"modules/StagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/stages.service.ts",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["src/tasks/models/dtos/create",{"_index":771,"title":{},"body":{"classes/CreateSubmissionDto.html":{},"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/grade",{"_index":837,"title":{},"body":{"classes/GradeSubmissionDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/submission.dto.ts",{"_index":1126,"title":{},"body":{"classes/PagedListSubmissionDto.html":{},"classes/SubmissionDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/submission.dto.ts:10",{"_index":1378,"title":{},"body":{"classes/SubmissionDto.html":{}}}],["src/tasks/models/dtos/submission.dto.ts:14",{"_index":1379,"title":{},"body":{"classes/SubmissionDto.html":{}}}],["src/tasks/models/dtos/submission.dto.ts:17",{"_index":1381,"title":{},"body":{"classes/SubmissionDto.html":{}}}],["src/tasks/models/dtos/submission.dto.ts:22",{"_index":1376,"title":{},"body":{"classes/SubmissionDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts",{"_index":1133,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/task.dto.ts:19",{"_index":1407,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:23",{"_index":1405,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:26",{"_index":1408,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:29",{"_index":1406,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:33",{"_index":1399,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:40",{"_index":1403,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/submission.entity.ts",{"_index":1360,"title":{},"body":{"classes/Submission.html":{},"coverage.html":{}}}],["src/tasks/models/submission.entity.ts:13",{"_index":1367,"title":{},"body":{"classes/Submission.html":{}}}],["src/tasks/models/submission.entity.ts:18",{"_index":1369,"title":{},"body":{"classes/Submission.html":{}}}],["src/tasks/models/submission.entity.ts:20",{"_index":1365,"title":{},"body":{"classes/Submission.html":{}}}],["src/tasks/models/submission.entity.ts:28",{"_index":1371,"title":{},"body":{"classes/Submission.html":{}}}],["src/tasks/models/submission.entity.ts:34",{"_index":1364,"title":{},"body":{"classes/Submission.html":{}}}],["src/tasks/models/submission.entity.ts:36",{"_index":1370,"title":{},"body":{"classes/Submission.html":{}}}],["src/tasks/models/submission.entity.ts:38",{"_index":1368,"title":{},"body":{"classes/Submission.html":{}}}],["src/tasks/models/task.entity.ts",{"_index":1382,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/tasks/models/task.entity.ts:25",{"_index":1390,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:34",{"_index":1388,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:41",{"_index":1387,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:44",{"_index":1391,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:47",{"_index":1389,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:50",{"_index":1383,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":1410,"title":{},"body":{"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/tasks.controller.ts:108",{"_index":1427,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:43",{"_index":1414,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:62",{"_index":1418,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:90",{"_index":1422,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.module.ts",{"_index":1460,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/tasks.service.ts",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["src/tracks/models/dto/create",{"_index":785,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"coverage.html":{}}}],["src/tracks/models/dto/track.dto.ts",{"_index":1141,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/track.dto.ts:15",{"_index":1494,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/track.dto.ts:19",{"_index":1489,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/track.dto.ts:23",{"_index":1492,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/track.dto.ts:27",{"_index":1496,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/track",{"_index":1497,"title":{},"body":{"classes/TrackMentor.html":{},"coverage.html":{}}}],["src/tracks/models/track.entity.ts",{"_index":1483,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/tracks/models/track.entity.ts:17",{"_index":1488,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:26",{"_index":1485,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:29",{"_index":1486,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:34",{"_index":1487,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/tracks.controller.ts",{"_index":1503,"title":{},"body":{"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.controller.ts:129",{"_index":1533,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:152",{"_index":1536,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:173",{"_index":1529,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:194",{"_index":1517,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:221",{"_index":1525,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:58",{"_index":1511,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:76",{"_index":1513,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:95",{"_index":1522,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.module.ts",{"_index":1587,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.service.ts",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["src/users/models/dto/create",{"_index":799,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/register",{"_index":1274,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts",{"_index":1146,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts:14",{"_index":1664,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:18",{"_index":1667,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:23",{"_index":1663,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:28",{"_index":1673,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:33",{"_index":1659,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:37",{"_index":1656,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:41",{"_index":1657,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:46",{"_index":1666,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:52",{"_index":1661,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:58",{"_index":1670,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:65",{"_index":1677,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:70",{"_index":1671,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:75",{"_index":1679,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/user.entity.ts",{"_index":1596,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/models/user.entity.ts:101",{"_index":1607,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:105",{"_index":1624,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:108",{"_index":1620,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:113",{"_index":1618,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:120",{"_index":1623,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:123",{"_index":1614,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:125",{"_index":1616,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:127",{"_index":1610,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:129",{"_index":1625,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:136",{"_index":1629,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:139",{"_index":1627,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:144",{"_index":1626,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:148",{"_index":1633,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:37",{"_index":1611,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:44",{"_index":1615,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:53",{"_index":1609,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:60",{"_index":1621,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:64",{"_index":1622,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:71",{"_index":1605,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:80",{"_index":1603,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:88",{"_index":1604,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:95",{"_index":1613,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1690,"title":{},"body":{"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts:33",{"_index":1691,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":1692,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1702,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["src/userstage/models/dto/stageonly.dto.ts",{"_index":1115,"title":{},"body":{"classes/PagedListStageDto-1.html":{},"classes/StageOnlyDto.html":{},"coverage.html":{}}}],["src/userstage/models/dto/stageonly.dto.ts:12",{"_index":1330,"title":{},"body":{"classes/StageOnlyDto.html":{}}}],["src/userstage/models/dto/stageonly.dto.ts:15",{"_index":1327,"title":{},"body":{"classes/StageOnlyDto.html":{}}}],["src/userstage/models/dto/stageonly.dto.ts:20",{"_index":1328,"title":{},"body":{"classes/StageOnlyDto.html":{}}}],["src/userstage/models/dto/userstage.dto.ts",{"_index":1119,"title":{},"body":{"classes/PagedListStageDto-2.html":{},"classes/UserStageDto.html":{},"coverage.html":{}}}],["src/userstage/models/dto/userstage.dto.ts:15",{"_index":1688,"title":{},"body":{"classes/UserStageDto.html":{}}}],["src/userstage/models/dto/userstage.dto.ts:18",{"_index":1686,"title":{},"body":{"classes/UserStageDto.html":{}}}],["src/userstage/models/dto/userstage.dto.ts:22",{"_index":1687,"title":{},"body":{"classes/UserStageDto.html":{}}}],["src/userstage/models/userstage.entity.ts",{"_index":1680,"title":{},"body":{"classes/UserStage.html":{},"coverage.html":{}}}],["src/userstage/models/userstage.entity.ts:17",{"_index":1685,"title":{},"body":{"classes/UserStage.html":{}}}],["src/userstage/models/userstage.entity.ts:24",{"_index":1682,"title":{},"body":{"classes/UserStage.html":{}}}],["src/userstage/models/userstage.entity.ts:31",{"_index":1684,"title":{},"body":{"classes/UserStage.html":{}}}],["src/userstage/models/userstage.entity.ts:36",{"_index":1683,"title":{},"body":{"classes/UserStage.html":{}}}],["src/userstage/models/userstage.entity.ts:41",{"_index":1681,"title":{},"body":{"classes/UserStage.html":{}}}],["src/userstage/userstage.service.ts",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["stack",{"_index":66,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["stacktrace",{"_index":857,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stage",{"_index":1124,"title":{"classes/Stage.html":{}},"body":{"classes/PagedListStageDto-2.html":{},"classes/PagedListTaskDto.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"modules/TracksModule.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stage.dto",{"_index":766,"title":{},"body":{"classes/CreateStageDto.html":{},"classes/StagesController.html":{}}}],["stage.dto.ts",{"_index":762,"title":{},"body":{"classes/CreateStageDto.html":{},"coverage.html":{}}}],["stage.dto.ts:15",{"_index":764,"title":{},"body":{"classes/CreateStageDto.html":{}}}],["stage.modelname",{"_index":1358,"title":{},"body":{"modules/StagesModule.html":{},"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["stage.schema",{"_index":1359,"title":{},"body":{"modules/StagesModule.html":{},"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["stage.title",{"_index":1350,"title":{},"body":{"classes/StagesController.html":{}}}],["stagedto",{"_index":765,"title":{"classes/StageDto.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stagemodel",{"_index":1357,"title":{},"body":{"modules/StagesModule.html":{},"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stageonly.dto",{"_index":1120,"title":{},"body":{"classes/PagedListStageDto-2.html":{},"classes/UserStageDto.html":{}}}],["stageonlydto",{"_index":1116,"title":{"classes/StageOnlyDto.html":{}},"body":{"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/StageOnlyDto.html":{},"classes/UserStageDto.html":{},"coverage.html":{}}}],["stages",{"_index":1484,"title":{},"body":{"classes/Track.html":{},"classes/TracksController.html":{}}}],["stages.controller",{"_index":1356,"title":{},"body":{"modules/StagesModule.html":{}}}],["stages.length",{"_index":1564,"title":{},"body":{"classes/TracksController.html":{}}}],["stages.service",{"_index":1344,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{}}}],["stages/models/dtos/stage.dto",{"_index":1538,"title":{},"body":{"classes/TracksController.html":{}}}],["stages/models/stage.entity",{"_index":1393,"title":{},"body":{"classes/Task.html":{},"classes/Track.html":{},"modules/TracksModule.html":{},"classes/UserStage.html":{}}}],["stages/stages.module",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["stages/stages.service",{"_index":1429,"title":{},"body":{"classes/TasksController.html":{}}}],["stagescontroller",{"_index":1331,"title":{"classes/StagesController.html":{}},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{},"coverage.html":{}}}],["stageservice",{"_index":1338,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["stagesmodule",{"_index":131,"title":{"modules/StagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["stagesservice",{"_index":1334,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":1896,"title":{},"body":{"index.html":{}}}],["started",{"_index":1395,"title":{"index.html":{},"license.html":{}},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["stated",{"_index":1885,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1713,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":556,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["status",{"_index":67,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["statuscode",{"_index":68,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["strategies/jwt.strategy",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":916,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":43,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["string})@isoptional",{"_index":1676,"title":{},"body":{"classes/UserDto.html":{}}}],["structure",{"_index":1900,"title":{},"body":{"index.html":{}}}],["subission.dto",{"_index":1430,"title":{},"body":{"classes/TasksController.html":{}}}],["subission.dto.ts",{"_index":772,"title":{},"body":{"classes/CreateSubmissionDto.html":{},"coverage.html":{}}}],["subject",{"_index":1970,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1963,"title":{},"body":{"license.html":{}}}],["submission",{"_index":994,"title":{"classes/Submission.html":{}},"body":{"controllers/MentorController.html":{},"modules/MentorModule.html":{},"classes/Submission.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["submission.dto",{"_index":774,"title":{},"body":{"classes/CreateSubmissionDto.html":{},"classes/GradeSubmissionDto.html":{},"controllers/MentorController.html":{}}}],["submission.dto.ts",{"_index":838,"title":{},"body":{"classes/GradeSubmissionDto.html":{},"coverage.html":{}}}],["submission.modelname",{"_index":1065,"title":{},"body":{"modules/MentorModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["submission.schema",{"_index":1066,"title":{},"body":{"modules/MentorModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["submissiondto",{"_index":773,"title":{"classes/SubmissionDto.html":{}},"body":{"classes/CreateSubmissionDto.html":{},"classes/GradeSubmissionDto.html":{},"controllers/MentorController.html":{},"classes/PagedListSubmissionDto.html":{},"classes/SubmissionDto.html":{},"classes/TasksController.html":{},"coverage.html":{}}}],["submissiondto})@useguards(jwtauthguard",{"_index":1426,"title":{},"body":{"classes/TasksController.html":{}}}],["submissionid",{"_index":986,"title":{},"body":{"controllers/MentorController.html":{}}}],["submissionmodel",{"_index":999,"title":{},"body":{"controllers/MentorController.html":{},"modules/MentorModule.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["submissions",{"_index":1009,"title":{},"body":{"controllers/MentorController.html":{},"classes/TasksController.html":{}}}],["submissions.length",{"_index":1452,"title":{},"body":{"classes/TasksController.html":{}}}],["submittask",{"_index":1411,"title":{},"body":{"classes/TasksController.html":{}}}],["submittask(@param('taskid",{"_index":1454,"title":{},"body":{"classes/TasksController.html":{}}}],["submittask(taskid",{"_index":1424,"title":{},"body":{"classes/TasksController.html":{}}}],["substantial",{"_index":1975,"title":{},"body":{"license.html":{}}}],["suggested",{"_index":1906,"title":{},"body":{"index.html":{}}}],["super",{"_index":919,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super(categoryservice",{"_index":612,"title":{},"body":{"classes/CategoriesController.html":{}}}],["super(courseservice",{"_index":742,"title":{},"body":{"classes/CoursesController.html":{}}}],["super(stageservice",{"_index":1346,"title":{},"body":{"classes/StagesController.html":{}}}],["super(tasksservice",{"_index":1437,"title":{},"body":{"classes/TasksController.html":{}}}],["super(trackservice",{"_index":1546,"title":{},"body":{"classes/TracksController.html":{}}}],["super(usersservice",{"_index":1696,"title":{},"body":{"classes/UsersController.html":{}}}],["super.canactivate(context",{"_index":905,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.create(dto",{"_index":1559,"title":{},"body":{"classes/TracksController.html":{}}}],["super.create(input",{"_index":622,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["support",{"_index":1875,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":2004,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1742,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["symbol",{"_index":2077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":23,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IPagedListDto.html":{}}}],["table",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["talents",{"_index":1890,"title":{},"body":{"index.html":{}}}],["target",{"_index":2051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor.name",{"_index":2059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["task",{"_index":1362,"title":{"classes/Task.html":{}},"body":{"classes/Submission.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.dto",{"_index":782,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/TasksController.html":{}}}],["task.dto.ts",{"_index":779,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["task.entity",{"_index":1372,"title":{},"body":{"classes/Submission.html":{}}}],["task.modelname",{"_index":1465,"title":{},"body":{"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["task.schema",{"_index":1466,"title":{},"body":{"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["task.title",{"_index":1439,"title":{},"body":{"classes/TasksController.html":{}}}],["taskcount",{"_index":768,"title":{},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{}}}],["taskdto",{"_index":781,"title":{"classes/TaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskid",{"_index":1423,"title":{},"body":{"classes/TasksController.html":{}}}],["taskmodel",{"_index":1464,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskremaining",{"_index":1122,"title":{},"body":{"classes/PagedListStageDto-2.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{}}}],["tasks.controller",{"_index":1463,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.service",{"_index":1434,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/models/dtos/grade",{"_index":991,"title":{},"body":{"controllers/MentorController.html":{}}}],["tasks/models/dtos/submission.dto",{"_index":993,"title":{},"body":{"controllers/MentorController.html":{}}}],["tasks/models/submission.entity",{"_index":995,"title":{},"body":{"controllers/MentorController.html":{},"modules/MentorModule.html":{}}}],["tasks/tasks.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":1409,"title":{"classes/TasksController.html":{}},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":132,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":1413,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["taskstatus",{"_index":1394,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["taskurl",{"_index":777,"title":{},"body":{"classes/CreateSubmissionDto.html":{},"classes/PagedListSubmissionDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{}}}],["tcreatedto",{"_index":493,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["technical",{"_index":1869,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":1032,"title":{},"body":{"classes/MentorDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["temp",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["temporarytoken",{"_index":351,"title":{"classes/TemporaryToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/TemporaryToken.html":{},"coverage.html":{}}}],["temporarytoken.modelname",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temporarytoken.schema",{"_index":359,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temptokens",{"_index":1481,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["temptokensservice",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["tentitydto",{"_index":491,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["test",{"_index":1905,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":807,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/.../db",{"_index":2041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/helpers/db",{"_index":806,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":637,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["thanks",{"_index":1938,"title":{},"body":{"index.html":{}}}],["this.appservice.getwelcome",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetemptoken",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getauthtoken(req.user",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateemailtoken",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatepasswordtoken",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":473,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.categoryservice.findoneasync",{"_index":618,"title":{},"body":{"classes/CategoriesController.html":{}}}],["this.config",{"_index":952,"title":{},"body":{"injectables/MailService.html":{}}}],["this.courseservice.findoneasync",{"_index":743,"title":{},"body":{"classes/CoursesController.html":{}}}],["this.coursesservice.findbyidasync(input.course",{"_index":1444,"title":{},"body":{"classes/TasksController.html":{}}}],["this.createtransport",{"_index":951,"title":{},"body":{"injectables/MailService.html":{}}}],["this.error",{"_index":87,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":89,"title":{},"body":{"classes/ApiException.html":{}}}],["this.firstname",{"_index":1649,"title":{},"body":{"classes/User.html":{}}}],["this.lastname",{"_index":1650,"title":{},"body":{"classes/User.html":{}}}],["this.mailservice.sendmailasync",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.mentormenteemodel.create",{"_index":1088,"title":{},"body":{"injectables/MentorService.html":{}}}],["this.mentormenteemodel.find",{"_index":1091,"title":{},"body":{"injectables/MentorService.html":{}}}],["this.mentormenteemodel.findone",{"_index":1087,"title":{},"body":{"injectables/MentorService.html":{}}}],["this.mentorservice.assignmentor(req.user['userid",{"_index":1580,"title":{},"body":{"classes/TracksController.html":{}}}],["this.mentorservice.assignmentortotrack",{"_index":1577,"title":{},"body":{"classes/TracksController.html":{}}}],["this.mentorservice.getmentees",{"_index":1233,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.mentorservice.getmentors",{"_index":1229,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.message",{"_index":86,"title":{},"body":{"classes/ApiException.html":{}}}],["this.name",{"_index":566,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.path",{"_index":90,"title":{},"body":{"classes/ApiException.html":{}}}],["this.profileservice.uploadavatar(file",{"_index":1251,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.reflector.get",{"_index":1289,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.stack",{"_index":88,"title":{},"body":{"classes/ApiException.html":{}}}],["this.stageservice.findbyidasync(input.stage",{"_index":1440,"title":{},"body":{"classes/TasksController.html":{}}}],["this.stageservice.findoneasync",{"_index":1349,"title":{},"body":{"classes/StagesController.html":{}}}],["this.status",{"_index":94,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":93,"title":{},"body":{"classes/ApiException.html":{}}}],["this.submissionmodel",{"_index":1010,"title":{},"body":{"controllers/MentorController.html":{}}}],["this.submissionmodel.countdocuments",{"_index":1014,"title":{},"body":{"controllers/MentorController.html":{}}}],["this.submissionmodel.findbyid(submissionid",{"_index":1020,"title":{},"body":{"controllers/MentorController.html":{}}}],["this.submissionmodel.updateone",{"_index":1024,"title":{},"body":{"controllers/MentorController.html":{}}}],["this.tasksservice.findbyidasync(taskid",{"_index":1449,"title":{},"body":{"classes/TasksController.html":{}}}],["this.tasksservice.findoneasync",{"_index":1438,"title":{},"body":{"classes/TasksController.html":{}}}],["this.tasksservice.getusersubmissions(taskid",{"_index":1451,"title":{},"body":{"classes/TasksController.html":{}}}],["this.tasksservice.submittask(input",{"_index":1455,"title":{},"body":{"classes/TasksController.html":{}}}],["this.timestamp",{"_index":91,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tokenservice",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.createentity",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.harddeletebyid(id",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.insertasync(token",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackmentormodel.create",{"_index":1090,"title":{},"body":{"injectables/MentorService.html":{}}}],["this.trackmentormodel.findone",{"_index":1089,"title":{},"body":{"injectables/MentorService.html":{}}}],["this.trackservice.enroll(track.id",{"_index":1582,"title":{},"body":{"classes/TracksController.html":{}}}],["this.trackservice.findbyidasync(input.track",{"_index":1347,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["this.trackservice.findbyidasync(trackid",{"_index":1562,"title":{},"body":{"classes/TracksController.html":{}}}],["this.trackservice.findoneasync",{"_index":1547,"title":{},"body":{"classes/TracksController.html":{}}}],["this.trackservice.getmentors(trackid",{"_index":1572,"title":{},"body":{"classes/TracksController.html":{}}}],["this.trackservice.getstages(trackid",{"_index":1563,"title":{},"body":{"classes/TracksController.html":{}}}],["this.transporter",{"_index":953,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":958,"title":{},"body":{"injectables/MailService.html":{}}}],["this.userentity.updateone",{"_index":1273,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.userservice.findbyid(req.user['userid",{"_index":1221,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.findbyidasync(id",{"_index":1252,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.findoneasync",{"_index":1575,"title":{},"body":{"classes/TracksController.html":{}}}],["this.userservice.updateasync(id",{"_index":1235,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.usersservice.createentity(input",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findoneasync",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["this.usersservice.incrementloginattempt(user.id",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.insertasync(user",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.resetloginattempt(user.id",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateasync(doc.id",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userstageservice.getuserstages(trackid",{"_index":1568,"title":{},"body":{"classes/TracksController.html":{}}}],["this.validaterequest(request",{"_index":470,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validatetoken",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":965,"title":{},"body":{"injectables/MailService.html":{}}}],["throw",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["thumbnail",{"_index":795,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/TracksController.html":{}}}],["thumbnail.mimetype.split('/')[0",{"_index":1551,"title":{},"body":{"classes/TracksController.html":{}}}],["thumbnail.size",{"_index":1553,"title":{},"body":{"classes/TracksController.html":{}}}],["thumbnailurl",{"_index":792,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{}}}],["timestamp",{"_index":69,"title":{},"body":{"classes/ApiException.html":{}}}],["timestamps",{"_index":512,"title":{},"body":{"classes/BaseEntity.html":{}}}],["title",{"_index":619,"title":{},"body":{"classes/CategoriesController.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UserStage.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":1888,"title":{},"body":{"index.html":{}}}],["tojson",{"_index":558,"title":{},"body":{"classes/BaseEntity.html":{}}}],["token",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["token')@httpcode(httpstatus.ok",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{}}}],["token.dto.ts",{"_index":1708,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["token.dto.ts:8",{"_index":1709,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.entity",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.entity.ts",{"_index":1471,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["token.entity.ts:16",{"_index":1473,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:19",{"_index":1472,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:27",{"_index":1475,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:30",{"_index":1476,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.service",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.service.ts",{"_index":1727,"title":{},"body":{"coverage.html":{}}}],["token.ts",{"_index":1761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenparamname",{"_index":42,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["tokenservice",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.email",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokentype.password",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tort",{"_index":1998,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1652,"title":{},"body":{"classes/User.html":{}}}],["totalcount",{"_index":892,"title":{},"body":{"interfaces/IPagedListDto.html":{},"controllers/MentorController.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["towards",{"_index":1882,"title":{},"body":{"index.html":{}}}],["tpagedentityoutputdto",{"_index":497,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["tpagedinputdto",{"_index":881,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["tpagedoutputdto",{"_index":883,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["track",{"_index":763,"title":{"classes/Track.html":{}},"body":{"classes/CreateStageDto.html":{},"injectables/MentorService.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UserStage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["track.dto",{"_index":790,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/TracksController.html":{}}}],["track.dto.ts",{"_index":786,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"coverage.html":{}}}],["track.dto.ts:24",{"_index":804,"title":{},"body":{"classes/CreateWithThumbnailTrackDto.html":{}}}],["track.dto.ts:30",{"_index":1038,"title":{},"body":{"classes/MentorInput.html":{}}}],["track.entity",{"_index":1501,"title":{},"body":{"classes/TrackMentor.html":{}}}],["track.modelname",{"_index":1590,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["track.schema",{"_index":1591,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["trackdto",{"_index":789,"title":{"classes/TrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["trackid",{"_index":1080,"title":{},"body":{"injectables/MentorService.html":{},"classes/TracksController.html":{}}}],["trackmentor",{"_index":1052,"title":{"classes/TrackMentor.html":{}},"body":{"modules/MentorModule.html":{},"injectables/MentorService.html":{},"modules/TasksModule.html":{},"classes/TrackMentor.html":{},"coverage.html":{}}}],["trackmentor.modelname",{"_index":1063,"title":{},"body":{"modules/MentorModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["trackmentor.schema",{"_index":1064,"title":{},"body":{"modules/MentorModule.html":{},"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["trackmentormodel",{"_index":1062,"title":{},"body":{"modules/MentorModule.html":{},"injectables/MentorService.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["trackmodel",{"_index":1589,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tracks",{"_index":803,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["tracks.controller",{"_index":1588,"title":{},"body":{"modules/TracksModule.html":{}}}],["tracks.service",{"_index":1542,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["tracks/models/dto/track.dto",{"_index":1112,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/UserDto.html":{}}}],["tracks/models/track",{"_index":1053,"title":{},"body":{"modules/MentorModule.html":{},"injectables/MentorService.html":{},"modules/TasksModule.html":{}}}],["tracks/models/track.entity",{"_index":1314,"title":{},"body":{"classes/Stage.html":{},"classes/Task.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["tracks/tracks.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{}}}],["tracks/tracks.service",{"_index":1341,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["trackscontroller",{"_index":1502,"title":{"classes/TracksController.html":{}},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["trackservice",{"_index":1335,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["tracksmodule",{"_index":133,"title":{"modules/TracksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["tracksservice",{"_index":1336,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["transform",{"_index":562,"title":{},"body":{"classes/BaseEntity.html":{}}}],["transformer",{"_index":508,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"controllers/MentorController.html":{},"classes/MentorInput.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{},"dependencies.html":{}}}],["transport",{"_index":949,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["transporter",{"_index":934,"title":{},"body":{"injectables/MailService.html":{}}}],["trim",{"_index":636,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["true",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorMentee.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"miscellaneous/variables.html":{}}}],["true})@apiproperty({isarray",{"_index":1675,"title":{},"body":{"classes/UserDto.html":{}}}],["true})@expose()@isoptional",{"_index":1491,"title":{},"body":{"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["true})@expose()@type(undefined",{"_index":1678,"title":{},"body":{"classes/UserDto.html":{}}}],["true})@type(undefined",{"_index":1325,"title":{},"body":{"classes/StageDto.html":{},"classes/UserStageDto.html":{}}}],["try",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["tsconfig",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["tupdatedto",{"_index":495,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/MentorController.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2012,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose/typegoose",{"_index":550,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"controllers/MentorController.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"injectables/ProfileService.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":551,"title":{},"body":{"classes/BaseEntity.html":{}}}],["typeof",{"_index":867,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["types/abstract.type",{"_index":894,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["ui",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('password",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["uncompleted",{"_index":1396,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["unconfirmed",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["unconfirmed_email",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"classes/MentorMentee.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UsersController.html":{}}}],["undefined})@apibearerauth()@apiresponse({status",{"_index":1512,"title":{},"body":{"classes/TracksController.html":{}}}],["undefined})@apiresponse({status",{"_index":590,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["undefined})@exclude",{"_index":1619,"title":{},"body":{"classes/User.html":{}}}],["undefined})@httpcode(httpstatus.ok",{"_index":1195,"title":{},"body":{"controllers/ProfileController.html":{}}}],["undefined})@useguards(jwtauthguard",{"_index":984,"title":{},"body":{"controllers/MentorController.html":{},"classes/TracksController.html":{}}}],["uniqid",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unique",{"_index":638,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["unknown",{"_index":1102,"title":{},"body":{"injectables/MentorService.html":{}}}],["unspecified",{"_index":1642,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["unsupportedmediatypeexception",{"_index":1199,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["unsupportedmediatypeexception(\"file",{"_index":1245,"title":{},"body":{"controllers/ProfileController.html":{}}}],["unsupportedmediatypeexception('file",{"_index":1552,"title":{},"body":{"classes/TracksController.html":{}}}],["update",{"_index":373,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":886,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["updatedat",{"_index":501,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/SubmissionDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"classes/UserStageDto.html":{}}}],["updatedby",{"_index":518,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"controllers/MentorController.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["updatedto",{"_index":494,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["updateprofile",{"_index":1171,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(@body",{"_index":1234,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(input",{"_index":1184,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofiledto",{"_index":1185,"title":{"classes/UpdateProfileDto.html":{}},"body":{"controllers/ProfileController.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updateresulttype",{"_index":2019,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["upload",{"_index":1191,"title":{},"body":{"controllers/ProfileController.html":{}}}],["upload.decorator.ts",{"_index":1748,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload.dto",{"_index":1212,"title":{},"body":{"controllers/ProfileController.html":{}}}],["upload.dto.ts",{"_index":478,"title":{},"body":{"classes/AvatarUploadDto.html":{},"coverage.html":{}}}],["upload.dto.ts:5",{"_index":482,"title":{},"body":{"classes/AvatarUploadDto.html":{}}}],["uploadavatar",{"_index":1260,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadavatar(file",{"_index":1264,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadedfile",{"_index":1200,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["uploadfile",{"_index":1172,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploadfile(@uploadedfile",{"_index":1240,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploadfile(file",{"_index":1188,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploadfiletocloud",{"_index":1266,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadfiletocloud(file",{"_index":1271,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadfiletocloud(thumbnail",{"_index":1555,"title":{},"body":{"classes/TracksController.html":{}}}],["uppercase",{"_index":639,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{}}}],["uri",{"_index":679,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["url(clientbaseurl",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.href",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(emailparamname",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(tokenparamname",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1959,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":633,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["usecreateindex",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":820,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["useguards(authenticationguard",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":613,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/MentorController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["useinterceptors",{"_index":1201,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":1237,"title":{},"body":{"controllers/ProfileController.html":{}}}],["useinterceptors(fileinterceptor('thumbnail",{"_index":1549,"title":{},"body":{"classes/TracksController.html":{}}}],["usenewurlparser",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":249,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/Submission.html":{},"classes/TemporaryToken.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1630,"title":{},"body":{"classes/User.html":{}}}],["user.dto",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UsersController.html":{}}}],["user.dto.ts",{"_index":800,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":1276,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:16",{"_index":1278,"title":{},"body":{"classes/RegisterUserResDto.html":{}}}],["user.email",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":1151,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["user.fullname",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.fullname).replace('%verificationurl",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.isactive",{"_index":474,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["user.isemailverified",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.loginattemptcount",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.modelname",{"_index":1705,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user.password",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.populate('tracks').execpopulate",{"_index":1223,"title":{},"body":{"controllers/ProfileController.html":{}}}],["user.role",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1706,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user.tracks.length",{"_index":1222,"title":{},"body":{"controllers/ProfileController.html":{}}}],["user_locked_out",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":801,"title":{"classes/UserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/MentorDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userentity",{"_index":1263,"title":{},"body":{"injectables/ProfileService.html":{}}}],["userid",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"controllers/MentorController.html":{},"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["usermodel",{"_index":1704,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrole",{"_index":368,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"controllers/MentorController.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":609,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentee",{"_index":1155,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["userrole.mentor",{"_index":610,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentor)@apiresponse({type",{"_index":1417,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["users",{"_index":1099,"title":{},"body":{"injectables/MentorService.html":{}}}],["users.controller",{"_index":1703,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1695,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/models/dto/create",{"_index":1594,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["users/models/dto/register",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["users/models/dto/user.dto",{"_index":1028,"title":{},"body":{"classes/MentorDto.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["users/models/user.entity",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"controllers/MentorController.html":{},"classes/MentorMentee.html":{},"injectables/MentorService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"classes/Submission.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/TrackMentor.html":{},"classes/TracksController.html":{},"classes/UserStage.html":{}}}],["users/users.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{}}}],["users/users.service",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/TracksController.html":{}}}],["userscontroller",{"_index":1689,"title":{"classes/UsersController.html":{}},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":1219,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["usersmodule",{"_index":134,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["userstage",{"_index":793,"title":{"classes/UserStage.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/MentorInput.html":{},"classes/PagedTrackOutputDto.html":{},"modules/TasksModule.html":{},"classes/TrackDto.html":{},"modules/TracksModule.html":{},"classes/UserStage.html":{},"coverage.html":{}}}],["userstage.modelname",{"_index":1468,"title":{},"body":{"modules/TasksModule.html":{},"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["userstage.schema",{"_index":1469,"title":{},"body":{"modules/TasksModule.html":{},"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["userstage/models/dto/userstage.dto",{"_index":1142,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{}}}],["userstage/models/userstage.entity",{"_index":1461,"title":{},"body":{"modules/TasksModule.html":{},"modules/TracksModule.html":{}}}],["userstage/userstage.service",{"_index":1543,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["userstagedto",{"_index":1121,"title":{"classes/UserStageDto.html":{}},"body":{"classes/PagedListStageDto-2.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UserStageDto.html":{},"coverage.html":{}}}],["userstagedto})@expose()@type(undefined",{"_index":1495,"title":{},"body":{"classes/TrackDto.html":{}}}],["userstagemodel",{"_index":1467,"title":{},"body":{"modules/TasksModule.html":{},"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userstages",{"_index":1567,"title":{},"body":{"classes/TracksController.html":{}}}],["userstages.length",{"_index":1569,"title":{},"body":{"classes/TracksController.html":{}}}],["userstageservice",{"_index":1510,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usr/local/bin/mongod",{"_index":814,"title":{},"body":{"modules/DbTest.html":{}}}],["utf8",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["valid",{"_index":1161,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["valid('development",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":909,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/ResetPassInput.html":{}}}],["validate(payload",{"_index":911,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateemailtoken",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken(input",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken(resetpassinput",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":459,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validaterequest(request",{"_index":466,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validatetoken",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(userid",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetokeninput",{"_index":225,"title":{"classes/ValidateTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["validatetokeninput:8",{"_index":1282,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validateuser",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":53,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"classes/MentorInput.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListStageDto-1.html":{},"classes/PagedListStageDto-2.html":{},"classes/PagedListSubmissionDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/SubmissionDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/UserStageDto.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["value",{"_index":524,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"classes/MentorMentee.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StageOnlyDto.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UserStage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1719,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2023,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification.dto",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["verification.dto.ts",{"_index":39,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["verification.dto.ts:10",{"_index":50,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:12",{"_index":49,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:8",{"_index":47,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verified",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(@body",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(input",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["versionkey",{"_index":561,"title":{},"body":{"classes/BaseEntity.html":{}}}],["virtuals",{"_index":560,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vm",{"_index":29,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["void",{"_index":540,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/MailService.html":{},"classes/MentorMentee.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/Submission.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackMentor.html":{},"classes/User.html":{},"classes/UserStage.html":{}}}],["wait",{"_index":1928,"title":{},"body":{"index.html":{}}}],["want",{"_index":1932,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1982,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1978,"title":{},"body":{"license.html":{}}}],["website",{"_index":1860,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":181,"title":{},"body":{"injectables/AppService.html":{}}}],["wherever",{"_index":1876,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1995,"title":{},"body":{"license.html":{}}}],["without",{"_index":1954,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1907,"title":{},"body":{"index.html":{}}}],["writable",{"_index":553,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["writable).isactive",{"_index":569,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isdeleted",{"_index":567,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isemailverified",{"_index":1653,"title":{},"body":{"classes/User.html":{}}}],["writable).password",{"_index":1644,"title":{},"body":{"classes/User.html":{}}}],["writers",{"_index":1870,"title":{},"body":{"index.html":{}}}],["x.mentee",{"_index":1107,"title":{},"body":{"injectables/MentorService.html":{}}}],["x.mentor",{"_index":1101,"title":{},"body":{"injectables/MentorService.html":{}}}],["yes",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["zoom",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/MentorModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControllerOptions.html":{"url":"interfaces/AbstractControllerOptions.html","title":"interface - AbstractControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithAuthOptions.html":{"url":"interfaces/AbstractControllerWithAuthOptions.html","title":"interface - AbstractControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithSwaggerOptions.html":{"url":"interfaces/AbstractControllerWithSwaggerOptions.html","title":"interface - AbstractControllerWithSwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithSwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        modelCreate\n                                \n                                \n                                        modelVm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        modelCreate\n                                    \n                                \n                                \n                                    \n                                        modelCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelVm\n                                    \n                                \n                                \n                                    \n                                        modelVm:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctVerifyDto.html":{"url":"classes/AcctVerifyDto.html","title":"class - AcctVerifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctVerifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/acct-verification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBaseUrl\n                            \n                            \n                                emailParamName\n                            \n                            \n                                tokenParamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty, IsUrl } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class AcctVerifyDto extends PickType(LoginReqDto, ['email']) {\n  @IsUrl()\n  clientBaseUrl: string;\n  @IsNotEmpty()\n  tokenParamName: string;\n  @IsNotEmpty()\n  emailParamName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/errors/api-exception.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: any, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ApiException {\n  @ApiProperty()\n  statusCode?: number;\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  status?: string;\n  @ApiProperty()\n  error?: string;\n  @ApiProperty()\n  errors?: any;\n  @ApiProperty()\n  timestamp?: string;\n  @ApiProperty()\n  path?: string;\n  @ApiProperty()\n  stack?: string;\n\n  constructor(\n    message: string,\n    error: string,\n    stack: string,\n    errors: any,\n    path: string,\n    statusCode: number\n  ) {\n    this.message = message;\n    this.error = error;\n    this.stack = stack;\n    this.errors = errors;\n    this.path = path;\n    this.timestamp = new Date().toISOString();\n    this.statusCode = statusCode;\n    this.status = HttpStatus[statusCode];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags(\"Health-Check\")\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  @Get()\n  getHello(): string {\n    return this.appService.getWelcome();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMentorModule\n\nMentorModule\n\nAppModule -->\n\nMentorModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            MentorModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            StagesModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { CoursesModule } from './courses/courses.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { SharedModule } from './shared';\nimport configuration from './shared/config/configuration';\nimport { MailModule } from './shared/mail/mail.module';\nimport { envValidation } from './shared/validations/env.validation';\nimport { StagesModule } from './stages/stages.module';\nimport { TracksModule } from './tracks/tracks.module';\nimport { UsersModule } from './users/users.module';\nimport { TasksModule } from './tasks/tasks.module';\nimport { MentorModule } from './mentor/mentor.module';\n\nexport const Config = ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n});\nconst Database = MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n});\n@Module({\n  imports: [\n    SharedModule,\n    AuthModule,\n    UsersModule,\n    Config,\n    Database,\n    MailModule,\n    ProfileModule,\n    TracksModule,\n    CoursesModule,\n    CategoriesModule,\n    StagesModule,\n    TasksModule,\n    MentorModule\n  ],\n\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWelcome\n                        \n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcome(): string {\n    return 'Welcome to CCN!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                sendEmailVerifyToken\n                            \n                            \n                                    Async\n                                sendForgotPwToken\n                            \n                            \n                                    Async\n                                verifyEmailToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(_: LoginReqDto, req?: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginResDto})@ApiUnauthorizedResponse({type: ApiException})@UseGuards(AuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                LoginReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(input: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiConflictResponse({type: ApiException})@ApiResponse({type: RegisterUserResDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(input: ResetPassInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPassInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailVerifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerifyToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email-confirmation-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendForgotPwToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendForgotPwToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-password-reset-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmailToken(input: ValidateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ValidateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Post,\n  Req,\n  UnauthorizedException,\n  UseGuards\n} from '@nestjs/common';\nimport {\n  ApiConflictResponse,\n  ApiOkResponse,\n  ApiResponse,\n  ApiTags,\n  ApiUnauthorizedResponse\n} from '@nestjs/swagger';\nimport { Request } from 'express';\nimport * as fs from \"fs\"\n\nimport { LoginReqDto } from '../auth/models/dto/auth.dto';\nimport configuration from '../shared/config/configuration';\nimport { ApiException } from '../shared/errors/api-exception';\nimport { MailService } from '../shared/mail/mail.service';\nimport {\n  RegisterUserDto,\n  RegisterUserResDto\n} from '../users/models/dto/register-user.dto';\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { AuthenticationGuard } from './guards/auth.guard';\nimport { AcctVerifyDto } from './models/dto/acct-verification.dto';\nimport { LoginResDto } from './models/dto/auth.dto';\nimport { ResetPassInput } from './models/dto/reset-pw.dto';\nimport { ValidateTokenInput } from './models/dto/validate-token.dto';\nimport { TokenType } from './models/temporary-token.entity';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly mailService: MailService\n  ) { }\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: LoginResDto })\n  @ApiUnauthorizedResponse({ type: ApiException })\n  @UseGuards(AuthenticationGuard)\n  async login(\n    @Body() _: LoginReqDto,\n    @Req() req?: Request\n  ): Promise {\n    const accessToken = await this.authService.getAuthToken(req.user as User);\n    return { accessToken };\n  }\n  @Post('register')\n  @ApiConflictResponse({ type: ApiException })\n  @ApiResponse({ type: RegisterUserResDto, status: HttpStatus.CREATED })\n  async register(@Body() input: RegisterUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    const saved = await this.usersService.insertAsync(user);\n\n    return { canLogin: saved.isEmailVerified };\n  }\n\n  @Post('send-email-confirmation-token')\n  @HttpCode(HttpStatus.OK)\n  async sendEmailVerifyToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User with email does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email has already been confirmed');\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.EMAIL,\n      expiresInMins: 60 * 24\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    let html = await fs.promises.readFile(\"./src/templates/welcome.html\", { encoding: 'utf8' });\n    html = html.replace('%fullName%', user.fullName).replace('%verificationUrl%', url.href);\n\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n  @Post('confirm-email')\n  @HttpCode(HttpStatus.OK)\n  async verifyEmailToken(@Body() input: ValidateTokenInput): Promise {\n    const { email, token } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email already verified');\n    await this.authService.validateEmailToken({\n      userId: user.id,\n      plainToken: token\n    });\n  }\n  @Post('send-password-reset-token')\n  @HttpCode(HttpStatus.OK)\n  async sendForgotPwToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) return;\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.PASSWORD,\n      expiresInMins: 10\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please reset your password here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n\n  @Post('reset-password')\n  @HttpCode(HttpStatus.OK)\n  async resetPassword(@Body() input: ResetPassInput): Promise {\n    const { email, token, newPassword } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new UnauthorizedException('Password reset failed');\n    await this.authService.validatePasswordToken({\n      userId: exist.id,\n      plainToken: token,\n      newPassword\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            TempTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\nimport { MailService } from '../shared/mail/mail.service';\nimport { UsersModule } from '../users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { TemporaryToken } from './models/temporary-token.entity';\nimport { SessionSerializer } from './session.serializer';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { TempTokensService } from './temp-token.service';\n\nconst Config = [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n];\n@Module({\n  imports: [UsersModule, ...Config],\n  providers: [\n    AuthService,\n    JwtStrategy,\n    SessionSerializer,\n    MailService,\n    TempTokensService\n  ],\n  controllers: [AuthController],\n  exports: [AuthService, ...Config]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthObj.html":{"url":"interfaces/AuthObj.html","title":"interface - AuthObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authRoles\n                                \n                                \n                                        enableAuth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authRoles\n                                    \n                                \n                                \n                                    \n                                        authRoles:         UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableAuth\n                                    \n                                \n                                \n                                    \n                                        enableAuth:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTempToken\n                            \n                            \n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Async\n                                validateEmailToken\n                            \n                            \n                                    Async\n                                validatePasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, tokenService: TempTokensService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TempTokensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateTempToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTempToken(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmailToken(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePasswordToken(resetPassInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPassInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(userId: string, type: TokenType, plainToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport configuration from '~shared/config/configuration';\nimport { authErrors } from '~shared/errors';\nimport { generateRandomToken } from '~shared/utils/random-token';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { JwtPayload } from './models/jwt-payload';\nimport { TokenType } from './models/temporary-token.entity';\nimport { TempTokensService } from './temp-token.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly tokenService: TempTokensService\n  ) { }\n  async validateUser(email: string, pw: string): Promise {\n    const user = await this.usersService.findOneAsync({\n      email: email?.toLowerCase()\n    });\n\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    if (user.loginAttemptCount >= 3) {\n      throw new HttpException(\n        { message: 'User is locked out', errorType: 'USER_LOCKED_OUT' },\n        HttpStatus.UNAUTHORIZED\n      );\n    }\n    if (!user.isEmailVerified) {\n      throw new HttpException(\n        { message: 'Unconfirmed Email', errorType: 'UNCONFIRMED_EMAIL' },\n        HttpStatus.UNAUTHORIZED\n      );\n    }\n    await this.usersService.incrementLoginAttempt(user.id);\n    const isValid = await bcrypt.compare(pw, user.password);\n    if (!isValid) {\n      throw authErrors.INVALID_LOGIN_ATTEMPT;\n    }\n    await this.usersService.resetLoginAttempt(user.id)\n    return user;\n  }\n\n  async getAuthToken(user: User): Promise {\n    const { jwtValidityHrs, jwtSecret } = configuration();\n    const expiresIn = 60 * 60 * jwtValidityHrs;\n    const payload: JwtPayload = {\n      email: user.email,\n      userId: user.id,\n      role: user.role\n    };\n    return jwt.sign(payload, jwtSecret, { expiresIn });\n  }\n\n\n  async generateTempToken({\n    user,\n    type,\n    expiresInMins\n  }: {\n    user: User;\n    type: TokenType;\n    expiresInMins: number;\n  }): Promise {\n    const plainToken = generateRandomToken(64);\n    const encryptedToken = await bcrypt.hash(plainToken, 10);\n    const token = this.tokenService.createEntity({\n      token: encryptedToken,\n      expireAt: new Date(new Date().getTime() + expiresInMins * 60000),\n      type,\n      user: user.id as any\n    });\n    await this.tokenService.insertAsync(token);\n    return plainToken;\n  }\n  async validateEmailToken(input: {\n    userId: string;\n    plainToken: string;\n  }): Promise {\n    const { userId, plainToken } = input;\n\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.EMAIL,\n      plainToken\n    );\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { isEmailVerified: true });\n    await this.tokenService.hardDeleteById(id);\n  }\n  async validatePasswordToken(resetPassInput: {\n    userId: string;\n    plainToken: string;\n    newPassword: string;\n  }): Promise {\n    const { userId, plainToken, newPassword } = resetPassInput;\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.PASSWORD,\n      plainToken\n    );\n    const passwordHash = await bcrypt.hash(newPassword, 10);\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { password: passwordHash });\n    await this.tokenService.hardDeleteById(id);\n  }\n  private async validateToken(\n    userId: string,\n    type: TokenType,\n    plainToken: string\n  ) {\n    const exist = await this.tokenService\n      .findOne({ user: userId, type })\n      .populate('user');\n\n    if (!exist) throw authErrors.EXPIRED_TOKEN;\n    try {\n      const isValid = await bcrypt.compare(plainToken, exist.token);\n      if (!isValid) throw authErrors.INVALID_TOKEN;\n    } catch (error) {\n      throw authErrors.INVALID_TOKEN;\n    }\n    return exist;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nimport configuration from '../../shared/config/configuration';\nimport { AuthService } from '../auth.service';\nimport { LoginReqDto } from '../models/dto/auth.dto';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    return await this.validateRequest(request);\n  }\n  async validateRequest(request: Request): Promise {\n    if (!configuration().isAuthEnabled) return true;\n    const { email, password }: LoginReqDto = request.body;\n    const user = await this.authService.validateUser(email, password);\n\n    if (!user || !user.isActive) throw new UnauthorizedException();\n    request.user = user;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AvatarUploadDto.html":{"url":"classes/AvatarUploadDto.html","title":"class - AvatarUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AvatarUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/avatar-upload.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'binary'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/avatar-upload.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class AvatarUploadDto {\n    @ApiProperty({ type: 'string', format: 'binary' })\n    file: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerOptions.html":{"url":"interfaces/BaseControllerOptions.html","title":"interface - BaseControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithAuthOptions.html":{"url":"interfaces/BaseControllerWithAuthOptions.html","title":"interface - BaseControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithSwaggerOpts.html":{"url":"interfaces/BaseControllerWithSwaggerOpts.html","title":"interface - BaseControllerWithSwaggerOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithSwaggerOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createDto\n                                \n                                \n                                        entityDto\n                                \n                                \n                                        pagedListDto\n                                \n                                \n                                        updateDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDto\n                                    \n                                \n                                \n                                    \n                                        createDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDto\n                                    \n                                \n                                \n                                    \n                                        entityDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagedListDto\n                                    \n                                \n                                \n                                    \n                                        pagedListDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDto\n                                    \n                                \n                                \n                                    \n                                        updateDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/base.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nexport class BaseDto {\n  @IsMongoId()\n  @Expose()\n  readonly id: string;\n  @ApiProperty()\n  @Expose()\n  readonly updatedAt: Date;\n  @ApiProperty()\n  @Expose()\n  readonly createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:71\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:62\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:53\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop, Ref } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { Schema } from 'mongoose';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { User } from '../../users/models/user.entity';\n\nexport class BaseEntity extends TimeStamps {\n  id: string;\n\n  @prop({ required: true, default: false })\n  readonly isDeleted!: boolean;\n  @prop({ default: null, ref: BaseEntity })\n  readonly createdBy?: Ref = null;\n  @prop({ default: null, ref: BaseEntity })\n  readonly updatedBy?: Ref = null;\n  @prop({ required: true, default: true })\n  readonly isActive: boolean = true;\n  @prop({ default: null, ref: BaseEntity })\n  readonly deletedBy?: Ref = null;\n  @prop({ default: null })\n  readonly deletedAt?: Date;\n  @prop({ required: true, default: new Date() })\n  readonly createdAt: Date = new Date();\n  @prop({ required: true, default: new Date() })\n  readonly updatedAt: Date = null;\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true,\n        versionKey: false,\n        transform: (_, ret) => {\n          ret.id = ret._id;\n          delete ret._id;\n        }\n      }\n    });\n  }\n  static get modelName(): string {\n    return this.name;\n  }\n  delete(): void {\n    (this as Writable).isDeleted = true;\n  }\n\n  /**\n   * Sets {isDeleted} to false\n   *\n   * @memberof BaseEntity\n   */\n  restore(): void {\n    (this as Writable).isDeleted = false;\n  }\n\n  /**\n   * Sets {isActive} to true\n   *\n   * @memberof BaseEntity\n   */\n  deactivate(): void {\n    (this as Writable).isActive = false;\n  }\n\n  /**\n   * Sets isActive to false\n   *\n   * @memberof BaseEntity\n   */\n  activate(): void {\n    (this as Writable).isActive = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BufferedFile.html":{"url":"interfaces/BufferedFile.html","title":"interface - BufferedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BufferedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/buffer-file.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        buffer\n                                \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        mimetype\n                                \n                                \n                                        originalname\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BufferedFile {\n    fieldname: string;\n    originalname: string;\n    encoding: string;\n    mimetype: string;\n    size: number;\n    buffer: Buffer | string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoriesController.html":{"url":"classes/CategoriesController.html","title":"class - CategoriesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.controller.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: CategoryDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\nimport { CategoryDto, PagedCategoryOutDto } from './models/dtos/category.dto';\nimport { CreateCategoryDto } from './models/dtos/create-category.dto';\n\nconst BaseCtrl = BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedListDto: PagedCategoryOutDto\n});\n\nexport class CategoriesController extends BaseCtrl {\n  constructor(protected readonly categoryService: CategoriesService) {\n    super(categoryService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: CategoryDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateCategoryDto): Promise {\n    const exist = await this.categoryService.findOneAsync({\n      title: input.name.toUpperCase()\n    });\n\n    if (exist)\n      throw new ConflictException(\n        `Category with the name \"${exist.name}\" already exists`\n      );\n\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\n\nCategoriesService \n\nCategoriesService \n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CategoriesController } from './categories.controller';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\n\nconst CategoryModel = MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n]);\n@Module({\n  imports: [CategoryModel],\n  providers: [\n    CategoriesService,\n    { provide: BaseService, useClass: CategoriesService }\n  ],\n  controllers: [CategoriesController],\n  exports: [CategoriesService, CategoryModel]\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/category.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false, uppercase: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/category.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ name: 1 }, { unique: true })\nexport class Category extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false,\n    uppercase: true\n  })\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cloudinary.html":{"url":"interfaces/Cloudinary.html","title":"interface - Cloudinary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cloudinary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        name\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appEmail\n                                \n                                \n                                        cloudinary\n                                \n                                \n                                        database\n                                \n                                \n                                        environment\n                                \n                                \n                                        isAuthEnabled\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        jwtValidityHrs\n                                \n                                \n                                        mailer\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUrl\n                                \n                                \n                                        rootUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appEmail\n                                    \n                                \n                                \n                                    \n                                        appEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cloudinary\n                                    \n                                \n                                \n                                    \n                                        cloudinary:         Cloudinary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Cloudinary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         Database\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Database\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthEnabled\n                                    \n                                \n                                \n                                    \n                                        isAuthEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtValidityHrs\n                                    \n                                \n                                \n                                    \n                                        jwtValidityHrs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                    \n                                \n                                \n                                    \n                                        mailer:         Mailer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Mailer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUrl\n                                    \n                                \n                                \n                                    \n                                        redisUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControllerAuth.html":{"url":"interfaces/ControllerAuth.html","title":"interface - ControllerAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ControllerAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        create\n                                \n                                \n                                        delete\n                                \n                                \n                                        find\n                                \n                                \n                                        findById\n                                \n                                \n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                    Readonly\n                                playlistUrl\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Course extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length1024,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    unique: false\n  })\n  readonly playlistUrl!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly enrollmentCount!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseDto.html":{"url":"classes/CourseDto.html","title":"class - CourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                playlistUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length1024)@IsNotEmpty()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty({readOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()@MaxLength(columnSize.length256)@IsNotEmpty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length256)@ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsNotEmpty, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length256)\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length1024)\n  @IsNotEmpty()\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @IsNotEmpty()\n  @Expose()\n  playlistUrl: string;\n\n  @Expose()\n  @ApiProperty({ readOnly: true })\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoursesController.html":{"url":"classes/CoursesController.html","title":"class - CoursesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CoursesService)\n                    \n                \n                        \n                            \n                                Defined in src/courses/courses.controller.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CoursesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCourseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: CourseDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCourseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\nimport { CourseDto, PagedCourseOutputDto } from './models/dtos/course.dto';\nimport { CreateCourseDto } from './models/dtos/create-course.dto';\n\nexport class CoursesController extends BaseCrudController({\n  entity: Course,\n  entityDto: CourseDto,\n  createDto: CreateCourseDto,\n  updateDto: CreateCourseDto,\n  pagedListDto: PagedCourseOutputDto,\n  auth: {\n    create: [UserRole.MENTOR, UserRole.ADMIN],\n    update: [UserRole.MENTOR, UserRole.ADMIN],\n    delete: [UserRole.MENTOR, UserRole.ADMIN]\n  }\n}) {\n  constructor(protected readonly courseService: CoursesService) {\n    super(courseService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: CourseDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateCourseDto): Promise {\n    const exist = await this.courseService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Course with the title \"${exist.title}\" already exists`\n      );\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nCoursesService \n\nCoursesService \n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CoursesController } from './courses.controller';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\n\nconst CourseModel = MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n]);\n@Module({\n  imports: [CourseModel],\n  providers: [\n    CoursesService,\n    { provide: BaseService, useClass: CoursesService }\n  ],\n  controllers: [CoursesController],\n  exports: [CoursesService, CourseModel]\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/create-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CategoryDto } from './category.dto';\n\nexport class CreateCategoryDto extends PickType(CategoryDto, [\n  'name',\n  'description'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDto.html":{"url":"classes/CreateCourseDto.html","title":"class - CreateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/create-course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CourseDto } from './course.dto';\n\nexport class CreateCourseDto extends PickType(CourseDto, [\n  'title',\n  'description',\n  'playlistUrl'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStageDto.html":{"url":"classes/CreateStageDto.html","title":"class - CreateStageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/create-stage.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                track\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/create-stage.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nimport { StageDto } from './stage.dto';\n\nexport class CreateStageDto extends PickType(StageDto, [\n  'title',\n  'description',\n  'taskCount',\n  'level'\n]) {\n  @IsMongoId()\n  @Expose()\n  track: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubmissionDto.html":{"url":"classes/CreateSubmissionDto.html","title":"class - CreateSubmissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubmissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/create-subission.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { SubmissionDto } from './submission.dto';\n\nexport class CreateSubmissionDto extends PickType(SubmissionDto, ['menteeComment', 'taskUrl']) { }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/create-task.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\n\nimport { TaskDto } from './task.dto';\n\n@Exclude()\nexport class CreateTaskDto extends OmitType(TaskDto, [\n  'createdAt',\n  'updatedAt',\n  'id'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrackDto.html":{"url":"classes/CreateTrackDto.html","title":"class - CreateTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\nimport { BufferedFile } from '~shared/interfaces/buffer-file.interface';\n\nimport { TrackDto } from './track.dto';\n\nexport class CreateTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl',\n  'userStage'\n]) {}\n\nexport class CreateWithThumbnailTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl',\n  'userStage'\n]) {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  thumbnail: BufferedFile;\n}\n\nexport class MentorInput {\n  @IsMongoId()\n  @Expose()\n  mentorId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto extends OmitType(UserDto, [\n  'id',\n  'updatedAt',\n  'createdAt',\n  'tracks'\n]) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWithThumbnailTrackDto.html":{"url":"classes/CreateWithThumbnailTrackDto.html","title":"class - CreateWithThumbnailTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWithThumbnailTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                thumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BufferedFile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'binary'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/create-track.dto.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\nimport { BufferedFile } from '~shared/interfaces/buffer-file.interface';\n\nimport { TrackDto } from './track.dto';\n\nexport class CreateTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl',\n  'userStage'\n]) {}\n\nexport class CreateWithThumbnailTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl',\n  'userStage'\n]) {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  thumbnail: BufferedFile;\n}\n\nexport class MentorInput {\n  @IsMongoId()\n  @Expose()\n  mentorId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Database.html":{"url":"interfaces/Database.html","title":"interface - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        name\n                                \n                                \n                                        port\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DbTest.html":{"url":"modules/DbTest.html","title":"module - DbTest","body":"\n                   \n\n\n\n\n    Modules\n    DbTest\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/helpers/db-test.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nprocess.env.MAILER_API_KEY = 'api_key_mailgun';\nprocess.env.MONGOMS_SYSTEM_BINARY = '/usr/local/bin/mongod';\nprocess.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\nconst dbServer = new MongoMemoryServer();\nexport const inMemoryDb = dbServer;\n\nconst dbFactory = MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n});\n\n@Module({\n  imports: [dbFactory],\n  exports: [dbFactory]\n})\nexport class DbTest {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultAuthObject.html":{"url":"interfaces/DefaultAuthObject.html","title":"interface - DefaultAuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultAuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        create\n                                \n                                \n                                            Optional\n                                        delete\n                                \n                                \n                                            Optional\n                                        find\n                                \n                                \n                                            Optional\n                                        findById\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindDto.html":{"url":"classes/FindDto.html","title":"class - FindDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/find.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                opts\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            opts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsJSON()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsJSON()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsJSON, IsOptional } from 'class-validator';\n\nexport class FindDto {\n  @IsOptional()\n  skip?: number = 0;\n  @IsOptional()\n  limit?: number = 100;\n  @IsOptional()\n  @IsJSON()\n  search?: string;\n  @IsJSON()\n  @IsOptional()\n  opts?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GradeSubmissionDto.html":{"url":"classes/GradeSubmissionDto.html","title":"class - GradeSubmissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GradeSubmissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/grade-submission.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { SubmissionDto } from './submission.dto';\n\nexport class GradeSubmissionDto extends PickType(SubmissionDto, ['gradePercentage', 'mentorComment']) { }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/http-exception.filter.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiException } from '../errors/api-exception';\nimport configuration from '~shared/config/configuration';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(error: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse() as Response;\n    const req = ctx.getRequest();\n    const statusCode = error.getStatus();\n    const stacktrace =\n      configuration().environment === 'production' ? null : error.stack;\n    const errorName = error.response.name || error.response.error || error.name;\n    const errors = error.response.errors || null;\n    const path = req ? req.url : null;\n\n    if (statusCode === HttpStatus.UNAUTHORIZED) {\n      if (typeof error.response !== 'string') {\n        error.response.message =\n          error.response.message ||\n          'You do not have permission to access this resource';\n      }\n    }\n\n    const exception = new ApiException(\n      error.response.message,\n      errorName,\n      stacktrace,\n      errors,\n      path,\n      statusCode\n    );\n    res.status(statusCode).json(exception);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseController.html":{"url":"interfaces/IBaseController.html","title":"interface - IBaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    create\n                                \n                                \n                                    delete\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findById\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(input: TCreateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(input: TPagedInputDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TPagedInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPagedOutputDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, input: TUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                            TUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IBaseController {\n  create(input: TCreateDto): TEntityDto | Promise;\n  findAll(input: TPagedInputDto): TPagedOutputDto | Promise;\n  findById(input: string): TEntityDto | Promise;\n  update(id: string, input: TUpdateDto): TEntityDto | Promise;\n  delete(id: string): void | Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagedListDto.html":{"url":"interfaces/IPagedListDto.html","title":"interface - IPagedListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagedListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-list.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        totalCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { ClassType } from '../../types/abstract.type';\n\nexport interface IPagedListDto {\n  totalCount: number;\n  items: T[];\n}\n\nexport function PagedListDto(\n  entityDto: T\n): Type> {\n  class Paged implements IPagedListDto {\n    totalCount: number;\n    @ApiProperty({ type: entityDto })\n    items: T[];\n  }\n\n  return Paged;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport configuration from '~shared/config/configuration';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(AUTH_GUARD_TYPE) {\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise | Observable {\n    // console.log(context.switchToHttp().getRequest().sessionID);\n    return configuration().isAuthEnabled ? super.canActivate(context) : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        role\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\nexport interface JwtPayload {\n  email: string;\n  role: UserRole;\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload | PromiseLike)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload | PromiseLike\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport configuration from '../../shared/config/configuration';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().jwtSecret\n    });\n  }\n\n  async validate(\n    payload: JwtPayload | PromiseLike\n  ): Promise {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReqDto.html":{"url":"classes/LoginReqDto.html","title":"class - LoginReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResDto.html":{"url":"classes/LoginResDto.html","title":"class - LoginResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTransport\n                            \n                            \n                                    Async\n                                sendMailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/mail/mail.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTransport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMailAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailAsync(mailOptions: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : configuration()\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Mail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as mg from 'nodemailer-mailgun-transport';\nimport Mail = require('nodemailer/lib/mailer');\nimport configuration from '~shared/config/configuration';\n\n@Injectable()\nexport class MailService {\n  private readonly config = configuration();\n  private transporter: Mail;\n  constructor() {\n    this.createTransport();\n  }\n\n  private createTransport() {\n    const { mailer } = this.config;\n    this.transporter = nodemailer.createTransport(\n      mg({\n        auth: {\n          api_key: mailer.key,\n          domain: mailer.domain\n        }\n      })\n    );\n  }\n\n  async sendMailAsync(mailOptions: Mail.Options): Promise {\n    const info = await this.transporter.sendMail(mailOptions);\n    Logger.debug(`Message sent: ${info.messageId}`);\n\n    // Preview only available when sending through an Ethereal account\n    // Logger.debug(`Preview URL: ${nodemailer.getTestMessageUrl(info)}`);\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mailer.html":{"url":"interfaces/Mailer.html","title":"interface - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MentorController.html":{"url":"controllers/MentorController.html","title":"controller - MentorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MentorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mentor/mentor.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mentors\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getSubmissions\n                            \n                            \n                                    Async\n                                gradeTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getSubmissions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSubmissions(query: FindDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('submissions')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined, type: PagedListSubmissionDto})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.MENTOR)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/mentor/mentor.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FindDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            gradeTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    gradeTask(submissionId: string, input: GradeSubmissionDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('grade/:submissionId')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.MENTOR)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/mentor/mentor.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    submissionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                GradeSubmissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Get,\n    HttpCode,\n    HttpStatus,\n    NotFoundException,\n    Param,\n    Post,\n    Query,\n    Req,\n    UseGuards,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\nimport { FindDto } from '~shared/models/dto';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { GradeSubmissionDto } from '../tasks/models/dtos/grade-submission.dto';\nimport { PagedListSubmissionDto, SubmissionDto } from '../tasks/models/dtos/submission.dto';\nimport { Submission } from '../tasks/models/submission.entity';\nimport { UserRole } from '../users/models/user.entity';\n\n@Controller('mentors')\n@ApiTags(\"Mentors\")\nexport class MentorController {\n    constructor(\n        @InjectModel(Submission.modelName)\n        private SubmissionModel: ReturnModelType) {\n    }\n    @Get('submissions')\n    @HttpCode(HttpStatus.OK)\n    @ApiResponse({ status: HttpStatus.OK, type: PagedListSubmissionDto })\n    @UseGuards(JwtAuthGuard, RolesGuard)\n    @Roles(UserRole.MENTOR)\n    @ApiBearerAuth()\n    @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n    async getSubmissions(@Query() query: FindDto, @Req() req: Request): Promise {\n        const { skip, limit, search, opts } = query;\n        const conditions = JSON.parse(search || '{}');\n        const options = JSON.parse(opts || '{}');\n        const mentorId = req.user['userId'];\n\n        const submissions = await this.SubmissionModel\n            .find({ ...conditions, mentor: mentorId }, options)\n            .limit(limit)\n            .skip(skip);\n\n        const totalCount = await this.SubmissionModel.countDocuments();\n        const items = plainToClass(SubmissionDto, submissions, {\n            enableImplicitConversion: true,\n            excludeExtraneousValues: true\n        }) as any;\n\n        return { totalCount, items };\n    }\n\n    @Post('grade/:submissionId')\n    @HttpCode(HttpStatus.OK)\n    @ApiResponse({ status: HttpStatus.OK })\n    @UseGuards(JwtAuthGuard, RolesGuard)\n    @Roles(UserRole.MENTOR)\n    @ApiBearerAuth()\n    @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n    async gradeTask(@Param(\"submissionId\") submissionId: string, @Body() input: GradeSubmissionDto, @Req() req: Request): Promise {\n        const submission = await this.SubmissionModel.findById(submissionId);\n        if (!submission)\n            throw new NotFoundException(`Submission with the id ${submissionId} not found`);\n        const userId = req.user[\"userId\"];\n        await this.SubmissionModel.updateOne({ _id: submissionId }, { ...input, updatedBy: userId })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MentorDto.html":{"url":"classes/MentorDto.html","title":"class - MentorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MentorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mentor/models/mentor.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { UserDto } from '../../users/models/dto/user.dto';\n\nexport class MentorDto extends PickType(UserDto, [\"firstName\", \"lastName\", \"technologies\", \"photoUrl\", \"description\", \"id\", 'city', 'country', 'description', 'phoneNumber', 'gender']) { }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MentorInput.html":{"url":"classes/MentorInput.html","title":"class - MentorInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MentorInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mentorId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mentorId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/create-track.dto.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\nimport { BufferedFile } from '~shared/interfaces/buffer-file.interface';\n\nimport { TrackDto } from './track.dto';\n\nexport class CreateTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl',\n  'userStage'\n]) {}\n\nexport class CreateWithThumbnailTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl',\n  'userStage'\n]) {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  thumbnail: BufferedFile;\n}\n\nexport class MentorInput {\n  @IsMongoId()\n  @Expose()\n  mentorId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MentorMentee.html":{"url":"classes/MentorMentee.html","title":"class - MentorMentee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MentorMentee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mentor/models/mentor-mentee.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                mentee\n                            \n                            \n                                    Readonly\n                                mentor\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mentee\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'User', required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/mentor/models/mentor-mentee.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mentor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'User', required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/mentor/models/mentor-mentee.entity.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { User } from '../../users/models/user.entity';\n\nexport class MentorMentee extends BaseEntity {\n    @prop({ ref: 'User', required: true })\n    readonly mentor!: Ref;\n    @prop({ ref: 'User', required: true })\n    readonly mentee!: Ref;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MentorModule.html":{"url":"modules/MentorModule.html","title":"module - MentorModule","body":"\n                   \n\n\n\n\n    Modules\n    MentorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MentorModule\n\n\n\ncluster_MentorModule_imports\n\n\n\ncluster_MentorModule_exports\n\n\n\ncluster_MentorModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nMentorModule\n\nMentorModule\n\nMentorModule -->\n\nUsersModule->MentorModule\n\n\n\n\n\nMentorService \n\nMentorService \n\nMentorService  -->\n\nMentorModule->MentorService \n\n\n\n\n\nMentorService\n\nMentorService\n\nMentorModule -->\n\nMentorService->MentorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mentor/mentor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MentorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MentorController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MentorService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { Submission } from '../tasks/models/submission.entity';\nimport { TrackMentor } from '../tracks/models/track-mentor.entity';\nimport { UsersModule } from '../users/users.module';\nimport { MentorController } from './mentor.controller';\nimport { MentorService } from './mentor.service';\nimport { MentorMentee } from './models/mentor-mentee.entity';\n\nconst MentorMenteeModel = MongooseModule.forFeature([\n  { name: MentorMentee.modelName, schema: MentorMentee.schema }\n]);\nconst TrackMentorModel = MongooseModule.forFeature([\n  { name: TrackMentor.modelName, schema: TrackMentor.schema }\n]);\nconst SubmissionModel = MongooseModule.forFeature([\n  { name: Submission.modelName, schema: Submission.schema }\n]);\n@Module({\n  imports: [MentorMenteeModel, TrackMentorModel, SubmissionModel, UsersModule],\n  controllers: [MentorController],\n  providers: [MentorService],\n  exports: [MentorService, TrackMentorModel]\n})\nexport class MentorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MentorService.html":{"url":"injectables/MentorService.html","title":"injectable - MentorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MentorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mentor/mentor.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                assignMentor\n                            \n                            \n                                    Async\n                                assignMentorToTrack\n                            \n                            \n                                    Async\n                                getMentees\n                            \n                            \n                                    Async\n                                getMentors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mentorMenteeModel: ReturnModelType<>, trackMentorModel: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/mentor/mentor.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mentorMenteeModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trackMentorModel\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            assignMentor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignMentor(menteeId: string, mentorId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mentor/mentor.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menteeId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mentorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            assignMentorToTrack\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignMentorToTrack(trackId: string, mentorId: string, currentUserId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/mentor/mentor.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trackId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mentorId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    currentUserId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMentees\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMentees(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/mentor/mentor.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMentors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMentors(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/mentor/mentor.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\n\nimport { TrackMentor } from '../tracks/models/track-mentor.entity';\nimport { User } from '../users/models/user.entity';\nimport { MentorMentee } from './models/mentor-mentee.entity';\n\n@Injectable()\nexport class MentorService {\n    constructor(\n        @InjectModel(MentorMentee.modelName) private mentorMenteeModel: ReturnModelType,\n        @InjectModel(TrackMentor.modelName) private trackMentorModel: ReturnModelType) {\n    }\n\n    async assignMentor(menteeId: string, mentorId: string,): Promise {\n        const mentor = await this.mentorMenteeModel.findOne({ mentee: menteeId, mentor: mentorId });\n        if (mentor) return;\n        await this.mentorMenteeModel.create({ mentor: mentorId, mentee: menteeId });\n    }\n    async assignMentorToTrack(trackId: string, mentorId: string, currentUserId: string): Promise {\n        const trackMentor = await this.trackMentorModel.findOne({ track: trackId, mentor: mentorId });\n        if (trackMentor) return;\n        await this.trackMentorModel.create({ track: trackId, mentor: mentorId, createdBy: currentUserId })\n    }\n    async getMentors(input: {\n        menteeId: string,\n        limit: number,\n        skip: number,\n        conditions?: any,\n        options?: any\n    }): Promise {\n        const mentors = await this.mentorMenteeModel.find(\n            { ...input.conditions, mentee: input.menteeId },\n            input.options\n        ).populate('mentor')\n            .limit(input.limit)\n            .skip(input.skip)\n\n        const totalCount = await this.mentorMenteeModel.find(\n            { mentee: input.menteeId }\n        ).countDocuments();\n        const users = mentors.map(x => x.mentor) as unknown as User[];\n        return { totalCount, mentors: users };\n    }\n    async getMentees(input: {\n        mentorId: string,\n        limit: number,\n        skip: number,\n        conditions?: any,\n        options?: any\n    }): Promise {\n        const mentees = await this.mentorMenteeModel.find(\n            { ...input.conditions, mentor: input.mentorId },\n            input.options\n        ).populate('mentee')\n            .limit(input.limit)\n            .skip(input.skip)\n\n        const totalCount = await this.mentorMenteeModel.find(\n            { mentor: input.mentorId }\n        ).countDocuments();\n        const users = mentees.map(x => x.mentee) as unknown as User[];\n        return { totalCount, mentees: users };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCategoryOutDto.html":{"url":"classes/PagedCategoryOutDto.html","title":"class - PagedCategoryOutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCategoryOutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCourseOutputDto.html":{"url":"classes/PagedCourseOutputDto.html","title":"class - PagedCourseOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCourseOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsNotEmpty, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length256)\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length1024)\n  @IsNotEmpty()\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @IsNotEmpty()\n  @Expose()\n  playlistUrl: string;\n\n  @Expose()\n  @ApiProperty({ readOnly: true })\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListStageDto.html":{"url":"classes/PagedListStageDto.html","title":"class - PagedListStageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/stage.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsInt, IsNotEmpty, IsOptional, MaxLength, Min } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\n\n@Exclude()\nexport class StageDto extends BaseDto {\n  @MaxLength(columnSize.length256)\n  @IsNotEmpty()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length1024)\n  @Expose()\n  @IsNotEmpty()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  @IsOptional()\n  taskCount?: number = 1;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  level: number;\n  @Expose()\n  @ApiProperty({ type: TrackDto, readOnly: true })\n  @Type(() => TrackDto)\n  readonly track: TrackDto;\n}\nexport class PagedListStageDto extends PagedListDto(StageDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListStageDto-1.html":{"url":"classes/PagedListStageDto-1.html","title":"class - PagedListStageDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/userstage/models/dto/stageonly.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { IsInt, IsNotEmpty, IsOptional, MaxLength, Min } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class StageOnlyDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsNotEmpty()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  @IsOptional()\n  taskCount?: number = 1;\n}\nexport class PagedListStageDto extends PagedListDto(StageOnlyDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListStageDto-2.html":{"url":"classes/PagedListStageDto-2.html","title":"class - PagedListStageDto-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/userstage/models/dto/userstage.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsNotEmpty, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { StageOnlyDto } from './stageonly.dto';\n\n@Exclude()\nexport class UserStageDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsNotEmpty()\n  @Expose()\n  taskRemaining: number;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  isCompleted: boolean;\n  @Expose()\n  @ApiProperty({ type: StageOnlyDto, readOnly: true })\n  @Type(() => StageOnlyDto)\n  readonly stage: StageOnlyDto;\n}\nexport class PagedListStageDto extends PagedListDto(UserStageDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListSubmissionDto.html":{"url":"classes/PagedListSubmissionDto.html","title":"class - PagedListSubmissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListSubmissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/submission.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { IsNumber, IsOptional, IsUrl, Max, MaxLength, Min } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nexport class SubmissionDto extends BaseDto {\n    @MaxLength(columnSize.length128)\n    @IsOptional()\n    @Expose()\n    menteeComment?: string;\n    @MaxLength(columnSize.length128)\n    @IsOptional()\n    @Expose()\n    mentorComment?: string;\n    @IsUrl()\n    @Expose()\n    taskUrl: string;\n    @IsNumber({ maxDecimalPlaces: 2 })\n    @Min(0)\n    @Max(100)\n    @Expose()\n    gradePercentage: number;\n}\n\nexport class PagedListSubmissionDto extends PagedListDto(SubmissionDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListTaskDto.html":{"url":"classes/PagedListTaskDto.html","title":"class - PagedListTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/task.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport {\n  IsDate,\n  IsMongoId,\n  IsNotEmpty,\n  IsOptional,\n  MaxLength,\n  MinDate\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TaskDto extends BaseDto {\n  @MaxLength(columnSize.length256)\n  @IsNotEmpty()\n  @Expose()\n  title: string;\n  // @MaxLength(columnSize.length1024)\n  @Expose()\n  @IsNotEmpty()\n  description: string;\n  @IsMongoId()\n  @Expose()\n  track: string;\n  @IsMongoId()\n  @Expose()\n  stage: string;\n  @IsMongoId()\n  @Expose()\n  @IsOptional()\n  course?: string;\n  @Expose()\n  @IsDate()\n  @MinDate(new Date(), { message: 'Date must be in future' })\n  @IsOptional()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  deadline?: Date;\n}\nexport class PagedListTaskDto extends PagedListDto(TaskDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedTrackOutputDto.html":{"url":"classes/PagedTrackOutputDto.html","title":"class - PagedTrackOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedTrackOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsNotEmpty, IsOptional, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { UserStageDto } from '../../../userstage/models/dto/userstage.dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length256)\n  @Expose()\n  @IsNotEmpty()\n  title: string;\n  @MaxLength(columnSize.length1024)\n  @Expose()\n  @IsNotEmpty()\n  description: string;\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly thumbnailUrl?: string;\n  @ApiProperty({ readOnly: true, isArray: true, type: UserStageDto })\n  @Expose()\n  @Type(() => UserStageDto)\n  readonly userStage: UserStageDto[];\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedUserOutputDto.html":{"url":"classes/PagedUserOutputDto.html","title":"class - PagedUserOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedUserOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsArray, IsEmail, IsEnum, IsOptional, IsPhoneNumber, Length, MaxLength, IsDate } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\nimport { UserRole, Gender } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  lastName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  email: string;\n\n  @Expose()\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  role?: UserRole = UserRole.MENTEE;\n\n  @Expose()\n  @IsOptional()\n  @MaxLength(columnSize.length128)\n  description?: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  city: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  country: string;\n\n  @Expose()\n  @IsEnum(Gender)\n  @ApiProperty({ enum: Gender })\n  gender: Gender;\n\n  @Expose()\n  @IsDate()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  dob: Date;\n\n  @Expose()\n  @IsPhoneNumber(\"ZZ\", { message: 'Invalid phone number. Valid phone number sample +2347063644568' })\n  @MaxLength(columnSize.length64)\n  @IsOptional()\n  phoneNumber?: string;\n\n  @Expose()\n  @IsArray()\n  @Length(1, columnSize.length32, { each: true })\n  @ApiProperty({ isArray: true, type: String })\n  @IsOptional()\n  technologies?: string[];\n\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly photoUrl?: string;\n\n  @ApiProperty({ readOnly: true, type: [TrackDto], isArray: true })\n  @Expose()\n  @Type(() => TrackDto)\n  readonly tracks: TrackDto[];\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getMentees\n                            \n                            \n                                    Async\n                                getMentors\n                            \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMentees\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMentees(query: FindDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('mentees')@UseGuards(JwtAuthGuard)@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.MENTOR)@ApiBearerAuth()@ApiResponse({type: PagedUserOutputDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FindDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMentors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMentors(query: FindDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('mentors')@UseGuards(JwtAuthGuard)@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.MENTEE)@ApiBearerAuth()@ApiResponse({type: PagedUserOutputDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                FindDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(input: UpdateProfileDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: BufferedFile, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload_profile_photo')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({description: 'Upload avatar photo', type: AvatarUploadDto})@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                BufferedFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Put,\n  Query,\n  Req,\n  UnsupportedMediaTypeException,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { BufferedFile } from '~shared/interfaces';\nimport { FindDto } from '~shared/models/dto';\n\nimport { RolesGuard } from '../auth/guards';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { MentorService } from '../mentor/mentor.service';\nimport { MentorDto } from '../mentor/models/mentor.dto';\nimport { PagedUserOutputDto, UserDto } from '../users/models/dto/user.dto';\nimport { UserRole } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AvatarUploadDto } from './dto/avatar-upload.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { ProfileService } from './profile.service';\n\n@ApiTags(\"Profile\")\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly userService: UsersService, private profileService: ProfileService, private mentorService: MentorService) { }\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  async getProfile(@Req() req: Request): Promise {\n    let user = await this.userService.findById(req.user['userId'])\n\n    if (user.tracks.length > 0)\n      user = await user.populate('tracks').execPopulate()\n    //get the stage for each of the tracks above\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n  @Get(\"mentors\")\n  @UseGuards(JwtAuthGuard)\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.MENTEE)\n  @ApiBearerAuth()\n  @ApiResponse({ type: PagedUserOutputDto, status: HttpStatus.OK })\n  async getMentors(@Query() query: FindDto, @Req() req: Request): Promise {\n    const { skip, limit, search, opts } = query;\n    const conditions = JSON.parse(search || '{}');\n    const options = JSON.parse(opts || '{}');\n    const { totalCount, mentors } = await this.mentorService.getMentors(\n      {\n        menteeId: req.user['userId'],\n        conditions, options, limit, skip\n      });\n    const items = plainToClass(MentorDto, mentors, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    }) as any;\n    return { totalCount, items }\n  }\n  @Get(\"mentees\")\n  @UseGuards(JwtAuthGuard)\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.MENTOR)\n  @ApiBearerAuth()\n  @ApiResponse({ type: PagedUserOutputDto, status: HttpStatus.OK })\n  async getMentees(@Query() query: FindDto, @Req() req: Request): Promise {\n    const { skip, limit, search, opts } = query;\n    const conditions = JSON.parse(search || '{}');\n    const options = JSON.parse(opts || '{}');\n    const { totalCount, mentees } = await this.mentorService.getMentees(\n      {\n        mentorId: req.user['userId'],\n        conditions, options, limit, skip\n      });\n    const items = plainToClass(MentorDto, mentees, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    }) as any;\n    return { totalCount, items }\n  }\n  @Put()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  async updateProfile(@Body() input: UpdateProfileDto, @Req() req: Request): Promise {\n    const id = req.user['userId'];\n    const user = await this.userService.updateAsync(id, input);\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n  @Post('upload_profile_photo')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    description: 'Upload avatar photo',\n    type: AvatarUploadDto,\n  })\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  @HttpCode(HttpStatus.OK)\n  async uploadFile(@UploadedFile() file: BufferedFile, @Req() req: Request): Promise {\n    if (!file)\n      throw new BadRequestException(\"File image cannot be empty\")\n\n    if (file.mimetype.split('/')[0] !== \"image\")\n      throw new UnsupportedMediaTypeException(\"File is not an image\");\n\n    if (file.size / 1024 > 200)\n      throw new BadRequestException(\"File cannot be larger than 200KB\")\n\n    const id = req.user['userId'];\n    await this.profileService.uploadAvatar(file, id);\n    const user = await this.userService.findByIdAsync(id)\n\n    return plainToClass(UserDto, user, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nMentorModule\n\nMentorModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nMentorModule->ProfileModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MentorModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { MentorModule } from '../mentor/mentor.module';\nimport { UsersModule } from '../users/users.module';\nimport { UsersService } from '../users/users.service';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\n\n@Module({\n  imports: [UsersModule, MentorModule],\n  providers: [UsersService, ProfileService],\n  controllers: [ProfileController],\n  exports: [ProfileService]\n})\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(file: BufferedFile, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                BufferedFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { BufferedFile } from '~shared/interfaces';\nimport { uploadFileToCloud } from '~shared/utils/upload-img.util';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class ProfileService {\n\n\n    constructor(@InjectModel(User.modelName)\n    protected readonly userEntity: ReturnModelType) { }\n\n    async uploadAvatar(file: BufferedFile, userId: string): Promise {\n        const photoUrl = await uploadFileToCloud(file, \"avatars\", userId);\n        await this.userEntity.updateOne({ _id: userId }, { photoUrl })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends PickType(UserDto, [\n  'firstName',\n  'lastName',\n  'email'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserResDto.html":{"url":"classes/RegisterUserResDto.html","title":"class - RegisterUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                canLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            canLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends PickType(UserDto, [\n  'firstName',\n  'lastName',\n  'email'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassInput.html":{"url":"classes/ResetPassInput.html","title":"class - ResetPassInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/reset-pw.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ValidateTokenInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/reset-pw.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nimport { ValidateTokenInput } from './validate-token.dto';\n\nexport class ResetPassInput extends ValidateTokenInput {\n  @IsNotEmpty()\n  newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport configuration from '~shared/config/configuration';\n\nimport { UserRole } from '../../users/models/user.entity';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      UserRole,\n      context.getHandler()\n    );\n    if (!roles || !configuration().isAuthEnabled) return true;\n\n    const request = context.switchToHttp().getRequest();\n    const { role } = request.user as JwtPayload;\n    return roles.includes(role);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n  deserializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\n@Global()\n@Module({\n  imports: [],\n  providers: [],\n  exports: []\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stage.html":{"url":"classes/Stage.html","title":"class - Stage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/stage.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                level\n                            \n                            \n                                    Readonly\n                                taskCount\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            taskCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Track, required: true, autopopulate: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref, plugin } from '@typegoose/typegoose';\nimport * as autopopulate from 'mongoose-autopopulate';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { Track } from '../../tracks/models/track.entity';\n\n@plugin(autopopulate as any)\n@index({ title: 1 }, { unique: true })\nexport class Stage extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length1024,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly level!: number;\n\n  @prop({\n    required: true,\n    default: 1\n  })\n  readonly taskCount!: number;\n\n  @prop({\n    ref: Track,\n    required: true,\n    autopopulate: true\n  })\n  readonly track!: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StageDto.html":{"url":"classes/StageDto.html","title":"class - StageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/stage.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                level\n                            \n                            \n                                    Optional\n                                taskCount\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length1024)@Expose()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            level\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@Min(0)@IsInt()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            taskCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@Min(0)@IsInt()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length256)@IsNotEmpty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TrackDto\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty({type: TrackDto, readOnly: true})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsInt, IsNotEmpty, IsOptional, MaxLength, Min } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\n\n@Exclude()\nexport class StageDto extends BaseDto {\n  @MaxLength(columnSize.length256)\n  @IsNotEmpty()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length1024)\n  @Expose()\n  @IsNotEmpty()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  @IsOptional()\n  taskCount?: number = 1;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  level: number;\n  @Expose()\n  @ApiProperty({ type: TrackDto, readOnly: true })\n  @Type(() => TrackDto)\n  readonly track: TrackDto;\n}\nexport class PagedListStageDto extends PagedListDto(StageDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StageOnlyDto.html":{"url":"classes/StageOnlyDto.html","title":"class - StageOnlyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StageOnlyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/userstage/models/dto/stageonly.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Optional\n                                taskCount\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/userstage/models/dto/stageonly.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            taskCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@Min(0)@IsInt()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/userstage/models/dto/stageonly.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsNotEmpty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/userstage/models/dto/stageonly.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { IsInt, IsNotEmpty, IsOptional, MaxLength, Min } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class StageOnlyDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsNotEmpty()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  @IsOptional()\n  taskCount?: number = 1;\n}\nexport class PagedListStageDto extends PagedListDto(StageOnlyDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StagesController.html":{"url":"classes/StagesController.html","title":"class - StagesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/stages.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stageService: StagesService, trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/stages/stages.controller.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stageService\n                                                  \n                                                        \n                                                                        StagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateStageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: StageDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/stages/stages.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateStageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Body, ConflictException, HttpStatus, Inject, NotFoundException, Post, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { TracksService } from '../tracks/tracks.service';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateStageDto } from './models/dtos/create-stage.dto';\nimport { PagedListStageDto, StageDto } from './models/dtos/stage.dto';\nimport { Stage } from './models/stage.entity';\nimport { StagesService } from './stages.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Stage,\n  entityDto: StageDto,\n  createDto: CreateStageDto,\n  updateDto: CreateStageDto,\n  pagedListDto: PagedListStageDto,\n  auth: {\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n});\n\nexport class StagesController extends BaseCtrl {\n  constructor(\n    protected stageService: StagesService,\n    @Inject(TracksService)\n    private trackService: TracksService\n  ) {\n    super(stageService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: StageDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateStageDto): Promise {\n    const track = await this.trackService.findByIdAsync(input.track);\n    if (!track) {\n      throw new NotFoundException(\n        `Track with id ${input.track} does not exist`\n      );\n    }\n\n    const stage = await this.stageService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (stage) {\n      throw new ConflictException(\n        `Stage with the title \"${stage.title}\" already exists`\n      );\n    }\n    return await super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StagesModule.html":{"url":"modules/StagesModule.html","title":"module - StagesModule","body":"\n                   \n\n\n\n\n    Modules\n    StagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_imports\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_providers\n\n\n\n\nTracksModule\n\nTracksModule\n\n\n\nStagesModule\n\nStagesModule\n\nStagesModule -->\n\nTracksModule->StagesModule\n\n\n\n\n\nStagesService \n\nStagesService \n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stages/stages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StagesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TracksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { TracksModule } from '../tracks/tracks.module';\nimport { Stage } from './models/stage.entity';\nimport { StagesController } from './stages.controller';\nimport { StagesService } from './stages.service';\n\nconst StageModel = MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n]);\nconst baseService = { provide: BaseService, useClass: StagesService };\n@Module({\n  imports: [StageModel, TracksModule],\n  providers: [StagesService, baseService],\n  controllers: [StagesController],\n  exports: [StageModel, StagesService, baseService]\n})\nexport class StagesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Submission.html":{"url":"classes/Submission.html","title":"class - Submission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Submission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/submission.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                gradePercentage\n                            \n                            \n                                    Readonly\n                                isGraded\n                            \n                            \n                                    Readonly\n                                menteeComment\n                            \n                            \n                                    Readonly\n                                mentor\n                            \n                            \n                                    Readonly\n                                mentorComment\n                            \n                            \n                                    Readonly\n                                task\n                            \n                            \n                                    Readonly\n                                taskUrl\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            gradePercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({min: 0, max: 100, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/submission.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isGraded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/submission.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            menteeComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/submission.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mentor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/submission.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mentorComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/submission.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            task\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Task, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/submission.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            taskUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/submission.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { User } from '../../users/models/user.entity';\nimport { Task } from './task.entity';\n\nexport class Submission extends BaseEntity {\n    @prop({\n        maxlength: columnSize.length128,\n        default: null\n    })\n    readonly menteeComment: string;\n    @prop({\n        maxlength: columnSize.length128,\n        default: null\n    })\n    readonly mentorComment: string;\n    @prop({ default: false })\n    readonly isGraded!: boolean;\n    @prop({\n        required: true,\n        maxlength: columnSize.length128,\n        trim: true,\n        text: true,\n        unique: false\n    })\n    readonly taskUrl: string;\n    @prop({\n        min: 0,\n        max: 100,\n        default: null\n    })\n    readonly gradePercentage: number;\n    @prop({ ref: Task, required: true })\n    readonly task: Ref;\n    @prop({ ref: User, required: true })\n    readonly mentor: Ref;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SubmissionDto.html":{"url":"classes/SubmissionDto.html","title":"class - SubmissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SubmissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/submission.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gradePercentage\n                            \n                            \n                                    Optional\n                                menteeComment\n                            \n                            \n                                    Optional\n                                mentorComment\n                            \n                            \n                                taskUrl\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gradePercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNumber({maxDecimalPlaces: 2})@Min(0)@Max(100)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/submission.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            menteeComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@IsOptional()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/submission.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            mentorComment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@IsOptional()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/submission.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/submission.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Expose } from 'class-transformer';\nimport { IsNumber, IsOptional, IsUrl, Max, MaxLength, Min } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nexport class SubmissionDto extends BaseDto {\n    @MaxLength(columnSize.length128)\n    @IsOptional()\n    @Expose()\n    menteeComment?: string;\n    @MaxLength(columnSize.length128)\n    @IsOptional()\n    @Expose()\n    mentorComment?: string;\n    @IsUrl()\n    @Expose()\n    taskUrl: string;\n    @IsNumber({ maxDecimalPlaces: 2 })\n    @Min(0)\n    @Max(100)\n    @Expose()\n    gradePercentage: number;\n}\n\nexport class PagedListSubmissionDto extends PagedListDto(SubmissionDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                course\n                            \n                            \n                                    Readonly\n                                deadline\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                stage\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Course, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date(new Date().setDate(new Date().getDate() + 7))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Stage, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Track, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { Course } from '../../courses/models/course.entity';\nimport { Stage } from '../../stages/models/stage.entity';\nimport { Track } from '../../tracks/models/track.entity';\n\nexport enum TaskStatus {\n  STARTED = 'STARTED',\n  UNCOMPLETED = 'UNCOMPLETED',\n  COMPLETED = 'COMPLETED'\n}\n\n@index({ title: 1 }, { unique: true })\nexport class Task extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    trim: true,\n    text: true,\n    // maxlength: columnSize.length1024,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    type: Date,\n    default: new Date(new Date().setDate(new Date().getDate() + 7))\n  })\n  readonly deadline = new Date(new Date().setDate(new Date().getDate() + 7));\n\n  @prop({ ref: Track, required: true })\n  readonly track!: Ref;\n\n  @prop({ ref: Stage, required: true })\n  readonly stage!: Ref;\n\n  @prop({ ref: Course, default: null })\n  readonly course: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskDto.html":{"url":"classes/TaskDto.html","title":"class - TaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/task.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                course\n                            \n                            \n                                    Optional\n                                deadline\n                            \n                            \n                                description\n                            \n                            \n                                stage\n                            \n                            \n                                title\n                            \n                            \n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            course\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsDate()@MinDate(new Date(), {message: 'Date must be in future'})@IsOptional()@ApiProperty({type: Date})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length256)@IsNotEmpty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport {\n  IsDate,\n  IsMongoId,\n  IsNotEmpty,\n  IsOptional,\n  MaxLength,\n  MinDate\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TaskDto extends BaseDto {\n  @MaxLength(columnSize.length256)\n  @IsNotEmpty()\n  @Expose()\n  title: string;\n  // @MaxLength(columnSize.length1024)\n  @Expose()\n  @IsNotEmpty()\n  description: string;\n  @IsMongoId()\n  @Expose()\n  track: string;\n  @IsMongoId()\n  @Expose()\n  stage: string;\n  @IsMongoId()\n  @Expose()\n  @IsOptional()\n  course?: string;\n  @Expose()\n  @IsDate()\n  @MinDate(new Date(), { message: 'Date must be in future' })\n  @IsOptional()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  deadline?: Date;\n}\nexport class PagedListTaskDto extends PagedListDto(TaskDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TasksController.html":{"url":"classes/TasksController.html","title":"class - TasksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getMentors\n                            \n                            \n                                    Async\n                                submitTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksService: TasksService, stageService: StagesService, trackService: TracksService, coursesService: CoursesService)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/tasks.controller.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stageService\n                                                  \n                                                        \n                                                                        StagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        coursesService\n                                                  \n                                                        \n                                                                        CoursesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiBearerAuth()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({type: TaskDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMentors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMentors(taskId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':taskId/submissions')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined, type: PagedListSubmissionDto})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.MENTEE)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submitTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitTask(taskId: string, input: CreateSubmissionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':taskId/submissions')@ApiResponse({type: SubmissionDto})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.MENTEE)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                CreateSubmissionDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  NotFoundException,\n  Param,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { CoursesService } from '../courses/courses.service';\nimport { StagesService } from '../stages/stages.service';\nimport { TracksService } from '../tracks/tracks.service';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateSubmissionDto } from './models/dtos/create-subission.dto';\nimport { CreateTaskDto } from './models/dtos/create-task.dto';\nimport { PagedListSubmissionDto, SubmissionDto } from './models/dtos/submission.dto';\nimport { PagedListTaskDto, TaskDto } from './models/dtos/task.dto';\nimport { Task } from './models/task.entity';\nimport { TasksService } from './tasks.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Task,\n  createDto: CreateTaskDto,\n  pagedListDto: PagedListTaskDto,\n  entityDto: TaskDto,\n  updateDto: CreateTaskDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n});\n\nexport class TasksController extends BaseCtrl {\n  constructor(\n    private tasksService: TasksService,\n    @Inject(StagesService)\n    private stageService: StagesService,\n    @Inject(TracksService)\n    private trackService: TracksService,\n    @Inject(CoursesService)\n    private coursesService: CoursesService,\n  ) {\n    super(tasksService);\n  }\n\n  @Post()\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ type: TaskDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTaskDto): Promise {\n    const task = await this.tasksService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (task) {\n      throw new ConflictException(\n        `Task with the title \"${task.title}\" already exists`\n      );\n    }\n    const stage = await this.stageService.findByIdAsync(input.stage);\n    if (!stage)\n      throw new NotFoundException(`Stage with ${input.stage} not found`);\n    const track = await this.trackService.findByIdAsync(input.track);\n    if (!track)\n      throw new NotFoundException(`Track with ${input.track} not found`);\n    const course = await this.coursesService.findByIdAsync(input.course);\n    if (!course)\n      throw new NotFoundException(`Course with ${input.course} not found`);\n    return await super.create(input);\n  }\n\n  @Get(':taskId/submissions')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK, type: PagedListSubmissionDto })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.MENTEE)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async getMentors(@Param(\"taskId\") taskId: string): Promise {\n    const task = await this.tasksService.findByIdAsync(taskId);\n    if (!task) throw new NotFoundException(`Task with Id ${taskId} not found`)\n    const submissions = await this.tasksService.getUserSubmissions(taskId);\n\n    const items = plainToClass(SubmissionDto, submissions, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    }) as any;\n    return { totalCount: submissions.length, items }\n  }\n\n  @Post(':taskId/submissions')\n  @ApiResponse({ type: SubmissionDto })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.MENTEE)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async submitTask(@Param('taskId') taskId: string, @Body() input: CreateSubmissionDto): Promise {\n    const task = await this.tasksService.findByIdAsync(taskId);\n    if (!task) throw new NotFoundException(`Track with ${taskId} not found`);\n\n    const submission = await this.tasksService.submitTask(input, task);\n    return plainToClass(SubmissionDto, submission, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    })\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nCoursesModule\n\nCoursesModule\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nCoursesModule->TasksModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\nTasksModule -->\n\nStagesModule->TasksModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nTasksModule -->\n\nTracksModule->TasksModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTasksModule -->\n\nUsersModule->TasksModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoursesModule\n                        \n                        \n                            StagesModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CoursesModule } from '../courses/courses.module';\nimport { StagesModule } from '../stages/stages.module';\nimport { TrackMentor } from '../tracks/models/track-mentor.entity';\nimport { TracksModule } from '../tracks/tracks.module';\nimport { UsersModule } from '../users/users.module';\nimport { UserStage } from '../userstage/models/userstage.entity';\nimport { Submission } from './models/submission.entity';\nimport { Task } from './models/task.entity';\nimport { TasksController } from './tasks.controller';\nimport { TasksService } from './tasks.service';\n\nconst TaskModel = MongooseModule.forFeature([\n  { name: Task.modelName, schema: Task.schema }\n]);\nconst TrackMentorModel = MongooseModule.forFeature([\n  { name: TrackMentor.modelName, schema: TrackMentor.schema }\n]);\nconst UserStageModel = MongooseModule.forFeature([\n  { name: UserStage.modelName, schema: UserStage.schema }\n]);\nconst SubmissionModel = MongooseModule.forFeature([\n  { name: Submission.modelName, schema: Submission.schema }\n]);\nconst baseService = { provide: BaseService, useClass: TasksService };\n@Module({\n  imports: [\n    TaskModel,\n    StagesModule,\n    CoursesModule,\n    TrackMentorModel,\n    SubmissionModel,\n    TracksModule,\n    UsersModule,\n    UserStageModel\n  ],\n  providers: [TasksService, baseService],\n  controllers: [TasksController],\n  exports: [TaskModel, TasksService, baseService]\n})\nexport class TasksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemporaryToken.html":{"url":"classes/TemporaryToken.html","title":"class - TemporaryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemporaryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/temporary-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions, prop, Ref } from '@typegoose/typegoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { BaseEntity } from '../../shared/models/base.entity';\n\nexport enum TokenType {\n  PASSWORD = 'PASSWORD_TOKEN',\n  EMAIL = 'EMAIL_TOKEN'\n}\n\n@index({ user: 1, type: 1 }, { unique: true })\n@modelOptions({ options: { customName: 'temptokens' } })\n@index({ expireAt: 1 }, { expireAfterSeconds: 0 })\nexport class TemporaryToken extends BaseEntity {\n  @prop({ required: true })\n  readonly token!: string;\n\n  @prop({ required: true, type: Date })\n  readonly expireAt!: Date;\n\n  @prop({\n    enum: TokenType,\n    type: String,\n    unique: false,\n    required: true\n  })\n  readonly type?: TokenType;\n\n  @prop({ ref: User, unique: false, required: true })\n  readonly user?: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/track.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                stages\n                            \n                            \n                                    Readonly\n                                thumbnailUrl\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Stage', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thumbnailUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { Stage } from '../../stages/models/stage.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Track extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({ ref: 'Stage', default: [] })\n  readonly stages: Ref[] = [];\n\n  @prop({\n    default: null\n  })\n  readonly thumbnailUrl: string = null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackDto.html":{"url":"classes/TrackDto.html","title":"class - TrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/track.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                    Optional\n                                thumbnailUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                userStage\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length1024)@Expose()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/track.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            thumbnailUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true})@Expose()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/track.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length256)@Expose()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/track.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            userStage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UserStageDto[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true, isArray: true, type: UserStageDto})@Expose()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/track.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsNotEmpty, IsOptional, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { UserStageDto } from '../../../userstage/models/dto/userstage.dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length256)\n  @Expose()\n  @IsNotEmpty()\n  title: string;\n  @MaxLength(columnSize.length1024)\n  @Expose()\n  @IsNotEmpty()\n  description: string;\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly thumbnailUrl?: string;\n  @ApiProperty({ readOnly: true, isArray: true, type: UserStageDto })\n  @Expose()\n  @Type(() => UserStageDto)\n  readonly userStage: UserStageDto[];\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackMentor.html":{"url":"classes/TrackMentor.html","title":"class - TrackMentor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackMentor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/track-mentor.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                mentor\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            mentor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'User', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track-mentor.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Track', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track-mentor.entity.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { prop, Ref } from '@typegoose/typegoose';\n\nimport { BaseEntity } from '../../shared/models/base.entity';\nimport { User } from '../../users/models/user.entity';\nimport { Track } from './track.entity';\n\nexport class TrackMentor extends BaseEntity {\n    @prop({ ref: 'User', default: null })\n    readonly mentor: Ref;\n    @prop({ ref: 'Track', default: null })\n    readonly track: Ref;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TracksController.html":{"url":"classes/TracksController.html","title":"class - TracksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TracksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createMentors\n                            \n                            \n                                    Async\n                                createTrack\n                            \n                            \n                                    Async\n                                enroll\n                            \n                            \n                                    Async\n                                getMentors\n                            \n                            \n                                    Async\n                                getStages\n                            \n                            \n                                    Async\n                                getUserStages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(trackService: TracksService, mentorService: MentorService, userService: UsersService, userStageService: UserStageService)\n                    \n                \n                        \n                            \n                                Defined in src/tracks/tracks.controller.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mentorService\n                                                  \n                                                        \n                                                                        MentorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userStageService\n                                                  \n                                                        \n                                                                        UserStageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTrackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({type: TrackDto, status: undefined})@ApiResponse({status: undefined})@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createMentors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createMentors(trackId: string, input: MentorInput, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':trackId/mentors')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trackId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                MentorInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTrack\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTrack(input: CreateWithThumbnailTrackDto, thumbnail: BufferedFile, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create_with_thumbnail')@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({type: TrackDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateWithThumbnailTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thumbnail\n                                    \n                                                BufferedFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            enroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enroll(trackId: string, input: MentorInput, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':trackId/enroll')@UseGuards(JwtAuthGuard)@HttpCode(HttpStatus.OK)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trackId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                MentorInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getMentors\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMentors(trackId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':trackId/mentors')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined, type: PagedUserOutputDto})@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trackId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getStages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStages(trackId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':trackId/stages')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined, type: PagedListStageDto})@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trackId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUserStages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserStages(trackId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':trackId/user_stages')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined, type: PagedListStageDto})@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trackId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  ConflictException,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  NotFoundException,\n  Param,\n  Post,\n  Req,\n  UnsupportedMediaTypeException,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiConsumes, ApiResponse } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\nimport { BaseCrudController } from '~shared/controllers/base.controller';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\nimport { BufferedFile } from '~shared/interfaces';\nimport { uploadFileToCloud } from '~shared/utils/upload-img.util';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { MentorService } from '../mentor/mentor.service';\nimport { MentorDto } from '../mentor/models/mentor.dto';\nimport { PagedListStageDto, StageDto } from '../stages/models/dtos/stage.dto';\nimport { PagedUserOutputDto } from '../users/models/dto/user.dto';\nimport { UserRole } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport {\n  CreateTrackDto,\n  CreateWithThumbnailTrackDto,\n  MentorInput\n} from './models/dto/create-track.dto';\nimport { PagedTrackOutputDto, TrackDto } from './models/dto/track.dto';\nimport { Track } from './models/track.entity';\nimport { TracksService } from './tracks.service';\nimport { UserStageDto } from '../userstage/models/dto/userstage.dto';\nimport { UserStageService } from '../userstage/userstage.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedListDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n});\nconst ONE_KB = 1024;\nexport class TracksController extends BaseCtrl {\n  constructor(\n    protected trackService: TracksService,\n    protected mentorService: MentorService,\n    @Inject(UsersService)\n    protected userService: UsersService,\n    protected userStageService: UserStageService\n  ) {\n    super(trackService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ type: TrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTrackDto): Promise {\n    const exist = await this.trackService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Track with the title \"${exist.title}\" already exists`\n      );\n    return await super.create(input);\n  }\n\n  @Post('create_with_thumbnail')\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ type: TrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @UseInterceptors(FileInterceptor('thumbnail'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBearerAuth()\n  async createTrack(\n    @Body() input: CreateWithThumbnailTrackDto,\n    @UploadedFile() thumbnail: BufferedFile,\n    @Req() req: Request\n  ): Promise {\n    if (!thumbnail)\n      throw new BadRequestException('Thumbnail image cannot be empty');\n    if (thumbnail.mimetype.split('/')[0] !== 'image')\n      throw new UnsupportedMediaTypeException('File is not an image');\n    if (thumbnail.size / ONE_KB > 200)\n      throw new BadRequestException('File cannot be larger than 200KB');\n\n    const exist = await this.trackService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Track with the title \"${exist.title}\" already exists`\n      );\n\n    const userId = req.user['userId'];\n    const thumbnailUrl = await uploadFileToCloud(thumbnail, 'avatars', userId);\n    const dto = input as any;\n    dto.thumbnailUrl = thumbnailUrl;\n    delete dto.thumbnail;\n    return await super.create(dto);\n  }\n\n  @Get(':trackId/stages')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK, type: PagedListStageDto })\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async getStages(\n    @Param('trackId') trackId: string\n  ): Promise {\n    const track = await this.trackService.findByIdAsync(trackId);\n\n    if (!track)\n      throw new NotFoundException(`Track with Id ${trackId} not found`);\n\n    const stages = await this.trackService.getStages(trackId);\n    const totalCount = stages.length;\n    const items = plainToClass(StageDto, stages, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    }) as any;\n    return { totalCount, items };\n  }\n\n  @Get(':trackId/user_stages')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK, type: PagedListStageDto })\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async getUserStages(\n    @Param('trackId') trackId: string\n  ): Promise {\n    const track = await this.trackService.findByIdAsync(trackId);\n    if (!track)\n      throw new NotFoundException(`Track with Id ${trackId} not found`);\n    const userStages = await this.userStageService.getUserStages(trackId);\n\n    const totalCount = userStages.length;\n    const items = plainToClass(UserStageDto, userStages, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    }) as any;\n    return { totalCount, items };\n  }\n  @Get(':trackId/mentors')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK, type: PagedUserOutputDto })\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async getMentors(\n    @Param('trackId') trackId: string\n  ): Promise {\n    const track = await this.trackService.findByIdAsync(trackId);\n    if (!track)\n      throw new NotFoundException(`Track with Id ${trackId} not found`);\n    const mentors = await this.trackService.getMentors(trackId);\n    const items = plainToClass(MentorDto, mentors, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    }) as any;\n    return { totalCount: mentors.length, items };\n  }\n\n  @Post(':trackId/mentors')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async createMentors(\n    @Param('trackId') trackId: string,\n    @Body() input: MentorInput,\n    @Req() req: Request\n  ): Promise {\n    const mentor = await this.userService.findOneAsync({\n      _id: input.mentorId,\n      role: UserRole.MENTOR\n    });\n    if (!mentor)\n      throw new NotFoundException(`Mentor with Id ${input.mentorId} not found`);\n    const track = await this.trackService.findByIdAsync(trackId);\n    if (!track)\n      throw new NotFoundException(`Track with Id ${trackId} not found`);\n\n    await this.mentorService.assignMentorToTrack(\n      trackId,\n      input.mentorId,\n      req.user['id']\n    );\n  }\n\n  @Post(':trackId/enroll')\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async enroll(\n    @Param('trackId') trackId: string,\n    @Body() input: MentorInput,\n    @Req() req: Request\n  ): Promise {\n    const track = await this.trackService.findByIdAsync(trackId);\n    if (!track) throw new NotFoundException(`Track with ${trackId} not found`);\n\n    const mentor = await this.userService.findOneAsync({\n      _id: input.mentorId,\n      role: UserRole.MENTOR\n    });\n    if (!mentor)\n      throw new NotFoundException(`Mentor with ${input.mentorId} not found`);\n\n    await this.mentorService.assignMentor(req.user['userId'], mentor.id);\n    await this.trackService.enroll(track.id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TracksModule.html":{"url":"modules/TracksModule.html","title":"module - TracksModule","body":"\n                   \n\n\n\n\n    Modules\n    TracksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_imports\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\n\nMentorModule\n\nMentorModule\n\n\n\nTracksModule\n\nTracksModule\n\nTracksModule -->\n\nMentorModule->TracksModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTracksModule -->\n\nUsersModule->TracksModule\n\n\n\n\n\nTracksService \n\nTracksService \n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\nUserStageService\n\nUserStageService\n\nTracksModule -->\n\nUserStageService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tracks/tracks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TracksService\n                        \n                        \n                            UserStageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MentorModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TracksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { MentorModule } from '../mentor/mentor.module';\nimport { Stage } from '../stages/models/stage.entity';\nimport { UsersModule } from '../users/users.module';\nimport { UserStage } from '../userstage/models/userstage.entity';\nimport { UserStageService } from '../userstage/userstage.service';\nimport { Track } from './models/track.entity';\nimport { TracksController } from './tracks.controller';\nimport { TracksService } from './tracks.service';\n\nconst TrackModel = MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n]);\nconst StageModel = MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n]);\nconst UserStageModel = MongooseModule.forFeature([\n  { name: UserStage.modelName, schema: UserStage.schema }\n]);\nconst baseService = { provide: BaseService, useClass: TracksService };\n@Module({\n  imports: [TrackModel, UsersModule, MentorModule, StageModel, UserStageModel],\n  providers: [TracksService, baseService, UserStageService],\n  controllers: [TracksController],\n  exports: [TrackModel, TracksService, baseService]\n})\nexport class TracksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { CreateUserDto } from '../../users/models/dto/create-user.dto';\n\nexport class UpdateProfileDto extends OmitType(CreateUserDto, ['email', 'role', 'photoUrl']) { }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                city\n                            \n                            \n                                    Readonly\n                                country\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                dob\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                failedSignInAttempts\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                gender\n                            \n                            \n                                    Readonly\n                                isEmailVerified\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lockOutEndDate\n                            \n                            \n                                    Readonly\n                                loginAttemptCount\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                photoUrl\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                technologies\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                setRandomPass\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, trim: true, text: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:80\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, trim: true, text: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:88\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, trim: true, text: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            dob\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, lowercase: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            failedSignInAttempts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:127\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                    \n                        \n                            Default value : Gender.UNSPECIFIED\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: Gender, type: String, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lockOutEndDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:125\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            loginAttemptCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()@prop({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, trim: true, text: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            photoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: UserRole, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            technologies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({type: String, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:105\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tracks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Track', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:129\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRandomPass\n                        \n                        \n                    \n                \n            \n            \n                \nsetRandomPass()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:136\n                                \n                            \n                    \n                        \n                                Get User's full name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:148\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport { getModelForClass, index, pre, prop, Ref, ReturnModelType } from '@typegoose/typegoose';\nimport { hash } from 'bcrypt';\nimport { Exclude } from 'class-transformer';\nimport * as crypto from 'crypto';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { columnSize } from '../../shared/constants';\nimport { BaseEntity } from '../../shared/models/base.entity';\nimport { Track } from '../../tracks/models/track.entity';\n\nexport enum UserRole {\n  MENTEE = 'MENTEE',\n  MENTOR = 'MENTOR',\n  ADMIN = 'ADMIN'\n}\nexport enum Gender {\n  MALE = 'MALE',\n  FEMALE = 'FEMALE',\n  UNSPECIFIED = 'UNSPECIFIED'\n}\n@pre('save', async function () {\n  try {\n    (this as Writable).password = await hash(this.password, 10);\n  } catch (e) {\n    throw new InternalServerErrorException(e);\n  }\n})\n@index({ email: 1 }, { unique: true })\nexport class User extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n  })\n  readonly firstName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n  })\n  readonly lastName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: false\n  })\n  readonly email!: string;\n  @prop({\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    default: null\n  })\n  readonly phoneNumber!: string;\n  @prop({\n    default: null\n  })\n  readonly photoUrl: string = null;\n  @prop({\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    default: null\n  })\n  readonly description!: string;\n\n\n  @prop({\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    default: null\n  })\n  readonly city: string = null;\n\n  @prop({\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    default: null\n  })\n  readonly country: string = null;\n\n  @prop({\n    enum: Gender,\n    type: String,\n    default: Gender.UNSPECIFIED\n  })\n  readonly gender: Gender = Gender.UNSPECIFIED;\n\n  @prop({\n    type: Date,\n    default: null\n  })\n  readonly dob: Date = null;\n\n\n  @prop({ type: String, default: null })\n  readonly technologies: string[] = [];\n  @prop({ required: true, maxlength: columnSize.length64 })\n  @Exclude()\n  readonly password!: string;\n  @Exclude()\n  @prop({\n    default: 0\n  })\n  readonly loginAttemptCount!: number;\n  @prop({\n    enum: UserRole,\n    type: String,\n    required: true,\n    default: UserRole.MENTEE\n  })\n  readonly role = UserRole.MENTEE;\n\n  @prop({ required: true, default: false })\n  readonly isEmailVerified: boolean;\n  @prop({ default: undefined })\n  readonly lockOutEndDate?: Date;\n  @prop({ required: true, default: 0 })\n  readonly failedSignInAttempts!: number;\n  @prop({ ref: 'Track', default: [] })\n  readonly tracks: Ref[] = [];\n  /**\n   * Get User's full name\n   *\n   * @readonly\n   * @memberof User\n   */\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  setRandomPass(): void {\n    (this as Writable).password = crypto\n      .randomBytes(columnSize.length32)\n      .toString();\n  }\n  confirmEmail(): void {\n    (this as Writable).isEmailVerified = true;\n  }\n\n  static get model(): ReturnModelType {\n    return getModelForClass(this);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                country\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                dob\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                    Optional\n                                photoUrl\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                technologies\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsOptional()@MaxLength(columnSize.length128)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dob\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsDate()@ApiProperty({type: Date})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsEnum(Gender)@ApiProperty({enum: Gender})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsPhoneNumber('ZZ', {message: 'Invalid phone number. Valid phone number sample +2347063644568'})@MaxLength(columnSize.length64)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            photoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true})@Expose()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsEnum(UserRole)@ApiProperty({enum: UserRole})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            technologies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsArray()@Length(1, columnSize.length32, {each: true})@ApiProperty({isArray: true, type: String})@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tracks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TrackDto[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true, type: undefined, isArray: true})@Expose()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsArray, IsEmail, IsEnum, IsOptional, IsPhoneNumber, Length, MaxLength, IsDate } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\nimport { UserRole, Gender } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  lastName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  email: string;\n\n  @Expose()\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  role?: UserRole = UserRole.MENTEE;\n\n  @Expose()\n  @IsOptional()\n  @MaxLength(columnSize.length128)\n  description?: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  city: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  country: string;\n\n  @Expose()\n  @IsEnum(Gender)\n  @ApiProperty({ enum: Gender })\n  gender: Gender;\n\n  @Expose()\n  @IsDate()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  dob: Date;\n\n  @Expose()\n  @IsPhoneNumber(\"ZZ\", { message: 'Invalid phone number. Valid phone number sample +2347063644568' })\n  @MaxLength(columnSize.length64)\n  @IsOptional()\n  phoneNumber?: string;\n\n  @Expose()\n  @IsArray()\n  @Length(1, columnSize.length32, { each: true })\n  @ApiProperty({ isArray: true, type: String })\n  @IsOptional()\n  technologies?: string[];\n\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly photoUrl?: string;\n\n  @ApiProperty({ readOnly: true, type: [TrackDto], isArray: true })\n  @Expose()\n  @Type(() => TrackDto)\n  readonly tracks: TrackDto[];\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserStage.html":{"url":"classes/UserStage.html","title":"class - UserStage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserStage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/userstage/models/userstage.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                isCompleted\n                            \n                            \n                                    Readonly\n                                stage\n                            \n                            \n                                    Readonly\n                                taskRemaining\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isCompleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/userstage/models/userstage.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Stage', required: true, autopopulate: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/userstage/models/userstage.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            taskRemaining\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: 1})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/userstage/models/userstage.entity.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Track', required: true, autopopulate: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/userstage/models/userstage.entity.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'User', required: true, autopopulate: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/userstage/models/userstage.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref, plugin } from '@typegoose/typegoose';\nimport * as autopopulate from 'mongoose-autopopulate';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { Track } from '../../tracks/models/track.entity';\nimport { User } from '../../users/models/user.entity';\nimport { Stage } from '../../stages/models/stage.entity';\n\n@plugin(autopopulate as any)\n@index({ title: 1 }, { unique: true })\nexport class UserStage extends BaseEntity {\n  @prop({\n    ref: 'User',\n    required: true,\n    autopopulate: true\n  })\n  readonly user!: Ref;\n\n  @prop({\n    ref: 'Stage',\n    required: true,\n    autopopulate: true\n  })\n  readonly stage!: Ref;\n\n  @prop({\n    ref: 'Track',\n    required: true,\n    autopopulate: true\n  })\n  readonly track!: Ref;\n\n  @prop({\n    default: 1\n  })\n  readonly taskRemaining!: number;\n\n  @prop({\n    default: false\n  })\n  readonly isCompleted!: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserStageDto.html":{"url":"classes/UserStageDto.html","title":"class - UserStageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/userstage/models/dto/userstage.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isCompleted\n                            \n                            \n                                    Readonly\n                                stage\n                            \n                            \n                                taskRemaining\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCompleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/userstage/models/dto/userstage.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StageOnlyDto\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty({type: StageOnlyDto, readOnly: true})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/userstage/models/dto/userstage.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            taskRemaining\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsNotEmpty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/userstage/models/dto/userstage.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsNotEmpty, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { StageOnlyDto } from './stageonly.dto';\n\n@Exclude()\nexport class UserStageDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsNotEmpty()\n  @Expose()\n  taskRemaining: number;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  isCompleted: boolean;\n  @Expose()\n  @ApiProperty({ type: StageOnlyDto, readOnly: true })\n  @Type(() => StageOnlyDto)\n  readonly stage: StageOnlyDto;\n}\nexport class PagedListStageDto extends PagedListDto(UserStageDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersController.html":{"url":"classes/UsersController.html","title":"class - UsersController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.controller.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: UserDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { BaseCrudController } from '../shared/controllers/base.controller';\nimport { CreateUserDto } from './models/dto/create-user.dto';\nimport { PagedUserOutputDto, UserDto } from './models/dto/user.dto';\nimport { User, UserRole } from './models/user.entity';\nimport { UsersService } from './users.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedListDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n});\n\nexport class UsersController extends BaseCtrl {\n  constructor(protected readonly usersService: UsersService) {\n    super(usersService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: UserDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({\n      title: input.email.toLowerCase()\n    });\n    if (exist) {\n      throw new ConflictException(\n        `User with the email \"${exist.email}\" already exists`\n      );\n    }\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { User } from './models/user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\nexport const UserModel = MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n]);\n@Module({\n  imports: [UserModel],\n  providers: [UsersService, { provide: BaseService, useClass: UsersService }],\n  controllers: [UsersController],\n  exports: [UsersService, UserModel]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateTokenInput.html":{"url":"classes/ValidateTokenInput.html","title":"class - ValidateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/validate-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class ValidateTokenInput extends PickType(LoginReqDto, ['email']) {\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                merge-coverage.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Database\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/acct-verification.dto.ts\n            \n            class\n            AcctVerifyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginReqDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/reset-pw.dto.ts\n            \n            class\n            ResetPassInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/validate-token.dto.ts\n            \n            class\n            ValidateTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/temporary-token.entity.ts\n            \n            class\n            TemporaryToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/temp-token.service.ts\n            \n            injectable\n            TempTokensService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            class\n            CategoriesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.module.ts\n            \n            variable\n            CategoryModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            class\n            CategoriesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/models/category.entity.ts\n            \n            class\n            Category\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            PagedCategoryOutDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.controller.ts\n            \n            class\n            CoursesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/courses.module.ts\n            \n            variable\n            CourseModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.service.ts\n            \n            injectable\n            CoursesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/courses/models/course.entity.ts\n            \n            class\n            Course\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            CourseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            PagedCourseOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/create-course.dto.ts\n            \n            class\n            CreateCourseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mentor/mentor.controller.ts\n            \n            controller\n            MentorController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/mentor/mentor.module.ts\n            \n            variable\n            MentorMenteeModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mentor/mentor.module.ts\n            \n            variable\n            SubmissionModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mentor/mentor.module.ts\n            \n            variable\n            TrackMentorModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mentor/mentor.service.ts\n            \n            injectable\n            MentorService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/mentor/models/mentor-mentee.entity.ts\n            \n            class\n            MentorMentee\n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                src/mentor/models/mentor.dto.ts\n            \n            class\n            MentorDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/dto/avatar-upload.dto.ts\n            \n            class\n            AvatarUploadDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Cloudinary\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Configuration\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Database\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Mailer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            AUTH_GUARD_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            columnSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/base.controller.ts\n            \n            function\n            BaseCrudController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/api-swagger-operation.decorator.ts\n            \n            variable\n            ApiSwaggerOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authenticate.decorator.ts\n            \n            variable\n            Authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/file-upload.decorator.ts\n            \n            variable\n            ApiFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/errors/api-exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/errors/auth.errors.ts\n            \n            variable\n            authErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithSwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithSwaggerOpts\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller.interface.ts\n            \n            interface\n            IBaseController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/buffer-file.interface.ts\n            \n            interface\n            BufferedFile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            AuthObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            ControllerAuth\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            DefaultAuthObject\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/shared/models/dto/base.dto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/dto/find.dto.ts\n            \n            class\n            FindDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            interface\n            IPagedListDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            function\n            PagedListDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            defaultAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            getAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/random-token.ts\n            \n            variable\n            generateRandomToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/upload-img.util.ts\n            \n            variable\n            uploadFileToCloud\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/validations/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/create-stage.dto.ts\n            \n            class\n            CreateStageDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/stage.dto.ts\n            \n            class\n            PagedListStageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/stage.dto.ts\n            \n            class\n            StageDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/stages/models/stage.entity.ts\n            \n            class\n            Stage\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/stages/stages.controller.ts\n            \n            class\n            StagesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stages/stages.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.module.ts\n            \n            variable\n            StageModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.service.ts\n            \n            injectable\n            StagesService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/create-subission.dto.ts\n            \n            class\n            CreateSubmissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/grade-submission.dto.ts\n            \n            class\n            GradeSubmissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/submission.dto.ts\n            \n            class\n            PagedListSubmissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/submission.dto.ts\n            \n            class\n            SubmissionDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/task.dto.ts\n            \n            class\n            PagedListTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/task.dto.ts\n            \n            class\n            TaskDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/tasks/models/submission.entity.ts\n            \n            class\n            Submission\n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                src/tasks/models/task.entity.ts\n            \n            class\n            Task\n            \n                15 %\n                (3/20)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            class\n            TasksController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            SubmissionModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            TaskModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            TrackMentorModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            UserStageModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateTrackDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateWithThumbnailTrackDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            MentorInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/track.dto.ts\n            \n            class\n            PagedTrackOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/track.dto.ts\n            \n            class\n            TrackDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tracks/models/track-mentor.entity.ts\n            \n            class\n            TrackMentor\n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                src/tracks/models/track.entity.ts\n            \n            class\n            Track\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            class\n            TracksController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            variable\n            ONE_KB\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            StageModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            TrackModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            UserStageModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.service.ts\n            \n            injectable\n            TracksService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/users/models/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            PagedUserOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/users/models/user.entity.ts\n            \n            class\n            User\n            \n                8 %\n                (3/34)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            class\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.module.ts\n            \n            variable\n            UserModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/userstage/models/dto/stageonly.dto.ts\n            \n            class\n            PagedListStageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/userstage/models/dto/stageonly.dto.ts\n            \n            class\n            StageOnlyDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/userstage/models/dto/userstage.dto.ts\n            \n            class\n            PagedListStageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/userstage/models/dto/userstage.dto.ts\n            \n            class\n            UserStageDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/userstage/models/userstage.entity.ts\n            \n            class\n            UserStage\n            \n                15 %\n                (3/19)\n            \n        \n        \n            \n                \n                src/userstage/userstage.service.ts\n            \n            injectable\n            UserStageService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            dbFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            dbServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            inMemoryDb\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.2\n        \n            @nestjs/common : ^7.4.2\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.4.2\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.4.2\n        \n            @nestjs/schedule : ^0.4.0\n        \n            @nestjs/swagger : ^4.6.0\n        \n            @typegoose/typegoose : ^7.3.4\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.18.0\n        \n            cache-manager : ^3.3.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            cloudinary : ^1.23.0\n        \n            compression : ^1.7.4\n        \n            connect-mongo : ^3.2.0\n        \n            cookie-parser : ^1.4.5\n        \n            cookie-session : ^1.4.0\n        \n            datauri : ^3.0.0\n        \n            express-rate-limit : ^5.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^4.1.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.10.1\n        \n            mongoose-autopopulate : ^0.12.2\n        \n            nodemailer : ^6.4.11\n        \n            nodemailer-mailgun-transport : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pluralize : ^8.0.0\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.2\n        \n            swagger-ui-express : ^4.1.4\n        \n            tsconfig-paths : ^3.9.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Gender   (src/.../user.entity.ts)\n                        \n                        \n                            TaskStatus   (src/.../task.entity.ts)\n                        \n                        \n                            TokenType   (src/.../temporary-token.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/models/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        Gender\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : MALE\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : FEMALE\n                            \n                        \n                        \n                            \n                                 UNSPECIFIED\n                            \n                        \n                        \n                            \n                                Value : UNSPECIFIED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MENTEE\n                            \n                        \n                        \n                            \n                                Value : MENTEE\n                            \n                        \n                        \n                            \n                                 MENTOR\n                            \n                        \n                        \n                            \n                                Value : MENTOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n    src/tasks/models/task.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 STARTED\n                            \n                        \n                        \n                            \n                                Value : STARTED\n                            \n                        \n                        \n                            \n                                 UNCOMPLETED\n                            \n                        \n                        \n                            \n                                Value : UNCOMPLETED\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n            \n        \n\n    src/auth/models/temporary-token.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : PASSWORD_TOKEN\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL_TOKEN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BaseCrudController   (src/.../base.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            main   (merge-coverage.ts)\n                        \n                        \n                            PagedListDto   (src/.../paged-list.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/controllers/base.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            BaseCrudController\n                        \n                        \n                    \n                \n            \n            \n                \nBaseCrudController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    merge-coverage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            main\n                        \n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    src/shared/models/dto/paged-list.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PagedListDto\n                        \n                        \n                    \n                \n            \n            \n                \nPagedListDto(entityDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCode Clan Nigeria\n \nThe official website for code clan nigeria community\nWe are a community comprised of future innovators.\nFront-end developers, DevOps engineers, full stack developers, technical\nwriters, software engineers.\nThis community was created out of a desire to provide ongoing support\nto you wherever stage you are in your coding career.\nThis is codeclannigeria.dev\nAs part of the measures towards achieving out goal stated above, we propose to bring together the amazing talents of our community members to built a website and a mobile application that represents all that we\nstand for.\nHow You Come In\nTo get a complete documentation of the source code and the architectural structure of the application, click here.\nFeel free to put your skills to the test. Here is a suggested workflow for you to follow:\nNote: This is applicable to codeclannigeria community members only.\n\nFork this repository into your local computer\nCheck the issues pane for an issue that needs to be solved\nFind an issue that matches your current skill level and solve it\nMake your pull request to the develop branch\nWait for some feedback.\nRepeat the process\n\nWant more support? Join our slack\ncommunity and ask questions.\nThanks for your support\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Fortune Ochi\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DbTest\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MentorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TracksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MentorModule\n\n\n\ncluster_MentorModule_exports\n\n\n\ncluster_MentorModule_providers\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nCoursesModule->TasksModule\n\n\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nCoursesService \n\nCoursesService \n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMentorModule\n\nMentorModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nMentorModule->ProfileModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nTracksModule -->\n\nMentorModule->TracksModule\n\n\n\nAppModule -->\n\nMentorModule->AppModule\n\n\n\n\n\nMentorService \n\nMentorService \n\nMentorService  -->\n\nMentorModule->MentorService \n\n\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\nTasksModule -->\n\nStagesModule->TasksModule\n\n\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nStagesService \n\nStagesService \n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\nStagesModule -->\n\nTracksModule->StagesModule\n\n\n\nTasksModule -->\n\nTracksModule->TasksModule\n\n\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nTracksService \n\nTracksService \n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nMentorModule -->\n\nUsersModule->MentorModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nTasksModule -->\n\nUsersModule->TasksModule\n\n\n\nTracksModule -->\n\nUsersModule->TracksModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\nMentorService\n\nMentorService\n\nMentorModule -->\n\nMentorService->MentorModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\nUserStageService\n\nUserStageService\n\nTracksModule -->\n\nUserStageService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    62 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractDocument   (src/.../abstract.type.ts)\n                        \n                        \n                            ClassType   (src/.../abstract.type.ts)\n                        \n                        \n                            DeleteResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryItem   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryList   (src/.../abstract.type.ts)\n                        \n                        \n                            UpdateResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            Writable   (src/.../abstract.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/types/abstract.type.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Writable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiFile   (src/.../file-upload.decorator.ts)\n                        \n                        \n                            ApiSwaggerOperation   (src/.../api-swagger-operation.decorator.ts)\n                        \n                        \n                            AUTH_GUARD_TYPE   (src/.../constants.ts)\n                        \n                        \n                            Authenticate   (src/.../authenticate.decorator.ts)\n                        \n                        \n                            authErrors   (src/.../auth.errors.ts)\n                        \n                        \n                            BaseCtrl   (src/.../categories.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../tasks.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../stages.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../users.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../tracks.controller.ts)\n                        \n                        \n                            baseService   (src/.../tasks.module.ts)\n                        \n                        \n                            baseService   (src/.../stages.module.ts)\n                        \n                        \n                            baseService   (src/.../tracks.module.ts)\n                        \n                        \n                            CategoryModel   (src/.../categories.module.ts)\n                        \n                        \n                            columnSize   (src/.../constants.ts)\n                        \n                        \n                            Config   (src/.../app.module.ts)\n                        \n                        \n                            Config   (src/.../auth.module.ts)\n                        \n                        \n                            CourseModel   (src/.../courses.module.ts)\n                        \n                        \n                            Database   (src/.../app.module.ts)\n                        \n                        \n                            dbFactory   (test/.../db-test.module.ts)\n                        \n                        \n                            dbServer   (test/.../db-test.module.ts)\n                        \n                        \n                            defaultAuth   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            generateRandomToken   (src/.../random-token.ts)\n                        \n                        \n                            getAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            inMemoryDb   (test/.../db-test.module.ts)\n                        \n                        \n                            MentorMenteeModel   (src/.../mentor.module.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            ONE_KB   (src/.../tracks.controller.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            StageModel   (src/.../stages.module.ts)\n                        \n                        \n                            StageModel   (src/.../tracks.module.ts)\n                        \n                        \n                            SubmissionModel   (src/.../mentor.module.ts)\n                        \n                        \n                            SubmissionModel   (src/.../tasks.module.ts)\n                        \n                        \n                            TaskModel   (src/.../tasks.module.ts)\n                        \n                        \n                            TrackMentorModel   (src/.../mentor.module.ts)\n                        \n                        \n                            TrackMentorModel   (src/.../tasks.module.ts)\n                        \n                        \n                            TrackModel   (src/.../tracks.module.ts)\n                        \n                        \n                            uploadFileToCloud   (src/.../upload-img.util.ts)\n                        \n                        \n                            UserModel   (src/.../users.module.ts)\n                        \n                        \n                            UserStageModel   (src/.../tasks.module.ts)\n                        \n                        \n                            UserStageModel   (src/.../tracks.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/file-upload.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fileName = 'file', description?: string): MethodDecorator => (\n    target: any,\n    propertyKey: string,\n    descriptor: PropertyDescriptor,\n) => {\n    ApiBody({\n        required: true,\n        description,\n        schema: {\n            type: 'object',\n            required: ['true'],\n            properties: {\n                [fileName]: {\n                    type: 'string',\n                    format: 'binary',\n                },\n            },\n        },\n    })(target, propertyKey, descriptor);\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/api-swagger-operation.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiSwaggerOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: {\n  title: string;\n  description?: string;\n  operationId?: string;\n  deprecated?: boolean;\n}): MethodDecorator => {\n  return (target, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const controllerName = target.constructor.name;\n    ApiOperation({\n      ...options,\n      operationId: `${controllerName.substr(\n        0,\n        controllerName.indexOf('Controller'),\n      )}_${propertyKey}`,\n    })(target, propertyKey, descriptor);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  length8: 2 ** 3,\n  length16: 2 ** 4,\n  length32: 2 ** 5,\n  length64: 2 ** 6,\n  length128: 2 ** 7,\n  length256: 2 ** 8,\n  length512: 2 ** 9,\n  length1024: 2 ** 10\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authenticate.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthenticationEnabled: boolean,\n  decorator: MethodDecorator\n): MethodDecorator => {\n  return (target, key: string | symbol, value: any): any => {\n    if (isAuthenticationEnabled) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/errors/auth.errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  INVALID_LOGIN_ATTEMPT: new UnauthorizedException(\n    'Email or Password is incorrect'\n  ),\n  INVALID_TOKEN: new ForbiddenException('Invalid token'),\n  EXPIRED_TOKEN: new NotFoundException('Token expired')\n}\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedListDto: PagedCategoryOutDto\n})\n                        \n                    \n\n\n            \n        \n\n    src/tasks/tasks.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Task,\n  createDto: CreateTaskDto,\n  pagedListDto: PagedListTaskDto,\n  entityDto: TaskDto,\n  updateDto: CreateTaskDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/stages/stages.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Stage,\n  entityDto: StageDto,\n  createDto: CreateStageDto,\n  updateDto: CreateStageDto,\n  pagedListDto: PagedListStageDto,\n  auth: {\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/users/users.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedListDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedListDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ONE_KB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1024\n                        \n                    \n\n\n            \n        \n\n    src/tasks/tasks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: TasksService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Submission.modelName, schema: Submission.schema }\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Task.modelName, schema: Task.schema }\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TrackMentorModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: TrackMentor.modelName, schema: TrackMentor.schema }\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserStageModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: UserStage.modelName, schema: UserStage.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/stages/stages.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: StagesService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            StageModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: TracksService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            StageModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TrackModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            UserStageModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: UserStage.modelName, schema: UserStage.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CategoryModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Database\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n})\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n]\n                        \n                    \n\n\n            \n        \n\n    src/courses/courses.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    test/helpers/db-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbServer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoMemoryServer()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inMemoryDb\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : dbServer\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/get-auth-obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ControllerAuth\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  create: {\n    enableAuth: true,\n    authRoles: []\n  },\n  update: {\n    enableAuth: true,\n    authRoles: []\n  },\n  find: {\n    enableAuth: true,\n    authRoles: []\n  },\n  findById: {\n    enableAuth: true,\n    authRoles: []\n  },\n  delete: {\n    enableAuth: true,\n    authRoles: []\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  authObj: DefaultAuthObject | boolean\n): ControllerAuth => {\n  const roles = Object.values(UserRole);\n  defaultAuth.create.authRoles = roles;\n  defaultAuth.update.authRoles = roles;\n  defaultAuth.find.authRoles = roles;\n  defaultAuth.findById.authRoles = roles;\n  defaultAuth.delete.authRoles = roles;\n\n  if (typeof authObj === 'boolean') {\n    if (authObj === false) {\n      defaultAuth.create.enableAuth = false;\n      defaultAuth.update.enableAuth = false;\n      defaultAuth.find.enableAuth = false;\n      defaultAuth.findById.enableAuth = false;\n      defaultAuth.delete.enableAuth = false;\n      return defaultAuth;\n    }\n    return defaultAuth;\n  }\n\n  if (typeof authObj?.find === 'boolean') {\n    defaultAuth.find.enableAuth = authObj.find;\n  } else if (!!authObj?.find?.length) {\n    defaultAuth.find.authRoles = authObj.find;\n  }\n\n  if (typeof authObj?.findById === 'boolean') {\n    defaultAuth.findById.enableAuth = authObj.findById;\n  } else if (!!authObj?.findById?.length) {\n    defaultAuth.findById.authRoles = authObj.findById;\n  }\n\n  if (typeof authObj?.update === 'boolean') {\n    defaultAuth.update.enableAuth = authObj.update;\n  } else if (!!authObj?.update?.length) {\n    defaultAuth.update.authRoles = authObj.update;\n  }\n\n  if (typeof authObj?.create === 'boolean') {\n    defaultAuth.create.enableAuth = authObj.create;\n  } else if (!!authObj?.create?.length) {\n    defaultAuth.create.authRoles = authObj.create;\n  }\n\n  if (typeof authObj?.delete === 'boolean') {\n    defaultAuth.delete.enableAuth = authObj.delete;\n  } else if (!!authObj?.delete?.length) {\n    defaultAuth.delete.authRoles = authObj.delete;\n  }\n\n  return defaultAuth;\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/validations/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): any => {\n  return Joi.object({\n    NODE_ENV: Joi.string()\n      .valid('development', 'production', 'test')\n      .default('development'),\n    PORT: Joi.number().default(3000),\n    JWT_SECRET: Joi.string().required(),\n    JWT_VALIDITY_HOURS: Joi.number().required(),\n    ROOT_URL: Joi.string().uri().required(),\n    REDIS_SERVER_URL: Joi.string().uri().default('redis://localhost:6379'),\n    DATABASE_PORT: Joi.number().default(27017),\n    DATABASE_HOST: Joi.string().default('localhost'),\n    DATABASE_NAME: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n    MAILER_API_KEY: Joi.string().required(),\n    MAILER_DOMAIN: Joi.string().required(),\n    API_AUTH_ENABLED: Joi.string().valid('true', 'false').default('true'),\n    APP_EMAIL: Joi.string().email().required(),\n    CLOUDINARY_API_KEY: Joi.string().required(),\n    CLOUDINARY_API_SECRET: Joi.string().required(),\n    CLOUDINARY_NAME: Joi.string().required()\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/random-token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandomToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n  randomBytes(size).toString('hex')\n                        \n                    \n\n\n            \n        \n\n    src/mentor/mentor.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MentorMenteeModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: MentorMentee.modelName, schema: MentorMentee.schema }\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SubmissionModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Submission.modelName, schema: Submission.schema }\n])\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TrackMentorModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: TrackMentor.modelName, schema: TrackMentor.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: UserRole[]): CustomDecorator =>\n  SetMetadata(UserRole, roles)\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/upload-img.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFileToCloud\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (file: BufferedFile, folderName: string, uniqId?: string): Promise => {\n\n    const { cloudinary: config } = configuration();\n    cloudinary.v2.config({\n        cloud_name: config.name,\n        api_key: config.key,\n        api_secret: config.secret\n    })\n\n    const dataUri = new DataURIParser()\n    const { content } = dataUri.format(`.${file.originalname.split('.')[0]}`, file.buffer)\n    const { secure_url } = await cloudinary.v2.uploader.upload(content,\n        { discard_original_filename: true, folder: `ccn/${folderName}`, public_id: uniqId });\n\n    return secure_url;\n}\n                        \n                    \n\n\n            \n        \n\n    src/users/users.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
