var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControllerOptions.html",[0,1.111,1,2.817]],["body/interfaces/AbstractControllerOptions.html",[0,1.967,1,4.989,2,2.291,3,0.168,4,0.151,5,0.151,6,3.922,7,2.473,8,3.922,9,0.451,10,1.24,11,5.605,12,4.573,13,0.674,14,0.012,15,0.22,16,3.219,17,1.634,18,2.664,19,3.437,20,0.229,21,2.229,22,2.574,23,2.473,24,4.573,25,1.088,26,1.687,27,3.657,28,4.254,29,4.254,30,4.254,31,3.922,32,0.008,33,0.009,34,0.008]],["title/interfaces/AbstractControllerWithAuthOptions.html",[0,1.111,24,2.817]],["body/interfaces/AbstractControllerWithAuthOptions.html",[0,1.956,1,4.962,2,2.264,3,0.166,4,0.149,5,0.149,6,3.876,7,2.444,8,3.876,9,0.446,10,1.231,11,3.876,13,0.488,14,0.012,15,0.217,16,3.664,17,1.615,18,3.124,19,3.396,20,0.227,21,2.217,22,2.544,23,2.444,24,4.962,25,1.181,26,2.288,27,3.614,28,4.203,29,4.203,30,4.203,31,3.876,32,0.007,33,0.009,34,0.007]],["title/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.111,27,2.817]],["body/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.938,1,4.481,2,2.218,3,0.162,4,0.146,5,0.146,6,3.798,7,2.394,8,3.798,9,0.437,10,1.215,11,3.798,12,5.167,13,0.736,14,0.012,15,0.213,16,3.154,17,1.582,18,2.61,19,3.328,20,0.225,21,2.196,22,2.493,23,2.394,24,4.916,25,1.17,26,1.633,27,4.481,28,6.009,29,4.119,30,6.009,31,3.798,32,0.007,33,0.009,34,0.007]],["title/classes/AbstractService.html",[35,0.156,36,3.276]],["body/classes/AbstractService.html",[3,0.079,4,0.071,5,0.071,9,0.213,13,0.723,14,0.012,15,0.224,20,0.079,23,2.9,32,0.004,33,0.006,34,0.004,35,0.096,36,3.131,37,0.483,38,2.218,39,1.029,40,8.564,41,2.53,42,2.899,43,2.53,44,2.53,45,2.53,46,1.976,47,2.53,48,2.391,49,2.53,50,2.53,51,2.53,52,2.53,53,2.53,54,2.53,55,2.53,56,2.53,57,2.53,58,1.751,59,3.109,60,2.53,61,1.315,62,2.537,63,2.466,64,1.545,65,1.806,66,4.474,67,1.981,68,3.109,69,2.53,70,2.537,71,3.349,72,2.53,73,2.537,74,2.938,75,2.53,76,2.537,77,2.53,78,1.476,79,2.537,80,2.279,81,4.635,82,2.53,83,2.537,84,2.53,85,2.537,86,2.53,87,2.537,88,2.53,89,2.537,90,2.53,91,2.537,92,2.53,93,2.537,94,1.82,95,2.53,96,2.537,97,2.53,98,2.537,99,2.53,100,2.537,101,2.53,102,2.537,103,2.53,104,2.537,105,2.53,106,4.031,107,4.031,108,2.537,109,1.623,110,2.537,111,2.218,112,1.123,113,2.009,114,1.268,115,2.218,116,2.218]],["title/classes/AcctVerifyDto.html",[35,0.156,117,3.021]],["body/classes/AcctVerifyDto.html",[3,0.163,4,0.147,5,0.147,9,0.44,10,1.219,13,0.666,14,0.012,15,0.296,20,0.163,25,0.847,32,0.007,33,0.009,34,0.007,35,0.249,37,0.997,61,1.212,78,1.478,117,4.823,118,6.65,119,4.575,120,6.331,121,6.331,122,6.331,123,1.826,124,5.733,125,5.231,126,6.209,127,5.231,128,5.231,129,3.163,130,1.643,131,2.15,132,3.003,133,4.575,134,4.575,135,2.15]],["title/classes/ApiException.html",[35,0.156,136,2.375]],["body/classes/ApiException.html",[3,0.114,4,0.103,5,0.103,9,0.307,10,0.959,13,0.71,14,0.012,15,0.247,20,0.114,21,1.113,32,0.005,33,0.007,34,0.005,35,0.138,37,0.697,61,1.292,63,1.149,64,0.72,65,1.898,78,1.56,123,1.914,130,1.149,136,2.983,137,6.843,138,3.2,139,5.42,140,6.491,141,7.216,142,6.491,143,6.491,144,4.114,145,6.491,146,6.042,147,2.216,148,3.659,149,3.329,150,5.196,151,4.513,152,3.659,153,3.659,154,3.659,155,3.659,156,3.659,157,3.659,158,3.659,159,2.341,160,0.868,161,1.62,162,3.659,163,3.659,164,3.659,165,3.659,166,3.659,167,3.659,168,3.659,169,3.659,170,3.659,171,3.659,172,3.659]],["title/controllers/AppController.html",[7,1.905,173,3.021]],["body/controllers/AppController.html",[3,0.179,4,0.161,5,0.161,7,3.224,9,0.483,14,0.012,15,0.286,20,0.179,32,0.008,33,0.01,34,0.008,35,0.217,39,1.822,61,0.963,67,1.45,78,1.293,123,1.45,160,1.363,173,5.113,174,2.873,175,5.027,176,7.861,177,5.748,178,4.833,179,5.027,180,3.914,181,1.592,182,2.127,183,5.748]],["title/modules/AppModule.html",[184,1.342,185,3.021]],["body/modules/AppModule.html",[3,0.116,4,0.105,5,0.105,14,0.012,15,0.335,20,0.164,32,0.005,33,0.007,34,0.005,35,0.14,160,0.884,161,1.651,173,4.456,174,2.631,178,4.646,179,3.26,184,1.979,185,6.149,186,1.716,187,1.786,188,1.946,189,1.946,190,1.786,191,3.186,192,1.863,193,3.26,194,3.26,195,3.26,196,4.943,197,4.943,198,4.943,199,4.943,200,4.943,201,4.646,202,4.943,203,4.39,204,2.749,205,1.863,206,1.786,207,2.952,208,2.878,209,3.727,210,3.26,211,2.139,212,1.651,213,3.727,214,3.727,215,3.727,216,3.727,217,3.727,218,3.26,219,2.139,220,4.169,221,3.727,222,3.727,223,2.952,224,3.727,225,1.884,226,3.584,227,3.26,228,3.26,229,2.598,230,3.26,231,3.26,232,3.26,233,3.26,234,3.184,235,3.26,236,2.952,237,2.952,238,2.952,239,2.952,240,1.863]],["title/injectables/AppService.html",[178,2.647,241,1.432]],["body/injectables/AppService.html",[3,0.186,4,0.167,5,0.167,9,0.501,14,0.012,15,0.244,20,0.186,32,0.008,33,0.01,34,0.008,35,0.225,39,1.862,61,0.998,67,1.503,78,1.321,160,1.413,178,4.579,182,2.205,241,2.477,242,3.11,243,5.21,244,7.956,245,5.957,246,5.957,247,5.957]],["title/controllers/AuthController.html",[7,1.905,248,3.021]],["body/controllers/AuthController.html",[3,0.067,4,0.06,5,0.06,7,0.987,9,0.18,13,0.652,14,0.012,15,0.302,18,0.851,20,0.067,21,2.068,32,0.003,33,0.005,34,0.003,35,0.081,39,0.9,42,2.724,61,0.981,63,1.839,64,1.152,65,1.347,67,1.478,71,3.02,117,4.499,120,3.026,121,3.026,122,3.026,123,1.478,130,0.673,132,2.866,135,3.103,136,2.497,144,2.356,147,0.914,159,1.372,160,0.509,161,0.95,174,1.072,181,1.204,182,2.027,205,2.495,219,1.231,225,2.724,248,2.527,249,1.875,250,1.875,251,3.026,252,3.46,253,3.46,254,3.46,255,3.46,256,3.46,257,2.144,258,2.144,259,2.144,260,2.144,261,2.144,262,5.089,263,2.144,264,3.019,265,2.144,266,2.144,267,2.962,268,1.028,269,2.144,270,2.144,271,3.399,272,3.46,273,2.144,274,2.144,275,2.144,276,4.992,277,3.46,278,3.46,279,2.144,280,2.144,281,2.393,282,2.144,283,2.144,284,3.399,285,3.46,286,2.144,287,2.144,288,1.566,289,1.566,290,2.144,291,2.144,292,1.566,293,1.46,294,1.372,295,3.46,296,3.46,297,2.527,298,2.144,299,3.46,300,2.144,301,1.875,302,1.698,303,2.631,304,1.875,305,1.698,306,1.297,307,2.271,308,1.566,309,2.497,310,1.566,311,1.566,312,2.144,313,2.144,314,2.144,315,2.356,316,1.875,317,2.144,318,2.144,319,2.144,320,1.875,321,1.46,322,1.566,323,1.46,324,2.144,325,2.144,326,2.497,327,2.144,328,5.477,329,2.144,330,2.144,331,2.74,332,3.331,333,2.144,334,3.46,335,2.144,336,2.144,337,1.566,338,2.144,339,3.988,340,4.79,341,3.362,342,2.144,343,3.176,344,1.566,345,2.823,346,2.144,347,2.144,348,2.144,349,1.698,350,2.144,351,4.283,352,2.144,353,3.46,354,3.026,355,3.46,356,2.144,357,3.46,358,1.875,359,3.026,360,1.875,361,2.144,362,3.026,363,3.46,364,3.46,365,3.46,366,4.992,367,3.46,368,3.46,369,3.46,370,1.875,371,3.026,372,3.46,373,3.46,374,3.026,375,1.593,376,3.46,377,2.144,378,2.144,379,2.144,380,2.74,381,1.875,382,3.026,383,2.144,384,1.875,385,1.46,386,2.144,387,2.74,388,2.144,389,2.144,390,2.144,391,2.144]],["title/injectables/AuthHandler.html",[241,1.432,392,2.817]],["body/injectables/AuthHandler.html",[3,0.169,4,0.152,5,0.152,9,0.455,13,0.499,14,0.012,15,0.301,20,0.169,32,0.008,33,0.009,34,0.008,35,0.204,39,1.757,42,2.632,61,0.908,63,1.702,64,1.066,65,1.246,67,1.367,123,1.367,160,1.285,182,2.006,241,2.337,242,2.83,392,4.599,393,4.74,394,6.753,395,6.753,396,7.357,397,6.753,398,5.42,399,6.753,400,3.957,401,5.42,402,4.292,403,4.292,404,4.74,405,5.42,406,5.42,407,5.42,408,5.42]],["title/modules/AuthModule.html",[184,1.342,196,2.817]],["body/modules/AuthModule.html",[3,0.119,4,0.107,5,0.107,14,0.012,15,0.334,20,0.119,32,0.005,33,0.007,34,0.005,35,0.143,64,0.749,160,0.903,174,2.67,184,2.002,186,1.752,187,1.824,188,1.987,189,1.987,190,1.824,191,3.223,192,3.085,196,5.73,203,4.42,204,2.789,205,1.902,206,1.824,208,2.921,211,2.185,212,1.685,223,3.014,225,1.362,226,4.203,229,1.362,248,4.507,303,4.42,304,3.329,309,4.621,310,2.779,322,2.779,323,2.592,392,4.977,409,3.329,410,3.806,411,3.329,412,3.329,413,4.977,414,4.977,415,4.977,416,4.677,417,3.014,418,3.901,419,1.685,420,3.806,421,2.435,422,2.435,423,3.806,424,3.806,425,3.806,426,3.806,427,3.806,428,3.329,429,3.329,430,2.302,431,3.329,432,2.185,433,3.329,434,3.329,435,3.329,436,3.014]],["title/interfaces/AuthObj.html",[0,1.111,437,2.647]],["body/interfaces/AuthObj.html",[0,1.94,2,2.224,3,0.163,4,0.146,5,0.146,9,0.438,10,1.217,13,0.607,14,0.012,15,0.213,16,2.5,18,2.069,20,0.206,26,2.582,32,0.007,33,0.009,34,0.007,46,3.295,58,2.92,437,5.199,438,3.809,439,3.809,440,5.546,441,5.546,442,3.674,443,2.5,444,3.338,445,4.219,446,3.784,447,2.812]],["title/injectables/AuthService.html",[241,1.432,309,2.375]],["body/injectables/AuthService.html",[3,0.064,4,0.058,5,0.058,9,0.172,10,0.616,12,3.907,13,0.71,14,0.012,15,0.291,20,0.064,21,1.016,22,1.6,32,0.003,33,0.005,34,0.003,35,0.077,39,0.869,42,2.811,48,1.241,61,1.122,63,1.9,64,1.19,65,1.391,67,1.591,71,3.08,78,1.442,80,1.118,123,0.518,135,2.487,139,3.082,147,1.424,149,0.983,160,0.487,161,1.478,181,0.924,182,1.8,219,1.178,225,2.723,229,0.734,241,1.155,242,1.071,251,2.92,262,2.273,268,0.983,271,2.273,281,0.983,293,1.397,307,2.996,308,1.498,309,1.916,321,3.645,322,1.498,323,1.397,326,3.619,332,3.547,339,2.874,340,2.92,341,3.742,345,3.189,351,2.553,354,1.794,358,1.794,359,3.692,360,2.92,370,1.794,374,1.794,380,5.307,381,2.92,382,5.998,384,1.794,385,2.273,387,2.644,400,1.498,402,1.625,403,1.625,404,1.794,416,3.113,428,1.794,429,1.794,443,0.983,448,1.794,449,5.738,450,4.221,451,5.738,452,4.864,453,3.338,454,3.338,455,4.221,456,3.338,457,1.794,458,4.221,459,2.052,460,2.052,461,2.052,462,3.338,463,4.221,464,2.052,465,2.052,466,2.052,467,3.338,468,2.052,469,3.338,470,2.052,471,2.052,472,2.052,473,3.338,474,4.221,475,2.052,476,4.221,477,2.052,478,2.052,479,2.644,480,2.644,481,1.498,482,1.794,483,1.625,484,1.625,485,1.625,486,2.052,487,2.136,488,1.625,489,2.644,490,1.397,491,2.052,492,1.794,493,1.794,494,1.794,495,2.052,496,3.692,497,2.052,498,3.343,499,3.338,500,5.354,501,2.052,502,4.864,503,2.052,504,3.338,505,3.338,506,2.052,507,2.438,508,2.438,509,3.338,510,1.178,511,2.052,512,2.052,513,2.052,514,2.052,515,3.338,516,2.052,517,2.052,518,1.625,519,2.052,520,2.052,521,2.052,522,2.052,523,3.338,524,3.338,525,1.794,526,3.338,527,3.338,528,2.052,529,2.052,530,2.052,531,2.052,532,2.052,533,2.052,534,3.338]],["title/guards/AuthenticationGuard.html",[311,3.021,535,3.276]],["body/guards/AuthenticationGuard.html",[3,0.137,4,0.123,5,0.123,9,0.369,13,0.612,14,0.012,15,0.303,20,0.137,21,1.335,32,0.006,33,0.008,34,0.006,35,0.165,39,1.533,42,2.731,61,1.114,63,2.089,64,1.308,65,1.53,67,1.487,71,3.032,132,3.382,135,1.805,147,1.872,160,1.041,161,1.944,180,2.989,181,1.216,182,2.461,219,2.52,225,2.38,229,2.108,241,2.039,281,2.824,293,4.012,309,4.382,310,3.206,311,4.303,316,3.839,332,2.824,341,2.52,345,2.836,490,2.989,536,3.477,537,3.839,538,5.63,539,5.892,540,4.39,541,4.39,542,4.666,543,5.63,544,4.39,545,3.477,546,5.892,547,3.986,548,4.39,549,2.809,550,3.839,551,4.39,552,3.477,553,4.39,554,4.39,555,3.839,556,3.839]],["title/interfaces/BaseControllerOptions.html",[0,1.111,557,2.817]],["body/interfaces/BaseControllerOptions.html",[0,1.933,2,2.205,3,0.161,4,0.145,5,0.145,7,2.381,9,0.435,10,1.21,12,4.465,13,0.663,14,0.012,15,0.211,16,3.143,17,1.573,18,2.601,19,3.309,20,0.225,21,2.377,22,2.478,23,2.381,25,1.062,26,1.624,32,0.007,33,0.009,34,0.007,94,3.486,557,4.903,558,3.776,559,2.7,560,3.776,561,4.465,562,3.521,563,2.827,564,4.095,565,3.127,566,4.095,567,3.127,568,4.095,569,1.981,570,4.095]],["title/interfaces/BaseControllerWithAuthOptions.html",[0,1.111,561,2.817]],["body/interfaces/BaseControllerWithAuthOptions.html",[0,1.922,2,2.18,3,0.16,4,0.143,5,0.143,7,2.354,9,0.43,10,1.202,13,0.47,14,0.012,15,0.209,16,3.614,17,1.555,18,3.089,19,3.271,20,0.223,21,2.369,22,2.45,23,2.354,25,1.16,26,2.249,32,0.007,33,0.009,34,0.007,94,2.354,557,4.877,558,3.733,559,2.669,560,3.733,561,4.877,562,3.481,563,2.795,564,4.048,565,3.092,566,4.048,567,3.092,568,4.048,569,1.958,570,4.048]],["title/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.111,562,2.817]],["body/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.861,2,2.036,3,0.149,4,0.134,5,0.134,7,2.198,9,0.401,10,1.15,12,5.497,13,0.768,14,0.012,15,0.195,16,2.985,17,1.452,18,2.471,19,3.055,20,0.216,21,2.319,22,2.288,23,2.198,25,1.123,26,1.499,32,0.007,33,0.009,34,0.007,94,2.198,557,4.241,558,3.486,559,2.492,560,3.486,561,4.72,562,4.241,563,4.017,564,3.78,565,4.444,566,3.78,567,4.444,568,3.78,569,2.814,570,3.78]],["title/classes/BaseDto.html",[35,0.156,571,2.068]],["body/classes/BaseDto.html",[3,0.165,4,0.148,5,0.148,9,0.445,10,1.228,13,0.67,14,0.012,15,0.272,20,0.165,32,0.007,33,0.009,34,0.007,35,0.251,37,1.009,61,1.219,78,1.228,80,2.438,123,1.836,130,1.662,131,2.176,151,4.301,181,2.303,375,3.515,571,3.325,572,4.628,573,3.104,574,3.104,575,5.292,576,4.956,577,5.292,578,5.292]],["title/classes/BaseEntity.html",[35,0.156,114,2.068]],["body/classes/BaseEntity.html",[3,0.079,4,0.071,5,0.071,9,0.214,10,0.731,13,0.644,14,0.012,15,0.244,17,2.39,20,0.079,21,1.671,25,0.642,26,1.725,32,0.004,33,0.006,34,0.004,35,0.096,37,0.485,39,1.031,61,1.284,65,1.566,67,1.386,78,0.898,80,1.63,112,1.126,113,2.014,114,3.642,116,2.225,123,1.718,181,2.245,182,1.466,229,2.83,240,3.497,268,3.023,345,1.085,375,3.294,432,3.418,443,1.219,447,2.54,573,2.076,574,2.076,579,2.225,580,5.494,581,2.943,582,2.943,583,2.943,584,3.983,585,3.601,586,2.943,587,3.323,588,3.323,589,3.323,590,3.465,591,4.867,592,2.502,593,3.323,594,2.544,595,4.537,596,4.249,597,3.323,598,2.544,599,2.544,600,2.544,601,2.544,602,2.544,603,2.544,604,2.544,605,2.544,606,2.544,607,3.814,608,2.905,609,2.544,610,2.544,611,2.544,612,2.544,613,2.544,614,2.544,615,2.544,616,2.544,617,4.478,618,2.544,619,2.014,620,3.323,621,2.396,622,2.544,623,2.544,624,2.544,625,2.544,626,2.544,627,2.544,628,2.544,629,2.544,630,2.544,631,3.962,632,2.544,633,3.962,634,4.256,635,3.962]],["title/classes/CategoriesController.html",[35,0.156,636,3.021]],["body/classes/CategoriesController.html",[3,0.121,4,0.109,5,0.109,9,0.327,13,0.695,14,0.012,15,0.328,18,1.542,20,0.121,21,1.183,25,0.63,32,0.005,33,0.008,34,0.005,35,0.147,37,0.741,39,1.411,42,2.234,58,1.722,61,0.908,63,1.703,64,1.228,65,1.247,67,0.981,71,2.313,94,1.79,123,0.981,130,1.221,136,3.878,144,4.6,147,1.658,159,2.488,160,0.922,181,1.077,182,1.439,225,1.391,262,3.692,268,2.599,288,2.839,289,2.839,292,3.96,294,2.488,297,4.933,332,1.864,337,2.839,339,3.692,341,2.232,343,2.839,344,2.839,442,1.722,443,1.864,446,3.113,447,1.658,484,3.079,563,2.126,565,2.351,567,2.351,569,1.489,636,3.96,637,3.4,638,3.888,639,4.323,640,3.888,641,4.742,642,3.079,643,5.373,644,3.079,645,4.323,646,3.079,647,3.079,648,3.079,649,3.079,650,3.888,651,3.47,652,3.4,653,2.488,654,3.079,655,2.232,656,3.279,657,3.4,658,3.4,659,3.47,660,3.079,661,3.692,662,3.888,663,3.4,664,3.4,665,3.96,666,4.945,667,3.079,668,3.4,669,3.079,670,2.647,671,3.079,672,3.079,673,3.079,674,3.079,675,1.864,676,3.888,677,3.888,678,3.079]],["title/modules/CategoriesModule.html",[184,1.342,197,2.817]],["body/modules/CategoriesModule.html",[3,0.162,4,0.145,5,0.145,14,0.012,15,0.32,20,0.162,32,0.007,33,0.009,34,0.007,35,0.195,64,1.02,160,1.23,174,2.592,184,2.338,186,2.387,187,2.486,188,2.708,189,2.708,190,2.486,191,3.43,192,3.603,197,5.325,204,3.43,205,2.592,206,2.486,208,2.835,211,2.977,212,2.296,225,1.855,430,3.136,432,2.977,636,4.797,639,5.254,658,4.535,659,3.318,660,4.107,679,4.535,680,4.535,681,4.107,682,5.186,683,5.71,684,4.535,685,4.535]],["title/classes/CategoriesService.html",[35,0.156,639,2.647]],["body/classes/CategoriesService.html",[3,0.068,4,0.062,5,0.062,9,0.184,10,0.651,13,0.73,14,0.012,15,0.207,17,2.03,20,0.068,22,1.051,23,2.551,25,0.571,32,0.003,33,0.005,34,0.003,35,0.083,37,0.418,39,0.917,41,2.255,42,2.687,43,2.255,44,2.255,45,2.255,46,1.761,47,2.255,48,2.131,49,2.255,50,2.255,51,2.255,52,2.255,53,2.255,54,2.255,55,2.255,56,2.255,57,2.255,58,1.561,59,2.255,60,1.404,61,1.341,63,2.467,64,1.546,65,1.807,66,4.269,67,1.993,68,1.404,69,1.404,71,2.845,72,1.404,74,1.327,75,1.404,77,1.404,78,1.386,80,2.166,81,3.761,82,1.404,84,1.404,86,1.404,88,1.404,90,1.404,92,1.404,94,2.724,95,1.404,97,1.404,99,1.404,101,1.404,103,1.404,105,1.404,106,3.237,107,3.786,109,1.404,112,0.972,123,0.554,147,1.503,181,1.223,212,0.972,326,2.904,547,1.145,559,1.84,592,2.647,608,0.936,621,3.059,639,2.255,659,1.404,660,1.737,686,1.919,687,4.632,688,4.543,689,2.131,690,2.4,691,3.008,692,2.4,693,2.4,694,3.008,695,1.737,696,3.546,697,2.194,698,3.278,699,1.494,700,1.494,701,1.494,702,4.967,703,1.494,704,1.494,705,1.494,706,1.494,707,1.494,708,1.494,709,1.494,710,1.494,711,1.494,712,1.494,713,1.494,714,1.494,715,1.494,716,1.494,717,1.494,718,1.494,719,1.494,720,1.494,721,1.494,722,1.494,723,1.494,724,2.4,725,1.494,726,1.404,727,1.494,728,1.494,729,1.494,730,1.494,731,1.494,732,1.494,733,1.494,734,1.737,735,2.194,736,1.737]],["title/classes/Category.html",[35,0.156,659,2.647]],["body/classes/Category.html",[3,0.1,4,0.09,5,0.09,9,0.269,10,0.87,13,0.699,14,0.012,15,0.229,17,2.309,20,0.1,21,0.973,25,0.764,26,1.48,32,0.004,33,0.007,34,0.004,35,0.121,37,0.61,39,1.227,61,1.329,64,1.101,65,1.681,67,1.558,78,1.033,80,1.579,112,1.416,114,4.089,123,1.883,181,2.266,229,2.862,240,2.798,268,3.415,375,2.844,419,1.416,447,2.387,573,2.01,574,2.01,581,2.85,582,2.85,583,2.85,584,3.735,585,3.385,586,2.85,587,3.385,588,3.385,589,3.385,592,2.733,593,3.983,595,4.167,596,3.546,597,3.735,607,3.385,608,2.634,617,3.016,620,1.934,659,3.016,698,3.235,737,2.797,738,2.259,739,3.442,740,3.442,741,3.016,742,3.198,743,2.046,744,2.046,745,2.046,746,2.046,747,2.046,748,2.046,749,2.046,750,2.046,751,2.046,752,2.046,753,2.046,754,2.046,755,2.046,756,1.416,757,2.178,758,2.533]],["title/classes/CategoryDto.html",[35,0.156,645,2.647]],["body/classes/CategoryDto.html",[3,0.149,4,0.134,5,0.134,9,0.402,10,1.152,13,0.702,14,0.012,15,0.284,20,0.195,25,1.124,32,0.007,33,0.009,34,0.007,35,0.262,37,0.912,61,1.277,64,1.366,78,1.408,80,2.09,123,1.925,131,1.968,151,3.411,181,2.166,375,2.872,419,2.12,569,1.833,571,3.909,573,2.661,574,2.661,576,3.259,645,3.992,661,3.259,698,2.854,738,2.294,756,2.12,759,3.79,760,3.327,761,3.992,762,4.786,763,3.992,764,4.786,765,3.495,766,3.495,767,3.495,768,2.747,769,4.186]],["title/interfaces/Configuration.html",[0,1.111,161,1.832]],["body/interfaces/Configuration.html",[0,1.736,2,1.773,3,0.13,4,0.117,5,0.117,9,0.349,10,1.048,13,0.739,14,0.012,17,1.265,20,0.13,26,2.031,32,0.006,33,0.008,34,0.006,64,1.117,78,1.563,149,3.685,161,2.864,229,1.487,234,4.801,507,5.314,508,5.314,770,3.036,771,5.763,772,5.763,773,5.763,774,5.08,775,5.615,776,5.763,777,5.763,778,4.147,779,3.867,780,4.147,781,4.147,782,3.292,783,3.292,784,3.292,785,3.292,786,3.292,787,3.292,788,3.292,789,3.292,790,2.831,791,2.831,792,3.292,793,3.292,794,3.292,795,3.292]],["title/interfaces/ControllerAuth.html",[0,1.111,444,2.647]],["body/interfaces/ControllerAuth.html",[0,1.887,2,2.097,3,0.153,4,0.138,5,0.138,9,0.413,10,1.172,13,0.708,14,0.012,15,0.201,16,2.357,18,1.95,20,0.198,26,2.474,32,0.007,33,0.009,34,0.007,46,3.845,58,3.407,437,5.452,438,3.59,439,3.59,440,3.59,441,3.59,442,3.55,443,2.357,444,4.063,445,4.923,446,4.416,447,3.281]],["title/classes/Course.html",[35,0.156,796,2.647]],["body/classes/Course.html",[3,0.085,4,0.077,5,0.077,9,0.427,10,0.772,13,0.701,14,0.012,15,0.208,17,2.289,20,0.085,21,0.83,25,0.678,26,1.314,32,0.004,33,0.006,34,0.004,35,0.103,37,0.52,39,1.089,61,1.322,65,1.603,67,1.439,78,1.247,80,1.401,112,1.208,114,3.997,123,1.899,149,2.005,181,2.293,229,2.927,240,3.571,268,3.425,375,2.626,419,1.208,447,2.169,573,1.784,574,1.784,581,2.53,582,2.53,583,2.53,584,3.449,585,3.076,586,2.53,587,3.076,588,3.076,589,3.076,592,2.574,593,4.215,595,3.924,596,3.274,597,3.449,607,3.076,608,2.432,617,3.935,620,3.449,675,2.733,698,3.133,738,3.11,739,4.164,740,4.164,741,4.322,743,1.746,744,1.746,745,1.746,746,1.746,747,1.746,748,1.746,749,1.746,750,1.746,751,1.746,752,1.746,753,1.746,754,1.746,755,1.746,756,1.208,757,1.858,758,2.161,760,2.438,796,2.677,797,2.386,798,4.028,799,3.714,800,2.729,801,2.677,802,2.729,803,2.729,804,2.729,805,1.858,806,2.386,807,2.729]],["title/classes/CourseDto.html",[35,0.156,808,2.647]],["body/classes/CourseDto.html",[3,0.132,4,0.119,5,0.119,9,0.357,10,1.063,13,0.711,14,0.012,15,0.309,20,0.18,25,1.059,32,0.006,33,0.008,34,0.006,35,0.264,37,0.809,61,1.295,78,1.427,80,1.929,123,1.907,124,4.562,130,1.333,131,1.745,149,2.761,151,4.008,181,2.208,375,2.652,419,1.88,569,1.626,571,3.778,573,2.457,574,2.457,576,2.891,675,3.134,698,2.688,738,2.035,756,1.88,760,3.134,761,2.716,763,2.716,765,3.1,766,3.1,767,3.1,768,2.437,798,5.178,799,4.774,808,3.686,809,3.362,810,4.245,811,4.245,812,4.245,813,4.245,814,4.245,815,4.245,816,4.245,817,5.718,818,2.891,819,4.206,820,3.1,821,3.713,822,2.891,823,3.713]],["title/classes/CoursesController.html",[35,0.156,824,3.021]],["body/classes/CoursesController.html",[3,0.128,4,0.115,5,0.115,9,0.345,13,0.688,14,0.012,15,0.328,18,1.626,20,0.128,21,1.247,25,0.664,32,0.006,33,0.008,34,0.006,35,0.155,37,0.781,39,1.464,42,2.298,58,1.816,61,0.687,63,1.288,64,0.807,65,0.943,67,1.035,71,2.399,94,1.888,123,1.035,130,1.288,136,3.967,144,4.706,159,2.624,160,0.973,182,1.517,225,1.467,262,3.831,268,2.696,288,2.994,289,2.994,292,4.108,294,2.624,297,5.047,332,1.965,337,2.994,339,3.831,341,2.354,343,2.994,344,2.994,442,1.816,443,1.965,446,3.229,447,1.749,484,3.247,563,2.242,565,2.48,567,2.48,569,1.57,642,3.247,644,3.247,646,3.247,647,3.247,648,3.247,649,3.247,651,3.6,652,3.586,653,2.624,654,3.247,655,2.354,656,3.402,657,3.586,663,3.586,665,4.108,666,5.086,669,3.247,670,2.792,671,3.247,672,3.247,673,3.247,674,3.247,675,2.696,678,3.247,796,3.6,808,4.422,822,3.831,824,4.108,825,3.586,826,5.463,827,4.1,828,3.247,829,4.1,830,3.586,831,3.586,832,4.1]],["title/modules/CoursesModule.html",[184,1.342,198,2.817]],["body/modules/CoursesModule.html",[3,0.162,4,0.145,5,0.145,14,0.012,15,0.32,20,0.162,32,0.007,33,0.009,34,0.007,35,0.195,64,1.02,160,1.23,174,2.592,184,2.338,186,2.387,187,2.486,188,2.708,189,2.708,190,2.486,191,3.43,192,3.603,198,5.325,204,3.43,205,2.592,206,2.486,208,2.835,211,2.977,212,2.296,225,1.855,430,3.136,432,2.977,796,3.318,824,4.797,828,4.107,833,4.535,834,4.535,835,5.591,836,4.107,837,5.186,838,5.186,839,5.71,840,4.535,841,4.535]],["title/classes/CoursesService.html",[35,0.156,835,2.817]],["body/classes/CoursesService.html",[3,0.068,4,0.062,5,0.062,9,0.184,10,0.651,13,0.73,14,0.012,15,0.207,17,2.03,20,0.068,22,1.051,23,2.551,25,0.571,32,0.003,33,0.005,34,0.003,35,0.083,37,0.418,39,0.917,41,2.255,42,2.687,43,2.255,44,2.255,45,2.255,46,1.761,47,2.255,48,2.131,49,2.255,50,2.255,51,2.255,52,2.255,53,2.255,54,2.255,55,2.255,56,2.255,57,2.255,58,1.561,59,2.255,60,1.404,61,1.341,63,2.467,64,1.546,65,1.807,66,4.269,67,1.993,68,1.404,69,1.404,71,2.845,72,1.404,74,1.327,75,1.404,77,1.404,78,1.386,80,2.166,81,3.761,82,1.404,84,1.404,86,1.404,88,1.404,90,1.404,92,1.404,94,2.724,95,1.404,97,1.404,99,1.404,101,1.404,103,1.404,105,1.404,106,3.237,107,3.786,109,1.404,112,0.972,123,0.554,147,1.503,181,1.223,212,0.972,326,2.904,547,1.145,559,1.84,592,2.647,608,0.936,621,3.059,687,4.632,688,4.543,689,2.131,690,2.4,691,3.008,692,2.4,693,2.4,694,3.008,695,1.737,696,3.546,698,3.278,699,1.494,700,1.494,701,1.494,702,4.967,703,1.494,704,1.494,705,1.494,706,1.494,707,1.494,708,1.494,709,1.494,710,1.494,711,1.494,712,1.494,713,1.494,714,1.494,715,1.494,716,1.494,717,1.494,718,1.494,719,1.494,720,1.494,721,1.494,722,1.494,723,1.494,724,2.4,725,1.494,726,1.404,727,1.494,728,1.494,729,1.494,730,1.494,731,1.494,732,1.494,733,1.494,734,1.737,736,1.737,796,1.404,828,1.737,835,2.4,842,1.919,843,2.194,844,2.194]],["title/classes/CreateCategoryDto.html",[35,0.156,643,3.021]],["body/classes/CreateCategoryDto.html",[3,0.191,4,0.172,5,0.172,14,0.012,15,0.297,20,0.191,25,0.991,32,0.009,33,0.01,34,0.009,35,0.231,37,1.166,64,1.204,129,3.7,130,1.921,643,5.309,645,3.915,664,5.351,760,2.933,845,5.351,846,5.351,847,6.119]],["title/classes/CreateCourseDto.html",[35,0.156,826,3.021]],["body/classes/CreateCourseDto.html",[3,0.19,4,0.171,5,0.171,14,0.012,15,0.297,20,0.19,25,0.988,32,0.009,33,0.01,34,0.009,35,0.23,37,1.162,129,3.688,130,1.915,675,2.923,760,2.923,799,4.453,808,3.902,826,5.299,830,5.333,848,5.333,849,5.333,850,6.098]],["title/classes/CreateTrackDto.html",[35,0.156,851,3.021]],["body/classes/CreateTrackDto.html",[3,0.191,4,0.172,5,0.172,14,0.012,15,0.297,20,0.191,25,0.991,32,0.009,33,0.01,34,0.009,35,0.231,37,1.166,129,3.7,130,1.921,675,2.933,760,2.933,851,5.309,852,5.351,853,5.351,854,3.915,855,6.119,856,6.119]],["title/classes/CreateUserDto.html",[35,0.156,857,3.021]],["body/classes/CreateUserDto.html",[3,0.19,4,0.171,5,0.171,14,0.012,15,0.297,20,0.19,25,0.988,32,0.009,33,0.01,34,0.009,35,0.23,37,1.162,80,2.043,130,1.915,306,3.688,573,2.601,574,2.601,857,5.299,858,5.333,859,4.453,860,4.829,861,3.334,862,4.829]],["title/interfaces/Database.html",[0,1.111,234,2.502]],["body/interfaces/Database.html",[0,1.828,2,1.963,3,0.144,4,0.129,5,0.129,9,0.387,10,1.123,13,0.667,14,0.012,17,1.4,20,0.144,26,1.445,32,0.006,33,0.009,34,0.006,64,1.482,78,1.561,149,3.61,161,2.693,229,1.647,234,4.555,507,4.441,508,4.441,770,3.361,771,4.816,772,4.816,773,4.816,774,4.636,775,5.762,776,4.816,777,4.816,778,5.5,779,5.129,780,4.441,781,4.441,782,3.645,783,3.645,784,3.645,785,3.645,786,3.645,787,3.645,788,3.645,789,3.645,790,3.134,791,3.134,792,3.645,793,3.645,794,3.645,795,3.645]],["title/modules/DbTest.html",[184,1.342,863,3.276]],["body/modules/DbTest.html",[3,0.165,4,0.148,5,0.148,14,0.012,15,0.298,20,0.165,21,1.61,32,0.007,33,0.009,34,0.007,35,0.199,42,1.894,160,1.255,182,1.959,184,2.158,186,2.437,192,2.645,208,2.893,211,3.038,212,2.344,225,2.604,229,2.604,236,4.191,237,4.191,238,4.191,239,4.191,240,2.645,332,2.537,494,4.628,779,4.531,790,3.604,791,3.604,863,5.269,864,4.191,865,4.191,866,5.819,867,5.292,868,4.628,869,4.191,870,5.763,871,4.628,872,4.628,873,4.628,874,4.628,875,4.628]],["title/interfaces/DefaultAuthObject.html",[0,1.111,16,1.983]],["body/interfaces/DefaultAuthObject.html",[0,1.817,2,1.938,3,0.142,4,0.128,5,0.128,9,0.382,10,1.113,13,0.69,14,0.012,15,0.186,16,2.89,18,1.803,20,0.188,26,2.652,32,0.006,33,0.008,34,0.006,46,3.749,58,3.322,65,1.878,437,4.934,438,3.319,439,3.319,440,3.319,441,3.319,442,3.753,443,2.178,444,2.908,445,4.8,446,4.306,447,3.199]],["title/classes/HttpExceptionFilter.html",[35,0.156,876,3.276]],["body/classes/HttpExceptionFilter.html",[3,0.139,4,0.125,5,0.125,9,0.373,13,0.409,14,0.012,15,0.274,20,0.139,21,1.352,32,0.006,33,0.008,34,0.006,35,0.168,37,0.847,39,1.546,61,0.744,63,1.396,64,0.874,65,1.022,67,1.121,78,0.82,136,3.41,139,3.245,140,5.196,142,5.196,145,5.853,159,2.844,160,1.054,225,2.88,302,4.705,490,4.045,498,5.3,549,2.844,596,3.41,608,1.895,689,3.593,778,4.887,876,4.705,877,5.196,878,3.887,879,6.692,880,5.941,881,7.144,882,4.444,883,4.444,884,5.941,885,4.444,886,4.444,887,4.444,888,4.444,889,4.444,890,4.444,891,4.444,892,4.444,893,5.941,894,4.444,895,5.941,896,4.444,897,4.444,898,4.444,899,4.444,900,4.444,901,4.444,902,3.887,903,4.444,904,6.692,905,3.887,906,4.444,907,4.444,908,4.444]],["title/interfaces/IPagedOutputDto.html",[0,1.111,909,3.276]],["body/interfaces/IPagedOutputDto.html",[0,1.421,2,2.257,3,0.165,4,0.148,5,0.148,9,0.445,10,1.228,13,0.724,14,0.012,15,0.298,20,0.208,23,3.622,32,0.007,33,0.009,34,0.007,35,0.199,130,1.662,149,3.66,151,3.638,160,1.255,182,1.959,490,3.604,563,3.638,569,2.027,909,5.763,910,3.864,911,4.191,912,7.868,913,7.868,914,4.628,915,5.292,916,3.864,917,6.654]],["title/injectables/JwtAuthGuard.html",[241,1.432,655,2.375]],["body/injectables/JwtAuthGuard.html",[3,0.161,4,0.145,5,0.145,9,0.433,13,0.474,14,0.012,15,0.319,20,0.161,25,0.835,26,2.055,32,0.007,33,0.009,34,0.007,35,0.194,39,1.703,61,0.863,63,1.619,64,1.014,65,1.186,67,1.301,71,2.791,160,1.223,161,2.283,182,1.908,219,2.96,229,1.845,241,2.265,242,2.692,418,3.765,419,2.283,421,3.299,538,5.694,542,4.083,543,5.99,545,5.183,552,4.083,655,3.757,918,5.724,919,4.509,920,5.156,921,7.191,922,5.156,923,4.509,924,5.156,925,5.156,926,5.156]],["title/interfaces/JwtPayload.html",[0,1.111,487,2.647]],["body/interfaces/JwtPayload.html",[0,1.538,2,2.444,3,0.179,4,0.161,5,0.161,9,0.481,10,1.29,13,0.694,14,0.012,15,0.234,20,0.179,32,0.008,33,0.01,34,0.008,78,1.512,135,3.228,380,6.218,442,3.477,443,2.746,487,4.472,510,4.507,927,5.011,928,5.011]],["title/injectables/JwtStrategy.html",[241,1.432,413,2.817]],["body/injectables/JwtStrategy.html",[3,0.161,4,0.145,5,0.145,9,0.435,13,0.476,14,0.012,15,0.32,20,0.161,25,0.838,32,0.007,33,0.009,34,0.007,35,0.195,39,1.706,42,2.576,61,1.098,63,1.624,64,1.017,65,1.189,67,1.305,71,2.796,147,3.071,160,1.226,161,2.29,182,1.914,219,2.968,240,2.584,241,2.269,242,2.7,413,4.465,421,3.309,481,3.776,487,3.309,488,4.095,489,5.702,929,4.522,930,5.193,931,5.171,932,6.557,933,5.171,934,4.522,935,5.171,936,4.522,937,4.095,938,4.522,939,4.522,940,5.171,941,5.171,942,5.171,943,5.171,944,5.171]],["title/injectables/LocalStrategy.html",[241,1.432,414,2.817]],["body/injectables/LocalStrategy.html",[3,0.141,4,0.127,5,0.127,9,0.381,13,0.554,14,0.012,15,0.307,20,0.141,21,1.379,25,0.734,32,0.006,33,0.008,34,0.006,35,0.171,39,1.567,42,2.418,61,1.008,63,1.891,64,1.184,65,1.384,67,1.144,78,1.422,135,1.864,147,1.933,160,1.075,180,3.087,182,1.678,225,2.418,229,1.622,241,2.084,242,2.367,281,3.451,293,4.099,309,3.88,310,3.31,332,2.885,341,2.602,345,2.567,414,4.099,421,2.901,547,3.913,555,3.965,930,4.768,934,3.965,936,3.965,937,3.59,938,3.965,939,3.965,945,3.965,946,4.534,947,7.705,948,4.534,949,6.02,950,6.759,951,4.534,952,4.534,953,3.59,954,3.59,955,4.534,956,4.534,957,6.02,958,4.534,959,4.534,960,4.534,961,4.534,962,4.534]],["title/classes/LoginReqDto.html",[35,0.156,132,2.375]],["body/classes/LoginReqDto.html",[3,0.187,4,0.168,5,0.168,14,0.012,15,0.293,20,0.224,25,0.968,32,0.008,33,0.01,34,0.008,35,0.27,37,1.139,78,1.103,129,3.614,130,1.877,132,4.116,135,2.457,264,3.614,281,2.865,305,4.733,306,3.614,315,4.07,331,4.733,963,4.733,964,5.227]],["title/classes/LoginResDto.html",[35,0.156,315,2.817]],["body/classes/LoginResDto.html",[3,0.181,4,0.162,5,0.162,9,0.486,10,1.298,13,0.532,14,0.012,15,0.288,20,0.219,25,0.937,32,0.008,33,0.01,34,0.008,35,0.265,37,1.103,61,0.969,78,1.298,129,3.498,130,1.817,132,3.321,135,2.378,264,3.498,281,2.773,305,4.581,306,3.498,315,4.787,331,5.998,963,4.581,964,5.059,965,5.785]],["title/modules/MailModule.html",[184,1.342,199,2.817]],["body/modules/MailModule.html",[3,0.173,4,0.155,5,0.155,14,0.012,15,0.28,20,0.173,32,0.008,33,0.01,34,0.008,35,0.209,160,1.313,184,2.409,186,2.549,187,2.653,188,2.891,189,2.891,190,2.653,191,3.878,192,3.712,199,5.605,204,3.573,205,2.767,206,2.653,303,5.152,966,4.842,967,4.842,968,5.536,969,5.536,970,5.536]],["title/injectables/MailService.html",[241,1.432,303,2.502]],["body/injectables/MailService.html",[3,0.18,4,0.12,5,0.12,9,0.358,10,1.067,13,0.532,14,0.012,15,0.3,17,1.298,18,1.692,20,0.133,32,0.006,33,0.008,34,0.006,35,0.161,39,1.504,42,2.345,61,1.23,63,1.339,64,0.839,65,0.981,67,1.458,147,2.795,160,1.012,161,2.903,181,1.815,219,2.448,225,2.068,226,4.463,241,2,242,2.227,303,3.495,326,4.582,332,2.044,362,5.054,400,3.115,479,3.378,592,1.692,608,1.819,774,2.729,781,3.115,971,3.73,972,6.554,973,7.026,974,5.779,975,5.779,976,4.265,977,5.779,978,6.554,979,4.265,980,4.265,981,4.265,982,6.554,983,5.732,984,5.779,985,3.73,986,4.265,987,4.265,988,4.265,989,4.265,990,4.265,991,4.265,992,4.265,993,4.265,994,4.265,995,4.265,996,4.265,997,4.265,998,5.779,999,3.73,1000,4.265,1001,4.265,1002,4.265,1003,4.265,1004,4.265,1005,4.265,1006,4.265]],["title/interfaces/Mailer.html",[0,1.111,774,2.647]],["body/interfaces/Mailer.html",[0,1.861,2,2.036,3,0.149,4,0.134,5,0.134,9,0.401,10,1.15,13,0.573,14,0.012,17,1.452,20,0.149,26,1.499,32,0.007,33,0.009,34,0.007,64,1.225,78,1.556,149,3.323,161,2.758,229,1.708,234,4.444,507,4.548,508,4.548,770,3.486,771,4.932,772,4.932,773,4.932,774,4.877,775,5.365,776,4.932,777,4.932,778,4.548,779,4.241,780,5.565,781,5.565,782,3.78,783,3.78,784,3.78,785,3.78,786,3.78,787,3.78,788,3.78,789,3.78,790,3.251,791,3.251,792,3.78,793,3.78,794,3.78,795,3.78]],["title/classes/PagedCategoryOutDto.html",[35,0.156,661,2.817]],["body/classes/PagedCategoryOutDto.html",[3,0.182,4,0.163,5,0.163,14,0.012,15,0.311,20,0.22,25,1.143,32,0.008,33,0.01,34,0.008,35,0.286,37,1.11,64,1.145,78,1.303,131,2.394,419,2.578,569,2.23,571,3.527,645,3.726,661,4.806,738,2.791,756,2.578,759,4.611,760,2.791,761,3.726,763,3.726,768,3.342,769,5.092]],["title/classes/PagedCourseOutputDto.html",[35,0.156,822,2.817]],["body/classes/PagedCourseOutputDto.html",[3,0.166,4,0.149,5,0.149,14,0.012,15,0.329,20,0.208,25,1.082,32,0.007,33,0.009,34,0.007,35,0.288,37,1.015,78,1.347,124,5.289,130,1.672,131,2.189,149,2.552,151,3.989,181,1.474,419,2.358,569,2.039,571,3.338,675,2.552,738,2.552,756,2.358,760,2.552,761,3.407,763,3.407,768,3.056,798,4.216,799,3.887,808,3.407,809,4.216,817,6.382,818,3.625,819,4.877,820,3.887,821,4.656,822,4.547,823,4.656]],["title/classes/PagedInputDto.html",[35,0.156,1007,3.276]],["body/classes/PagedInputDto.html",[3,0.153,4,0.138,5,0.138,9,0.412,10,1.17,13,0.683,14,0.012,15,0.201,17,1.928,20,0.153,32,0.007,33,0.009,34,0.007,35,0.239,37,0.935,61,1.243,65,1.867,78,1.37,123,1.873,131,2.016,149,3.558,559,3.667,592,2.514,801,4.056,910,5.613,1007,5.019,1008,4.288,1009,6.142,1010,7.023,1011,7.023,1012,6.338,1013,8.012,1014,4.904,1015,4.904,1016,4.904,1017,4.904,1018,4.904,1019,4.904,1020,7.023]],["title/classes/PagedTrackOutputDto.html",[35,0.156,1021,2.817]],["body/classes/PagedTrackOutputDto.html",[3,0.178,4,0.16,5,0.16,14,0.012,15,0.321,20,0.218,25,1.13,32,0.008,33,0.01,34,0.008,35,0.284,37,1.089,78,1.288,131,2.348,419,2.529,569,2.188,571,3.486,675,2.738,738,2.738,756,2.529,760,2.738,761,3.655,763,3.655,768,3.279,819,5.094,820,4.171,854,3.655,1021,4.75,1022,4.523,1023,4.995]],["title/classes/PagedUserOutputDto.html",[35,0.156,1024,2.817]],["body/classes/PagedUserOutputDto.html",[3,0.168,4,0.151,5,0.151,14,0.012,15,0.323,20,0.21,25,1.09,32,0.008,33,0.009,34,0.008,35,0.277,37,1.027,78,1.354,130,1.692,131,2.215,135,2.215,151,3.678,419,2.386,442,3.249,510,3.092,569,2.063,571,3.363,738,2.582,756,2.386,768,3.092,861,2.945,1024,4.581,1025,4.266,1026,5.884,1027,4.711,1028,4.711,1029,6.417,1030,4.266,1031,4.266,1032,4.711,1033,3.934,1034,4.266,1035,4.711]],["title/classes/PasswordToken.html",[35,0.156,1036,3.276]],["body/classes/PasswordToken.html",[3,0.091,4,0.082,5,0.082,9,0.446,10,0.815,13,0.735,14,0.012,15,0.181,17,2.26,20,0.091,21,0.891,25,0.715,26,1.386,32,0.004,33,0.006,34,0.004,35,0.11,37,0.558,39,1.149,61,1.338,65,1.758,67,1.492,78,0.981,80,1.478,112,1.297,114,3.966,123,1.929,181,2.284,229,2.7,240,3.171,268,3.196,321,3.005,323,1.994,345,2.265,351,2.669,375,3.07,422,4.429,447,2.265,518,3.495,573,2.265,574,1.882,581,2.669,582,2.669,583,2.669,584,3.576,585,3.212,586,2.669,587,3.212,588,3.212,589,3.212,592,2.645,593,4.033,595,4.186,596,3.394,597,3.576,607,3.212,608,2.522,620,2.669,698,3.285,741,2.824,743,1.874,744,1.874,745,1.874,746,1.874,747,1.874,748,1.874,749,1.874,750,1.874,751,1.874,752,1.874,753,1.874,754,1.874,755,1.874,805,3.005,1036,3.495,1037,2.561,1038,2.138,1039,2.928,1040,2.928,1041,2.319,1042,2.928,1043,2.561,1044,2.928,1045,3.86,1046,2.928,1047,2.138,1048,2.561,1049,2.928,1050,2.561]],["title/controllers/ProfileController.html",[7,1.905,1051,3.021]],["body/controllers/ProfileController.html",[3,0.15,4,0.135,5,0.135,7,2.209,9,0.403,13,0.442,14,0.012,15,0.326,20,0.15,32,0.007,33,0.009,34,0.007,35,0.236,39,1.626,42,2.487,61,0.804,63,1.507,64,0.944,65,1.104,67,1.211,71,2.665,123,1.211,130,1.507,135,1.973,160,1.138,174,2.398,180,3.268,181,1.329,182,1.776,225,1.717,229,2.236,250,4.197,294,3.071,307,3.263,308,3.504,332,2.3,345,2.665,547,3.844,549,3.071,655,2.755,670,3.268,689,4.203,818,3.268,861,2.624,1051,4.564,1052,4.197,1053,4.799,1054,6.25,1055,4.799,1056,4.799,1057,4.799,1058,5.466,1059,4.799,1060,3.801,1061,3.801,1062,4.799,1063,4.799,1064,4.799,1065,4.799,1066,4.799,1067,4.799,1068,4.799,1069,4.799,1070,4.799]],["title/modules/ProfileModule.html",[184,1.342,200,2.817]],["body/modules/ProfileModule.html",[3,0.165,4,0.148,5,0.148,14,0.012,15,0.312,20,0.165,32,0.007,33,0.009,34,0.007,35,0.199,160,1.252,174,3.319,184,2.357,186,2.429,187,2.529,188,2.755,189,2.755,190,2.529,191,3.468,192,3.632,200,5.547,203,4.853,204,3.468,205,2.637,206,2.529,208,3.631,223,4.179,307,4.302,308,3.853,1051,5.307,1071,4.615,1072,5.277,1073,4.615,1074,5.277,1075,5.277]],["title/classes/RegisterUserDto.html",[35,0.156,264,2.502]],["body/classes/RegisterUserDto.html",[3,0.171,4,0.154,5,0.154,9,0.461,10,1.256,13,0.505,14,0.012,15,0.303,20,0.212,25,0.889,26,1.723,32,0.008,33,0.01,34,0.008,35,0.279,37,1.045,61,0.919,78,1.256,80,1.837,123,1.384,130,1.723,131,2.255,181,1.519,264,4.115,267,3.735,281,3.545,306,3.317,349,4.344,510,3.149,573,2.339,574,2.339,859,4.006,860,4.344,861,2.999,862,4.344,1076,5.389,1077,5.951,1078,5.486,1079,4.797]],["title/classes/RegisterUserResDto.html",[35,0.156,267,2.817]],["body/classes/RegisterUserResDto.html",[3,0.172,4,0.154,5,0.154,9,0.462,10,1.258,13,0.506,14,0.012,15,0.303,20,0.213,25,0.891,26,2.141,32,0.008,33,0.01,34,0.008,35,0.279,37,1.049,61,0.921,78,1.016,80,1.843,130,1.728,131,2.262,181,2.051,264,3.328,267,4.642,281,2.637,306,3.328,349,5.866,510,3.158,573,2.347,574,2.347,859,4.018,860,4.357,861,3.008,862,4.357,1076,5.399,1077,4.812,1079,4.812,1080,5.502]],["title/classes/ResetPassInput.html",[35,0.156,271,2.817]],["body/classes/ResetPassInput.html",[3,0.173,4,0.156,5,0.156,9,0.467,10,1.266,13,0.631,14,0.012,15,0.28,20,0.173,25,1.111,32,0.008,33,0.01,34,0.008,35,0.258,37,1.058,61,1.148,78,1.373,123,1.73,126,6.151,131,2.283,271,4.669,284,5.289,320,4.857,351,4.146,387,5.89,698,2.283,930,4.398,1081,5.996,1082,4.857,1083,5.553,1084,5.553]],["title/guards/RolesGuard.html",[535,3.276,656,2.502]],["body/guards/RolesGuard.html",[3,0.149,4,0.134,5,0.134,9,0.401,13,0.573,14,0.012,15,0.32,20,0.149,26,1.956,32,0.007,33,0.009,34,0.007,35,0.18,39,1.621,61,1.043,63,1.956,64,1.225,65,1.432,67,1.204,147,2.036,160,1.132,161,2.114,180,3.251,182,2.305,219,2.74,225,2.48,229,1.708,241,2.156,442,2.758,443,2.288,487,3.985,488,3.78,489,3.78,490,3.251,510,2.74,536,3.78,538,5.819,542,4.932,543,5.819,545,3.78,547,3.252,549,3.055,550,4.175,552,3.78,556,4.175,653,3.985,656,3.767,953,3.78,1085,4.175,1086,4.774,1087,7.816,1088,4.774,1089,4.774,1090,4.774,1091,4.774,1092,4.774]],["title/injectables/SessionSerializer.html",[241,1.432,415,2.817]],["body/injectables/SessionSerializer.html",[3,0.15,4,0.135,5,0.135,9,0.403,13,0.575,14,0.012,15,0.284,20,0.15,25,1.012,32,0.007,33,0.009,34,0.007,35,0.181,39,1.626,61,1.047,63,1.963,64,1.23,65,1.437,67,1.577,139,4.564,160,1.138,241,2.163,242,2.506,345,3.635,400,3.504,415,4.256,421,3.071,443,2.3,608,3.14,726,4.711,916,4.564,1093,4.197,1094,6.95,1095,6.25,1096,6.25,1097,6.25,1098,7.828,1099,6.25,1100,4.799,1101,6.25,1102,4.799,1103,6.25,1104,4.799]],["title/modules/SharedModule.html",[184,1.342,201,2.647]],["body/modules/SharedModule.html",[3,0.16,4,0.144,5,0.144,14,0.012,15,0.309,20,0.16,32,0.007,33,0.009,34,0.007,35,0.193,64,1.009,114,2.562,115,4.484,160,1.216,184,2.325,186,2.36,187,2.457,188,2.677,189,2.677,190,2.457,191,3.744,192,3.584,201,5.179,204,3.405,205,2.562,206,2.457,208,2.803,211,2.943,212,2.27,225,1.834,430,3.1,432,2.943,687,4.841,1105,4.484,1106,4.484,1107,4.484,1108,4.06,1109,6.521,1110,5.127,1111,5.679,1112,4.484,1113,4.484]],["title/injectables/TempTokensService.html",[241,1.432,416,2.647]],["body/injectables/TempTokensService.html",[3,0.068,4,0.061,5,0.061,9,0.182,10,0.645,13,0.729,14,0.012,15,0.225,17,2.022,20,0.068,22,1.04,23,2.537,25,0.566,32,0.003,33,0.005,34,0.003,35,0.082,39,0.909,41,2.236,42,2.681,43,2.236,44,2.236,45,2.236,46,1.746,47,2.236,48,2.113,49,2.236,50,2.236,51,2.236,52,2.236,53,2.236,54,2.236,55,2.236,56,2.236,57,2.236,58,1.547,59,2.236,60,1.389,61,1.339,63,2.463,64,1.543,65,1.804,66,4.254,67,1.99,68,1.389,69,1.389,71,2.835,72,1.389,74,1.312,75,1.389,77,1.389,78,1.383,80,2.157,81,3.744,82,1.389,84,1.389,86,1.389,88,1.389,90,1.389,92,1.389,94,2.314,95,1.389,97,1.389,99,1.389,101,1.389,103,1.389,105,1.389,106,3.217,107,3.768,109,1.389,112,0.961,123,0.548,147,1.49,160,0.515,181,1.214,212,0.961,218,1.898,241,1.209,242,1.133,322,1.585,323,1.478,326,2.886,416,2.236,422,1.389,547,1.133,559,1.824,592,2.637,608,0.925,621,3.04,687,4.625,688,4.526,689,2.113,690,2.379,691,2.986,692,2.379,693,2.379,694,2.986,696,3.526,698,3.273,699,1.478,700,1.478,701,1.478,702,4.957,703,1.478,704,1.478,705,1.478,706,1.478,707,1.478,708,1.478,709,1.478,710,1.478,711,1.478,712,1.478,713,1.478,714,1.478,715,1.478,716,1.478,717,1.478,718,1.478,719,1.478,720,1.478,721,1.478,722,1.478,723,1.478,724,2.379,725,1.478,726,1.389,727,1.478,728,1.478,729,1.478,730,1.478,731,1.478,732,1.478,733,1.478,1114,3.055,1115,1.898,1116,2.17,1117,2.17,1118,3.494,1119,2.17,1120,2.17]],["title/classes/TemporaryToken.html",[35,0.156,422,2.647]],["body/classes/TemporaryToken.html",[3,0.083,4,0.074,5,0.074,9,0.472,10,0.756,13,0.74,14,0.012,15,0.204,17,2.202,20,0.128,21,0.807,25,0.663,26,1.285,32,0.004,33,0.006,34,0.004,35,0.1,37,0.505,39,1.065,61,1.316,65,1.719,67,1.418,78,1.121,80,1.371,112,1.175,114,3.979,123,1.886,135,1.09,181,2.286,229,2.791,240,3.342,268,3.075,281,1.271,321,4.134,345,2.852,351,3.022,375,3.179,422,2.619,443,1.271,447,2.131,518,4.449,573,1.745,574,1.745,581,2.475,582,2.475,583,2.475,584,3.398,585,3.022,586,2.475,587,3.022,588,3.022,589,3.022,592,2.545,593,3.88,595,4.377,596,3.225,597,3.398,607,3.022,608,2.396,617,3.885,620,3.88,698,3.113,741,3.885,743,1.697,744,1.697,745,1.697,746,1.697,747,1.697,748,1.697,749,1.697,750,1.697,751,1.697,752,1.697,753,1.697,754,1.697,755,1.697,757,1.806,801,1.697,805,3.403,1033,2.989,1038,1.937,1041,2.1,1043,2.32,1045,3.579,1047,1.937,1048,2.32,1050,2.32,1121,4.808,1122,2.652,1123,2.652,1124,2.652,1125,2.652,1126,2.32,1127,2.32,1128,2.652]],["title/classes/Track.html",[35,0.156,1129,2.647]],["body/classes/Track.html",[3,0.092,4,0.083,5,0.083,9,0.449,10,0.822,13,0.696,14,0.012,15,0.219,17,2.266,20,0.092,21,0.901,25,0.721,26,1.398,32,0.004,33,0.006,34,0.004,35,0.112,37,0.564,39,1.158,61,1.322,65,1.644,67,1.501,78,1.177,80,1.491,112,1.312,114,4.046,123,1.88,181,2.271,229,2.911,240,3.473,268,3.426,375,2.738,419,1.312,447,2.281,573,1.898,574,1.898,581,2.692,582,2.692,583,2.692,584,3.597,585,3.234,586,2.692,587,3.234,588,3.234,589,3.234,592,2.657,593,4.051,595,4.051,596,3.414,597,3.597,607,3.234,608,2.536,617,3.422,620,2.692,675,2.851,698,3.186,738,2.851,739,4.343,740,4.343,741,4.08,743,1.895,744,1.895,745,1.895,746,1.895,747,1.895,748,1.895,749,1.895,750,1.895,751,1.895,752,1.895,753,1.895,754,1.895,755,1.895,756,1.312,757,2.017,758,2.345,760,2.563,805,2.017,806,2.59,1129,2.849,1130,2.59,1131,2.962,1132,2.962]],["title/classes/TrackDto.html",[35,0.156,854,2.647]],["body/classes/TrackDto.html",[3,0.147,4,0.132,5,0.132,9,0.396,10,1.14,13,0.698,14,0.012,15,0.299,20,0.193,25,1.116,32,0.007,33,0.009,34,0.007,35,0.26,37,0.898,61,1.271,78,1.401,80,2.068,123,1.915,131,1.937,151,3.376,181,2.156,375,2.843,419,2.086,569,1.804,571,3.892,573,2.633,574,2.633,576,3.208,675,3.302,698,2.832,738,2.258,756,2.086,760,3.302,761,3.951,763,3.015,765,3.44,766,3.44,767,3.44,768,2.704,819,4.509,820,3.44,854,3.951,1021,3.208,1022,3.731,1023,4.12,1133,4.711,1134,4.711,1135,4.711]],["title/classes/TracksController.html",[35,0.156,1136,3.021]],["body/classes/TracksController.html",[3,0.122,4,0.109,5,0.109,9,0.327,13,0.678,14,0.012,15,0.331,18,1.546,20,0.122,21,1.185,25,0.631,32,0.005,33,0.008,34,0.005,35,0.147,37,0.743,39,1.413,42,2.237,58,1.726,61,0.652,63,1.224,64,0.767,65,0.896,67,0.983,71,2.316,94,1.794,123,0.983,130,1.224,136,3.881,144,4.604,159,2.493,160,0.924,182,1.442,225,1.394,262,3.698,268,2.603,288,2.845,289,2.845,292,3.966,294,2.493,297,4.938,301,3.408,302,3.086,332,1.868,337,2.845,339,3.698,341,2.237,343,2.845,344,2.845,442,1.726,443,1.868,446,3.117,447,1.662,563,2.13,565,2.356,567,2.356,569,1.492,641,3.408,642,3.086,644,3.086,646,3.086,647,3.086,648,3.086,649,3.086,651,3.475,653,2.493,654,3.086,655,2.237,656,3.284,665,3.966,666,4.95,667,3.086,668,3.408,669,3.086,670,2.653,671,3.086,672,3.086,673,3.086,674,3.086,675,2.603,678,3.086,831,3.408,851,5.377,854,4.327,1021,3.698,1060,3.086,1061,3.086,1129,3.475,1136,3.966,1137,3.408,1138,3.897,1139,3.408,1140,3.408,1141,3.408,1142,3.897,1143,3.897,1144,3.086,1145,3.475,1146,3.408,1147,3.897]],["title/modules/TracksModule.html",[184,1.342,202,2.817]],["body/modules/TracksModule.html",[3,0.155,4,0.139,5,0.139,14,0.012,15,0.323,20,0.155,32,0.007,33,0.009,34,0.007,35,0.187,64,0.978,160,1.179,174,2.484,184,2.292,186,2.289,187,2.383,188,2.596,189,2.596,190,2.383,191,3.338,192,3.533,201,5.056,202,5.473,204,3.338,205,2.484,206,2.383,208,3.496,211,2.854,212,2.201,225,1.779,430,3.006,432,2.854,1129,3.181,1136,4.669,1144,3.937,1145,5.21,1146,4.348,1148,4.348,1149,4.971,1150,4.348,1151,3.937,1152,4.971,1153,4.971,1154,5.598,1155,4.348,1156,4.348]],["title/classes/TracksService.html",[35,0.156,1145,2.647]],["body/classes/TracksService.html",[3,0.068,4,0.062,5,0.062,9,0.184,10,0.651,13,0.73,14,0.012,15,0.207,17,2.03,20,0.068,22,1.051,23,2.551,25,0.571,32,0.003,33,0.005,34,0.003,35,0.083,37,0.418,39,0.917,41,2.255,42,2.687,43,2.255,44,2.255,45,2.255,46,1.761,47,2.255,48,2.131,49,2.255,50,2.255,51,2.255,52,2.255,53,2.255,54,2.255,55,2.255,56,2.255,57,2.255,58,1.561,59,2.255,60,1.404,61,1.341,63,2.467,64,1.546,65,1.807,66,4.269,67,1.993,68,1.404,69,1.404,71,2.845,72,1.404,74,1.327,75,1.404,77,1.404,78,1.386,80,2.166,81,3.761,82,1.404,84,1.404,86,1.404,88,1.404,90,1.404,92,1.404,94,2.724,95,1.404,97,1.404,99,1.404,101,1.404,103,1.404,105,1.404,106,3.237,107,3.786,109,1.404,112,0.972,123,0.554,147,1.503,181,1.223,212,0.972,326,2.904,547,1.145,559,1.84,592,2.647,608,0.936,621,3.059,687,4.632,688,4.543,689,2.131,690,2.4,691,3.008,692,2.4,693,2.4,694,3.008,695,1.737,696,3.546,698,3.278,699,1.494,700,1.494,701,1.494,702,4.967,703,1.494,704,1.494,705,1.494,706,1.494,707,1.494,708,1.494,709,1.494,710,1.494,711,1.494,712,1.494,713,1.494,714,1.494,715,1.494,716,1.494,717,1.494,718,1.494,719,1.494,720,1.494,721,1.494,722,1.494,723,1.494,724,2.4,725,1.494,726,1.404,727,1.494,728,1.494,729,1.494,730,1.494,731,1.494,732,1.494,733,1.494,734,1.737,736,1.737,1129,1.404,1144,1.737,1145,2.255,1157,1.919,1158,2.194,1159,2.194]],["title/classes/User.html",[35,0.156,345,1.764]],["body/classes/User.html",[3,0.061,4,0.055,5,0.055,9,0.343,10,0.592,11,2.978,13,0.693,14,0.012,15,0.253,17,2.272,20,0.1,21,0.975,25,0.519,26,1.482,32,0.003,33,0.004,34,0.003,35,0.121,37,0.372,39,0.834,42,0.698,61,1.312,64,0.63,65,1.516,67,1.494,78,1.296,80,1.073,112,0.864,114,3.765,123,1.846,135,1.941,149,1.536,160,0.463,181,2.281,182,1.186,229,2.922,240,3.375,268,3.305,281,1.954,332,0.935,341,1.12,345,1.739,375,2.58,385,1.329,419,0.864,442,2.309,447,1.739,480,1.545,496,1.707,498,1.545,510,2.341,525,3.566,573,1.367,574,1.367,581,1.938,582,1.938,583,1.938,584,2.855,585,2.466,586,1.938,587,2.466,588,2.466,589,2.466,590,2.803,592,2.349,593,3.986,595,3.389,596,2.71,597,3.153,607,2.466,608,2.637,617,4.098,619,1.545,620,3.739,621,1.18,634,1.707,696,2.051,698,2.886,738,2.964,739,4.092,740,4.092,741,3.789,743,1.249,744,1.249,745,1.249,746,1.249,747,1.249,748,1.249,749,1.249,750,1.249,751,1.249,752,1.249,753,1.249,754,1.249,755,1.249,756,0.864,757,1.329,801,2.051,805,1.329,818,1.329,916,1.425,1030,3.229,1031,3.229,1033,2.34,1034,3.229,1041,1.545,1160,1.545,1161,4.078,1162,4.078,1163,4.721,1164,4.721,1165,4.078,1166,3.205,1167,1.952,1168,1.952,1169,1.952,1170,1.952,1171,1.952,1172,1.952,1173,1.952,1174,1.952,1175,1.952,1176,1.952,1177,1.952,1178,1.952,1179,1.952,1180,3.205,1181,2.803,1182,1.952,1183,1.952,1184,1.952,1185,1.952,1186,1.952,1187,1.952,1188,3.205,1189,4.078,1190,1.952,1191,2.803,1192,2.803,1193,2.803,1194,2.803,1195,1.952,1196,3.205,1197,1.952,1198,1.952,1199,1.952,1200,4.721,1201,1.952,1202,1.952,1203,1.952,1204,1.952,1205,1.952,1206,1.952]],["title/classes/UserDto.html",[35,0.156,861,2.262]],["body/classes/UserDto.html",[3,0.131,4,0.118,5,0.118,9,0.353,10,1.057,13,0.71,14,0.012,15,0.299,17,1.279,20,0.179,25,1.054,32,0.006,33,0.008,34,0.006,35,0.245,37,0.802,61,1.292,65,1.316,78,1.424,80,1.917,123,1.946,130,1.321,131,1.729,135,2.675,151,3.819,181,2.087,375,2.635,419,1.862,442,3.236,510,3.735,569,1.611,571,3.767,573,2.441,574,2.441,576,2.864,592,1.668,698,2.675,738,2.016,756,1.862,765,3.071,766,3.071,767,3.071,768,2.414,861,3.129,1024,2.864,1025,3.331,1026,5.006,1027,3.678,1028,3.678,1029,6.39,1030,5.153,1031,5.153,1032,3.678,1033,3.071,1034,4.533,1035,3.678,1207,4.206,1208,4.206,1209,4.206,1210,4.206,1211,4.206,1212,4.206]],["title/classes/UsersController.html",[35,0.156,1213,3.021]],["body/classes/UsersController.html",[3,0.15,4,0.135,5,0.135,13,0.442,14,0.012,15,0.334,18,1.904,20,0.15,25,0.777,32,0.007,33,0.009,34,0.007,35,0.181,37,0.915,46,2.398,58,2.125,61,0.804,63,1.507,64,0.944,65,1.104,94,2.209,130,1.507,147,2.047,160,1.138,181,1.329,294,3.071,306,2.902,307,4.087,345,2.665,442,2.125,445,3.071,446,2.755,447,2.047,457,4.197,563,2.624,565,2.902,567,2.902,569,1.838,651,3.999,655,2.755,656,3.78,665,5.575,667,3.801,670,3.268,857,5.075,861,3.417,1024,4.256,1058,5.466,1060,3.801,1061,3.801,1139,4.197,1140,4.197,1141,4.197,1213,4.564,1214,4.197,1215,4.799,1216,4.799,1217,3.801,1218,4.197,1219,4.799]],["title/modules/UsersModule.html",[184,1.342,203,2.502]],["body/modules/UsersModule.html",[3,0.162,4,0.145,5,0.145,14,0.012,15,0.32,20,0.162,32,0.007,33,0.009,34,0.007,35,0.195,64,1.02,160,1.23,174,2.592,184,2.338,186,2.387,187,2.486,188,2.708,189,2.708,190,2.486,191,3.43,192,3.603,203,4.729,204,3.43,205,2.592,206,2.486,208,2.835,211,2.977,212,2.296,225,1.855,307,4.287,345,2.212,430,3.136,432,2.977,1213,4.797,1217,4.107,1218,4.535,1220,5.186,1221,5.186,1222,4.107,1223,5.186,1224,5.71,1225,4.535,1226,4.535]],["title/classes/UsersService.html",[35,0.156,307,2.16]],["body/classes/UsersService.html",[3,0.068,4,0.062,5,0.062,9,0.184,10,0.651,13,0.73,14,0.012,15,0.207,17,2.03,20,0.068,22,1.051,23,2.551,25,0.571,32,0.003,33,0.005,34,0.003,35,0.083,37,0.418,39,0.917,41,2.255,42,2.687,43,2.255,44,2.255,45,2.255,46,1.761,47,2.255,48,2.131,49,2.255,50,2.255,51,2.255,52,2.255,53,2.255,54,2.255,55,2.255,56,2.255,57,2.255,58,1.561,59,2.255,60,1.404,61,1.341,63,2.467,64,1.546,65,1.807,66,4.269,67,1.993,68,1.404,69,1.404,71,2.845,72,1.404,74,1.327,75,1.404,77,1.404,78,1.386,80,2.166,81,3.761,82,1.404,84,1.404,86,1.404,88,1.404,90,1.404,92,1.404,94,2.329,95,1.404,97,1.404,99,1.404,101,1.404,103,1.404,105,1.404,106,3.237,107,3.786,109,1.404,112,0.972,123,0.554,147,1.503,181,1.223,212,0.972,307,1.84,326,2.904,345,0.936,547,1.145,559,1.84,592,2.647,608,0.936,621,3.059,687,4.632,688,4.543,689,2.131,690,2.4,691,3.008,692,2.4,693,2.4,694,3.008,696,3.546,698,3.278,699,1.494,700,1.494,701,1.494,702,4.967,703,1.494,704,1.494,705,1.494,706,1.494,707,1.494,708,1.494,709,1.494,710,1.494,711,1.494,712,1.494,713,1.494,714,1.494,715,1.494,716,1.494,717,1.494,718,1.494,719,1.494,720,1.494,721,1.494,722,1.494,723,1.494,724,2.4,725,1.494,726,1.404,727,1.494,728,1.494,729,1.494,730,1.494,731,1.494,732,1.494,733,1.494,1217,1.737,1227,1.919,1228,2.194,1229,2.194,1230,3.525,1231,2.194,1232,2.194,1233,2.194]],["title/classes/ValidateTokenInput.html",[35,0.156,284,2.817]],["body/classes/ValidateTokenInput.html",[3,0.178,4,0.16,5,0.16,9,0.48,10,1.288,13,0.526,14,0.012,15,0.308,20,0.178,25,0.925,32,0.008,33,0.01,34,0.008,35,0.263,37,1.089,61,0.956,78,1.288,123,1.441,126,5.964,129,3.454,130,1.794,131,2.348,132,3.279,133,4.995,134,4.995,135,2.348,284,4.75,351,4.554,1234,6.101,1235,4.995,1236,5.712]],["title/coverage.html",[1237,4.95]],["body/coverage.html",[0,1.924,1,1.357,5,0.056,6,3.021,7,2.97,8,3.021,13,0.183,14,0.012,16,0.955,18,2.245,21,0.606,24,1.357,27,1.357,32,0.003,33,0.005,34,0.003,35,0.31,36,1.578,38,1.743,114,0.996,117,1.455,118,1.743,119,1.743,132,1.144,136,1.144,137,1.743,138,1.743,161,0.882,173,1.455,175,1.743,178,1.275,184,0.646,190,0.955,207,2.582,220,1.578,226,2.22,234,1.971,241,2.297,243,1.743,248,1.455,249,1.743,264,1.205,267,1.357,271,1.357,284,1.357,303,1.205,307,1.04,309,1.144,311,1.455,315,1.357,345,0.85,392,1.357,393,1.743,413,1.357,414,1.357,415,1.357,416,1.275,417,1.578,418,1.455,422,1.275,437,1.275,438,3.021,439,3.021,444,1.275,448,1.743,483,1.578,485,1.578,487,1.275,535,2.582,537,1.743,557,1.357,558,3.021,559,2.16,560,3.021,561,1.357,562,1.357,569,0.763,571,0.996,572,1.743,579,1.743,636,1.455,637,1.743,639,1.275,643,1.455,645,1.275,651,1.275,653,2.086,655,1.144,656,1.205,659,1.275,661,1.357,681,1.578,683,1.578,686,1.743,687,1.144,737,1.743,756,0.882,759,2.582,770,3.021,774,1.275,796,1.275,797,1.743,801,5.516,808,1.275,809,2.582,822,1.357,824,1.455,825,1.743,826,1.455,835,1.357,836,1.578,839,1.578,842,1.743,845,1.743,846,1.743,848,1.743,849,1.743,851,1.455,852,1.743,853,1.743,854,1.275,857,1.455,858,1.743,859,3.021,861,1.089,864,2.582,865,2.582,869,1.578,870,1.578,876,1.578,877,1.743,878,1.743,909,1.578,910,3.021,911,2.582,916,3.491,918,1.743,919,1.743,927,1.743,928,1.743,929,1.743,945,1.743,963,2.582,971,1.743,1007,1.578,1008,1.743,1021,1.357,1022,2.582,1024,1.357,1025,2.582,1036,1.578,1037,1.743,1038,2.38,1051,1.455,1052,1.743,1076,2.582,1081,1.743,1082,1.743,1085,1.743,1093,1.743,1108,1.578,1111,1.578,1114,1.743,1115,1.743,1121,1.578,1129,1.275,1130,1.743,1136,1.455,1137,1.743,1145,1.275,1151,1.578,1154,1.578,1157,1.743,1160,1.578,1213,1.455,1214,1.743,1222,1.578,1224,1.578,1227,1.743,1234,1.743,1235,1.743,1237,1.743,1238,1.578,1239,1.993,1240,1.993,1241,7.43,1242,7.819,1243,8.185,1244,1.993,1245,3.26,1246,1.743,1247,1.743,1248,4.78,1249,6.638,1250,4.137,1251,4.137,1252,5.66,1253,1.993,1254,1.993,1255,5.272,1256,3.26,1257,2.582,1258,4.137,1259,2.851,1260,1.743,1261,1.743,1262,1.743,1263,1.743,1264,1.743,1265,1.578,1266,1.743,1267,1.743,1268,1.743,1269,1.743,1270,1.743,1271,1.743,1272,1.743,1273,1.993,1274,1.743,1275,1.993,1276,1.993,1277,1.993,1278,1.993,1279,3.618,1280,3.618,1281,1.743,1282,1.743,1283,1.743,1284,1.743,1285,1.743,1286,1.993,1287,1.993,1288,1.993,1289,1.993,1290,1.993,1291,1.993]],["title/dependencies.html",[187,2.387,1292,3.448]],["body/dependencies.html",[14,0.012,32,0.006,33,0.008,34,0.006,35,0.224,112,1.963,113,3.511,130,1.392,131,1.823,160,1.052,187,2.125,210,3.877,212,1.963,402,3.511,421,2.837,436,4.697,479,3.511,480,3.511,481,3.237,482,3.877,492,3.877,493,3.877,549,4.567,818,3.019,868,3.877,923,3.877,937,5.293,953,3.511,954,3.511,983,5.187,985,3.877,1009,3.877,1265,3.511,1293,4.433,1294,4.433,1295,4.433,1296,4.433,1297,4.433,1298,4.433,1299,4.433,1300,4.433,1301,7.439,1302,4.433,1303,4.433,1304,4.433,1305,4.433,1306,4.433,1307,4.433,1308,4.433,1309,4.433,1310,4.433,1311,4.433,1312,4.433,1313,4.433,1314,4.433,1315,4.433,1316,4.433,1317,4.433,1318,4.433,1319,4.433,1320,4.433,1321,5.931,1322,4.433,1323,4.433,1324,4.433,1325,4.433,1326,4.433,1327,4.433,1328,4.433,1329,4.433,1330,4.433,1331,4.433,1332,4.433,1333,4.433,1334,4.433,1335,4.433,1336,4.433,1337,4.433,1338,4.433,1339,5.931,1340,4.433,1341,4.433,1342,4.433,1343,4.433,1344,4.433,1345,4.433,1346,4.433,1347,4.433,1348,4.433,1349,4.433]],["title/miscellaneous/enumerations.html",[1350,1.979,1351,4.355]],["body/miscellaneous/enumerations.html",[9,0.485,14,0.012,32,0.008,33,0.01,34,0.008,135,2.371,281,2.764,321,4.778,403,5.556,442,3.107,592,3.293,1038,5.123,1121,4.567,1126,5.043,1127,5.043,1160,4.567,1191,6.136,1192,6.136,1193,6.136,1194,6.136,1350,3.31,1351,5.043,1352,5.766,1353,5.766,1354,5.766,1355,5.766,1356,5.766,1357,5.766]],["title/miscellaneous/functions.html",[1350,1.979,1358,4.355]],["body/miscellaneous/functions.html",[9,0.478,13,0.524,14,0.012,32,0.008,33,0.01,34,0.008,63,2.362,64,1.48,65,1.729,67,1.898,190,3.605,563,3.113,569,2.667,651,4.455,910,4.157,911,5.513,1047,5.084,1257,4.509,1260,4.979,1261,6.089,1262,6.089,1263,4.979,1350,3.268,1358,4.979,1359,5.694,1360,5.694,1361,4.979,1362,5.694,1363,5.694,1364,5.694,1365,5.694]],["title/index.html",[9,0.29,1366,3.016,1367,3.016]],["body/index.html",[4,0.131,14,0.009,32,0.007,33,0.009,34,0.007,143,4.088,206,2.945,371,5.373,445,2.991,547,2.441,954,3.702,1181,4.088,1238,3.702,1368,6.862,1369,6.143,1370,6.143,1371,4.675,1372,6.143,1373,7.771,1374,4.675,1375,4.675,1376,4.675,1377,4.675,1378,4.675,1379,6.143,1380,4.675,1381,6.143,1382,4.675,1383,4.675,1384,4.088,1385,4.675,1386,4.675,1387,4.675,1388,4.675,1389,6.001,1390,4.675,1391,4.675,1392,4.675,1393,4.675,1394,4.675,1395,4.675,1396,4.675,1397,4.675,1398,4.675,1399,4.675,1400,4.675,1401,4.088,1402,4.675,1403,4.675,1404,4.675,1405,4.675,1406,4.675,1407,6.143,1408,4.675,1409,4.675,1410,6.143,1411,4.675,1412,4.675,1413,4.675,1414,4.675,1415,4.675,1416,4.675,1417,4.675,1418,4.675,1419,4.088,1420,4.675,1421,4.675,1422,4.088,1423,4.675,1424,4.675,1425,4.675,1426,4.675,1427,4.675,1428,4.675,1429,4.675,1430,4.675,1431,4.675,1432,4.675,1433,4.675,1434,4.675,1435,6.143,1436,4.675,1437,4.675,1438,4.675,1439,4.675,1440,4.675,1441,4.675,1442,4.675,1443,4.675,1444,4.675,1445,4.675,1446,4.675,1447,4.675,1448,4.675,1449,4.675,1450,4.675,1451,4.675,1452,4.675,1453,4.675,1454,4.675,1455,4.675,1456,4.675,1457,4.675]],["title/license.html",[1366,3.016,1367,3.016,1458,3.016]],["body/license.html",[14,0.009,31,3.65,32,0.007,33,0.009,34,0.007,206,2.396,549,3.199,905,5.612,1238,3.959,1384,7.201,1401,4.372,1419,4.372,1458,4.372,1459,4.999,1460,7.087,1461,4.999,1462,4.999,1463,4.999,1464,4.999,1465,4.999,1466,4.999,1467,4.999,1468,4.999,1469,6.417,1470,4.999,1471,4.999,1472,4.999,1473,7.087,1474,4.999,1475,6.417,1476,4.999,1477,4.999,1478,6.417,1479,4.999,1480,4.999,1481,4.999,1482,4.999,1483,4.999,1484,4.999,1485,4.999,1486,6.417,1487,4.999,1488,4.999,1489,4.999,1490,4.999,1491,4.999,1492,4.999,1493,6.417,1494,6.417,1495,4.999,1496,4.999,1497,4.999,1498,4.999,1499,4.999,1500,4.999,1501,4.999,1502,4.999,1503,4.999,1504,4.999,1505,4.999,1506,4.999,1507,4.999,1508,4.999,1509,4.999,1510,4.999,1511,4.999,1512,4.999,1513,4.999,1514,4.999,1515,4.999,1516,4.999,1517,4.999,1518,4.999,1519,4.999,1520,4.999,1521,4.999,1522,4.999,1523,4.999]],["title/modules.html",[186,2.606]],["body/modules.html",[14,0.01,32,0.008,33,0.01,34,0.008,185,4.144,186,2.613,196,3.865,197,3.865,198,3.865,199,3.865,200,3.865,201,3.632,202,3.865,203,3.432,863,4.495,999,4.964,1389,7.361,1524,8.417,1525,8.417,1526,8.468,1527,5.676]],["title/overview.html",[1528,4.95]],["body/overview.html",[2,1.613,14,0.012,32,0.005,33,0.007,34,0.005,37,0.721,174,1.89,178,3.936,184,1.226,185,6.122,186,1.741,187,1.813,188,1.975,189,1.975,190,1.813,191,1.975,192,1.89,193,3.308,194,3.308,195,3.308,196,5.709,197,4.545,198,4.545,199,4.967,200,4.967,201,4.795,202,4.967,203,4.411,204,2.777,205,1.89,206,1.813,242,1.975,303,4.626,307,3.808,309,4.301,385,3.622,392,4.189,409,3.308,411,3.308,412,3.308,413,4.189,414,4.189,415,4.189,416,3.936,536,2.995,639,4.271,679,3.308,680,3.308,687,4.301,833,3.308,834,3.308,835,4.545,966,3.308,967,3.308,1071,3.308,1073,3.308,1105,3.308,1106,3.308,1107,3.308,1145,4.271,1148,3.308,1150,3.308,1528,3.308,1529,3.308,1530,3.782,1531,3.308,1532,3.782]],["title/miscellaneous/typealiases.html",[1350,1.979,1533,4.98]],["body/miscellaneous/typealiases.html",[9,0.506,13,0.554,14,0.011,32,0.008,33,0.01,34,0.008,74,4.353,81,4.353,111,6.295,619,5.701,914,6.295,1350,3.454,1534,6.017,1535,7.199,1536,8.373,1537,7.199,1538,7.199,1539,6.017,1540,7.199]],["title/miscellaneous/variables.html",[1350,1.979,1541,4.355]],["body/miscellaneous/variables.html",[9,0.162,13,0.542,14,0.012,16,0.922,17,2.351,18,2.053,21,1.424,26,2.06,32,0.003,33,0.004,34,0.003,42,0.689,46,0.962,58,0.852,64,1.095,78,1.135,135,0.791,149,0.922,182,2.276,184,1.027,207,1.524,220,3.198,225,1.134,226,3.187,227,1.683,228,1.683,229,2.609,230,1.683,231,1.683,232,1.683,233,1.683,234,1.916,235,1.683,236,2.509,237,2.509,238,2.509,239,2.509,240,3.073,281,0.922,293,1.31,332,0.922,351,1.164,385,1.31,417,1.524,418,2.949,430,3.367,431,1.683,432,3.195,433,1.683,434,1.683,435,1.683,436,1.524,437,2.995,440,3.779,441,3.779,442,0.852,444,2.027,445,1.231,446,1.105,447,0.821,481,1.405,483,2.509,485,2.509,592,3.13,653,4.303,675,0.922,681,1.524,683,2.509,684,1.683,685,1.683,702,2.584,756,1.403,760,0.922,775,1.405,779,2.157,780,3.418,790,1.31,791,1.31,801,1.231,836,1.524,839,2.509,840,1.683,841,1.683,864,1.524,865,3.198,866,1.683,869,2.509,870,2.509,871,1.683,872,1.683,873,1.683,874,1.683,875,1.683,902,4.869,1047,2.313,1108,1.524,1111,2.509,1112,1.683,1113,1.683,1151,1.524,1154,2.509,1155,1.683,1156,1.683,1222,1.524,1224,2.509,1225,1.683,1226,1.683,1246,1.683,1247,2.771,1257,1.524,1259,1.683,1264,1.683,1265,2.509,1266,2.771,1267,2.771,1268,1.683,1269,2.771,1270,1.683,1271,2.771,1272,1.683,1274,1.683,1279,1.683,1280,4.094,1281,4.526,1282,2.771,1283,1.683,1284,2.771,1285,1.683,1350,1.105,1361,1.683,1422,1.683,1529,1.683,1531,5.378,1541,1.683,1542,1.924,1543,4.038,1544,1.924,1545,1.924,1546,1.924,1547,1.924,1548,1.924,1549,3.168,1550,1.924,1551,1.924,1552,3.168,1553,4.038,1554,1.924,1555,1.924,1556,1.924,1557,1.924,1558,1.924,1559,3.168,1560,1.924,1561,5.175,1562,4.681,1563,3.168,1564,3.168,1565,1.924,1566,1.924,1567,1.924,1568,1.924,1569,1.924,1570,1.924,1571,1.924,1572,1.924,1573,1.924,1574,1.924,1575,1.924,1576,1.924,1577,1.924,1578,1.924,1579,1.924,1580,1.924,1581,1.924,1582,1.924,1583,1.924,1584,1.924,1585,1.924,1586,3.168,1587,3.168,1588,3.168,1589,3.168,1590,1.924,1591,1.924,1592,1.924,1593,1.924,1594,1.924,1595,1.924,1596,1.924,1597,3.168,1598,3.168,1599,3.168,1600,3.168,1601,3.168,1602,3.168,1603,1.924,1604,3.168,1605,1.924,1606,1.924,1607,1.924,1608,3.168,1609,1.924,1610,1.924,1611,1.924,1612,3.168,1613,1.924,1614,1.924,1615,1.924,1616,3.168,1617,1.924,1618,1.924,1619,1.924,1620,3.168,1621,1.924,1622,1.924,1623,1.924,1624,1.924,1625,1.924,1626,1.924,1627,1.924,1628,1.924,1629,1.924,1630,1.924,1631,1.924,1632,5.175,1633,1.924,1634,1.924,1635,1.924,1636,1.924,1637,1.924,1638,1.924,1639,1.924,1640,1.924,1641,1.924,1642,1.924,1643,1.924,1644,1.924,1645,1.924,1646,1.924,1647,1.924,1648,1.924,1649,1.924,1650,1.924,1651,1.924,1652,1.924,1653,1.924,1654,1.924,1655,1.924,1656,1.924,1657,1.924]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":801,"title":{},"body":{"classes/Course.html":{},"classes/PagedInputDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1243,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1245,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1241,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1252,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1249,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1248,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1255,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1244,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1256,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":805,"title":{},"body":{"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["1.0.0",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["1.8.10",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1012,"title":{},"body":{"classes/PagedInputDto.html":{}}}],["12",{"_index":1288,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1532,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1250,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1531,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1253,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":1461,"title":{},"body":{"license.html":{}}}],["21",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["3",{"_index":1529,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["3.23.0",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1349,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1254,"title":{},"body":{"coverage.html":{}}}],["3/16",{"_index":1287,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1251,"title":{},"body":{"coverage.html":{}}}],["3/24",{"_index":1289,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":1530,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1346,"title":{},"body":{"dependencies.html":{}}}],["4.5.10",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["5.9.18",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.8",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":360,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["60000",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":628,"title":{},"body":{"classes/BaseEntity.html":{}}}],["_${propertykey",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abortearly",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":1401,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":40,"title":{},"body":{"classes/AbstractService.html":{}}}],["abstractcontroller",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontroller(options",{"_index":1363,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrolleroptions",{"_index":1,"title":{"interfaces/AbstractControllerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithauthoptions",{"_index":24,"title":{"interfaces/AbstractControllerWithAuthOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithswaggeroptions",{"_index":27,"title":{"interfaces/AbstractControllerWithSwaggerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractdocument",{"_index":1535,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["abstractservice",{"_index":36,"title":{"classes/AbstractService.html":{}},"body":{"classes/AbstractService.html":{},"coverage.html":{}}}],["access",{"_index":906,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["accessors",{"_index":590,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["account",{"_index":1003,"title":{},"body":{"injectables/MailService.html":{}}}],["acctverifydto",{"_index":117,"title":{"classes/AcctVerifyDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["achieving",{"_index":1398,"title":{},"body":{"index.html":{}}}],["action",{"_index":1517,"title":{},"body":{"license.html":{}}}],["activate",{"_index":587,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["addons/in",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":1193,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1534,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["amazing",{"_index":1405,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1484,"title":{},"body":{"license.html":{}}}],["api_auth_enabled",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":991,"title":{},"body":{"injectables/MailService.html":{}}}],["api_key_mailgun",{"_index":873,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":1058,"title":{},"body":{"controllers/ProfileController.html":{},"classes/UsersController.html":{}}}],["apiconflictresponse",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception",{"_index":136,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"classes/TracksController.html":{},"coverage.html":{}}}],["apiexception})@apiresponse({type",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(authenticationguard",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(jwtauthguard",{"_index":647,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["apiokresponse",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":151,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"interfaces/IPagedOutputDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiresponse",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["apiswaggeroperation",{"_index":1267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('auth",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiunauthorizedresponse",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":179,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_email",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":173,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appemail",{"_index":771,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["applicable",{"_index":1427,"title":{},"body":{"index.html":{}}}],["application",{"_index":1410,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":185,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":178,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectural",{"_index":1415,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":881,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":1521,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1455,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1470,"title":{},"body":{"license.html":{}}}],["async",{"_index":42,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/TempTokensService.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":18,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/MailService.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":423,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":133,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["auth.guard",{"_index":1061,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["auth.guard.ts",{"_index":919,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:9",{"_index":920,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards",{"_index":657,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{}}}],["auth/guards/jwt",{"_index":1060,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["auth/guards/roles.guard",{"_index":1140,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["auth/models/dto/auth.dto",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_guard_type",{"_index":418,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":248,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":311,"title":{"guards/AuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["autherrors",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherrors.expired_token",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_login_attempt",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_token",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["autheventenum",{"_index":403,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["authguard",{"_index":922,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(auth_guard_type",{"_index":924,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authhandler",{"_index":392,"title":{"injectables/AuthHandler.html":{}},"body":{"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":196,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobj",{"_index":437,"title":{"interfaces/AuthObj.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authobj.create",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.delete",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.find",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.findbyid",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.update",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create?.length",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete?.length",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find?.length",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid?.length",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update?.length",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authorize",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authors",{"_index":1510,"title":{},"body":{"license.html":{}}}],["authroles",{"_index":440,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":309,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authservice.validateuser(username",{"_index":962,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["available",{"_index":999,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["await",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["basecontrolleroptions",{"_index":557,"title":{"interfaces/BaseControllerOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithauthoptions",{"_index":561,"title":{"interfaces/BaseControllerWithAuthOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithswaggeropts",{"_index":562,"title":{"interfaces/BaseControllerWithSwaggerOpts.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecrudcontroller",{"_index":651,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["basecrudcontroller(options",{"_index":1364,"title":{},"body":{"miscellaneous/functions.html":{}}}],["basedto",{"_index":571,"title":{"classes/BaseDto.html":{}},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["basedto:10",{"_index":765,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:6",{"_index":766,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:8",{"_index":767,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["baseentity",{"_index":114,"title":{"classes/BaseEntity.html":{}},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentity.modelname",{"_index":1112,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["baseentity.schema",{"_index":1113,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["baseentity:12",{"_index":749,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:14",{"_index":744,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:16",{"_index":751,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:18",{"_index":748,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:20",{"_index":746,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:22",{"_index":745,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:24",{"_index":743,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:26",{"_index":750,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:44",{"_index":754,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:53",{"_index":755,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:62",{"_index":753,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:71",{"_index":752,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:9",{"_index":747,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["basemodel",{"_index":1111,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseservice",{"_index":687,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["baseservice:108",{"_index":710,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:115",{"_index":711,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:123",{"_index":715,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:127",{"_index":719,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:132",{"_index":720,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:140",{"_index":716,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:145",{"_index":721,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:155",{"_index":722,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:163",{"_index":730,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:176",{"_index":731,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:184",{"_index":703,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:189",{"_index":704,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:25",{"_index":701,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:26",{"_index":699,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:35",{"_index":725,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:39",{"_index":728,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:47",{"_index":706,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:50",{"_index":714,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:54",{"_index":717,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:58",{"_index":718,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:66",{"_index":708,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:80",{"_index":732,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:86",{"_index":709,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:94",{"_index":712,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:99",{"_index":713,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["bcrypt",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(plaintoken",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pw",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(plaintoken",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearerauthname",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1446,"title":{},"body":{"index.html":{}}}],["bring",{"_index":1403,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1526,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1524,"title":{},"body":{"modules.html":{}}}],["buildschema",{"_index":616,"title":{},"body":{"classes/BaseEntity.html":{}}}],["buildschema(this",{"_index":622,"title":{},"body":{"classes/BaseEntity.html":{}}}],["built",{"_index":1408,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["business",{"_index":405,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["c",{"_index":31,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"license.html":{}}}],["cache",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":538,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":542,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canlogin",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["career",{"_index":1393,"title":{},"body":{"index.html":{}}}],["catch",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/User.html":{}}}],["catch(error",{"_index":880,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":886,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories.controller",{"_index":682,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":658,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":636,"title":{"classes/CategoriesController.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":197,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":639,"title":{"classes/CategoriesService.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":659,"title":{"classes/Category.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"coverage.html":{}}}],["category.dto",{"_index":664,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{}}}],["category.dto.ts",{"_index":846,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.modelname",{"_index":684,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["category.schema",{"_index":685,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["categorydto",{"_index":645,"title":{"classes/CategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{}}}],["categorymodel",{"_index":683,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ccn",{"_index":247,"title":{},"body":{"injectables/AppService.html":{}}}],["charge",{"_index":1466,"title":{},"body":{"license.html":{}}}],["check",{"_index":1432,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1513,"title":{},"body":{"license.html":{}}}],["clan",{"_index":1369,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}},"body":{"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":37,"title":{},"body":{"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"overview.html":{}}}],["classtype",{"_index":914,"title":{},"body":{"interfaces/IPagedOutputDto.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":1417,"title":{},"body":{"index.html":{}}}],["client",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["client({transport",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["clientbaseurl",{"_index":120,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["clientredis",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":409,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":411,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":410,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":412,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":679,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_exports",{"_index":680,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":833,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_exports",{"_index":834,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":966,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":967,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":968,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_profilemodule",{"_index":1071,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":1073,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1072,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_sharedmodule",{"_index":1105,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1106,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":1107,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_tracksmodule",{"_index":1148,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_exports",{"_index":1150,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_imports",{"_index":1149,"title":{},"body":{"modules/TracksModule.html":{}}}],["cluster_usersmodule",{"_index":1220,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_exports",{"_index":1221,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1368,"title":{},"body":{"index.html":{}}}],["codeclannigeria",{"_index":1428,"title":{},"body":{"index.html":{}}}],["codeclannigeria.dev",{"_index":1394,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1392,"title":{},"body":{"index.html":{}}}],["columnsize",{"_index":756,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsize.length128",{"_index":806,"title":{},"body":{"classes/Course.html":{},"classes/Track.html":{}}}],["columnsize.length256",{"_index":807,"title":{},"body":{"classes/Course.html":{}}}],["columnsize.length32",{"_index":758,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Track.html":{}}}],["columnsize.length64",{"_index":1200,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":1413,"title":{},"body":{"index.html":{}}}],["community",{"_index":1373,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1414,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["comprised",{"_index":1374,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1431,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1492,"title":{},"body":{"license.html":{}}}],["config",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":162,"title":{},"body":{"classes/ApiException.html":{}}}],["configmodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":161,"title":{"interfaces/Configuration.html":{}},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["configuration().appemail",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{}}}],["configuration().isauthenabled",{"_index":552,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["configuration().jwtsecret",{"_index":944,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["confirmation",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmed",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail",{"_index":1163,"title":{},"body":{"classes/User.html":{}}}],["conflictexception",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["conflictexception('category",{"_index":677,"title":{},"body":{"classes/CategoriesController.html":{}}}],["conflictexception('course",{"_index":832,"title":{},"body":{"classes/CoursesController.html":{}}}],["conflictexception('email",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('track",{"_index":1147,"title":{},"body":{"classes/TracksController.html":{}}}],["conflictexception('user",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{}}}],["connect",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["connection",{"_index":1522,"title":{},"body":{"license.html":{}}}],["console.log(context.switchtohttp().getrequest().sessionid",{"_index":925,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["const",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"modules/SharedModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":147,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{}}}],["constructor(authservice",{"_index":540,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(entity",{"_index":695,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"classes/TracksService.html":{}}}],["constructor(message",{"_index":148,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(moduleref",{"_index":946,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":180,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["constructor(protected",{"_index":667,"title":{},"body":{"classes/CategoriesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(reflector",{"_index":1086,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(service",{"_index":638,"title":{},"body":{"classes/CategoriesController.html":{}}}],["constructor(tokenentity",{"_index":1116,"title":{},"body":{"injectables/TempTokensService.html":{}}}],["constructor(userentity",{"_index":1228,"title":{},"body":{"classes/UsersService.html":{}}}],["constructor(usersservice",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["context",{"_index":545,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1091,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":550,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["contextid",{"_index":957,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contextidfactory",{"_index":952,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contextidfactory.getbyrequest(request",{"_index":958,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contract",{"_index":1518,"title":{},"body":{"license.html":{}}}],["controller",{"_index":7,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('profile",{"_index":1063,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controllerauth",{"_index":444,"title":{"interfaces/ControllerAuth.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controllername",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.indexof('controller",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.substr",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":174,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":1486,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1469,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1460,"title":{},"body":{"license.html":{}}}],["count",{"_index":41,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["count(filter",{"_index":60,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["countasync",{"_index":43,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["countasync(filter",{"_index":69,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["course",{"_index":796,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"coverage.html":{}}}],["course.dto",{"_index":830,"title":{},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{}}}],["course.dto.ts",{"_index":849,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["course.modelname",{"_index":840,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["course.schema",{"_index":841,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["coursedto",{"_index":808,"title":{"classes/CourseDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["coursemodel",{"_index":839,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courses.controller",{"_index":837,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses.service",{"_index":838,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses/courses.module",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["coursescontroller",{"_index":824,"title":{"classes/CoursesController.html":{}},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["coursesmodule",{"_index":198,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesservice",{"_index":835,"title":{"classes/CoursesService.html":{}},"body":{"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1237,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":446,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":673,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["create(input",{"_index":642,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["createcategorydto",{"_index":643,"title":{"classes/CreateCategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcoursedto",{"_index":826,"title":{"classes/CreateCourseDto.html":{}},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["created",{"_index":1385,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":573,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["createdby",{"_index":581,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["createdto",{"_index":565,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["createentity",{"_index":690,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["createentity(doc",{"_index":705,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["createtrackdto",{"_index":851,"title":{"classes/CreateTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{}}}],["createtransport",{"_index":973,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":857,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["crypto",{"_index":1189,"title":{},"body":{"classes/User.html":{}}}],["ctx",{"_index":887,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":891,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":890,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":1439,"title":{},"body":{"index.html":{}}}],["customdecorator",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customname",{"_index":1048,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["damages",{"_index":1514,"title":{},"body":{"license.html":{}}}],["data",{"_index":399,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["database",{"_index":234,"title":{"interfaces/Database.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_host",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["date().gettime",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().toisostring",{"_index":169,"title":{},"body":{"classes/ApiException.html":{}}}],["date(date.now",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(new",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["db",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["dbfactory",{"_index":870,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbtest",{"_index":863,"title":{"modules/DbTest.html":{}},"body":{"modules/DbTest.html":{},"modules.html":{}}}],["deactivate",{"_index":588,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deal",{"_index":1472,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1523,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator(target",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":123,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"classes/PagedInputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["default",{"_index":17,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CoursesService.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedInputDto.html":{},"classes/PasswordToken.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth",{"_index":1281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultauth.create.authroles",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.create.enableauth",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.authroles",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.enableauth",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.authroles",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.enableauth",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.authroles",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.enableauth",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.authroles",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.enableauth",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthobject",{"_index":16,"title":{"interfaces/DefaultAuthObject.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":61,"title":{},"body":{"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"classes/PagedInputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["delete",{"_index":447,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["deletedat",{"_index":582,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deletedby",{"_index":583,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deleteresulttype",{"_index":1537,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":187,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":760,"title":{},"body":{"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":1095,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(user",{"_index":1097,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["desire",{"_index":1386,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1445,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1379,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1380,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1482,"title":{},"body":{"license.html":{}}}],["doc",{"_index":22,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["documentation",{"_index":1238,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentquery",{"_index":1540,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":111,"title":{},"body":{"classes/AbstractService.html":{},"miscellaneous/typealiases.html":{}}}],["domain",{"_index":781,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{}}}],["done",{"_index":1098,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":1103,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["e",{"_index":1198,"title":{},"body":{"classes/User.html":{}}}],["email",{"_index":135,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email')@httpcode(httpstatus.ok",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["email_token",{"_index":1127,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["emailparamname",{"_index":121,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["enableauth",{"_index":441,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["enableimplicitconversion",{"_index":1070,"title":{},"body":{"controllers/ProfileController.html":{}}}],["encryptedtoken",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1378,"title":{},"body":{"index.html":{}}}],["engineers",{"_index":1381,"title":{},"body":{"index.html":{}}}],["enrollmentcount",{"_index":798,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["entity",{"_index":94,"title":{},"body":{"classes/AbstractService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{}}}],["entitydto",{"_index":563,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IPagedOutputDto.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["enum",{"_index":1033,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["enumerations",{"_index":1351,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":772,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["envvalidation",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":726,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["error",{"_index":139,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":1099,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error.getstatus",{"_index":892,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.name",{"_index":898,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response",{"_index":903,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.error",{"_index":897,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.errors",{"_index":899,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.message",{"_index":904,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.name",{"_index":896,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.stack",{"_index":894,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorname",{"_index":895,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":140,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["errors/api",{"_index":885,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ethereal",{"_index":1002,"title":{},"body":{"injectables/MailService.html":{}}}],["event",{"_index":1509,"title":{},"body":{"license.html":{}}}],["eventpattern",{"_index":401,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["eventpattern(autheventenum.userregistered",{"_index":397,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["exception",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/TracksController.html":{}}}],["exception.filter.ts",{"_index":878,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":882,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.ts",{"_index":138,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["exception.ts:10",{"_index":154,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:12",{"_index":156,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:14",{"_index":152,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:16",{"_index":153,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:18",{"_index":158,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:20",{"_index":155,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:22",{"_index":150,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:8",{"_index":157,"title":{},"body":{"classes/ApiException.html":{}}}],["exceptionfilter",{"_index":879,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":1188,"title":{},"body":{"classes/User.html":{}}}],["excludeextraneousvalues",{"_index":1069,"title":{},"body":{"controllers/ProfileController.html":{}}}],["executioncontext",{"_index":543,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["exist",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["exist.id",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.token",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["expandvariables",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["expireafterseconds",{"_index":1050,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expireat",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expired",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired_token",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinmins",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["exports",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":817,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["expose()@maxlength(columnsize.length128)@apiproperty",{"_index":810,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length32)@apiproperty()@isalphanumeric",{"_index":815,"title":{},"body":{"classes/CourseDto.html":{}}}],["express",{"_index":549,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["extractjwt",{"_index":935,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":941,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["failedsigninattempts",{"_index":1161,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false').default('true",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":1448,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1418,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["files",{"_index":1471,"title":{},"body":{"license.html":{}}}],["filter",{"_index":66,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["find",{"_index":445,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"classes/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":44,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findall(filter",{"_index":72,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findallasync",{"_index":45,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findallasync(filter",{"_index":75,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findbyid",{"_index":46,"title":{},"body":{"classes/AbstractService.html":{},"interfaces/AuthObj.html":{},"classes/CategoriesService.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesService.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{},"miscellaneous/variables.html":{}}}],["findbyid(id",{"_index":77,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findbyidasync",{"_index":47,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findbyidasync(id",{"_index":82,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findone",{"_index":48,"title":{},"body":{"classes/AbstractService.html":{},"injectables/AuthService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findone(filter",{"_index":84,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findoneasync",{"_index":49,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findoneasync(filter",{"_index":86,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["firstname",{"_index":1030,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["fitness",{"_index":1505,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1425,"title":{},"body":{"index.html":{}}}],["following",{"_index":1491,"title":{},"body":{"license.html":{}}}],["forbiddenexception('invalid",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":1429,"title":{},"body":{"index.html":{}}}],["fortune",{"_index":1462,"title":{},"body":{"license.html":{}}}],["free",{"_index":1419,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":1377,"title":{},"body":{"index.html":{}}}],["full",{"_index":1181,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fullname",{"_index":1165,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":916,"title":{},"body":{"interfaces/IPagedOutputDto.html":{},"injectables/SessionSerializer.html":{},"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":1358,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1489,"title":{},"body":{"license.html":{}}}],["future",{"_index":1375,"title":{},"body":{"index.html":{}}}],["generaterandomtoken",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterandomtoken(64",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken(undefined",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth",{"_index":1056,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getauthobj",{"_index":1282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getfullname",{"_index":1178,"title":{},"body":{"classes/User.html":{}}}],["gethello",{"_index":176,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":1182,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass",{"_index":1186,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass(this",{"_index":1206,"title":{},"body":{"classes/User.html":{}}}],["getmodelname",{"_index":614,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getprofile",{"_index":1054,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":1065,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(req",{"_index":1055,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getschema",{"_index":612,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getters",{"_index":624,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getting",{"_index":1366,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuserid",{"_index":691,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["getwelcome",{"_index":244,"title":{},"body":{"injectables/AppService.html":{}}}],["global",{"_index":1109,"title":{},"body":{"modules/SharedModule.html":{}}}],["goal",{"_index":1399,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1465,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1527,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":535,"title":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":536,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["handler",{"_index":408,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handlers/auth.handler",{"_index":424,"title":{},"body":{"modules/AuthModule.html":{}}}],["handleuserregistered",{"_index":394,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handleuserregistered(data",{"_index":395,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["hapi/joi",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["harddelete",{"_index":50,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["harddelete(filter",{"_index":88,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["harddeletebyid",{"_index":51,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["harddeletebyid(id",{"_index":90,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["hash",{"_index":1187,"title":{},"body":{"classes/User.html":{}}}],["hash(this.password",{"_index":1197,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1464,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1511,"title":{},"body":{"license.html":{}}}],["host",{"_index":778,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Mailer.html":{}}}],["host.switchtohttp",{"_index":888,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":883,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":876,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ethereal.email/message/waqkmgkddxqdoou",{"_index":1006,"title":{},"body":{"injectables/MailService.html":{}}}],["httpstatus",{"_index":159,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"classes/TracksController.html":{}}}],["httpstatus.bad_request",{"_index":672,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["httpstatus.created",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["httpstatus.forbidden",{"_index":669,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["httpstatus.unauthorized",{"_index":901,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpstatus[statuscode",{"_index":172,"title":{},"body":{"classes/ApiException.html":{}}}],["id",{"_index":80,"title":{},"body":{"classes/AbstractService.html":{},"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesService.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{}}}],["identifier",{"_index":1239,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":942,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"guards/RolesGuard.html":{}}}],["implied",{"_index":1501,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["imports",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["in.dto.ts",{"_index":1008,"title":{},"body":{"classes/PagedInputDto.html":{},"coverage.html":{}}}],["in.dto.ts:10",{"_index":1018,"title":{},"body":{"classes/PagedInputDto.html":{}}}],["in.dto.ts:13",{"_index":1016,"title":{},"body":{"classes/PagedInputDto.html":{}}}],["in.dto.ts:5",{"_index":1019,"title":{},"body":{"classes/PagedInputDto.html":{}}}],["in.dto.ts:7",{"_index":1014,"title":{},"body":{"classes/PagedInputDto.html":{}}}],["included",{"_index":1495,"title":{},"body":{"license.html":{}}}],["including",{"_index":1475,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedInputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["info.messageid",{"_index":997,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":698,"title":{},"body":{"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesService.html":{},"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{}}}],["injectable",{"_index":241,"title":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"coverage.html":{}}}],["injectables",{"_index":242,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"overview.html":{}}}],["injectmodel",{"_index":733,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["injectmodel(category.modelname",{"_index":735,"title":{},"body":{"classes/CategoriesService.html":{}}}],["injectmodel(course.modelname",{"_index":844,"title":{},"body":{"classes/CoursesService.html":{}}}],["injectmodel(temporarytoken.modelname",{"_index":1119,"title":{},"body":{"injectables/TempTokensService.html":{}}}],["injectmodel(track.modelname",{"_index":1159,"title":{},"body":{"classes/TracksService.html":{}}}],["injectmodel(user.modelname",{"_index":1232,"title":{},"body":{"classes/UsersService.html":{}}}],["innovators",{"_index":1376,"title":{},"body":{"index.html":{}}}],["input",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["input.email",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.name",{"_index":676,"title":{},"body":{"classes/CategoriesController.html":{}}}],["input.password",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.title",{"_index":831,"title":{},"body":{"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["insert",{"_index":52,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["insert(entity",{"_index":92,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["insertasync",{"_index":53,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["insertasync(entity",{"_index":95,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IPagedOutputDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IPagedOutputDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["interface.ts",{"_index":560,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IPagedOutputDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":1184,"title":{},"body":{"classes/User.html":{}}}],["internalservererrorexception(e",{"_index":1199,"title":{},"body":{"classes/User.html":{}}}],["invalid_login_attempt",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_token",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ipagedoutputdto",{"_index":909,"title":{"interfaces/IPagedOutputDto.html":{}},"body":{"interfaces/IPagedOutputDto.html":{},"coverage.html":{}}}],["isactive",{"_index":584,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isalphanumeric",{"_index":819,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["isauthenabled",{"_index":773,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["isauthenticationenabled",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isauthorizationenabled",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdeleted",{"_index":585,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isemail",{"_index":1026,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isemailverified",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["isenum",{"_index":1027,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isenum(userrole",{"_index":1032,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isenum(userrole)@apiproperty({enum",{"_index":1211,"title":{},"body":{"classes/UserDto.html":{}}}],["isglobal",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isjson",{"_index":1020,"title":{},"body":{"classes/PagedInputDto.html":{}}}],["isjson()@isoptional",{"_index":1015,"title":{},"body":{"classes/PagedInputDto.html":{}}}],["ismongoid",{"_index":576,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["isnotempty",{"_index":126,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{}}}],["isoptional",{"_index":1013,"title":{},"body":{"classes/PagedInputDto.html":{}}}],["isoptional()@isjson",{"_index":1017,"title":{},"body":{"classes/PagedInputDto.html":{}}}],["issue",{"_index":1435,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1433,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":124,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["isurl()@maxlength(columnsize.length256",{"_index":813,"title":{},"body":{"classes/CourseDto.html":{}}}],["isvalid",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidpassword",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":106,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["items",{"_index":912,"title":{},"body":{"interfaces/IPagedOutputDto.html":{}}}],["joi.number().default(27017",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().default('redis://localhost:6379",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().required",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('true",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1453,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign(payload",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_secret",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_validity_hours",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":655,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":1247,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":940,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtpayload",{"_index":487,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["jwtstrategy",{"_index":413,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidityhrs",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["key",{"_index":780,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1500,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":1031,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["legend",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length1024",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length128",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length16",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length256",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length32",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length512",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length64",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length8",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":1441,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1515,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1512,"title":{},"body":{"license.html":{}}}],["license",{"_index":1458,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1009,"title":{},"body":{"classes/PagedInputDto.html":{},"dependencies.html":{}}}],["limitation",{"_index":1476,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1502,"title":{},"body":{"license.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["local",{"_index":954,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["localstrategy",{"_index":414,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lockoutenddate",{"_index":1162,"title":{},"body":{"classes/User.html":{}}}],["logger",{"_index":400,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{}}}],["logger.debug(`message",{"_index":995,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`preview",{"_index":1004,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(data",{"_index":407,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["logger.error(error",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log(user",{"_index":1104,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["logic",{"_index":406,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["login",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(input",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginreqdto",{"_index":132,"title":{"classes/LoginReqDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["loginresdto",{"_index":315,"title":{"classes/LoginResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["loginresdto})@apiunauthorizedresponse({type",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":1166,"title":{},"body":{"classes/User.html":{}}}],["mail",{"_index":982,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.options",{"_index":978,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":970,"title":{},"body":{"modules/MailModule.html":{}}}],["mailer",{"_index":774,"title":{"interfaces/Mailer.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["mailer.domain",{"_index":993,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer.key",{"_index":992,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer_api_key",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain_mailgun",{"_index":874,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mailgun",{"_index":985,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["mailmodule",{"_index":199,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":980,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":303,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1443,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":1438,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":738,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128",{"_index":761,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length256",{"_index":821,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["maxlength(columnsize.length32",{"_index":763,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length32)@isalphanumeric",{"_index":1134,"title":{},"body":{"classes/TrackDto.html":{}}}],["maxlength(columnsize.length64",{"_index":1029,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length64)@isemail",{"_index":1207,"title":{},"body":{"classes/UserDto.html":{}}}],["measures",{"_index":1396,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":634,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["members",{"_index":1407,"title":{},"body":{"index.html":{}}}],["memory",{"_index":868,"title":{},"body":{"modules/DbTest.html":{},"dependencies.html":{}}}],["mentee",{"_index":1191,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentor",{"_index":1192,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":1504,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1480,"title":{},"body":{"license.html":{}}}],["message",{"_index":141,"title":{},"body":{"classes/ApiException.html":{}}}],["metadata",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":39,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{}}}],["mg",{"_index":984,"title":{},"body":{"injectables/MailService.html":{}}}],["minlength",{"_index":1079,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["minlength(6",{"_index":1077,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["miscellaneous",{"_index":1350,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1459,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1409,"title":{},"body":{"index.html":{}}}],["model",{"_index":11,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/User.html":{}}}],["modelcreate",{"_index":30,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modelname",{"_index":591,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modeloptions",{"_index":1045,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["models/auth.enums",{"_index":404,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{}}}],["models/base.entity",{"_index":115,"title":{},"body":{"classes/AbstractService.html":{},"modules/SharedModule.html":{}}}],["models/category.entity",{"_index":660,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{}}}],["models/course.entity",{"_index":828,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{}}}],["models/dto/acct",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/auth.dto",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["models/dto/create",{"_index":1141,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["models/dto/reset",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/tack.dto",{"_index":1143,"title":{},"body":{"classes/TracksController.html":{}}}],["models/dto/user.dto",{"_index":1216,"title":{},"body":{"classes/UsersController.html":{}}}],["models/dto/validate",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dtos/category.dto",{"_index":662,"title":{},"body":{"classes/CategoriesController.html":{}}}],["models/dtos/course.dto",{"_index":829,"title":{},"body":{"classes/CoursesController.html":{}}}],["models/dtos/create",{"_index":663,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{}}}],["models/jwt",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["models/temporary",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/TempTokensService.html":{}}}],["models/track.entity",{"_index":1144,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{}}}],["models/user.entity",{"_index":1217,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{}}}],["modelvm",{"_index":28,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modify",{"_index":1479,"title":{},"body":{"license.html":{}}}],["module",{"_index":184,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["moduleref",{"_index":947,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["modules",{"_index":186,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["mongod",{"_index":869,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongod.geturi",{"_index":875,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":867,"title":{},"body":{"modules/DbTest.html":{}}}],["mongodb_uri",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoerror",{"_index":724,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["mongomemoryserver",{"_index":866,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":113,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":430,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forroot(configuration().database.uri",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forrootasync",{"_index":871,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1452,"title":{},"body":{"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":1436,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1295,"title":{},"body":{"dependencies.html":{}}}],["nestjs/bull",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":160,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":953,"title":{},"body":{"injectables/LocalStrategy.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":402,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"modules/DbTest.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":421,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":130,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/BaseDto.html":{},"classes/CategoriesController.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IPagedOutputDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["new",{"_index":21,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{}}}],["nigeria",{"_index":1370,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":983,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":990,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":1005,"title":{},"body":{"injectables/MailService.html":{}}}],["noninfringement",{"_index":1508,"title":{},"body":{"license.html":{}}}],["note",{"_index":1426,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception('token",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception('user",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["notice",{"_index":1493,"title":{},"body":{"license.html":{}}}],["null",{"_index":596,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["number",{"_index":149,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"interfaces/IPagedOutputDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["obj.util.ts",{"_index":1280,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":702,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"miscellaneous/variables.html":{}}}],["object.interface",{"_index":19,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["object.interface.ts",{"_index":439,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["object.values(userrole",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":921,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["obtaining",{"_index":1468,"title":{},"body":{"license.html":{}}}],["ochi",{"_index":1463,"title":{},"body":{"license.html":{}}}],["official",{"_index":1371,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":860,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["omittype(userdto",{"_index":862,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["ongoing",{"_index":1388,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["operation.decorator.ts",{"_index":1266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationid",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":65,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PagedInputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optional()@inject(request",{"_index":700,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["options",{"_index":1047,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["opts",{"_index":559,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"classes/PagedInputDto.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"coverage.html":{}}}],["otherwise",{"_index":1520,"title":{},"body":{"license.html":{}}}],["out",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["out.dto.ts",{"_index":911,"title":{},"body":{"interfaces/IPagedOutputDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["overview",{"_index":1528,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1292,"title":{"dependencies.html":{}},"body":{}}],["paged",{"_index":917,"title":{},"body":{"interfaces/IPagedOutputDto.html":{}}}],["pagedcategoryoutdto",{"_index":661,"title":{"classes/PagedCategoryOutDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{}}}],["pagedcourseoutputdto",{"_index":822,"title":{"classes/PagedCourseOutputDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["pagedinputdto",{"_index":1007,"title":{"classes/PagedInputDto.html":{}},"body":{"classes/PagedInputDto.html":{},"coverage.html":{}}}],["pagedoutputdto",{"_index":569,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"interfaces/IPagedOutputDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pagedoutputdto(categorydto",{"_index":769,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{}}}],["pagedoutputdto(coursedto",{"_index":823,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["pagedoutputdto(entitydto",{"_index":1365,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pagedoutputdto(trackdto",{"_index":1023,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["pagedoutputdto(userdto",{"_index":1035,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["pagedtrackoutputdto",{"_index":1021,"title":{"classes/PagedTrackOutputDto.html":{}},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{}}}],["pageduseroutputdto",{"_index":1024,"title":{"classes/PagedUserOutputDto.html":{}},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["pane",{"_index":1434,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1395,"title":{},"body":{"index.html":{}}}],["partial",{"_index":107,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["particular",{"_index":1506,"title":{},"body":{"license.html":{}}}],["pass",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":937,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":420,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["passportserializer",{"_index":1094,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":934,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":938,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":955,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password')@httpcode(httpstatus.ok",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["password_reset_tokens",{"_index":1049,"title":{},"body":{"classes/PasswordToken.html":{}}}],["password_token",{"_index":1126,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["passwordhash",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordtoken",{"_index":1036,"title":{"classes/PasswordToken.html":{}},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["path",{"_index":142,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["paths",{"_index":1348,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["payload.ts",{"_index":928,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["permission",{"_index":905,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"license.html":{}}}],["permit",{"_index":1487,"title":{},"body":{"license.html":{}}}],["person",{"_index":1467,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1488,"title":{},"body":{"license.html":{}}}],["picktype",{"_index":129,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(categorydto",{"_index":847,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["picktype(coursedto",{"_index":850,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["picktype(loginreqdto",{"_index":134,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(registeruserdto",{"_index":964,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["picktype(trackdto",{"_index":856,"title":{},"body":{"classes/CreateTrackDto.html":{}}}],["plaintoclass",{"_index":1059,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoclass(userdto",{"_index":1068,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoken",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["playlisturl",{"_index":799,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["please",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{}}}],["pluralize",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["populate('user",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":775,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1497,"title":{},"body":{"license.html":{}}}],["post",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["post('confirm",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiconflictresponse({type",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apiresponse({type",{"_index":644,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["pre",{"_index":1185,"title":{},"body":{"classes/User.html":{}}}],["pre('save",{"_index":1195,"title":{},"body":{"classes/User.html":{}}}],["prefix",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["preview",{"_index":998,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/MailService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["process",{"_index":1450,"title":{},"body":{"index.html":{}}}],["process.env.api_auth_enabled",{"_index":788,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.app_email",{"_index":789,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_host",{"_index":792,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_name",{"_index":794,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_port",{"_index":793,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_secret",{"_index":784,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_validity_hours",{"_index":785,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_api_key",{"_index":790,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["process.env.mailer_domain",{"_index":791,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["process.env.mongodb_uri",{"_index":795,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.node_env",{"_index":783,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.port",{"_index":782,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.redis_server_url",{"_index":787,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.root_url",{"_index":786,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["production",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1053,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":1075,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":1051,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":200,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":1064,"title":{},"body":{"controllers/ProfileController.html":{}}}],["promise",{"_index":71,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/TempTokensService.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["prop",{"_index":617,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({default",{"_index":597,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({enum",{"_index":1041,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({ref",{"_index":1043,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["prop({required",{"_index":593,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IPagedOutputDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedInputDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["propertydescriptor",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propose",{"_index":1402,"title":{},"body":{"index.html":{}}}],["protected",{"_index":688,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["provide",{"_index":1387,"title":{},"body":{"index.html":{}}}],["provided",{"_index":1498,"title":{},"body":{"license.html":{}}}],["provider",{"_index":960,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["providers",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pub",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["publish",{"_index":1481,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1444,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1507,"title":{},"body":{"license.html":{}}}],["put",{"_index":1420,"title":{},"body":{"index.html":{}}}],["pw",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["pw.dto",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["pw.dto.ts",{"_index":1082,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["pw.dto.ts:7",{"_index":1083,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["query",{"_index":68,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["queryitem",{"_index":81,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":74,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["questions",{"_index":1456,"title":{},"body":{"index.html":{}}}],["randombytes(columnsize.length32",{"_index":1203,"title":{},"body":{"classes/User.html":{}}}],["randombytes(size).tostring('hex",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":181,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesService.html":{},"injectables/MailService.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{}}}],["record",{"_index":396,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["redis",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["redis_server_url",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisurl",{"_index":776,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["ref",{"_index":595,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["reflect",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1087,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(input",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":264,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["registeruserresdto",{"_index":267,"title":{"classes/RegisterUserResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["repeat",{"_index":1449,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1430,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1411,"title":{},"body":{"index.html":{}}}],["req",{"_index":689,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["req.url",{"_index":900,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["req.user['email",{"_index":1067,"title":{},"body":{"controllers/ProfileController.html":{}}}],["request",{"_index":547,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"index.html":{}}}],["request.body",{"_index":553,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["request.user",{"_index":556,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["require('nodemailer/lib/mailer",{"_index":986,"title":{},"body":{"injectables/MailService.html":{}}}],["required",{"_index":620,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["res",{"_index":889,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.status(statuscode).json(exception",{"_index":908,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassinput",{"_index":271,"title":{"classes/ResetPassInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"coverage.html":{}}}],["resetpassword",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(@body",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(input",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":907,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":884,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restore",{"_index":589,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["restriction",{"_index":1474,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":629,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret._id",{"_index":631,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret.id",{"_index":630,"title":{},"body":{"classes/BaseEntity.html":{}}}],["return",{"_index":182,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["returnmodeltype",{"_index":696,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{}}}],["returns",{"_index":67,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1477,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["roles",{"_index":653,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(userrole.admin",{"_index":671,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["roles.includes(role",{"_index":1092,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":656,"title":{"guards/RolesGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["rolesguard)@roles(userrole.admin",{"_index":648,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["root_url",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooturl",{"_index":777,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["rxjs",{"_index":923,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["saved",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved.isemailverified",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["schema",{"_index":432,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["scoped",{"_index":959,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["search",{"_index":1010,"title":{},"body":{"classes/PagedInputDto.html":{}}}],["secretorkey",{"_index":943,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sell",{"_index":1485,"title":{},"body":{"license.html":{}}}],["sendemailverifytoken",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(@body",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(input",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(@body",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(input",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["sending",{"_index":1000,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync",{"_index":974,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync(mailoptions",{"_index":977,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":996,"title":{},"body":{"injectables/MailService.html":{}}}],["serializeuser",{"_index":1096,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":1101,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"modules/DbTest.html":{}}}],["service",{"_index":641,"title":{},"body":{"classes/CategoriesController.html":{},"classes/TracksController.html":{}}}],["services",{"_index":1110,"title":{},"body":{"modules/SharedModule.html":{}}}],["session",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.serializer",{"_index":425,"title":{},"body":{"modules/AuthModule.html":{}}}],["sessionserializer",{"_index":415,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["setmetadata(userrole",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setrandompass",{"_index":1164,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":607,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shall",{"_index":1494,"title":{},"body":{"license.html":{}}}],["shared",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"injectables/TempTokensService.html":{}}}],["shared/config/configuration",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["shared/constants",{"_index":419,"title":{},"body":{"modules/AuthModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["shared/controllers",{"_index":652,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{}}}],["shared/controllers/base.controller",{"_index":1139,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/decorators/roles.decorator",{"_index":654,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["shared/errors",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{}}}],["shared/errors/api",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{},"classes/TracksController.html":{}}}],["shared/mail/mail.module",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/mail/mail.service",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["shared/models/base.entity",{"_index":757,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shared/models/dto",{"_index":768,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["shared/models/dto/base.dto",{"_index":820,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["shared/services",{"_index":734,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"classes/TracksService.html":{}}}],["shared/services/base.service",{"_index":1231,"title":{},"body":{"classes/UsersService.html":{}}}],["shared/shared.module",{"_index":1152,"title":{},"body":{"modules/TracksModule.html":{}}}],["shared/types",{"_index":1190,"title":{},"body":{"classes/User.html":{}}}],["shared/utils/random",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/validations/env.validation",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":201,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skill",{"_index":1440,"title":{},"body":{"index.html":{}}}],["skills",{"_index":1421,"title":{},"body":{"index.html":{}}}],["skip",{"_index":1011,"title":{},"body":{"classes/PagedInputDto.html":{}}}],["slack",{"_index":1454,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":54,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdelete(filter",{"_index":97,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeleteasync",{"_index":55,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeleteasync(filter",{"_index":99,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeletebyid",{"_index":56,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeletebyid(id",{"_index":101,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeletebyidasync",{"_index":57,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeletebyidasync(id",{"_index":103,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["software",{"_index":1384,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1442,"title":{},"body":{"index.html":{}}}],["solved",{"_index":1437,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CoursesService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"index.html":{}}}],["src/.../abstract",{"_index":1359,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../abstract.type.ts",{"_index":1536,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.enums.ts",{"_index":1352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.errors.ts",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticate.decorator.ts",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authorize.decorator.ts",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.controller.ts",{"_index":1360,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../categories.module.ts",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../courses.module.ts",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1361,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../paged",{"_index":1362,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../random",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.ts",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temporary",{"_index":1353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tracks.module.ts",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1354,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.module.ts",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":175,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":177,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":243,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":245,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:111",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:136",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:51",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:61",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:73",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:98",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":417,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:111",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:128",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:53",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:71",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:75",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:95",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1246,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":537,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":541,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:17",{"_index":544,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:21",{"_index":548,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/jwt",{"_index":918,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":1085,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":1088,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:13",{"_index":1089,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/handlers/auth.handler.ts",{"_index":393,"title":{},"body":{"injectables/AuthHandler.html":{},"coverage.html":{}}}],["src/auth/handlers/auth.handler.ts:9",{"_index":398,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["src/auth/models/auth.enums.ts",{"_index":1355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/models/dto/acct",{"_index":118,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts",{"_index":963,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts:11",{"_index":965,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/reset",{"_index":1081,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["src/auth/models/dto/validate",{"_index":1234,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["src/auth/models/jwt",{"_index":927,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/models/pass",{"_index":1037,"title":{},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["src/auth/models/temporary",{"_index":1121,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/session.serializer.ts",{"_index":1093,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:11",{"_index":1100,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:8",{"_index":1102,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":929,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":933,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":931,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":945,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:16",{"_index":951,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:8",{"_index":948,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/temp",{"_index":1114,"title":{},"body":{"injectables/TempTokensService.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts",{"_index":637,"title":{},"body":{"classes/CategoriesController.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts:34",{"_index":640,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:45",{"_index":650,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":681,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.service.ts",{"_index":686,"title":{},"body":{"classes/CategoriesService.html":{},"coverage.html":{}}}],["src/categories/categories.service.ts:7",{"_index":697,"title":{},"body":{"classes/CategoriesService.html":{}}}],["src/categories/models/category.entity.ts",{"_index":737,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/categories/models/category.entity.ts:13",{"_index":742,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/dtos/category.dto.ts",{"_index":759,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{}}}],["src/categories/models/dtos/category.dto.ts:7",{"_index":764,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/category.dto.ts:9",{"_index":762,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/create",{"_index":845,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts",{"_index":825,"title":{},"body":{"classes/CoursesController.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts:40",{"_index":827,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.module.ts",{"_index":836,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/courses/courses.service.ts",{"_index":842,"title":{},"body":{"classes/CoursesService.html":{},"coverage.html":{}}}],["src/courses/courses.service.ts:7",{"_index":843,"title":{},"body":{"classes/CoursesService.html":{}}}],["src/courses/models/course.entity.ts",{"_index":797,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/courses/models/course.entity.ts:14",{"_index":804,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:22",{"_index":800,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:29",{"_index":803,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:34",{"_index":802,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/dtos/course.dto.ts",{"_index":809,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["src/courses/models/dtos/course.dto.ts:13",{"_index":816,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:17",{"_index":811,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:20",{"_index":814,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:22",{"_index":812,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/create",{"_index":848,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/profile/profile.controller.ts",{"_index":1052,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:16",{"_index":1057,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":1074,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/shared/config/configuration.ts",{"_index":770,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["src/shared/constants.ts",{"_index":1259,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/controllers/abstract",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/controllers/base.controller.ts",{"_index":1263,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/decorators/api",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authenticate.decorator.ts",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authorize.decorator.ts",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/roles.decorator.ts",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/errors/api",{"_index":137,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/shared/errors/auth.errors.ts",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/http",{"_index":877,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interfaces/abstract",{"_index":6,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/base",{"_index":558,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["src/shared/interfaces/default",{"_index":438,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["src/shared/mail/mail.module.ts",{"_index":969,"title":{},"body":{"modules/MailModule.html":{}}}],["src/shared/mail/mail.service.ts",{"_index":971,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/shared/mail/mail.service.ts:10",{"_index":981,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:11",{"_index":975,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:16",{"_index":976,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:28",{"_index":979,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/models/base.entity.ts",{"_index":579,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts:12",{"_index":603,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:14",{"_index":598,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:16",{"_index":605,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:18",{"_index":602,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:20",{"_index":600,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:22",{"_index":599,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:24",{"_index":594,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:26",{"_index":604,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:27",{"_index":613,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:41",{"_index":615,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:44",{"_index":610,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:53",{"_index":611,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:62",{"_index":609,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:71",{"_index":606,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:9",{"_index":601,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/dto/base.dto.ts",{"_index":572,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/base.dto.ts:10",{"_index":575,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:6",{"_index":577,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:8",{"_index":578,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/paged",{"_index":910,"title":{},"body":{"interfaces/IPagedOutputDto.html":{},"classes/PagedInputDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/services/abstract.service.ts",{"_index":38,"title":{},"body":{"classes/AbstractService.html":{},"coverage.html":{}}}],["src/shared/services/abstract.service.ts:11",{"_index":73,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:12",{"_index":76,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:14",{"_index":85,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:15",{"_index":87,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:17",{"_index":79,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:18",{"_index":83,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:20",{"_index":89,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:21",{"_index":100,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:23",{"_index":91,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:24",{"_index":104,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:26",{"_index":98,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:27",{"_index":102,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:29",{"_index":108,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:30",{"_index":110,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:35",{"_index":62,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:36",{"_index":70,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:8",{"_index":93,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:9",{"_index":96,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/base.service.ts",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":1108,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/types/abstract.type.ts",{"_index":1539,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/shared/utils/get",{"_index":1279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/random",{"_index":1283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/validations/env.validation.ts",{"_index":1285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/models/dto/create",{"_index":852,"title":{},"body":{"classes/CreateTrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts",{"_index":1022,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts:11",{"_index":1133,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/tack.dto.ts:9",{"_index":1135,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/track.entity.ts",{"_index":1130,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/tracks/models/track.entity.ts:14",{"_index":1132,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:22",{"_index":1131,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/tracks.controller.ts",{"_index":1137,"title":{},"body":{"classes/TracksController.html":{},"coverage.html":{}}}],["src/tracks/tracks.controller.ts:49",{"_index":1138,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.module.ts",{"_index":1151,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.service.ts",{"_index":1157,"title":{},"body":{"classes/TracksService.html":{},"coverage.html":{}}}],["src/tracks/tracks.service.ts:7",{"_index":1158,"title":{},"body":{"classes/TracksService.html":{}}}],["src/users/models/dto/create",{"_index":858,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/register",{"_index":1076,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts",{"_index":1025,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts:10",{"_index":1209,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:12",{"_index":1210,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:15",{"_index":1208,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:18",{"_index":1212,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/user.entity.ts",{"_index":1160,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/models/user.entity.ts:40",{"_index":1169,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:48",{"_index":1171,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:57",{"_index":1167,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:60",{"_index":1174,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:68",{"_index":1175,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:71",{"_index":1170,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:73",{"_index":1172,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:75",{"_index":1168,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:82",{"_index":1179,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:85",{"_index":1177,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:90",{"_index":1176,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:93",{"_index":1183,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1214,"title":{},"body":{"classes/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:31",{"_index":1215,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1222,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts",{"_index":1227,"title":{},"body":{"classes/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:7",{"_index":1229,"title":{},"body":{"classes/UsersService.html":{}}}],["stack",{"_index":143,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["stacktrace",{"_index":893,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stage",{"_index":1391,"title":{},"body":{"index.html":{}}}],["stand",{"_index":1412,"title":{},"body":{"index.html":{}}}],["started",{"_index":1367,"title":{"index.html":{},"license.html":{}},"body":{}}],["startup",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["stated",{"_index":1400,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1240,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":621,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{}}}],["status",{"_index":144,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["statuscode",{"_index":145,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["strategies/jwt.strategy",{"_index":426,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":427,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":936,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":78,"title":{},"body":{"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesService.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1416,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1490,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1483,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1496,"title":{},"body":{"license.html":{}}}],["suggested",{"_index":1423,"title":{},"body":{"index.html":{}}}],["super",{"_index":939,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(entity",{"_index":736,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"classes/TracksService.html":{}}}],["super(service",{"_index":668,"title":{},"body":{"classes/CategoriesController.html":{},"classes/TracksController.html":{}}}],["super(tokenentity",{"_index":1120,"title":{},"body":{"injectables/TempTokensService.html":{}}}],["super(userentity",{"_index":1233,"title":{},"body":{"classes/UsersService.html":{}}}],["super(usersservice",{"_index":1219,"title":{},"body":{"classes/UsersController.html":{}}}],["super.canactivate(context",{"_index":926,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.create(input",{"_index":678,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["super_admin",{"_index":1194,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["support",{"_index":1389,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1525,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1265,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger.controller.ts",{"_index":1261,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["symbol",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":23,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["table",{"_index":1291,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1290,"title":{},"body":{"coverage.html":{}}}],["tack.dto",{"_index":855,"title":{},"body":{"classes/CreateTrackDto.html":{}}}],["talents",{"_index":1406,"title":{},"body":{"index.html":{}}}],["target",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor.name",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tcreatedto",{"_index":566,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["technical",{"_index":1382,"title":{},"body":{"index.html":{}}}],["temp",{"_index":428,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["temporary",{"_index":1046,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken",{"_index":422,"title":{"classes/TemporaryToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/PasswordToken.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"coverage.html":{}}}],["temporarytoken.modelname",{"_index":431,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temporarytoken.schema",{"_index":433,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temporarytoken:16",{"_index":1040,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:19",{"_index":1039,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:27",{"_index":1042,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:30",{"_index":1044,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temptokens",{"_index":1128,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["temptokensservice",{"_index":416,"title":{"injectables/TempTokensService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/TempTokensService.html":{},"coverage.html":{},"overview.html":{}}}],["tentitydto",{"_index":564,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["test",{"_index":1422,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":865,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/.../db",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/db",{"_index":864,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":740,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["thanks",{"_index":1457,"title":{},"body":{"index.html":{}}}],["this.appservice.getwelcome",{"_index":183,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetemptoken",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateemailtoken",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatepasswordtoken",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":554,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.client.connect",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.emit(autheventenum.userregistered",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config",{"_index":988,"title":{},"body":{"injectables/MailService.html":{}}}],["this.createtransport",{"_index":987,"title":{},"body":{"injectables/MailService.html":{}}}],["this.error",{"_index":164,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":166,"title":{},"body":{"classes/ApiException.html":{}}}],["this.firstname",{"_index":1201,"title":{},"body":{"classes/User.html":{}}}],["this.lastname",{"_index":1202,"title":{},"body":{"classes/User.html":{}}}],["this.mailservice.sendmailasync",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.message",{"_index":163,"title":{},"body":{"classes/ApiException.html":{}}}],["this.moduleref.resolve(authservice",{"_index":961,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.name",{"_index":632,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.path",{"_index":167,"title":{},"body":{"classes/ApiException.html":{}}}],["this.profileservice.findoneasync",{"_index":1066,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.reflector.get",{"_index":1090,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.service.findoneasync",{"_index":674,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["this.stack",{"_index":165,"title":{},"body":{"classes/ApiException.html":{}}}],["this.status",{"_index":171,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":170,"title":{},"body":{"classes/ApiException.html":{}}}],["this.timestamp",{"_index":168,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tokenservice",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.createentity",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.harddeletebyid(id",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.insertasync(token",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.transporter",{"_index":989,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":994,"title":{},"body":{"injectables/MailService.html":{}}}],["this.usersservice.createentity(input",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findoneasync",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["this.usersservice.insertasync(user",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.updateasync(doc.id",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validaterequest(request",{"_index":551,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validatetoken",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":1001,"title":{},"body":{"injectables/MailService.html":{}}}],["throw",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/LocalStrategy.html":{},"classes/TracksController.html":{},"classes/User.html":{}}}],["throwmongoerror",{"_index":692,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["throwmongoerror(err",{"_index":723,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["timestamp",{"_index":146,"title":{},"body":{"classes/ApiException.html":{}}}],["timestamps",{"_index":580,"title":{},"body":{"classes/BaseEntity.html":{}}}],["title",{"_index":675,"title":{},"body":{"classes/CategoriesController.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":1404,"title":{},"body":{"index.html":{}}}],["tojson",{"_index":623,"title":{},"body":{"classes/BaseEntity.html":{}}}],["token",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["token')@httpcode(httpstatus.ok",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{}}}],["token.dto.ts",{"_index":1235,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["token.dto.ts:8",{"_index":1236,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.entity",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"injectables/TempTokensService.html":{}}}],["token.entity.ts",{"_index":1038,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["token.entity.ts:16",{"_index":1123,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:19",{"_index":1122,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:27",{"_index":1124,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:30",{"_index":1125,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.service",{"_index":429,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.service.ts",{"_index":1115,"title":{},"body":{"injectables/TempTokensService.html":{},"coverage.html":{}}}],["token.service.ts:9",{"_index":1117,"title":{},"body":{"injectables/TempTokensService.html":{}}}],["token.ts",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenentity",{"_index":1118,"title":{},"body":{"injectables/TempTokensService.html":{}}}],["tokenparamname",{"_index":122,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["tokenservice",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.email",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokentype.password",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["toobjectid",{"_index":693,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["toobjectid(id",{"_index":727,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["tort",{"_index":1519,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1204,"title":{},"body":{"classes/User.html":{}}}],["totalcount",{"_index":913,"title":{},"body":{"interfaces/IPagedOutputDto.html":{}}}],["towards",{"_index":1397,"title":{},"body":{"index.html":{}}}],["tpagedoutputdto",{"_index":570,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["track",{"_index":1129,"title":{"classes/Track.html":{}},"body":{"classes/Track.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"coverage.html":{}}}],["track.dto",{"_index":1142,"title":{},"body":{"classes/TracksController.html":{}}}],["track.dto.ts",{"_index":853,"title":{},"body":{"classes/CreateTrackDto.html":{},"coverage.html":{}}}],["track.modelname",{"_index":1155,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["track.schema",{"_index":1156,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["trackdto",{"_index":854,"title":{"classes/TrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{}}}],["trackmodel",{"_index":1154,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tracks.controller",{"_index":1153,"title":{},"body":{"modules/TracksModule.html":{}}}],["tracks.service",{"_index":1146,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["tracks/tracks.module",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["trackscontroller",{"_index":1136,"title":{"classes/TracksController.html":{}},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["tracksmodule",{"_index":202,"title":{"modules/TracksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["tracksservice",{"_index":1145,"title":{"classes/TracksService.html":{}},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"coverage.html":{},"overview.html":{}}}],["transform",{"_index":627,"title":{},"body":{"classes/BaseEntity.html":{}}}],["transformer",{"_index":818,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"controllers/ProfileController.html":{},"classes/User.html":{},"dependencies.html":{}}}],["transport",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["transport.redis",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["transporter",{"_index":972,"title":{},"body":{"injectables/MailService.html":{}}}],["trim",{"_index":739,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["true",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["tsconfig",{"_index":1347,"title":{},"body":{"dependencies.html":{}}}],["tupdatedto",{"_index":568,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedOutputDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedInputDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1533,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose/typegoose",{"_index":112,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesService.html":{},"classes/PasswordToken.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":618,"title":{},"body":{"classes/BaseEntity.html":{}}}],["typeof",{"_index":902,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":116,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{}}}],["types.objectid",{"_index":729,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["types/abstract.type",{"_index":915,"title":{},"body":{"interfaces/IPagedOutputDto.html":{}}}],["ui",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('password",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception('please",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{}}}],["undefined})@apiresponse({status",{"_index":646,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["undefined})@exclude",{"_index":1173,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":741,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["update",{"_index":58,"title":{},"body":{"classes/AbstractService.html":{},"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"classes/CategoriesService.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"classes/CoursesService.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/TempTokensService.html":{},"classes/TracksController.html":{},"classes/TracksService.html":{},"classes/UsersController.html":{},"classes/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":105,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["updateasync",{"_index":59,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["updateasync(id",{"_index":109,"title":{},"body":{"classes/AbstractService.html":{},"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["updatedat",{"_index":574,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["updatedby",{"_index":586,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["updatedto",{"_index":567,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["updateresulttype",{"_index":1538,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["uri",{"_index":779,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["url(clientbaseurl",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(emailparamname",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(tokenparamname",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1478,"title":{},"body":{"license.html":{}}}],["usecreateindex",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":872,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["useguards(authenticationguard",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":670,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["usenewurlparser",{"_index":236,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":345,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/LocalStrategy.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":1180,"title":{},"body":{"classes/User.html":{}}}],["user.dto",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UsersController.html":{}}}],["user.dto.ts",{"_index":859,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":1078,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:17",{"_index":1080,"title":{},"body":{"classes/RegisterUserResDto.html":{}}}],["user.email",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":1028,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["user.fullname",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.isactive",{"_index":555,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{}}}],["user.isemailverified",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.modelname",{"_index":1225,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user.password",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1226,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user_registered",{"_index":1357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userdto",{"_index":861,"title":{"classes/UserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["userentity",{"_index":1230,"title":{},"body":{"classes/UsersService.html":{}}}],["userid",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{}}}],["usermodel",{"_index":1224,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":950,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernamefield",{"_index":956,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userregistered",{"_index":1356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userrole",{"_index":442,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":665,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["userrole.mentee",{"_index":1034,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["userrole.mentor",{"_index":666,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["userrole.mentor)@apiresponse({status",{"_index":649,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["users.controller",{"_index":1223,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1218,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/models/dto/register",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["users/models/dto/user.dto",{"_index":1062,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users/models/user.entity",{"_index":443,"title":{},"body":{"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/TracksController.html":{}}}],["users/users.module",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["users/users.service",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["userscontroller",{"_index":1213,"title":{"classes/UsersController.html":{}},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":203,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":307,"title":{"classes/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["valid('development",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":930,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/ResetPassInput.html":{}}}],["validate(payload",{"_index":932,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":949,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateemailtoken",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken(input",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken(resetpassinput",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":539,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validaterequest(request",{"_index":546,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validatetoken",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(userid",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetokeninput",{"_index":284,"title":{"classes/ValidateTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["validatetokeninput:8",{"_index":1084,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validateuser",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":131,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedInputDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["value",{"_index":592,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesService.html":{},"injectables/MailService.html":{},"classes/PagedInputDto.html":{},"classes/PasswordToken.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1242,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1541,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification.dto",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["verification.dto.ts",{"_index":119,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["verification.dto.ts:10",{"_index":128,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:12",{"_index":127,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:8",{"_index":125,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verified",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(@body",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(input",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{}}}],["versionkey",{"_index":626,"title":{},"body":{"classes/BaseEntity.html":{}}}],["virtuals",{"_index":625,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vm",{"_index":29,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["void",{"_index":608,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CategoriesService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{}}}],["wait",{"_index":1447,"title":{},"body":{"index.html":{}}}],["want",{"_index":1451,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1503,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1499,"title":{},"body":{"license.html":{}}}],["website",{"_index":1372,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":246,"title":{},"body":{"injectables/AppService.html":{}}}],["whereown",{"_index":694,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["wherever",{"_index":1390,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1516,"title":{},"body":{"license.html":{}}}],["without",{"_index":1473,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1424,"title":{},"body":{"index.html":{}}}],["writable",{"_index":619,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["writable).isactive",{"_index":635,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isdeleted",{"_index":633,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isemailverified",{"_index":1205,"title":{},"body":{"classes/User.html":{}}}],["writable).password",{"_index":1196,"title":{},"body":{"classes/User.html":{}}}],["writers",{"_index":1383,"title":{},"body":{"index.html":{}}}],["x",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":707,"title":{},"body":{"classes/CategoriesService.html":{},"classes/CoursesService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["zoom",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControllerOptions.html":{"url":"interfaces/AbstractControllerOptions.html","title":"interface - AbstractControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithAuthOptions.html":{"url":"interfaces/AbstractControllerWithAuthOptions.html","title":"interface - AbstractControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithSwaggerOptions.html":{"url":"interfaces/AbstractControllerWithSwaggerOptions.html","title":"interface - AbstractControllerWithSwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithSwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        modelCreate\n                                \n                                \n                                        modelVm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        modelCreate\n                                    \n                                \n                                \n                                    \n                                        modelCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelVm\n                                    \n                                \n                                \n                                    \n                                        modelVm:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractService.html":{"url":"classes/AbstractService.html","title":"class - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                count\n                            \n                            \n                                    Abstract\n                                    Async\n                                countAsync\n                            \n                            \n                                    Abstract\n                                findAll\n                            \n                            \n                                    Abstract\n                                    Async\n                                findAllAsync\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                    Async\n                                findByIdAsync\n                            \n                            \n                                    Abstract\n                                findOne\n                            \n                            \n                                    Abstract\n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Abstract\n                                hardDelete\n                            \n                            \n                                    Abstract\n                                hardDeleteById\n                            \n                            \n                                    Abstract\n                                insert\n                            \n                            \n                                    Abstract\n                                    Async\n                                insertAsync\n                            \n                            \n                                    Abstract\n                                softDelete\n                            \n                            \n                                    Abstract\n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                    Abstract\n                                softDeleteById\n                            \n                            \n                                    Abstract\n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Abstract\n                                update\n                            \n                            \n                                    Abstract\n                                    Async\n                                updateAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            count\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hardDelete(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insert(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDelete(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentType } from '@typegoose/typegoose';\nimport { Query } from 'mongoose';\n\nimport { BaseEntity } from '../models/base.entity';\nimport { QueryItem, QueryList } from '../types';\n\nexport abstract class AbstractService {\n  abstract insert(entity: T): Promise>;\n  abstract async insertAsync(entity: T): Promise>;\n\n  abstract findAll(filter: any): QueryList;\n  abstract async findAllAsync(filter: any): Promise>>;\n\n  abstract findOne(filter: any): QueryItem;\n  abstract async findOneAsync(filter: any): Promise>;\n\n  abstract findById(id: string): QueryItem;\n  abstract async findByIdAsync(id: string): Promise>;\n\n  abstract hardDelete(filter: any): QueryItem;\n  abstract async softDeleteAsync(filter: any): Promise;\n\n  abstract hardDeleteById(id: string): QueryItem;\n  abstract async softDeleteByIdAsync(id: string): Promise>;\n\n  abstract softDelete(filter: any): QueryItem;\n  abstract softDeleteById(id: string): QueryItem;\n\n  abstract update(id: string, item: Partial): QueryItem;\n  abstract async updateAsync(\n    id: string,\n    item: Partial\n  ): Promise>;\n\n  abstract count(filter: any): Query;\n  abstract async countAsync(filter: any): Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctVerifyDto.html":{"url":"classes/AcctVerifyDto.html","title":"class - AcctVerifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctVerifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/acct-verification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBaseUrl\n                            \n                            \n                                emailParamName\n                            \n                            \n                                tokenParamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty, IsUrl } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class AcctVerifyDto extends PickType(LoginReqDto, ['email']) {\n  @IsUrl()\n  clientBaseUrl: string;\n  @IsNotEmpty()\n  tokenParamName: string;\n  @IsNotEmpty()\n  emailParamName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/errors/api-exception.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: any, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/shared/errors/api-exception.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport configuration from '../config/configuration';\n\nexport class ApiException {\n  @ApiProperty()\n  statusCode?: number;\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  status?: string;\n  @ApiProperty()\n  error?: string;\n  @ApiProperty()\n  errors?: any;\n  @ApiProperty()\n  timestamp?: string;\n  @ApiProperty()\n  path?: string;\n  @ApiProperty()\n  stack?: string;\n\n  constructor(\n    message: string,\n    error: string,\n    stack: string,\n    errors: any,\n    path: string,\n    statusCode: number\n  ) {\n    this.message = message;\n    this.error = error;\n    this.stack = stack;\n    this.errors = errors;\n    this.path = path;\n    this.timestamp = new Date().toISOString();\n    this.statusCode = statusCode;\n    this.status = HttpStatus[statusCode];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getWelcome();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CoursesModule } from './courses/courses.module';\nimport { MailModule } from './shared/mail/mail.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { SharedModule } from './shared';\nimport configuration from './shared/config/configuration';\nimport { envValidation } from './shared/validations/env.validation';\nimport { TracksModule } from './tracks/tracks.module';\nimport { UsersModule } from './users/users.module';\nimport { CategoriesModule } from './categories/categories.module';\n\nexport const Config = ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n});\nconst Database = MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n});\n@Module({\n  imports: [\n    SharedModule,\n    AuthModule,\n    UsersModule,\n    Config,\n    Database,\n    MailModule,\n    ProfileModule,\n    TracksModule,\n    CoursesModule,\n    CategoriesModule\n  ],\n\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWelcome\n                        \n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcome(): string {\n    return 'Welcome to CCN!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                sendEmailVerifyToken\n                            \n                            \n                                    Async\n                                sendForgotPwToken\n                            \n                            \n                                    Async\n                                verifyEmailToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(input: LoginReqDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginResDto})@ApiUnauthorizedResponse({type: ApiException})@UseGuards(AuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                LoginReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(input: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiConflictResponse({type: ApiException})@ApiResponse({type: RegisterUserResDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(input: ResetPassInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPassInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailVerifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerifyToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email-confirmation-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendForgotPwToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendForgotPwToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-password-reset-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmailToken(input: ValidateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ValidateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Post,\n  UnauthorizedException,\n  UseGuards\n} from '@nestjs/common';\nimport {\n  ApiConflictResponse,\n  ApiOkResponse,\n  ApiResponse,\n  ApiTags,\n  ApiUnauthorizedResponse\n} from '@nestjs/swagger';\n\nimport { LoginReqDto } from '../auth/models/dto/auth.dto';\nimport configuration from '../shared/config/configuration';\nimport { ApiException } from '../shared/errors/api-exception';\nimport { MailService } from '../shared/mail/mail.service';\nimport {\n  RegisterUserDto,\n  RegisterUserResDto\n} from '../users/models/dto/register-user.dto';\nimport { UsersService } from './../users/users.service';\nimport { AuthService } from './auth.service';\nimport { AuthenticationGuard } from './guards/auth.guard';\nimport { AcctVerifyDto } from './models/dto/acct-verification.dto';\nimport { LoginResDto } from './models/dto/auth.dto';\nimport { ResetPassInput } from './models/dto/reset-pw.dto';\nimport { ValidateTokenInput } from './models/dto/validate-token.dto';\nimport { TokenType } from './models/temporary-token.entity';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly mailService: MailService\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: LoginResDto })\n  @ApiUnauthorizedResponse({ type: ApiException })\n  @UseGuards(AuthenticationGuard)\n  async login(@Body() input: LoginReqDto): Promise {\n    const accessToken = await this.authService.login(\n      input.email,\n      input.password\n    );\n    return { accessToken };\n  }\n  @Post('register')\n  @ApiConflictResponse({ type: ApiException })\n  @ApiResponse({ type: RegisterUserResDto, status: HttpStatus.CREATED })\n  async register(@Body() input: RegisterUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    const saved = await this.usersService.insertAsync(user);\n\n    return { canLogin: saved.isEmailVerified };\n  }\n\n  @Post('send-email-confirmation-token')\n  @HttpCode(HttpStatus.OK)\n  async sendEmailVerifyToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User with email does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email has already been confirmed');\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.EMAIL,\n      expiresInMins: 60 * 24\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please confirm your email here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n  @Post('confirm-email')\n  @HttpCode(HttpStatus.OK)\n  async verifyEmailToken(@Body() input: ValidateTokenInput): Promise {\n    const { email, token } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email already verified');\n    await this.authService.validateEmailToken({\n      userId: user.id,\n      plainToken: token\n    });\n  }\n  @Post('send-password-reset-token')\n  @HttpCode(HttpStatus.OK)\n  async sendForgotPwToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) return;\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.PASSWORD,\n      expiresInMins: 10\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please reset your password here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n\n  @Post('reset-password')\n  @HttpCode(HttpStatus.OK)\n  async resetPassword(@Body() input: ResetPassInput): Promise {\n    const { email, token, newPassword } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new UnauthorizedException('Password reset failed');\n    await this.authService.validatePasswordToken({\n      userId: exist.id,\n      plainToken: token,\n      newPassword\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthHandler.html":{"url":"injectables/AuthHandler.html","title":"injectable - AuthHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/handlers/auth.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleUserRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleUserRegistered\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleUserRegistered(data: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(AuthEventEnum.UserRegistered)\n                \n            \n\n            \n                \n                    Defined in src/auth/handlers/auth.handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { EventPattern } from '@nestjs/microservices';\n\nimport { AuthEventEnum } from '../models/auth.enums';\n\n@Injectable()\nexport class AuthHandler {\n  @EventPattern(AuthEventEnum.UserRegistered)\n  async handleUserRegistered(data: Record) {\n    // business logic\n    Logger.debug(data, 'handler');\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthHandler\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            TempTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AUTH_GUARD_TYPE } from '~shared/constants';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { MailService } from '../shared/mail/mail.service';\nimport { TemporaryToken } from './models/temporary-token.entity';\nimport { UsersModule } from '../users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { AuthHandler } from './handlers/auth.handler';\nimport { SessionSerializer } from './session.serializer';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { TempTokensService } from './temp-token.service';\n\nconst Config = [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n];\n@Module({\n  imports: [UsersModule, ...Config],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    JwtStrategy,\n    SessionSerializer,\n    MailService,\n    AuthHandler,\n    TempTokensService\n  ],\n  controllers: [AuthController],\n  exports: [AuthService, ...Config]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthObj.html":{"url":"interfaces/AuthObj.html","title":"interface - AuthObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authRoles\n                                \n                                \n                                        enableAuth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authRoles\n                                    \n                                \n                                \n                                    \n                                        authRoles:         UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableAuth\n                                    \n                                \n                                \n                                    \n                                        enableAuth:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTempToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                pub\n                            \n                            \n                                    Async\n                                validateEmailToken\n                            \n                            \n                                    Async\n                                validatePasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, tokenService: TempTokensService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TempTokensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateTempToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTempToken(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pub\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pub()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmailToken(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePasswordToken(resetPassInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPassInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(userId: string, type: TokenType, plainToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ClientRedis\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Client({transport: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  OnModuleInit,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { Client, ClientRedis, Transport } from '@nestjs/microservices';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport configuration from '~shared/config/configuration';\nimport { authErrors } from '~shared/errors';\nimport { generateRandomToken } from '~shared/utils/random-token';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from './../users/users.service';\nimport { AuthEventEnum } from './models/auth.enums';\nimport { JwtPayload } from './models/jwt-payload';\nimport { TokenType } from './models/temporary-token.entity';\nimport { TempTokensService } from './temp-token.service';\n\n@Injectable()\nexport class AuthService implements OnModuleInit {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly tokenService: TempTokensService\n  ) {}\n  @Client({ transport: Transport.REDIS })\n  private client: ClientRedis;\n\n  async onModuleInit(): Promise {\n    // Connect your client to the redis server on startup.\n    try {\n      // await this.client.connect();\n    } catch (error) {\n      //Logger.error(error);\n    }\n  }\n  async validateUser(email: string, pw: string): Promise {\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    if (!user.isEmailVerified)\n      throw new UnauthorizedException('Please confirm your email');\n    try {\n      const isValid = await bcrypt.compare(pw, user.password);\n      if (!isValid) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    } catch (error) {\n      Logger.error(error);\n      throw authErrors.INVALID_LOGIN_ATTEMPT;\n    }\n    return user;\n  }\n\n  async login(email: string, pass: string): Promise {\n    const user = await this.usersService.findOneAsync({ email });\n\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    const isValidPassword = await bcrypt.compare(pass, user.password);\n    if (!isValidPassword) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    const { jwtValidityHrs, jwtSecret } = configuration();\n    const expiresIn = 60 * 60 * jwtValidityHrs;\n    const payload: JwtPayload = {\n      email: user.email,\n      userId: user.id,\n      role: user.role\n    };\n    return jwt.sign(payload, jwtSecret, { expiresIn });\n  }\n\n  async pub(): Promise {\n    this.client.emit(AuthEventEnum.UserRegistered, 'email');\n  }\n\n  async generateTempToken({\n    user,\n    type,\n    expiresInMins\n  }: {\n    user: User;\n    type: TokenType;\n    expiresInMins: number;\n  }): Promise {\n    const plainToken = generateRandomToken(64);\n    const encryptedToken = await bcrypt.hash(plainToken, 10);\n    const token = this.tokenService.createEntity({\n      token: encryptedToken,\n      expireAt: new Date(new Date().getTime() + expiresInMins * 60000),\n      type,\n      user: user.id as any\n    });\n    await this.tokenService.insertAsync(token);\n    return plainToken;\n  }\n  async validateEmailToken(input: {\n    userId: string;\n    plainToken: string;\n  }): Promise {\n    const { userId, plainToken } = input;\n\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.EMAIL,\n      plainToken\n    );\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { isEmailVerified: true });\n    await this.tokenService.hardDeleteById(id);\n  }\n  async validatePasswordToken(resetPassInput: {\n    userId: string;\n    plainToken: string;\n    newPassword: string;\n  }): Promise {\n    const { userId, plainToken, newPassword } = resetPassInput;\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.PASSWORD,\n      plainToken\n    );\n    const passwordHash = await bcrypt.hash(newPassword, 10);\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { password: passwordHash });\n    await this.tokenService.hardDeleteById(id);\n  }\n  private async validateToken(\n    userId: string,\n    type: TokenType,\n    plainToken: string\n  ) {\n    const exist = await this.tokenService\n      .findOne({ user: userId, type })\n      .populate('user');\n\n    if (!exist) throw authErrors.EXPIRED_TOKEN;\n    try {\n      const isValid = await bcrypt.compare(plainToken, exist.token);\n      if (!isValid) throw authErrors.INVALID_TOKEN;\n    } catch (error) {\n      throw authErrors.INVALID_TOKEN;\n    }\n    return exist;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nimport configuration from '../../shared/config/configuration';\nimport { AuthService } from '../auth.service';\nimport { LoginReqDto } from '../models/dto/auth.dto';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    return await this.validateRequest(request);\n  }\n  async validateRequest(request: Request): Promise {\n    if (!configuration().isAuthEnabled) return true;\n    const { email, password }: LoginReqDto = request.body;\n    const user = await this.authService.validateUser(email, password);\n    if (!user || !user.isActive) throw new UnauthorizedException();\n    request.user = user;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerOptions.html":{"url":"interfaces/BaseControllerOptions.html","title":"interface - BaseControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedOutputDto: { new (): TPagedOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithAuthOptions.html":{"url":"interfaces/BaseControllerWithAuthOptions.html","title":"interface - BaseControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedOutputDto: { new (): TPagedOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithSwaggerOpts.html":{"url":"interfaces/BaseControllerWithSwaggerOpts.html","title":"interface - BaseControllerWithSwaggerOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithSwaggerOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createDto\n                                \n                                \n                                        entityDto\n                                \n                                \n                                        pagedOutputDto\n                                \n                                \n                                        updateDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDto\n                                    \n                                \n                                \n                                    \n                                        createDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDto\n                                    \n                                \n                                \n                                    \n                                        entityDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagedOutputDto\n                                    \n                                \n                                \n                                    \n                                        pagedOutputDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDto\n                                    \n                                \n                                \n                                    \n                                        updateDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedOutputDto: { new (): TPagedOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/base.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId } from 'class-validator';\n\nexport class BaseDto {\n  @IsMongoId()\n  readonly id: string;\n  @ApiProperty()\n  readonly updatedAt: Date;\n  @ApiProperty()\n  readonly createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:71\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:62\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:53\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop, Ref } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { Schema } from 'mongoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { Writable } from '../types';\n\nexport class BaseEntity extends TimeStamps {\n  id: string;\n\n  @prop({ required: true, default: false })\n  readonly isDeleted!: boolean;\n  @prop({ default: null, ref: BaseEntity })\n  readonly createdBy?: Ref = null;\n  @prop({ default: null, ref: BaseEntity })\n  readonly updatedBy?: Ref = null;\n  @prop({ required: true, default: true })\n  readonly isActive: boolean = true;\n  @prop({ default: null, ref: BaseEntity })\n  readonly deletedBy?: Ref = null;\n  @prop({ default: null })\n  readonly deletedAt?: Date;\n  @prop({ required: true, default: new Date() })\n  readonly createdAt: Date = new Date();\n  @prop({ required: true, default: new Date() })\n  readonly updatedAt: Date = null;\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true,\n        versionKey: false,\n        transform: (_, ret) => {\n          ret.id = ret._id;\n          delete ret._id;\n        }\n      }\n    });\n  }\n  static get modelName(): string {\n    return this.name;\n  }\n  delete(): void {\n    (this as Writable).isDeleted = true;\n  }\n\n  /**\n   * Sets {isDeleted} to false\n   *\n   * @memberof BaseEntity\n   */\n  restore(): void {\n    (this as Writable).isDeleted = false;\n  }\n\n  /**\n   * Sets {isActive} to true\n   *\n   * @memberof BaseEntity\n   */\n  deactivate(): void {\n    (this as Writable).isActive = false;\n  }\n\n  /**\n   * Sets isActive to false\n   *\n   * @memberof BaseEntity\n   */\n  activate(): void {\n    (this as Writable).isActive = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoriesController.html":{"url":"classes/CategoriesController.html","title":"class - CategoriesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: CategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.controller.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: CategoryDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\nimport { CategoryDto, PagedCategoryOutDto } from './models/dtos/category.dto';\nimport { CreateCategoryDto } from './models/dtos/create-category.dto';\n\nexport class CategoriesController extends BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  createDto: CreateCategoryDto,\n  updateDto: CreateCategoryDto,\n  entity: Category,\n  pagedOutputDto: PagedCategoryOutDto,\n  entityDto: CategoryDto\n}) {\n  constructor(protected readonly service: CategoriesService) {\n    super(service);\n  }\n\n  @Post()\n  @ApiResponse({ type: CategoryDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateCategoryDto): Promise {\n    const exist = await this.service.findOneAsync({ title: input.name });\n    if (exist)\n      throw new ConflictException('Category with the name already exists');\n\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\n\nCategoriesService \n\nCategoriesService \n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoriesController } from './categories.controller';\nimport { CategoriesService } from './categories.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Category } from './models/category.entity';\n\nconst CategoryModel = MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n]);\n@Module({\n  imports: [CategoryModel],\n  controllers: [CategoriesController],\n  providers: [CategoriesService],\n  exports: [CategoriesService, CategoryModel]\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoriesService.html":{"url":"classes/CategoriesService.html","title":"class - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entity\n                            \n                            \n                                    Private\n                                    Readonly\n                                req\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                    Async\n                                countAsync\n                            \n                            \n                                createEntity\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findAllAsync\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findByIdAsync\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Protected\n                                getUserId\n                            \n                            \n                                hardDelete\n                            \n                            \n                                hardDeleteById\n                            \n                            \n                                insert\n                            \n                            \n                                    Async\n                                insertAsync\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                softDeleteById\n                            \n                            \n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Protected\n                                    Static\n                                throwMongoError\n                            \n                            \n                                    Protected\n                                    Static\n                                toObjectId\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                updateAsync\n                            \n                            \n                                    Private\n                                whereOwn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnModelType>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            req\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Inject(REQUEST)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:25\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:184\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEntity\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEntity(doc?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter: object, opts: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:108\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:115\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:99\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserId()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \nhardDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:123\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nhardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:145\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            throwMongoError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    throwMongoError(err: MongoError)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            MongoError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            toObjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toObjectId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:163\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:176\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            whereOwn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    whereOwn()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { BaseService } from '~shared/services';\n\nimport { Category } from './models/category.entity';\n\nexport class CategoriesService extends BaseService {\n  constructor(\n    @InjectModel(Category.modelName)\n    protected readonly entity: ReturnModelType\n  ) {\n    super(entity);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/category.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/category.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\nimport { prop } from '@typegoose/typegoose';\n\nexport class Category extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: true\n  })\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedOutputDto } from '~shared/models/dto';\n\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  name: string;\n  @MaxLength(columnSize.length128)\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedOutputDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appEmail\n                                \n                                \n                                        database\n                                \n                                \n                                        environment\n                                \n                                \n                                        isAuthEnabled\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        jwtValidityHrs\n                                \n                                \n                                        mailer\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUrl\n                                \n                                \n                                        rootUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appEmail\n                                    \n                                \n                                \n                                    \n                                        appEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         Database\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Database\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthEnabled\n                                    \n                                \n                                \n                                    \n                                        isAuthEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtValidityHrs\n                                    \n                                \n                                \n                                    \n                                        jwtValidityHrs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                    \n                                \n                                \n                                    \n                                        mailer:         Mailer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Mailer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUrl\n                                    \n                                \n                                \n                                    \n                                        redisUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControllerAuth.html":{"url":"interfaces/ControllerAuth.html","title":"interface - ControllerAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ControllerAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        create\n                                \n                                \n                                        delete\n                                \n                                \n                                        find\n                                \n                                \n                                        findById\n                                \n                                \n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                    Readonly\n                                playlistUrl\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Course extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    unique: false\n  })\n  readonly playlistUrl!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly enrollmentCount!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseDto.html":{"url":"classes/CourseDto.html","title":"class - CourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                playlistUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length128)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()@MaxLength(columnSize.length256)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength, IsUrl } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedOutputDto } from '~shared/models/dto';\n\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedOutputDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoursesController.html":{"url":"classes/CoursesController.html","title":"class - CoursesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCourseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: CourseDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCourseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { Course } from './models/course.entity';\nimport { CourseDto, PagedCourseOutputDto } from './models/dtos/course.dto';\nimport { CreateCourseDto } from './models/dtos/create-course.dto';\n\nexport class CoursesController extends BaseCrudController({\n  entity: Course,\n  entityDto: CourseDto,\n  createDto: CreateCourseDto,\n  updateDto: CreateCourseDto,\n  pagedOutputDto: PagedCourseOutputDto,\n  auth: {\n    update: [UserRole.MENTOR, UserRole.ADMIN],\n    delete: [UserRole.MENTOR, UserRole.ADMIN]\n  }\n}) {\n  @Post()\n  @ApiResponse({ type: CourseDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateCourseDto): Promise {\n    const exist = await this.service.findOneAsync({ title: input.title });\n    if (exist)\n      throw new ConflictException('Course with the title already exists');\n\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\n\nCoursesService \n\nCoursesService \n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { CoursesController } from './courses.controller';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\n\nconst CourseModel = MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n]);\n@Module({\n  imports: [CourseModel],\n  controllers: [CoursesController],\n  providers: [CoursesService],\n  exports: [CoursesService, CourseModel]\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoursesService.html":{"url":"classes/CoursesService.html","title":"class - CoursesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoursesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entity\n                            \n                            \n                                    Private\n                                    Readonly\n                                req\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                    Async\n                                countAsync\n                            \n                            \n                                createEntity\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findAllAsync\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findByIdAsync\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Protected\n                                getUserId\n                            \n                            \n                                hardDelete\n                            \n                            \n                                hardDeleteById\n                            \n                            \n                                insert\n                            \n                            \n                                    Async\n                                insertAsync\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                softDeleteById\n                            \n                            \n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Protected\n                                    Static\n                                throwMongoError\n                            \n                            \n                                    Protected\n                                    Static\n                                toObjectId\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                updateAsync\n                            \n                            \n                                    Private\n                                whereOwn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/courses/courses.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnModelType>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            req\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Inject(REQUEST)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:25\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:184\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEntity\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEntity(doc?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter: object, opts: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:108\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:115\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:99\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserId()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \nhardDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:123\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nhardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:145\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            throwMongoError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    throwMongoError(err: MongoError)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            MongoError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            toObjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toObjectId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:163\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:176\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            whereOwn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    whereOwn()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { BaseService } from '~shared/services';\n\nimport { Course } from './models/course.entity';\n\nexport class CoursesService extends BaseService {\n  constructor(\n    @InjectModel(Course.modelName)\n    protected readonly entity: ReturnModelType\n  ) {\n    super(entity);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/create-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CategoryDto } from './category.dto';\n\nexport class CreateCategoryDto extends PickType(CategoryDto, [\n  'name',\n  'description'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDto.html":{"url":"classes/CreateCourseDto.html","title":"class - CreateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/create-course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CourseDto } from './course.dto';\n\nexport class CreateCourseDto extends PickType(CourseDto, [\n  'title',\n  'description',\n  'playlistUrl'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrackDto.html":{"url":"classes/CreateTrackDto.html","title":"class - CreateTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { TrackDto } from './tack.dto';\n\nexport class CreateTrackDto extends PickType(TrackDto, [\n  'title',\n  'description'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto extends OmitType(UserDto, [\n  'id',\n  'updatedAt',\n  'createdAt'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Database.html":{"url":"interfaces/Database.html","title":"interface - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        name\n                                \n                                \n                                        port\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DbTest.html":{"url":"modules/DbTest.html","title":"module - DbTest","body":"\n                   \n\n\n\n\n    Modules\n    DbTest\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/db-test.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst mongod = new MongoMemoryServer();\n\nconst dbFactory = MongooseModule.forRootAsync({\n  useFactory: async () => {\n    process.env.MAILER_API_KEY = 'api_key_mailgun';\n    process.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\n    const uri = await mongod.getUri();\n\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n});\n\n@Module({\n  imports: [dbFactory],\n  exports: [dbFactory]\n})\nexport class DbTest {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultAuthObject.html":{"url":"interfaces/DefaultAuthObject.html","title":"interface - DefaultAuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultAuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        create\n                                \n                                \n                                            Optional\n                                        delete\n                                \n                                \n                                            Optional\n                                        find\n                                \n                                \n                                            Optional\n                                        findById\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiException } from '../errors/api-exception';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(error: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse() as Response;\n    const req = ctx.getRequest();\n    const statusCode = error.getStatus();\n    const stacktrace = error.stack;\n    const errorName = error.response.name || error.response.error || error.name;\n    const errors = error.response.errors || null;\n    const path = req ? req.url : null;\n\n    if (statusCode === HttpStatus.UNAUTHORIZED) {\n      if (typeof error.response !== 'string') {\n        error.response.message =\n          error.response.message ||\n          'You do not have permission to access this resource';\n      }\n    }\n\n    const exception = new ApiException(\n      error.response.message,\n      errorName,\n      stacktrace,\n      errors,\n      path,\n      statusCode\n    );\n    res.status(statusCode).json(exception);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagedOutputDto.html":{"url":"interfaces/IPagedOutputDto.html","title":"interface - IPagedOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagedOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-out.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        totalCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ClassType } from '../../types/abstract.type';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Type } from '@nestjs/common';\n\nexport interface IPagedOutputDto {\n  totalCount: number;\n\n  items: T[];\n}\n\nexport function PagedOutputDto(\n  entityDto: T\n): Type> {\n  class Paged implements IPagedOutputDto {\n    totalCount: number;\n    @ApiProperty({\n      type: entityDto\n    })\n    items: T[];\n  }\n\n  return Paged;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport configuration from '~shared/config/configuration';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(AUTH_GUARD_TYPE) {\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise | Observable {\n    // console.log(context.switchToHttp().getRequest().sessionID);\n    return configuration().isAuthEnabled ? super.canActivate(context) : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        role\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\nexport interface JwtPayload {\n  email: string;\n  role: UserRole;\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport configuration from '../../shared/config/configuration';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().jwtSecret\n    });\n  }\n\n  async validate(payload: any): Promise {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ContextIdFactory, ModuleRef } from '@nestjs/core';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private moduleRef: ModuleRef) {\n    super({\n      passReqToCallback: true,\n      usernameField: 'email',\n    });\n  }\n\n  async validate(request: Request, username: string, password: string) {\n    const contextId = ContextIdFactory.getByRequest(request);\n    // \"AuthService\" is a request-scoped provider\n    const authService = await this.moduleRef.resolve(AuthService, contextId);\n    const user = await authService.validateUser(username, password);\n    if (!user.isActive) throw new UnauthorizedException();\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReqDto.html":{"url":"classes/LoginReqDto.html","title":"class - LoginReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResDto.html":{"url":"classes/LoginResDto.html","title":"class - LoginResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTransport\n                            \n                            \n                                    Async\n                                sendMailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/mail/mail.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTransport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMailAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailAsync(mailOptions: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : configuration()\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Mail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as mg from 'nodemailer-mailgun-transport';\nimport Mail = require('nodemailer/lib/mailer');\nimport configuration from '~shared/config/configuration';\n\n@Injectable()\nexport class MailService {\n  private readonly config = configuration();\n  private transporter: Mail;\n  constructor() {\n    this.createTransport();\n  }\n\n  private createTransport() {\n    const { mailer } = this.config;\n    this.transporter = nodemailer.createTransport(\n      mg({\n        auth: {\n          api_key: mailer.key,\n          domain: mailer.domain\n        }\n      })\n    );\n  }\n\n  async sendMailAsync(mailOptions: Mail.Options) {\n    const info = await this.transporter.sendMail(mailOptions);\n    Logger.debug(`Message sent: ${info.messageId}`);\n\n    // Preview only available when sending through an Ethereal account\n    // Logger.debug(`Preview URL: ${nodemailer.getTestMessageUrl(info)}`);\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mailer.html":{"url":"interfaces/Mailer.html","title":"interface - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCategoryOutDto.html":{"url":"classes/PagedCategoryOutDto.html","title":"class - PagedCategoryOutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCategoryOutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedOutputDto } from '~shared/models/dto';\n\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  name: string;\n  @MaxLength(columnSize.length128)\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedOutputDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCourseOutputDto.html":{"url":"classes/PagedCourseOutputDto.html","title":"class - PagedCourseOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCourseOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength, IsUrl } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedOutputDto } from '~shared/models/dto';\n\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedOutputDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedInputDto.html":{"url":"classes/PagedInputDto.html","title":"class - PagedInputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedInputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-in.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                opts\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-in.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            opts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsJSON()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-in.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsJSON()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-in.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-in.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsJSON, IsOptional } from 'class-validator';\n\nexport class PagedInputDto {\n  @IsOptional()\n  skip?: number = 0;\n  @IsOptional()\n  limit?: number = 100;\n  @IsOptional()\n  @IsJSON()\n  search?: string;\n  @IsJSON()\n  @IsOptional()\n  opts?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedTrackOutputDto.html":{"url":"classes/PagedTrackOutputDto.html","title":"class - PagedTrackOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedTrackOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/tack.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedOutputDto } from '~shared/models/dto';\n\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  title: string;\n  @MaxLength(columnSize.length128)\n  description: string;\n}\nexport class PagedTrackOutputDto extends PagedOutputDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedUserOutputDto.html":{"url":"classes/PagedUserOutputDto.html","title":"class - PagedUserOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedUserOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsEnum, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedOutputDto } from '~shared/models/dto';\n\nimport { UserRole } from '../user.entity';\n\nexport class UserDto extends BaseDto {\n  @MaxLength(columnSize.length64)\n  firstName: string;\n  @MaxLength(columnSize.length64)\n  lastName: string;\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  email: string;\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  role?: UserRole = UserRole.MENTEE;\n}\n\nexport class PagedUserOutputDto extends PagedOutputDto(UserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordToken.html":{"url":"classes/PasswordToken.html","title":"class - PasswordToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/pass-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TemporaryToken\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions } from '@typegoose/typegoose';\n\nimport { TemporaryToken } from './temporary-token.entity';\n\n@modelOptions({ options: { customName: 'password_reset_tokens' } })\n@index({ createdAt: 1 }, { expireAfterSeconds: 1 })\nexport class PasswordToken extends TemporaryToken {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { UserDto } from '../users/models/dto/user.dto';\nimport { UsersService } from './../users/users.service';\n\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: UsersService) {}\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  async getProfile(@Req() req: Request): Promise {\n    const user = await this.profileService.findOneAsync({\n      email: req.user['email']\n    });\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_exports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nProfileModule->UsersService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { UsersModule } from '../users/users.module';\nimport { UsersService } from './../users/users.service';\nimport { ProfileController } from './profile.controller';\n\n@Module({\n  imports: [UsersModule],\n  providers: [UsersService],\n  controllers: [ProfileController],\n  exports: [UsersService]\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserResDto.html":{"url":"classes/RegisterUserResDto.html","title":"class - RegisterUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                canLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            canLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassInput.html":{"url":"classes/ResetPassInput.html","title":"class - ResetPassInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/reset-pw.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ValidateTokenInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/reset-pw.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nimport { ValidateTokenInput } from './validate-token.dto';\n\nexport class ResetPassInput extends ValidateTokenInput {\n  @IsNotEmpty()\n  newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport configuration from '~shared/config/configuration';\n\nimport { UserRole } from '../../users/models/user.entity';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      UserRole,\n      context.getHandler()\n    );\n    if (!roles || !configuration().isAuthEnabled) return true;\n\n    const request = context.switchToHttp().getRequest();\n    const { role } = request.user as JwtPayload;\n    return roles.includes(role);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n  deserializeUser(user: User, done: (err: Error, user: User) => void): any {\n    //Logger.log(user);\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nBaseService \n\nBaseService \n\n\n\nSharedModule\n\nSharedModule\n\nBaseService  -->\n\nSharedModule->BaseService \n\n\n\n\n\nBaseService\n\nBaseService\n\nSharedModule -->\n\nBaseService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BaseService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { BaseEntity } from './models/base.entity';\nimport { BaseService } from './services';\n\nconst BaseModel = MongooseModule.forFeature([\n  { name: BaseEntity.modelName, schema: BaseEntity.schema }\n]);\n\n@Global()\n@Module({\n  imports: [BaseModel],\n  providers: [BaseService],\n  exports: [BaseService, BaseModel]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TempTokensService.html":{"url":"injectables/TempTokensService.html","title":"injectable - TempTokensService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TempTokensService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/temp-token.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entity\n                            \n                            \n                                    Private\n                                    Readonly\n                                req\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                    Async\n                                countAsync\n                            \n                            \n                                createEntity\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findAllAsync\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findByIdAsync\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Protected\n                                getUserId\n                            \n                            \n                                hardDelete\n                            \n                            \n                                hardDeleteById\n                            \n                            \n                                insert\n                            \n                            \n                                    Async\n                                insertAsync\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                softDeleteById\n                            \n                            \n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Protected\n                                    Static\n                                throwMongoError\n                            \n                            \n                                    Protected\n                                    Static\n                                toObjectId\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                updateAsync\n                            \n                            \n                                    Private\n                                whereOwn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenEntity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/temp-token.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenEntity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:184\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEntity\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEntity(doc?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter: object, opts: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:108\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:115\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:99\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserId()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \nhardDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:123\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nhardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:145\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            throwMongoError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    throwMongoError(err: MongoError)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            MongoError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            toObjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toObjectId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:163\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:176\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            whereOwn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    whereOwn()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnModelType>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            req\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Inject(REQUEST)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:25\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\n\nimport { BaseService } from '../shared';\nimport { TemporaryToken } from './models/temporary-token.entity';\n\n@Injectable()\nexport class TempTokensService extends BaseService {\n  constructor(\n    @InjectModel(TemporaryToken.modelName)\n    protected readonly tokenEntity: ReturnModelType\n  ) {\n    super(tokenEntity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemporaryToken.html":{"url":"classes/TemporaryToken.html","title":"class - TemporaryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemporaryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/temporary-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions, prop, Ref } from '@typegoose/typegoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { BaseEntity } from '../../shared/models/base.entity';\n\nexport enum TokenType {\n  PASSWORD = 'PASSWORD_TOKEN',\n  EMAIL = 'EMAIL_TOKEN'\n}\n\n@index({ user: 1, type: 1 }, { unique: true })\n@modelOptions({ options: { customName: 'temptokens' } })\n@index({ expireAt: 1 }, { expireAfterSeconds: 0 })\nexport class TemporaryToken extends BaseEntity {\n  @prop({ required: true })\n  readonly token!: string;\n\n  @prop({ required: true, type: Date })\n  readonly expireAt!: Date;\n\n  @prop({\n    enum: TokenType,\n    type: String,\n    unique: false,\n    required: true\n  })\n  readonly type?: TokenType;\n\n  @prop({ ref: User, unique: false, required: true })\n  readonly user?: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/track.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\nimport { index, prop } from '@typegoose/typegoose';\n\n@index({ title: 1 }, { unique: true })\nexport class Track extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackDto.html":{"url":"classes/TrackDto.html","title":"class - TrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/tack.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedOutputDto } from '~shared/models/dto';\n\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  title: string;\n  @MaxLength(columnSize.length128)\n  description: string;\n}\nexport class PagedTrackOutputDto extends PagedOutputDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TracksController.html":{"url":"classes/TracksController.html","title":"class - TracksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TracksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTrackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: TrackDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers/base.controller';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors/api-exception';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../auth/guards/roles.guard';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateTrackDto } from './models/dto/create-track.dto';\nimport { PagedTrackOutputDto, TrackDto } from './models/dto/tack.dto';\nimport { Track } from './models/track.entity';\nimport { TracksService } from './tracks.service';\n\nexport class TracksController extends BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedOutputDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n}) {\n  /**\n   *\n   */\n  // constructor(protected service: TracksService) {\n  //   super(service);\n  // }\n  @Post()\n  @ApiResponse({ type: TrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTrackDto): Promise {\n    const exist = await this.service.findOneAsync({ title: input.title });\n    if (exist)\n      throw new ConflictException('Track with the title already exists');\n\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TracksModule.html":{"url":"modules/TracksModule.html","title":"module - TracksModule","body":"\n                   \n\n\n\n\n    Modules\n    TracksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_imports\n\n\n\ncluster_TracksModule_exports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nTracksModule\n\nTracksModule\n\nTracksModule -->\n\nSharedModule->TracksModule\n\n\n\n\n\nTracksService \n\nTracksService \n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tracks/tracks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TracksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { Track } from './models/track.entity';\nimport { TracksController } from './tracks.controller';\nimport { TracksService } from './tracks.service';\n\nconst TrackModel = MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n]);\n@Module({\n  imports: [TrackModel, SharedModule],\n  controllers: [TracksController],\n  providers: [TracksService],\n  exports: [TrackModel, TracksService]\n})\nexport class TracksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TracksService.html":{"url":"classes/TracksService.html","title":"class - TracksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TracksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entity\n                            \n                            \n                                    Private\n                                    Readonly\n                                req\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                    Async\n                                countAsync\n                            \n                            \n                                createEntity\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findAllAsync\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findByIdAsync\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Protected\n                                getUserId\n                            \n                            \n                                hardDelete\n                            \n                            \n                                hardDeleteById\n                            \n                            \n                                insert\n                            \n                            \n                                    Async\n                                insertAsync\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                softDeleteById\n                            \n                            \n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Protected\n                                    Static\n                                throwMongoError\n                            \n                            \n                                    Protected\n                                    Static\n                                toObjectId\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                updateAsync\n                            \n                            \n                                    Private\n                                whereOwn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/tracks/tracks.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnModelType>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            req\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Inject(REQUEST)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:25\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:184\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEntity\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEntity(doc?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter: object, opts: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:108\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:115\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:99\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserId()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \nhardDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:123\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nhardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:145\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            throwMongoError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    throwMongoError(err: MongoError)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            MongoError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            toObjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toObjectId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:163\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:176\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            whereOwn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    whereOwn()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { BaseService } from '~shared/services';\n\nimport { Track } from './models/track.entity';\n\nexport class TracksService extends BaseService {\n  constructor(\n    @InjectModel(Track.modelName)\n    protected readonly entity: ReturnModelType\n  ) {\n    super(entity);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                failedSignInAttempts\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isEmailVerified\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lockOutEndDate\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                setRandomPass\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, lowercase: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            failedSignInAttempts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lockOutEndDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: UserRole, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRandomPass\n                        \n                        \n                    \n                \n            \n            \n                \nsetRandomPass()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:82\n                                \n                            \n                    \n                        \n                                Get User's full name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:93\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport {\n  index,\n  pre,\n  prop,\n  getModelForClass,\n  ReturnModelType\n} from '@typegoose/typegoose';\nimport { hash } from 'bcrypt';\nimport { Exclude } from 'class-transformer';\nimport * as crypto from 'crypto';\n\nimport { columnSize } from '../../shared/constants';\nimport { BaseEntity } from '../../shared/models/base.entity';\nimport { Writable } from '../../shared/types';\n\nexport enum UserRole {\n  MENTEE = 'MENTEE',\n  MENTOR = 'MENTOR',\n  ADMIN = 'ADMIN',\n  SUPER_ADMIN = 'SUPER_ADMIN'\n}\n\n@pre('save', async function () {\n  try {\n    (this as Writable).password = await hash(this.password, 10);\n  } catch (e) {\n    throw new InternalServerErrorException(e);\n  }\n})\n@index({ email: 1 }, { unique: true })\nexport class User extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly firstName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly lastName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: false\n  })\n  readonly email!: string;\n  @prop({ required: true, maxlength: columnSize.length64 })\n  @Exclude()\n  readonly password!: string;\n\n  @prop({\n    enum: UserRole,\n    type: String,\n    required: true,\n    default: UserRole.MENTEE\n  })\n  readonly role: UserRole = UserRole.MENTEE;\n\n  @prop({ required: true, default: false })\n  readonly isEmailVerified: boolean;\n  @prop({ default: undefined })\n  readonly lockOutEndDate?: Date;\n  @prop({ required: true, default: 0 })\n  readonly failedSignInAttempts!: number;\n  /**\n   * Get User's full name\n   *\n   * @readonly\n   * @memberof User\n   */\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  setRandomPass(): void {\n    (this as Writable).password = crypto\n      .randomBytes(columnSize.length32)\n      .toString();\n  }\n  confirmEmail(): void {\n    (this as Writable).isEmailVerified = true;\n  }\n  static get model(): ReturnModelType {\n    return getModelForClass(this);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length64)@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsEnum(UserRole)@ApiProperty({enum: UserRole})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsEnum, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedOutputDto } from '~shared/models/dto';\n\nimport { UserRole } from '../user.entity';\n\nexport class UserDto extends BaseDto {\n  @MaxLength(columnSize.length64)\n  firstName: string;\n  @MaxLength(columnSize.length64)\n  lastName: string;\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  email: string;\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  role?: UserRole = UserRole.MENTEE;\n}\n\nexport class PagedUserOutputDto extends PagedOutputDto(UserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersController.html":{"url":"classes/UsersController.html","title":"class - UsersController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.controller.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { RolesGuard } from '../auth/guards/roles.guard';\nimport { BaseCrudController } from '../shared/controllers/base.controller';\nimport { CreateUserDto } from './models/dto/create-user.dto';\nimport { PagedUserOutputDto, UserDto } from './models/dto/user.dto';\nimport { User, UserRole } from './models/user.entity';\nimport { UsersService } from './users.service';\n\n@UseGuards(JwtAuthGuard, RolesGuard)\n@ApiBearerAuth()\nexport class UsersController extends BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedOutputDto: PagedUserOutputDto,\n  auth: {\n    create: [UserRole.ADMIN],\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n}) {\n  constructor(protected readonly usersService: UsersService) {\n    super(usersService);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { User } from './models/user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\nconst UserModel = MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n]);\n@Module({\n  imports: [UserModel],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UserModel, UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersService.html":{"url":"classes/UsersService.html","title":"class - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entity\n                            \n                            \n                                    Private\n                                    Readonly\n                                req\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                    Async\n                                countAsync\n                            \n                            \n                                createEntity\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findAllAsync\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findByIdAsync\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Protected\n                                getUserId\n                            \n                            \n                                hardDelete\n                            \n                            \n                                hardDeleteById\n                            \n                            \n                                insert\n                            \n                            \n                                    Async\n                                insertAsync\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                softDeleteById\n                            \n                            \n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Protected\n                                    Static\n                                throwMongoError\n                            \n                            \n                                    Protected\n                                    Static\n                                toObjectId\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                updateAsync\n                            \n                            \n                                    Private\n                                whereOwn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnModelType>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            req\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Inject(REQUEST)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:25\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:184\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:189\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEntity\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEntity(doc?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter: object, opts: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:86\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:108\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:115\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:99\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserId()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \nhardDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:123\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nhardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:127\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:132\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:145\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            throwMongoError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    throwMongoError(err: MongoError)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            MongoError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            toObjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toObjectId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:163\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:176\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            whereOwn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    whereOwn()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\n\nimport { BaseService } from '../shared/services/base.service';\nimport { User } from './models/user.entity';\n\nexport class UsersService extends BaseService {\n  constructor(\n    @InjectModel(User.modelName)\n    protected readonly userEntity: ReturnModelType\n  ) {\n    super(userEntity);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateTokenInput.html":{"url":"classes/ValidateTokenInput.html","title":"class - ValidateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/validate-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class ValidateTokenInput extends PickType(LoginReqDto, ['email']) {\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Database\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/handlers/auth.handler.ts\n            \n            injectable\n            AuthHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/acct-verification.dto.ts\n            \n            class\n            AcctVerifyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginReqDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/reset-pw.dto.ts\n            \n            class\n            ResetPassInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/validate-token.dto.ts\n            \n            class\n            ValidateTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/pass-token.entity.ts\n            \n            class\n            PasswordToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/models/temporary-token.entity.ts\n            \n            class\n            TemporaryToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/temp-token.service.ts\n            \n            injectable\n            TempTokensService\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            class\n            CategoriesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.module.ts\n            \n            variable\n            CategoryModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            class\n            CategoriesService\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/categories/models/category.entity.ts\n            \n            class\n            Category\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            PagedCategoryOutDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.controller.ts\n            \n            class\n            CoursesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/courses/courses.module.ts\n            \n            variable\n            CourseModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.service.ts\n            \n            class\n            CoursesService\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/courses/models/course.entity.ts\n            \n            class\n            Course\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            CourseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            PagedCourseOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/create-course.dto.ts\n            \n            class\n            CreateCourseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Configuration\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Database\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Mailer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            AUTH_GUARD_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            columnSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract-with-swagger.controller.ts\n            \n            function\n            AbstractController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/base.controller.ts\n            \n            function\n            BaseCrudController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/api-swagger-operation.decorator.ts\n            \n            variable\n            ApiSwaggerOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authenticate.decorator.ts\n            \n            variable\n            Authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authorize.decorator.ts\n            \n            variable\n            Authorize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/errors/api-exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/errors/auth.errors.ts\n            \n            variable\n            authErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithSwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithSwaggerOpts\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            AuthObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            ControllerAuth\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            DefaultAuthObject\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/shared/models/dto/base.dto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-in.dto.ts\n            \n            class\n            PagedInputDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-out.dto.ts\n            \n            interface\n            IPagedOutputDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-out.dto.ts\n            \n            function\n            PagedOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/services/abstract.service.ts\n            \n            class\n            AbstractService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            injectable\n            BaseService\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/shared/shared.module.ts\n            \n            variable\n            BaseModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            defaultAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            getAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/random-token.ts\n            \n            variable\n            generateRandomToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/validations/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateTrackDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/tack.dto.ts\n            \n            class\n            PagedTrackOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/tack.dto.ts\n            \n            class\n            TrackDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tracks/models/track.entity.ts\n            \n            class\n            Track\n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            class\n            TracksController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            TrackModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.service.ts\n            \n            class\n            TracksService\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/users/models/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            PagedUserOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/models/user.entity.ts\n            \n            class\n            User\n            \n                12 %\n                (3/24)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            class\n            UsersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.module.ts\n            \n            variable\n            UserModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            class\n            UsersService\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            dbFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            mongod\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs-addons/in-memory-db : ^1.8.10\n        \n            @nestjs/bull : ^0.1.1\n        \n            @nestjs/common : ^7.2.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.2.0\n        \n            @nestjs/microservices : ^7.2.0\n        \n            @nestjs/mongoose : ^7.0.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.2.0\n        \n            @nestjs/schedule : ^0.4.0\n        \n            @nestjs/swagger : ^4.5.10\n        \n            @typegoose/typegoose : ^7.2.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.14.0\n        \n            cache-manager : ^3.3.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            compression : ^1.7.4\n        \n            connect-mongo : ^3.2.0\n        \n            cookie-parser : ^1.4.5\n        \n            cookie-session : ^1.4.0\n        \n            express-rate-limit : ^5.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.9.18\n        \n            nodemailer : ^6.4.8\n        \n            nodemailer-mailgun-transport : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pluralize : ^8.0.0\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n        \n            tsconfig-paths : ^3.9.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthEventEnum   (src/.../auth.enums.ts)\n                        \n                        \n                            TokenType   (src/.../temporary-token.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/models/auth.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthEventEnum\n                    \n                \n                        \n                            \n                                 UserRegistered\n                            \n                        \n                        \n                            \n                                Value : user_registered\n                            \n                        \n            \n        \n\n    src/auth/models/temporary-token.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : PASSWORD_TOKEN\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL_TOKEN\n                            \n                        \n            \n        \n\n    src/users/models/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MENTEE\n                            \n                        \n                        \n                            \n                                Value : MENTEE\n                            \n                        \n                        \n                            \n                                 MENTOR\n                            \n                        \n                        \n                            \n                                Value : MENTOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractController   (src/.../abstract-with-swagger.controller.ts)\n                        \n                        \n                            BaseCrudController   (src/.../base.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PagedOutputDto   (src/.../paged-out.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/controllers/abstract-with-swagger.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            AbstractController\n                        \n                        \n                    \n                \n            \n            \n                \nAbstractController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/controllers/base.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            BaseCrudController\n                        \n                        \n                    \n                \n            \n            \n                \nBaseCrudController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/shared/models/dto/paged-out.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PagedOutputDto\n                        \n                        \n                    \n                \n            \n            \n                \nPagedOutputDto(entityDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCode Clan Nigeria\n \nThe official website for code clan nigeria community\nWe are a community comprised of future innovators.\nFront-end developers, DevOps engineers, full stack developers, technical\nwriters, software engineers.\nThis community was created out of a desire to provide ongoing support\nto you wherever stage you are in your coding career.\nThis is codeclannigeria.dev\nAs part of the measures towards achieving out goal stated above, we propose to bring together the amazing talents of our community members to built a website and a mobile application that represents all that we\nstand for.\nHow You Come In\nTo get a complete documentation of the source code and the architectural structure of the application, click here.\nFeel free to put your skills to the test. Here is a suggested workflow for you to follow:\nNote: This is applicable to codeclannigeria community members only.\n\nFork this repository into your local computer\nCheck the issues pane for an issue that needs to be solved\nFind an issue that matches your current skill level and solve it\nMake your pull request to the develop branch\nWait for some feedback.\nRepeat the process\n\nWant more support? Join our slack\ncommunity and ask questions.\nThanks for your support\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Fortune Ochi\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DbTest\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TracksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nCoursesService \n\nCoursesService \n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nProfileModule->UsersService \n\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nTracksModule\n\nTracksModule\n\nTracksModule -->\n\nSharedModule->TracksModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nBaseService \n\nBaseService \n\nBaseService  -->\n\nSharedModule->BaseService \n\n\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nTracksService \n\nTracksService \n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\nBaseService\n\nBaseService\n\nSharedModule -->\n\nBaseService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    39 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractDocument   (src/.../abstract.type.ts)\n                        \n                        \n                            ClassType   (src/.../abstract.type.ts)\n                        \n                        \n                            DeleteResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryItem   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryList   (src/.../abstract.type.ts)\n                        \n                        \n                            UpdateResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            Writable   (src/.../abstract.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/types/abstract.type.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Writable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSwaggerOperation   (src/.../api-swagger-operation.decorator.ts)\n                        \n                        \n                            AUTH_GUARD_TYPE   (src/.../constants.ts)\n                        \n                        \n                            Authenticate   (src/.../authenticate.decorator.ts)\n                        \n                        \n                            authErrors   (src/.../auth.errors.ts)\n                        \n                        \n                            Authorize   (src/.../authorize.decorator.ts)\n                        \n                        \n                            BaseModel   (src/.../shared.module.ts)\n                        \n                        \n                            CategoryModel   (src/.../categories.module.ts)\n                        \n                        \n                            columnSize   (src/.../constants.ts)\n                        \n                        \n                            Config   (src/.../app.module.ts)\n                        \n                        \n                            Config   (src/.../auth.module.ts)\n                        \n                        \n                            CourseModel   (src/.../courses.module.ts)\n                        \n                        \n                            Database   (src/.../app.module.ts)\n                        \n                        \n                            dbFactory   (test/.../db-test.module.ts)\n                        \n                        \n                            defaultAuth   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            generateRandomToken   (src/.../random-token.ts)\n                        \n                        \n                            getAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            mongod   (test/.../db-test.module.ts)\n                        \n                        \n                            roles   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            TrackModel   (src/.../tracks.module.ts)\n                        \n                        \n                            UserModel   (src/.../users.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/api-swagger-operation.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiSwaggerOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: {\n  title: string;\n  description?: string;\n  operationId?: string;\n  deprecated?: boolean;\n}): MethodDecorator => {\n  return (target, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const controllerName = target.constructor.name;\n    ApiOperation({\n      ...options,\n      operationId: `${controllerName.substr(\n        0,\n        controllerName.indexOf('Controller'),\n      )}_${propertyKey}`,\n    })(target, propertyKey, descriptor);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  length8: 2 ** 3,\n  length16: 2 ** 4,\n  length32: 2 ** 5,\n  length64: 2 ** 6,\n  length128: 2 ** 7,\n  length256: 2 ** 8,\n  length512: 2 ** 9,\n  length1024: 2 ** 10\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authenticate.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthenticationEnabled: boolean,\n  decorator: MethodDecorator\n): MethodDecorator => {\n  return (target, key: string | symbol, value: any): any => {\n    if (isAuthenticationEnabled) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/errors/auth.errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  INVALID_LOGIN_ATTEMPT: new UnauthorizedException(\n    'Email or Password is incorrect'\n  ),\n  INVALID_TOKEN: new ForbiddenException('Invalid token'),\n  EXPIRED_TOKEN: new NotFoundException('Token expired')\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authorize.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authorize\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthorizationEnabled: boolean,\n  decorator: MethodDecorator\n): MethodDecorator => {\n  return (target, key: string | symbol, value: any): any => {\n    if (isAuthorizationEnabled) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: BaseEntity.modelName, schema: BaseEntity.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CategoryModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Database\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n})\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n]\n                        \n                    \n\n\n            \n        \n\n    src/courses/courses.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    test/db-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRootAsync({\n  useFactory: async () => {\n    process.env.MAILER_API_KEY = 'api_key_mailgun';\n    process.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\n    const uri = await mongod.getUri();\n\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mongod\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoMemoryServer()\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/get-auth-obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ControllerAuth\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  find: {\n    enableAuth: true,\n    authRoles: roles\n  },\n  findById: {\n    enableAuth: true,\n    authRoles: roles\n  },\n  create: {\n    enableAuth: true,\n    authRoles: roles\n  },\n  update: {\n    enableAuth: true,\n    authRoles: roles\n  },\n  delete: {\n    enableAuth: true,\n    authRoles: roles\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  authObj: DefaultAuthObject | boolean\n): ControllerAuth => {\n  if (typeof authObj === 'boolean') {\n    if (authObj === false) {\n      defaultAuth.create.enableAuth = false;\n      defaultAuth.delete.enableAuth = false;\n      defaultAuth.find.enableAuth = false;\n      defaultAuth.findById.enableAuth = false;\n      defaultAuth.update.enableAuth = false;\n      return defaultAuth;\n    }\n    if (authObj === true) return defaultAuth;\n  }\n\n  if (typeof authObj?.find === 'boolean') {\n    defaultAuth.find.enableAuth = authObj.find;\n  } else if (authObj?.find?.length) {\n    defaultAuth.find.authRoles = authObj.find;\n  }\n\n  if (typeof authObj?.findById === 'boolean') {\n    defaultAuth.findById.enableAuth = authObj.findById;\n  } else if (authObj?.findById?.length) {\n    defaultAuth.findById.authRoles = authObj.findById;\n  }\n\n  if (typeof authObj?.update === 'boolean') {\n    defaultAuth.update.enableAuth = authObj.update;\n  } else if (authObj?.update?.length) {\n    defaultAuth.update.authRoles = authObj.update;\n  }\n\n  if (typeof authObj?.create === 'boolean') {\n    defaultAuth.create.enableAuth = authObj.create;\n  } else if (authObj?.create?.length) {\n    defaultAuth.create.authRoles = authObj.create;\n  }\n\n  if (typeof authObj?.delete === 'boolean') {\n    defaultAuth.delete.enableAuth = authObj.delete;\n  } else if (authObj?.delete?.length) {\n    defaultAuth.delete.authRoles = authObj.delete;\n  }\n\n  return defaultAuth;\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Object.values(UserRole)\n                        \n                    \n\n\n            \n        \n\n    src/shared/validations/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): any => {\n  return Joi.object({\n    NODE_ENV: Joi.string()\n      .valid('development', 'production', 'test')\n      .default('development'),\n    PORT: Joi.number().default(3000),\n    JWT_SECRET: Joi.string().required(),\n    JWT_VALIDITY_HOURS: Joi.number().required(),\n    ROOT_URL: Joi.string().uri().required(),\n    REDIS_SERVER_URL: Joi.string().uri().default('redis://localhost:6379'),\n    DATABASE_PORT: Joi.number().default(27017),\n    DATABASE_HOST: Joi.string().default('localhost'),\n    DATABASE_NAME: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n    MAILER_API_KEY: Joi.string().required(),\n    MAILER_DOMAIN: Joi.string().required(),\n    API_AUTH_ENABLED: Joi.string().valid('true', 'false').default('true'),\n    APP_EMAIL: Joi.string().email().required()\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/random-token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandomToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n  randomBytes(size).toString('hex')\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bearerAuthName: 'x-auth'\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: UserRole[]): CustomDecorator =>\n  SetMetadata(UserRole, roles)\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TrackModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/users/users.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
