var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControllerOptions.html",[0,1.5,1,2.474]],["body/interfaces/AbstractControllerOptions.html",[0,2.637,1,4.348,2,2.73,3,0.172,4,0.155,5,0.155,6,3.836,7,1.922,8,3.836,9,0.488,10,1.431,11,5.142,12,4.815,13,0.796,14,0.013,15,0.282,16,3.978,17,1.794,18,3.591,19,4.164,20,0.236,21,2.302,22,3.006,23,3.006,24,4.486,25,1.175,26,1.922,27,3.574,28,3.836,29,4.164,30,3.836,31,3.836,32,0.008,33,0.01,34,0.008]],["title/interfaces/AbstractControllerOptions-1.html",[0,1.251,1,2.063,35,2.185]],["body/interfaces/AbstractControllerOptions-1.html",[0,1.794,1,3.808,2,2.549,3,0.161,4,0.144,5,0.144,7,1.794,9,0.455,10,1.37,12,5.983,13,0.928,14,0.013,20,0.161,21,2.436,32,0.007,33,0.009,34,0.007,36,4.298,37,4.298,38,5.382,39,4.013,40,5.014,41,5.382,42,5.382,43,4.92,44,4.92,45,4.92,46,4.92,47,4.92]],["title/interfaces/AbstractControllerWithAuthOptions.html",[0,1.5,24,2.79]],["body/interfaces/AbstractControllerWithAuthOptions.html",[0,2.622,1,4.323,2,2.697,3,0.17,4,0.153,5,0.153,6,3.789,7,1.898,8,3.789,9,0.482,10,1.42,11,3.53,13,0.573,14,0.013,15,0.278,16,4.54,17,1.772,18,4.224,19,4.113,20,0.235,21,2.29,22,2.969,23,2.969,24,4.876,25,1.277,26,2.622,27,3.53,28,3.789,29,4.113,30,3.789,31,3.789,32,0.008,33,0.01,34,0.008]],["title/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.5,27,2.79]],["body/interfaces/AbstractControllerWithSwaggerOptions.html",[0,2.596,1,3.895,2,2.64,3,0.166,4,0.15,5,0.15,6,3.71,7,1.859,8,3.71,9,0.472,10,1.401,11,3.457,12,5.453,13,0.87,14,0.013,15,0.272,16,3.895,17,1.735,18,3.516,19,4.027,20,0.233,21,2.267,22,2.907,23,2.907,24,4.828,25,1.264,26,1.859,27,4.392,28,5.453,29,4.027,30,5.453,31,3.71,32,0.007,33,0.009,34,0.007]],["title/classes/AbstractService.html",[48,0.146,49,3.25]],["body/classes/AbstractService.html",[3,0.08,4,0.072,5,0.072,9,0.226,13,0.853,14,0.012,15,0.286,20,0.08,23,3.519,32,0.004,33,0.006,34,0.004,39,2.079,48,0.087,49,3.026,50,0.545,51,2.133,52,0.972,53,8.475,54,2.597,55,2.819,56,2.597,57,2.597,58,2.597,59,2.303,60,2.597,61,2.439,62,2.597,63,2.597,64,2.597,65,2.597,66,2.597,67,2.597,68,2.597,69,2.597,70,2.597,71,2.303,72,3.205,73,2.597,74,1.242,75,2.441,76,2.387,77,1.57,78,1.787,79,4.658,80,1.905,81,3.205,82,2.597,83,2.441,84,3.393,85,2.597,86,2.441,87,3.01,88,2.597,89,2.441,90,2.597,91,1.498,92,2.441,93,2.274,94,4.81,95,2.597,96,2.441,97,2.597,98,2.441,99,2.597,100,2.441,101,2.597,102,2.441,103,2.597,104,2.441,105,2.597,106,2.441,107,2.597,108,2.441,109,2.597,110,2.441,111,2.597,112,2.441,113,2.597,114,2.441,115,2.597,116,2.441,117,2.597,118,4.184,119,4.184,120,2.441,121,1.656,122,2.441,123,1.929,124,1.113,125,1.777,126,1.159,127,1.929,128,1.929]],["title/classes/AcctVerifyDto.html",[48,0.146,129,2.994]],["body/classes/AcctVerifyDto.html",[3,0.167,4,0.151,5,0.151,9,0.475,10,1.406,13,0.786,14,0.012,15,0.382,20,0.167,25,0.911,32,0.007,33,0.01,34,0.007,48,0.231,50,1.145,74,1.144,91,1.503,129,4.732,130,6.558,131,4.479,132,6.236,133,6.236,134,6.236,135,1.871,136,6.236,137,5.128,138,6.121,139,5.128,140,5.128,141,3.083,142,1.688,143,2.435,144,2.924,145,4.479,146,4.479,147,2.161]],["title/classes/ApiException.html",[48,0.146,148,2.474]],["body/classes/ApiException.html",[3,0.114,4,0.103,5,0.103,9,0.324,10,1.087,13,0.835,14,0.012,15,0.314,20,0.114,21,1.116,32,0.005,33,0.007,34,0.005,48,0.125,50,0.783,74,1.216,76,1.08,77,0.71,78,1.879,91,1.585,135,1.954,142,1.154,148,3.023,149,6.726,150,3.061,151,5.303,152,6.363,153,7.073,154,6.363,155,6.363,156,4.278,157,6.363,158,5.877,159,2.291,160,3.505,161,3.367,162,5.026,163,5.188,164,3.505,165,3.505,166,3.505,167,3.505,168,3.505,169,3.505,170,3.505,171,2.377,172,0.734,173,1.597,174,3.505,175,3.505,176,3.505,177,3.505,178,3.505,179,3.061,180,1.664,181,3.505,182,3.505,183,3.505,184,3.505,185,3.505,186,3.505,187,3.505]],["title/controllers/AppController.html",[7,1.5,188,2.994]],["body/controllers/AppController.html",[3,0.185,4,0.166,5,0.166,7,2.52,9,0.523,14,0.012,15,0.369,20,0.185,32,0.008,33,0.01,34,0.008,48,0.201,52,1.754,74,0.906,80,1.39,91,1.312,135,1.482,172,1.184,188,5.03,189,2.384,190,4.939,191,7.773,192,5.654,193,4.752,194,4.939,195,3.4,196,1.482,197,1.925,198,5.654]],["title/modules/AppModule.html",[199,1.31,200,2.994]],["body/modules/AppModule.html",[3,0.118,4,0.106,5,0.106,14,0.013,15,0.433,20,0.168,32,0.005,33,0.008,34,0.005,48,0.128,172,0.757,173,1.648,188,4.353,189,2.167,193,4.551,194,3.159,199,1.904,200,6.064,201,1.648,202,1.873,203,2.063,204,2.063,205,1.873,206,3.246,207,1.873,208,3.159,209,3.159,210,3.159,211,4.847,212,4.847,213,4.847,214,4.847,215,4.847,216,4.847,217,4.847,218,4.298,219,2.932,220,1.963,221,1.873,222,2.857,223,2.932,224,3.616,225,3.159,226,2.175,227,1.717,228,3.616,229,3.616,230,3.616,231,3.616,232,3.616,233,3.159,234,2.175,235,4.061,236,3.616,237,3.616,238,2.857,239,3.616,240,2.012,241,3.741,242,3.159,243,3.159,244,2.353,245,3.159,246,3.159,247,3.159,248,3.159,249,3.091,250,3.159,251,2.857,252,2.857,253,2.857,254,2.857,255,1.792]],["title/injectables/AppService.html",[193,2.62,256,1.078]],["body/injectables/AppService.html",[3,0.192,4,0.172,5,0.172,9,0.543,14,0.012,15,0.314,20,0.192,32,0.009,33,0.01,34,0.009,48,0.208,52,1.794,74,0.941,80,1.443,91,1.342,172,1.229,193,4.5,197,1.998,256,1.853,257,2.571,258,5.126,259,7.871,260,5.868,261,5.868,262,5.868]],["title/controllers/AuthController.html",[7,1.5,263,2.994]],["body/controllers/AuthController.html",[3,0.067,4,0.06,5,0.06,7,0.751,9,0.19,13,0.766,14,0.013,15,0.389,18,1.117,20,0.067,21,2.124,32,0.003,33,0.005,34,0.003,48,0.073,52,0.849,55,2.642,74,0.917,76,1.763,77,1.16,78,1.319,80,1.407,84,3.049,129,4.387,132,2.919,133,2.919,134,2.919,135,1.5,142,0.678,144,2.77,147,3.133,148,2.537,156,2.433,159,0.938,171,1.396,172,0.431,173,0.938,189,0.868,196,1.106,197,1.819,220,2.636,234,1.238,240,2.936,263,2.433,264,1.798,265,1.311,266,2.919,267,3.342,268,3.342,269,3.342,270,3.342,271,3.342,272,2.058,273,2.058,274,2.058,275,2.058,276,2.058,277,5.355,278,2.058,279,2.921,280,2.058,281,2.058,282,2.862,283,1.02,284,2.058,285,2.058,286,3.294,287,3.342,288,2.058,289,2.058,290,2.058,291,4.857,292,3.342,293,3.342,294,2.058,295,2.058,296,2.306,297,2.058,298,2.058,299,3.294,300,3.342,301,2.058,302,2.058,303,1.626,304,1.626,305,2.058,306,2.058,307,1.626,308,1.396,309,1.396,310,3.342,311,1.498,312,3.342,313,3.342,314,2.641,315,2.058,316,2.537,317,1.798,318,1.626,319,1.498,320,1.396,321,1.626,322,1.396,323,1.626,324,1.174,325,2.29,326,1.626,327,2.407,328,1.498,329,1.498,330,2.058,331,2.058,332,2.058,333,2.267,334,1.798,335,2.058,336,2.058,337,2.058,338,1.798,339,2.058,340,2.058,341,2.407,342,2.058,343,5.341,344,2.058,345,2.058,346,2.641,347,3.111,348,2.058,349,3.342,350,2.058,351,2.058,352,1.626,353,2.058,354,4.164,355,4.22,356,3.263,357,2.058,358,3.334,359,1.626,360,2.636,361,2.058,362,2.058,363,2.058,364,1.626,365,2.058,366,4.185,367,2.058,368,3.342,369,2.919,370,3.342,371,2.058,372,3.342,373,1.798,374,2.919,375,1.798,376,2.058,377,2.919,378,3.342,379,3.342,380,3.342,381,4.857,382,3.342,383,3.342,384,3.342,385,1.798,386,2.919,387,3.342,388,3.342,389,2.919,390,1.523,391,3.342,392,2.058,393,2.058,394,2.058,395,2.641,396,1.798,397,2.919,398,2.058,399,1.798,400,1.396,401,2.058,402,2.641,403,2.058,404,2.058,405,2.058,406,2.058]],["title/injectables/AuthHandler.html",[256,1.078,407,2.79]],["body/injectables/AuthHandler.html",[3,0.174,4,0.156,5,0.156,9,0.492,13,0.586,14,0.012,15,0.388,20,0.174,32,0.008,33,0.01,34,0.008,48,0.189,52,1.689,55,2.558,74,0.853,76,1.639,77,1.078,78,1.227,80,1.308,135,1.394,172,1.114,197,1.811,256,1.744,257,2.33,407,4.512,408,4.646,409,6.654,410,6.654,411,7.261,412,6.654,413,5.319,414,6.654,415,3.607,416,5.319,417,4.203,418,4.203,419,4.646,420,5.319,421,5.319,422,5.319,423,5.319]],["title/modules/AuthModule.html",[199,1.31,211,2.79]],["body/modules/AuthModule.html",[3,0.119,4,0.107,5,0.107,14,0.013,15,0.428,20,0.119,32,0.005,33,0.008,34,0.005,48,0.13,77,1.048,172,0.764,189,2.18,199,1.913,201,1.662,202,1.889,203,2.08,204,2.08,205,1.889,206,3.261,207,3.112,211,5.638,218,4.31,219,2.949,220,1.98,221,1.889,223,2.949,226,2.193,227,1.732,238,2.882,244,1.702,263,4.373,316,4.31,317,3.186,321,2.882,322,2.474,327,4.525,328,2.655,407,4.861,424,3.186,425,3.647,426,3.186,427,3.186,428,4.861,429,4.861,430,4.861,431,4.564,432,3.647,433,3.647,434,2.193,435,2.323,436,3.647,437,3.647,438,3.647,439,3.647,440,3.647,441,3.186,442,3.186,443,3.293,444,5.171,445,3.11,446,5.171,447,5.171,448,5.171,449,3.507,450,4.517]],["title/injectables/AuthService.html",[256,1.078,327,2.346]],["body/injectables/AuthService.html",[3,0.064,4,0.058,5,0.058,9,0.183,10,0.698,12,4.082,13,0.838,14,0.013,15,0.374,20,0.064,21,1.028,22,1.841,32,0.003,33,0.005,34,0.003,48,0.07,52,0.82,55,2.73,61,1.256,74,1.054,76,1.824,77,1.2,78,1.365,80,1.519,84,3.012,91,1.463,93,1.099,135,0.517,147,2.495,151,2.983,159,1.471,161,0.977,172,0.413,173,1.471,196,0.846,197,1.612,234,1.186,240,2.936,244,0.649,256,0.846,257,0.864,266,2.82,277,2.35,283,0.977,286,2.189,296,0.937,308,1.338,320,3.542,322,1.338,325,3.044,326,1.559,327,1.841,341,3.523,347,3.321,354,2.983,355,2.551,356,3.647,360,2.99,366,2.464,369,1.723,373,1.723,374,3.579,375,2.82,385,1.723,389,1.723,395,5.197,396,2.82,397,5.884,399,1.723,400,2.189,402,2.551,415,1.338,417,1.559,418,1.559,419,1.723,431,3.016,441,1.723,442,1.723,449,1.338,451,1.723,452,5.608,453,4.098,454,5.608,455,4.736,456,3.228,457,3.228,458,4.098,459,3.228,460,1.723,461,4.098,462,1.973,463,1.973,464,1.973,465,3.228,466,4.098,467,1.973,468,1.973,469,1.973,470,3.228,471,1.973,472,3.228,473,1.973,474,1.973,475,1.973,476,3.228,477,4.098,478,1.973,479,4.098,480,1.973,481,1.973,482,2.551,483,2.551,484,1.723,485,1.436,486,1.559,487,1.973,488,1.256,489,2.189,490,1.723,491,2.82,492,1.559,493,1.973,494,1.436,495,1.973,496,1.723,497,1.723,498,1.723,499,1.973,500,3.238,501,1.973,502,2.983,503,3.228,504,5.223,505,1.973,506,4.136,507,1.973,508,3.228,509,3.228,510,1.973,511,2.35,512,2.35,513,3.228,514,1.256,515,1.973,516,1.973,517,1.973,518,1.973,519,3.228,520,1.973,521,1.973,522,1.559,523,1.973,524,1.973,525,1.973,526,1.973,527,3.228,528,3.228,529,1.723,530,3.228,531,3.228,532,1.973,533,1.973,534,1.973,535,1.973,536,1.973,537,1.973,538,3.228]],["title/guards/AuthenticationGuard.html",[329,2.994,539,3.25]],["body/guards/AuthenticationGuard.html",[3,0.14,4,0.126,5,0.126,9,0.397,13,0.721,14,0.013,15,0.391,20,0.14,21,1.366,32,0.006,33,0.008,34,0.006,48,0.152,52,1.469,55,2.655,74,1.049,76,2.017,77,1.327,78,1.51,80,1.422,84,2.534,144,3.299,147,1.808,159,1.955,172,0.898,173,1.955,195,2.579,196,1.124,197,2.229,234,2.579,240,2.562,244,1.905,256,1.516,296,2.747,308,3.923,327,4.299,328,3.122,329,4.211,334,3.747,347,2.637,356,2.446,360,2.658,494,3.122,540,3.389,541,3.747,542,5.1,543,5.785,544,4.289,545,4.289,546,4.211,547,5.1,548,4.289,549,3.122,550,5.785,551,3.904,552,4.289,553,2.579,554,3.747,555,4.289,556,3.747,557,4.289,558,4.289,559,3.747,560,4.289]],["title/classes/BaseDto.html",[48,0.146,561,2.474]],["body/classes/BaseDto.html",[3,0.164,4,0.147,5,0.147,9,0.465,10,1.388,13,0.778,14,0.012,15,0.378,20,0.164,32,0.007,33,0.009,34,0.007,48,0.251,50,1.122,74,1.133,91,1.218,93,2.407,135,1.853,142,1.653,143,2.384,163,4.744,196,2.064,390,3.395,561,3.858,562,6.508,563,4.386,564,2.98,565,2.98,566,4.351,567,5.022,568,3.406,569,5.022,570,5.022,571,5.053,572,2.864,573,6.416]],["title/classes/BaseEntity.html",[48,0.146,126,1.953]],["body/classes/BaseEntity.html",[3,0.08,4,0.072,5,0.072,9,0.227,10,0.83,13,0.757,14,0.013,15,0.311,17,2.639,20,0.08,21,1.707,25,0.682,26,1.955,32,0.004,33,0.006,34,0.004,48,0.087,50,0.547,52,0.975,74,1.212,78,1.542,80,1.318,91,0.899,93,1.612,124,1.116,125,1.782,126,3.404,128,1.935,135,1.753,180,3.46,196,2.098,197,1.307,244,2.569,255,3.406,283,3.06,360,0.994,390,3.206,445,3.501,488,1.559,564,1.996,565,1.996,574,2.139,575,5.361,576,2.7,577,2.847,578,2.7,579,3.883,580,3.321,581,2.7,582,3.224,583,3.224,584,3.016,585,3.224,586,3.033,587,4.735,588,2.508,589,3.224,590,2.448,591,4.443,592,3.224,593,2.448,594,2.448,595,2.448,596,2.448,597,2.448,598,2.448,599,2.448,600,2.448,601,2.448,602,3.714,603,2.929,604,2.448,605,2.448,606,2.448,607,2.448,608,2.448,609,2.448,610,2.448,611,2.448,612,4.378,613,2.448,614,1.782,615,3.224,616,2.444,617,2.448,618,2.448,619,2.448,620,2.448,621,2.448,622,2.448,623,2.448,624,2.448,625,2.448,626,3.839,627,2.448,628,3.839,629,4.136,630,3.839]],["title/injectables/BaseService.html",[256,1.078,631,2.346]],["body/injectables/BaseService.html",[3,0.046,4,0.042,5,0.042,9,0.132,10,0.53,13,0.802,14,0.013,15,0.321,17,1.91,20,0.046,21,1.029,22,0.811,23,3.059,32,0.002,33,0.004,34,0.002,39,3.046,48,0.051,52,0.622,54,1.662,55,2.568,56,1.662,57,1.662,58,1.662,59,1.474,60,1.662,61,1.561,62,1.662,63,1.662,64,1.662,65,1.662,66,1.662,67,1.662,68,1.662,69,1.662,70,1.662,71,3.226,72,1.662,73,1.662,74,1.177,76,2.21,77,1.454,78,1.681,79,4.772,80,1.763,81,2.191,82,1.662,84,3.013,85,1.662,87,2.058,88,1.662,90,1.662,91,1.384,93,1.91,94,4.19,95,1.662,97,1.662,99,1.662,101,1.662,103,1.662,105,1.662,107,1.662,109,1.662,111,1.662,113,1.662,115,1.662,117,1.662,118,3.443,119,3.805,121,1.662,123,1.123,124,0.648,125,1.035,126,0.675,127,1.123,128,1.937,135,0.373,159,1.117,172,0.298,180,1.164,196,0.847,197,2.396,227,0.675,240,1.504,244,1.766,256,0.643,257,0.623,341,1.843,347,2.445,356,0.811,415,0.964,488,0.905,500,4.433,502,4.084,551,1.99,553,0.855,576,0.811,578,1.398,580,2.895,581,0.811,584,1.674,588,2.278,603,1.074,614,1.035,616,3.017,631,1.398,632,1.242,633,4.498,634,1.943,635,1.784,636,2.797,637,1.784,638,1.784,639,1.422,640,3.213,641,2.451,642,4.772,643,1.422,644,1.422,645,1.784,646,1.422,647,1.035,648,2.191,649,1.422,650,1.422,651,1.422,652,1.422,653,1.422,654,1.422,655,1.422,656,1.422,657,1.422,658,1.422,659,1.422,660,1.422,661,1.422,662,1.422,663,1.422,664,1.784,665,2.797,666,1.422,667,0.964,668,1.784,669,1.422,670,1.784,671,1.422,672,1.422,673,1.035,674,1.422,675,1.242,676,1.242,677,2.141,678,1.035,679,1.422,680,1.422,681,1.242,682,2.451,683,1.035,684,1.035,685,1.242,686,1.242,687,1.422,688,3.842,689,1.422,690,1.422,691,1.422,692,4.901,693,1.422,694,1.422,695,1.242,696,1.422,697,4.334,698,1.422,699,1.422,700,2.451,701,5.364,702,1.422,703,1.422,704,1.422,705,1.422,706,1.422,707,4.334,708,1.422,709,1.422,710,1.422,711,1.422,712,1.422,713,1.422,714,1.422,715,1.422,716,1.422,717,3.231,718,3.231,719,1.422,720,1.422,721,1.422,722,1.422,723,1.422,724,2.451,725,1.422,726,1.422,727,1.422,728,1.422,729,1.422,730,1.422,731,1.422]],["title/controllers/CategoriesController.html",[7,1.5,732,2.994]],["body/controllers/CategoriesController.html",[3,0.13,4,0.117,5,0.117,7,1.451,9,0.368,13,0.811,14,0.013,15,0.423,20,0.13,21,1.267,25,0.707,32,0.006,33,0.008,34,0.006,38,2.896,39,2.16,40,2.699,41,2.896,42,2.896,48,0.141,52,1.395,55,2.218,74,0.638,76,1.226,77,1.114,78,0.918,80,0.978,84,2.408,135,1.043,142,1.31,148,4.083,156,4.943,171,2.699,172,0.833,189,1.677,195,2.393,196,1.043,197,1.355,240,1.558,265,2.534,277,4,283,2.723,303,3.144,304,3.144,307,4.343,309,2.699,311,2.896,314,5.365,318,3.144,319,2.896,347,1.814,352,3.144,354,4,356,2.27,358,3.144,359,3.144,732,4,733,3.476,734,3.979,735,4,736,3.476,737,5.602,738,3.476,739,3.476,740,3.476,741,3.979,742,4,743,3.727,744,3.144,745,2.16,746,2.393,747,2.393,748,2.393,749,2.896,750,2.896,751,4.583,752,3.476,753,3.727,754,3.476,755,3.5,756,3.979,757,3.144,758,3.144,759,3.979,760,3.979,761,2.896,762,3.476,763,3.979,764,3.476,765,3.476,766,3.476,767,3.979,768,3.979,769,3.979,770,3.476]],["title/modules/CategoriesModule.html",[199,1.31,212,2.79]],["body/modules/CategoriesModule.html",[3,0.167,4,0.151,5,0.151,14,0.013,15,0.414,20,0.167,32,0.007,33,0.01,34,0.007,48,0.182,77,1.039,172,1.074,189,2.741,199,2.274,201,2.337,202,2.656,203,2.924,204,2.924,205,2.656,206,3.875,207,2.656,212,5.368,219,3.708,220,2.783,221,2.656,223,2.924,226,3.083,227,2.435,443,3.265,445,3.083,732,5.197,751,5.762,752,4.479,753,3.477,754,4.479,771,4.479,772,4.479,773,5.128,774,5.128,775,5.128,776,5.128]],["title/classes/Category.html",[48,0.146,753,2.79]],["body/classes/Category.html",[3,0.101,4,0.091,5,0.091,9,0.286,10,0.992,13,0.824,14,0.012,15,0.292,17,2.547,20,0.101,21,0.985,25,0.815,26,1.673,32,0.005,33,0.007,34,0.005,48,0.11,50,0.691,52,1.165,74,1.256,77,1.108,78,1.66,80,1.488,91,1.038,93,1.562,124,1.409,126,3.839,135,1.927,180,2.873,196,2.119,244,2.6,255,2.709,283,3.472,390,2.757,564,1.934,565,1.934,576,2.616,577,2.758,578,2.616,579,3.638,580,3.119,581,2.616,582,3.288,583,3.288,584,2.833,585,3.288,588,2.749,589,3.886,591,4.071,592,3.638,602,3.288,603,2.65,612,2.921,615,1.859,753,3.111,777,2.701,778,2.616,779,3.339,780,3.339,781,2.921,782,3.092,783,3.401,784,1.969,785,1.969,786,1.969,787,1.969,788,1.969,789,1.969,790,1.969,791,1.969,792,1.969,793,1.969,794,1.969,795,1.969,796,1.969,797,1.602,798,1.764,799,2.097,800,2.443]],["title/classes/CategoryDto.html",[48,0.146,755,2.62]],["body/classes/CategoryDto.html",[3,0.155,4,0.14,5,0.14,9,0.44,10,1.34,13,0.804,14,0.012,15,0.405,20,0.155,25,1.1,32,0.007,33,0.009,34,0.007,48,0.245,50,1.062,74,1.17,77,1.396,91,1.308,93,2.109,135,1.913,142,1.566,143,2.258,163,3.945,196,1.913,390,2.823,561,4.666,564,2.611,565,2.611,566,4.201,568,3.225,571,4.201,572,2.712,755,3.945,778,2.712,783,3.018,797,2.464,798,2.712,801,4.154,802,3.758,803,4.756,804,3.462,805,3.462,806,3.462,807,4.895,808,3.462,809,3.462,810,3.758]],["title/interfaces/Configuration.html",[0,1.5,173,1.875]],["body/interfaces/Configuration.html",[0,2.316,2,2.095,3,0.132,4,0.119,5,0.119,9,0.374,10,1.202,13,0.873,14,0.012,17,1.377,20,0.132,26,2.316,32,0.006,33,0.008,34,0.006,77,1.127,91,1.591,161,3.759,173,2.894,244,1.332,249,4.715,511,5.217,512,5.217,811,2.944,812,5.663,813,5.663,814,5.663,815,4.993,816,5.522,817,5.663,818,5.663,819,4.046,820,3.77,821,4.046,822,4.046,823,3.196,824,3.196,825,3.196,826,3.196,827,3.196,828,3.196,829,3.196,830,3.196,831,2.743,832,2.743,833,3.196,834,3.196,835,3.196,836,3.196]],["title/classes/Course.html",[48,0.146,837,2.994]],["body/classes/Course.html",[3,0.086,4,0.077,5,0.077,9,0.459,10,0.878,13,0.827,14,0.012,15,0.265,17,2.524,20,0.086,21,0.837,25,0.721,26,1.48,32,0.004,33,0.006,34,0.004,35,1.675,48,0.093,50,0.587,52,1.03,74,1.249,78,1.579,80,1.37,91,1.259,93,1.382,124,1.198,126,3.748,135,1.943,161,2.011,180,2.645,196,2.146,244,2.661,255,3.481,283,3.481,390,2.539,564,1.711,565,1.711,576,2.314,577,2.44,578,2.314,579,3.35,580,2.826,581,2.314,582,2.98,583,2.98,584,2.567,585,2.98,588,2.583,589,4.117,591,3.825,592,3.35,602,2.98,603,2.44,612,3.833,615,3.35,778,3.628,779,4.055,780,4.055,781,4.222,783,3.289,784,1.675,785,1.675,786,1.675,787,1.675,788,1.675,789,1.675,790,1.675,791,1.675,792,1.675,793,1.675,794,1.675,795,1.675,796,1.675,797,1.362,798,1.5,799,1.783,800,2.078,837,2.954,838,2.297,839,2.98,840,4.328,841,3.915,842,3.177,843,2.63,844,2.584,845,2.63,846,2.63,847,2.63,848,2.297,849,2.63]],["title/classes/CourseDto.html",[48,0.146,850,2.62]],["body/classes/CourseDto.html",[3,0.139,4,0.125,5,0.125,9,0.394,10,1.245,13,0.846,14,0.012,15,0.39,20,0.139,25,1.022,32,0.006,33,0.008,34,0.006,48,0.232,50,0.951,74,1.232,91,1.459,93,1.96,135,1.971,136,5.027,142,1.402,143,2.021,161,2.852,163,4.152,196,2.015,390,2.623,561,4.522,564,2.426,565,2.426,566,3.903,568,2.887,571,4.422,572,2.428,778,2.428,783,2.856,797,2.205,798,2.428,802,3.364,804,3.099,805,3.099,806,3.099,807,4.548,808,3.099,809,3.099,810,3.364,839,3.921,840,5.696,841,5.152,842,3.719,850,3.665,851,3.719,852,3.719,853,4.257,854,4.257,855,4.257,856,4.257,857,4.257,858,3.719,859,4.257]],["title/controllers/CoursesController.html",[7,1.5,860,2.994]],["body/controllers/CoursesController.html",[3,0.182,4,0.164,5,0.164,7,2.035,11,3.785,14,0.012,15,0.425,18,3.029,20,0.182,25,0.991,28,4.062,30,4.062,32,0.008,33,0.01,34,0.008,48,0.198,172,1.168,189,2.352,244,1.837,265,3.554,837,4.989,850,4.365,860,4.989,861,4.874,862,5.58,863,4.989,864,5.58,865,4.409,866,5.58,867,5.416,868,5.58,869,5.58,870,5.58]],["title/modules/CoursesModule.html",[199,1.31,213,2.79]],["body/modules/CoursesModule.html",[3,0.198,4,0.178,5,0.178,14,0.012,15,0.385,20,0.198,32,0.009,33,0.011,34,0.009,48,0.215,172,1.268,189,3.036,199,2.293,201,2.76,213,4.884,860,5.595,871,6.056,872,6.056]],["title/classes/CreateCategoryDto.html",[48,0.146,737,2.994]],["body/classes/CreateCategoryDto.html",[3,0.199,4,0.179,5,0.179,14,0.012,15,0.387,20,0.199,25,1.083,32,0.009,33,0.011,34,0.009,48,0.217,50,1.362,77,1.236,141,3.668,142,2.008,737,5.264,755,3.884,758,4.819,873,5.328,874,4.819,875,6.099]],["title/classes/CreateCourseDto.html",[48,0.146,863,2.994]],["body/classes/CreateCourseDto.html",[3,0.196,4,0.177,5,0.177,14,0.012,15,0.383,20,0.196,25,1.068,32,0.009,33,0.01,34,0.009,48,0.214,50,1.343,141,3.616,142,1.98,839,3.616,841,4.751,842,3.43,850,3.829,863,5.22,865,4.751,876,5.252,877,4.751,878,6.013]],["title/classes/CreateTrackDto.html",[48,0.146,879,2.994]],["body/classes/CreateTrackDto.html",[3,0.197,4,0.177,5,0.177,14,0.012,15,0.384,20,0.197,25,1.072,32,0.009,33,0.011,34,0.009,48,0.214,50,1.348,141,3.629,142,1.987,839,3.629,842,3.442,879,5.231,880,5.271,881,4.768,882,3.843,883,5.271,884,6.035]],["title/classes/CreateUserDto.html",[48,0.146,885,2.994]],["body/classes/CreateUserDto.html",[3,0.196,4,0.177,5,0.177,14,0.012,15,0.383,20,0.196,25,1.068,32,0.009,33,0.01,34,0.009,48,0.214,50,1.343,93,2.047,142,1.98,324,3.43,564,2.535,565,2.535,885,5.22,886,5.252,887,4.078,888,4.751,889,3.264,890,4.751]],["title/injectables/CurrentUserService.html",[256,1.078,891,2.79]],["body/injectables/CurrentUserService.html",[3,0.17,4,0.152,5,0.152,9,0.48,13,0.571,14,0.012,15,0.384,20,0.17,32,0.008,33,0.01,34,0.008,48,0.184,74,1.05,76,1.599,77,1.052,78,1.511,91,0.985,159,2.365,172,1.087,180,3.111,196,1.36,197,1.767,256,1.717,257,2.273,341,2.96,551,4.028,553,3.121,586,5.177,634,3.94,675,4.533,677,5.723,678,3.778,685,4.533,686,4.533,695,4.533,891,4.443,892,6.271,893,4.533,894,7.179,895,5.19,896,5.19,897,5.19,898,5.19,899,5.19]],["title/interfaces/Database.html",[0,1.5,249,2.474]],["body/interfaces/Database.html",[0,2.443,2,2.327,3,0.147,4,0.132,5,0.132,9,0.416,10,1.291,13,0.786,14,0.012,17,1.53,20,0.147,26,1.638,32,0.007,33,0.009,34,0.007,77,1.506,91,1.589,161,3.681,173,2.72,244,1.479,249,4.468,511,4.343,512,4.343,811,3.27,812,4.715,813,4.715,814,4.715,815,4.546,816,5.673,817,4.715,818,4.715,819,5.408,820,5.039,821,4.343,822,4.343,823,3.55,824,3.55,825,3.55,826,3.55,827,3.55,828,3.55,829,3.55,830,3.55,831,3.047,832,3.047,833,3.55,834,3.55,835,3.55,836,3.55]],["title/modules/DbTest.html",[199,1.31,900,3.25]],["body/modules/DbTest.html",[3,0.17,4,0.152,5,0.152,14,0.013,15,0.384,20,0.17,21,1.653,32,0.008,33,0.01,34,0.008,48,0.184,55,1.828,172,1.087,197,1.767,199,2.086,201,2.365,207,2.688,223,2.96,226,3.121,227,2.464,240,2.811,244,2.364,251,4.101,252,4.101,253,4.101,254,4.101,255,2.571,347,2.365,498,4.533,681,4.533,820,4.443,831,3.52,832,3.52,900,5.177,901,4.101,902,4.101,903,5.723,904,4.533,905,4.101,906,5.673,907,4.533,908,4.533,909,4.533,910,4.533,911,4.533]],["title/interfaces/DefaultAuthObject.html",[0,1.5,16,2.474]],["body/interfaces/DefaultAuthObject.html",[0,1.904,2,2.705,3,0.171,4,0.153,5,0.153,9,0.483,10,1.422,13,0.858,14,0.012,16,3.955,18,2.834,20,0.171,26,3.094,32,0.008,33,0.01,34,0.008,59,4.545,71,4.545,78,1.914,584,3.915,735,5.501,912,4.561,913,4.561,914,5.971]],["title/classes/HttpExceptionFilter.html",[48,0.146,915,3.25]],["body/classes/HttpExceptionFilter.html",[3,0.142,4,0.127,5,0.127,9,0.401,13,0.477,14,0.013,15,0.352,20,0.142,21,1.38,32,0.006,33,0.009,34,0.006,48,0.154,50,0.968,52,1.479,74,0.695,76,1.335,77,0.878,78,0.999,80,1.065,91,0.823,148,3.503,151,3.154,152,5.088,154,5.088,157,5.747,171,2.939,172,0.907,180,2.766,240,3.114,319,4.24,494,4.24,502,4.789,553,2.606,603,1.898,634,3.503,819,4.789,915,4.602,916,5.088,917,3.785,918,6.579,919,5.825,920,7.035,921,4.333,922,4.333,923,5.825,924,4.333,925,4.333,926,4.333,927,4.333,928,4.333,929,4.333,930,4.333,931,4.333,932,5.825,933,4.333,934,5.825,935,4.333,936,4.333,937,4.333,938,4.333,939,4.333,940,4.333,941,4.333,942,4.333,943,6.579,944,3.785,945,4.333,946,4.333,947,4.333]],["title/injectables/JwtAuthGuard.html",[256,1.078,748,2.474]],["body/injectables/JwtAuthGuard.html",[3,0.176,4,0.159,5,0.159,9,0.5,13,0.595,14,0.012,15,0.391,20,0.176,25,0.96,32,0.008,33,0.01,34,0.008,48,0.192,52,1.706,74,0.866,76,1.665,77,1.095,78,1.246,80,1.329,172,1.131,173,2.463,197,1.84,234,3.249,244,1.779,256,1.761,257,2.367,434,3.249,542,4.891,546,4.891,547,5.569,549,3.933,556,4.72,748,4.041,948,5.869,949,4.27,950,5.404,951,4.72,952,5.404,953,5.404,954,4.72]],["title/interfaces/JwtPayload.html",[0,1.5,489,2.79]],["body/interfaces/JwtPayload.html",[0,2.09,2,2.968,3,0.187,4,0.168,5,0.168,9,0.53,10,1.507,13,0.826,14,0.012,20,0.187,32,0.008,33,0.01,34,0.008,91,1.589,147,3.291,395,6.17,489,4.724,514,4.972,955,5.005,956,5.005]],["title/injectables/JwtStrategy.html",[256,1.078,428,2.79]],["body/injectables/JwtStrategy.html",[3,0.165,4,0.149,5,0.149,9,0.469,13,0.558,14,0.012,15,0.413,20,0.165,25,0.9,32,0.007,33,0.009,34,0.007,48,0.18,52,1.638,55,2.501,74,1.034,76,1.561,77,1.027,78,1.169,80,1.246,84,2.827,159,3.236,172,1.061,173,2.309,197,1.725,234,3.047,255,2.51,256,1.691,257,2.219,428,4.376,434,3.047,449,3.436,489,3.436,490,4.426,491,6.201,957,4.426,958,5.098,959,5.067,960,6.452,961,5.067,962,4.426,963,5.067,964,4.426,965,4.003,966,4.426,967,4.426,968,5.067,969,5.067,970,5.067,971,5.067,972,5.067]],["title/injectables/LocalAuthGuard.html",[256,1.078,973,3.25]],["body/injectables/LocalAuthGuard.html",[3,0.173,4,0.155,5,0.155,9,0.489,13,0.582,14,0.012,15,0.354,20,0.173,25,0.939,26,1.928,32,0.008,33,0.01,34,0.008,48,0.188,52,1.683,55,2.551,74,0.847,76,1.629,77,1.072,78,1.219,80,1.3,172,1.107,197,1.8,240,2.595,256,1.737,257,2.316,347,3.021,434,3.179,506,5.789,542,4.824,546,4.824,547,5.525,549,3.848,551,2.738,554,4.618,949,4.177,951,4.618,954,4.618,973,5.237,974,5.789,975,5.286,976,5.286,977,5.286]],["title/injectables/LocalStrategy.html",[256,1.078,429,2.79]],["body/injectables/LocalStrategy.html",[3,0.144,4,0.13,5,0.13,9,0.409,13,0.65,14,0.013,15,0.395,20,0.144,21,1.408,25,0.785,32,0.006,33,0.009,34,0.006,48,0.157,52,1.499,55,2.342,74,0.947,76,1.82,77,1.197,78,1.362,80,1.087,91,1.443,147,1.864,159,2.016,172,0.926,195,2.66,197,1.506,240,2.602,244,1.456,256,1.548,257,1.937,296,3.368,308,4.005,327,3.792,328,3.219,347,2.691,356,2.523,360,2.398,429,4.005,434,2.66,551,3.829,559,3.863,678,3.219,958,4.666,962,3.863,964,3.863,965,3.495,966,3.863,967,3.863,978,3.863,979,4.423,980,7.604,981,4.423,982,5.905,983,6.648,984,4.423,985,4.423,986,3.495,987,4.423,988,4.423,989,5.905,990,4.423,991,4.423,992,4.423,993,4.423,994,4.423]],["title/classes/LoginReqDto.html",[48,0.146,144,2.346]],["body/classes/LoginReqDto.html",[3,0.192,4,0.173,5,0.173,14,0.012,15,0.379,20,0.231,25,1.046,32,0.009,33,0.01,34,0.009,48,0.252,50,1.315,91,1.118,141,3.541,142,1.939,144,4.039,147,2.482,279,3.541,296,2.796,323,4.653,324,3.359,333,3.994,346,4.653,995,4.653,996,5.144]],["title/classes/LoginResDto.html",[48,0.146,333,2.79]],["body/classes/LoginResDto.html",[3,0.186,4,0.167,5,0.167,9,0.527,10,1.5,13,0.627,14,0.012,15,0.371,20,0.227,25,1.011,32,0.008,33,0.01,34,0.008,48,0.246,50,1.271,74,0.912,91,1.317,141,3.423,142,1.874,144,3.247,147,2.399,279,3.423,296,2.703,323,4.498,324,3.247,333,4.705,346,5.913,995,4.498,996,4.972,997,5.692]],["title/modules/MailModule.html",[199,1.31,214,2.79]],["body/modules/MailModule.html",[3,0.178,4,0.16,5,0.16,14,0.012,15,0.361,20,0.178,32,0.008,33,0.01,34,0.008,48,0.193,172,1.139,199,2.335,201,2.478,202,2.817,203,3.102,204,3.102,205,2.817,206,3.981,207,3.799,214,5.524,219,3.847,220,2.952,221,2.817,316,5.073,998,4.75,999,4.75,1000,5.438,1001,5.438,1002,5.438]],["title/injectables/MailService.html",[256,1.078,316,2.474]],["body/injectables/MailService.html",[3,0.185,4,0.122,5,0.122,9,0.384,10,1.224,13,0.623,14,0.013,15,0.387,17,1.414,18,2.255,20,0.136,32,0.006,33,0.008,34,0.006,48,0.148,52,1.437,55,2.268,74,1.16,76,1.28,77,0.842,78,0.958,80,1.392,159,2.934,172,0.87,173,2.934,196,1.688,234,2.498,240,2.216,241,4.687,256,1.484,257,1.82,316,3.404,341,4.497,347,1.893,377,4.944,415,2.817,482,3.282,588,1.687,603,1.82,815,2.645,822,3.023,1003,3.628,1004,6.439,1005,6.914,1006,5.66,1007,5.66,1008,4.154,1009,5.66,1010,6.439,1011,4.154,1012,4.154,1013,4.154,1014,6.439,1015,5.624,1016,5.66,1017,3.628,1018,4.154,1019,4.154,1020,4.154,1021,4.154,1022,4.154,1023,4.154,1024,4.154,1025,4.154,1026,4.154,1027,4.154,1028,4.154,1029,4.154,1030,5.66,1031,3.628,1032,4.154,1033,4.154,1034,4.154,1035,4.154,1036,4.154,1037,4.154,1038,4.154]],["title/interfaces/Mailer.html",[0,1.5,815,2.62]],["body/interfaces/Mailer.html",[0,2.489,2,2.416,3,0.152,4,0.137,5,0.137,9,0.432,10,1.323,13,0.673,14,0.012,17,1.588,20,0.152,26,1.701,32,0.007,33,0.009,34,0.007,77,1.24,91,1.584,161,3.382,173,2.788,244,1.536,249,4.356,511,4.452,512,4.452,811,3.395,812,4.833,813,4.833,814,4.833,815,4.79,816,5.273,817,4.833,818,4.833,819,4.452,820,4.148,821,5.475,822,5.475,823,3.686,824,3.686,825,3.686,826,3.686,827,3.686,828,3.686,829,3.686,830,3.686,831,3.164,832,3.164,833,3.686,834,3.686,835,3.686,836,3.686]],["title/classes/PagedCategoryResDto.html",[48,0.146,1039,3.25]],["body/classes/PagedCategoryResDto.html",[3,0.199,4,0.179,5,0.179,14,0.012,15,0.387,20,0.199,25,1.083,32,0.009,33,0.011,34,0.009,48,0.217,50,1.362,745,3.311,746,3.668,747,3.668,755,3.884,758,4.819,762,5.328,874,4.819,1039,5.714,1040,5.328]],["title/classes/PagedCourseResDto.html",[48,0.146,1041,3.25]],["body/classes/PagedCourseResDto.html",[3,0.199,4,0.179,5,0.179,14,0.012,15,0.387,20,0.199,25,1.083,32,0.009,33,0.011,34,0.009,48,0.217,50,1.362,745,3.311,746,3.668,747,3.668,850,3.884,865,4.819,877,4.819,1041,5.714,1042,5.328,1043,6.099]],["title/classes/PagedReqDto.html",[48,0.146,1044,3.25]],["body/classes/PagedReqDto.html",[3,0.157,4,0.141,5,0.141,9,0.444,10,1.347,13,0.806,14,0.012,15,0.256,17,2.121,20,0.157,32,0.007,33,0.009,34,0.007,48,0.221,50,1.071,74,1.174,78,1.851,91,1.39,135,1.919,143,2.277,161,3.628,588,2.529,648,4.691,844,3.966,1044,4.921,1045,5.996,1046,4.189,1047,6.042,1048,6.917,1049,6.917,1050,6.229,1051,7.918,1052,4.796,1053,4.796,1054,4.796,1055,4.796,1056,4.796,1057,4.796,1058,6.917]],["title/classes/PagedTrackResDto.html",[48,0.146,1059,3.25]],["body/classes/PagedTrackResDto.html",[3,0.199,4,0.179,5,0.179,14,0.012,15,0.387,20,0.199,25,1.083,32,0.009,33,0.011,34,0.009,48,0.217,50,1.362,745,3.311,746,3.668,747,3.668,881,4.819,882,3.884,883,5.328,1059,5.714,1060,5.328,1061,5.328]],["title/classes/PagedUserResDto.html",[48,0.146,1062,3.25]],["body/classes/PagedUserResDto.html",[3,0.199,4,0.179,5,0.179,14,0.012,15,0.387,20,0.199,25,1.083,32,0.009,33,0.011,34,0.009,48,0.217,50,1.362,324,3.479,745,3.311,746,3.668,747,3.668,887,4.136,889,3.311,1062,5.714,1063,5.328,1064,5.328]],["title/classes/PasswordToken.html",[48,0.146,1065,3.25]],["body/classes/PasswordToken.html",[3,0.092,4,0.083,5,0.083,9,0.479,10,0.927,13,0.868,14,0.012,15,0.229,17,2.49,20,0.092,21,0.9,25,0.761,26,1.563,32,0.004,33,0.006,34,0.004,35,2.73,48,0.1,50,0.631,52,1.088,74,1.264,78,1.738,80,1.422,91,0.983,93,1.46,124,1.288,126,3.719,135,1.975,180,2.746,196,2.137,244,2.447,255,3.08,283,3.242,320,2.908,322,1.916,360,2.104,366,2.578,390,2.983,435,4.33,522,3.388,564,2.184,565,1.807,576,2.445,577,2.578,578,2.445,579,3.478,580,2.955,581,2.445,582,3.115,583,3.115,584,2.684,585,3.115,588,2.657,589,3.935,591,4.089,592,3.478,602,3.115,603,2.533,615,2.578,781,2.73,783,3.455,784,1.799,785,1.799,786,1.799,787,1.799,788,1.799,789,1.799,790,1.799,791,1.799,792,1.799,793,1.799,794,1.799,795,1.799,796,1.799,1065,3.388,1066,2.468,1067,2.057,1068,2.826,1069,2.826,1070,2.233,1071,2.826,1072,2.468,1073,2.826,1074,3.745,1075,2.826,1076,2.057,1077,2.468,1078,2.826,1079,2.468]],["title/controllers/ProfileController.html",[7,1.5,1080,2.994]],["body/controllers/ProfileController.html",[3,0.154,4,0.139,5,0.139,7,1.725,9,0.438,13,0.521,14,0.013,15,0.422,20,0.154,32,0.007,33,0.009,34,0.007,48,0.219,52,1.567,55,2.421,74,0.758,76,1.457,77,0.959,78,1.091,80,1.163,84,2.704,135,1.24,142,1.557,172,0.99,189,1.994,195,2.844,196,1.24,197,1.61,240,1.851,244,2.032,265,3.012,309,3.207,347,2.155,360,2.506,551,3.773,553,2.844,572,2.697,634,4.132,742,4.493,748,2.844,749,3.442,750,3.442,761,3.442,889,2.567,1080,4.493,1081,4.131,1082,4.729,1083,6.172,1084,4.729,1085,4.729,1086,4.729,1087,4.729,1088,4.729,1089,4.375,1090,4.131,1091,4.729,1092,4.729,1093,4.729,1094,4.729,1095,4.729,1096,4.729]],["title/modules/ProfileModule.html",[199,1.31,215,2.79]],["body/modules/ProfileModule.html",[3,0.17,4,0.153,5,0.153,14,0.012,15,0.404,20,0.17,32,0.008,33,0.01,34,0.008,48,0.185,172,1.09,189,2.767,199,2.29,201,2.373,202,2.697,203,2.969,204,2.969,205,2.697,206,3.902,207,2.697,215,5.535,218,4.779,219,3.744,220,2.826,221,2.697,223,3.744,238,4.113,1080,5.233,1089,5.06,1090,4.547,1097,4.547,1098,5.206,1099,4.547,1100,5.206,1101,5.206]],["title/injectables/ProfileService.html",[256,1.078,1089,2.62]],["body/injectables/ProfileService.html",[3,0.168,4,0.151,5,0.151,9,0.477,13,0.718,14,0.012,15,0.383,20,0.168,32,0.008,33,0.01,34,0.008,48,0.183,52,1.657,55,2.522,74,1.046,76,2.011,77,1.323,78,1.505,80,1.268,84,2.859,91,1.359,147,2.751,159,2.351,172,1.08,195,3.102,196,1.352,197,1.756,256,1.711,257,2.26,325,4.303,326,4.076,355,4.076,360,2.095,460,4.506,488,3.285,1089,4.156,1102,4.506,1103,6.527,1104,5.159,1105,6.527,1106,5.159]],["title/classes/RegisterUserDto.html",[48,0.146,279,2.474]],["body/classes/RegisterUserDto.html",[3,0.176,4,0.158,5,0.158,9,0.499,10,1.45,13,0.593,14,0.012,15,0.39,20,0.219,25,0.957,26,1.964,32,0.008,33,0.01,34,0.008,48,0.259,50,1.203,74,0.863,91,1.273,93,1.834,135,1.412,142,1.773,143,2.558,196,1.412,279,4.033,282,3.653,296,3.467,324,3.072,364,4.256,514,3.43,564,2.271,565,2.271,887,3.653,888,4.256,889,2.924,890,4.256,1107,5.299,1108,5.858,1109,5.387,1110,4.705]],["title/classes/RegisterUserResDto.html",[48,0.146,282,2.79]],["body/classes/RegisterUserResDto.html",[3,0.176,4,0.159,5,0.159,9,0.5,10,1.453,13,0.595,14,0.012,15,0.391,20,0.219,25,0.96,26,2.45,32,0.008,33,0.01,34,0.008,48,0.26,50,1.207,74,0.866,91,1.026,93,1.84,142,1.779,143,2.566,196,1.917,279,3.249,282,4.557,296,2.566,324,3.082,364,5.778,514,3.441,564,2.278,565,2.278,887,3.665,888,4.27,889,2.933,890,4.27,1107,5.309,1108,4.72,1110,4.72,1111,5.404]],["title/classes/ResetPassInput.html",[48,0.146,286,2.79]],["body/classes/ResetPassInput.html",[3,0.178,4,0.16,5,0.16,9,0.505,10,1.462,13,0.744,14,0.012,15,0.361,20,0.178,25,1.2,32,0.008,33,0.01,34,0.008,48,0.24,50,1.218,74,1.084,91,1.394,135,1.772,138,6.065,143,2.59,286,4.584,299,5.206,338,4.765,366,4.065,402,5.803,783,2.39,958,4.311,1112,5.904,1113,4.765,1114,5.456,1115,5.456]],["title/guards/RoleGuard.html",[539,3.25,1116,3.25]],["body/guards/RoleGuard.html",[3,0.175,4,0.158,5,0.158,9,0.497,13,0.591,14,0.012,15,0.358,20,0.175,26,2.441,32,0.008,33,0.01,34,0.008,48,0.191,52,1.699,74,0.861,76,1.655,77,1.088,78,1.238,80,1.32,84,2.932,172,1.124,197,1.828,244,1.768,256,1.754,494,3.908,540,4.243,542,5.717,546,3.908,547,5.556,549,4.872,1116,5.288,1117,4.69,1118,5.37,1119,7.292,1120,4.69]],["title/injectables/SessionSerializer.html",[256,1.078,430,2.79]],["body/injectables/SessionSerializer.html",[3,0.153,4,0.138,5,0.138,9,0.434,13,0.676,14,0.012,15,0.366,20,0.153,25,1.09,32,0.007,33,0.009,34,0.007,48,0.167,52,1.559,74,0.984,76,1.892,77,1.244,78,1.416,80,1.509,151,4.468,172,0.982,256,1.609,257,2.055,360,3.426,415,3.181,430,4.163,434,2.821,488,2.987,603,3.18,667,4.923,1121,4.097,1122,6.843,1123,6.139,1124,6.139,1125,6.139,1126,7.73,1127,6.139,1128,4.69,1129,4.851,1130,6.139,1131,4.69,1132,6.139,1133,4.69]],["title/modules/SharedModule.html",[199,1.31,216,2.79]],["body/modules/SharedModule.html",[3,0.156,4,0.14,5,0.14,14,0.012,15,0.391,20,0.156,32,0.007,33,0.009,34,0.007,48,0.17,77,0.969,126,2.271,127,3.779,172,1.001,199,2.2,201,2.18,202,2.477,203,2.728,204,2.728,205,2.477,206,3.75,207,3.578,216,5.548,219,3.546,220,2.596,221,2.477,223,2.728,226,2.876,227,2.271,240,1.872,443,3.045,445,2.876,631,4.728,891,5.622,1134,4.177,1135,4.177,1136,4.177,1137,3.779,1138,6.217,1139,4.783,1140,5.458,1141,4.177,1142,4.177]],["title/injectables/TempTokensService.html",[256,1.078,431,2.62]],["body/injectables/TempTokensService.html",[3,0.069,4,0.062,5,0.062,9,0.195,10,0.738,13,0.863,14,0.012,15,0.289,17,2.23,20,0.069,22,1.205,23,3.087,25,0.606,32,0.003,33,0.005,34,0.003,39,2.676,48,0.075,52,0.866,54,2.314,55,2.607,56,2.314,57,2.314,58,2.314,59,2.052,60,2.314,61,2.173,62,2.314,63,2.314,64,2.314,65,2.314,66,2.314,67,2.314,68,2.314,69,2.314,70,2.314,71,2.052,72,2.314,73,1.432,74,1.262,76,2.389,77,1.571,78,1.788,79,4.441,80,1.906,81,1.432,82,1.432,84,2.869,85,1.432,87,1.345,88,1.432,90,1.432,91,1.405,93,2.159,94,3.879,95,1.432,97,1.432,99,1.432,101,1.432,103,1.432,105,1.432,107,1.432,109,1.432,111,1.432,113,1.432,115,1.432,117,1.432,118,3.344,119,3.926,121,1.432,124,0.963,135,0.554,159,1.555,172,0.442,196,1.126,227,1.003,233,1.845,256,0.895,257,0.925,321,1.669,322,1.432,341,1.946,431,2.173,435,1.345,551,1.094,588,2.659,603,0.925,616,3.14,631,4.528,633,4.767,634,2.052,635,2.484,636,3.125,637,2.484,638,2.484,640,3.67,642,5.191,645,1.537,647,1.537,648,2.314,664,1.537,665,2.484,667,1.432,668,1.537,670,1.537,673,1.537,684,1.537,783,3.432,1143,2.981,1144,1.845,1145,2.112,1146,2.112,1147,3.412,1148,1.669,1149,1.669,1150,1.669,1151,1.669,1152,1.669,1153,1.669,1154,1.669,1155,1.669,1156,1.669,1157,1.669,1158,1.669,1159,1.669,1160,1.669,1161,1.669,1162,1.669,1163,1.669,1164,1.669,1165,1.669,1166,1.669,1167,1.669,1168,1.669,1169,1.669,1170,1.669,1171,1.669,1172,2.112,1173,2.112]],["title/classes/TemporaryToken.html",[48,0.146,435,2.62]],["body/classes/TemporaryToken.html",[3,0.083,4,0.075,5,0.075,9,0.508,10,0.858,13,0.875,14,0.012,15,0.26,17,2.424,20,0.13,21,0.814,25,0.705,26,1.447,32,0.004,33,0.006,34,0.004,35,3.098,48,0.091,50,0.571,52,1.007,74,1.243,78,1.698,80,1.349,91,1.128,93,1.351,124,1.164,126,3.731,135,1.93,147,1.077,180,2.605,196,2.139,244,2.532,255,3.251,283,3.115,296,1.213,320,4.028,360,2.664,366,2.926,390,3.091,435,2.527,485,4.323,488,1.627,522,4.334,564,1.673,565,1.673,576,2.263,577,2.386,578,2.263,579,3.299,580,2.775,581,2.263,582,2.926,583,2.926,584,2.52,585,2.926,588,2.553,589,3.781,591,4.281,592,3.299,602,2.926,603,2.403,612,3.782,615,3.781,781,3.782,783,3.268,784,1.627,785,1.627,786,1.627,787,1.627,788,1.627,789,1.627,790,1.627,791,1.627,792,1.627,793,1.627,794,1.627,795,1.627,796,1.627,799,1.733,844,1.627,1067,1.86,1070,2.019,1072,2.232,1074,3.466,1076,1.86,1077,2.232,1079,2.232,1174,2.555,1175,2.555,1176,2.555,1177,2.555,1178,3.135,1179,2.232,1180,2.232,1181,2.555]],["title/classes/Track.html",[48,0.146,1182,2.62]],["body/classes/Track.html",[3,0.093,4,0.084,5,0.084,9,0.483,10,0.935,13,0.821,14,0.012,15,0.279,17,2.498,20,0.093,21,0.91,25,0.768,26,1.577,32,0.004,33,0.006,34,0.004,35,1.82,48,0.102,50,0.639,52,1.098,74,1.248,78,1.621,80,1.43,91,1.186,93,1.473,124,1.303,126,3.796,135,1.923,180,2.762,196,2.125,244,2.645,255,3.383,283,3.483,390,2.651,564,1.823,565,1.823,576,2.467,577,2.601,578,2.467,579,3.498,580,2.976,581,2.467,582,3.138,583,3.138,584,2.703,585,3.138,588,2.669,589,3.953,591,3.953,592,3.498,602,3.138,603,2.548,612,3.323,615,2.601,778,3.318,779,4.235,780,4.235,781,3.979,783,3.348,784,1.82,785,1.82,786,1.82,787,1.82,788,1.82,789,1.82,790,1.82,791,1.82,792,1.82,793,1.82,794,1.82,795,1.82,796,1.82,797,1.481,798,1.631,799,1.939,800,2.259,839,3.138,842,3.318,848,2.497,1182,2.754,1183,2.497,1184,2.859,1185,2.859]],["title/classes/TrackDto.html",[48,0.146,882,2.62]],["body/classes/TrackDto.html",[3,0.149,4,0.134,5,0.134,9,0.422,10,1.304,13,0.822,14,0.012,15,0.399,20,0.149,25,1.071,32,0.007,33,0.009,34,0.007,48,0.24,50,1.02,74,1.197,91,1.418,93,2.053,135,1.958,142,1.503,143,2.168,163,4.3,196,1.883,390,2.748,561,4.614,564,2.542,565,2.542,566,4.09,568,3.096,571,4.58,572,2.604,778,2.604,783,2.958,797,2.365,798,2.604,802,3.607,804,3.323,805,3.323,806,3.323,807,4.765,808,3.323,809,3.323,810,3.607,839,4.061,842,3.852,852,3.987,858,3.987,882,3.84,1186,3.987,1187,4.565,1188,4.565]],["title/controllers/TracksController.html",[7,1.5,1189,2.994]],["body/controllers/TracksController.html",[3,0.13,4,0.117,5,0.117,7,1.448,9,0.367,13,0.811,14,0.013,15,0.423,20,0.13,21,1.264,25,0.705,32,0.006,33,0.008,34,0.006,38,2.89,39,2.155,40,2.692,41,2.89,42,2.89,48,0.141,52,1.393,55,2.215,74,0.636,76,1.223,77,0.805,78,0.916,80,0.976,84,2.404,135,1.041,142,1.307,148,4.079,156,4.938,171,2.692,172,0.831,189,1.673,195,2.387,196,1.041,197,1.352,240,1.554,265,2.528,277,3.994,283,2.719,303,3.137,304,3.137,307,4.336,309,2.692,311,2.89,314,5.36,318,3.137,319,2.89,347,1.809,352,3.137,354,3.994,356,2.264,358,3.137,359,3.137,735,3.994,736,3.468,738,3.468,739,3.468,740,3.468,742,3.994,743,3.721,744,3.137,745,2.155,746,2.387,747,2.387,748,2.387,749,2.89,750,2.89,757,3.137,761,2.89,764,3.468,765,3.468,766,3.468,770,3.468,842,3.13,879,5.599,882,3.494,1061,3.468,1182,3.494,1189,3.994,1190,3.468,1191,3.97,1192,3.97,1193,3.97,1194,3.97,1195,3.137,1196,3.721,1197,3.468,1198,3.97,1199,3.97,1200,3.97,1201,3.97,1202,3.97,1203,3.97,1204,3.97]],["title/modules/TracksModule.html",[199,1.31,217,2.79]],["body/modules/TracksModule.html",[3,0.178,4,0.16,5,0.16,14,0.013,15,0.421,20,0.178,32,0.008,33,0.01,34,0.008,48,0.193,77,1.102,172,1.139,189,2.844,199,2.148,201,2.478,206,2.952,207,2.817,217,4.575,223,3.102,226,3.27,227,2.582,240,2.129,443,3.463,445,3.27,1182,3.463,1189,5.338,1195,4.297,1196,4.575,1197,4.75,1205,4.297,1206,5.438,1207,5.795,1208,4.75,1209,4.75]],["title/classes/TracksService.html",[48,0.146,1196,2.79]],["body/classes/TracksService.html",[3,0.07,4,0.063,5,0.063,9,0.198,10,0.745,13,0.864,14,0.012,15,0.265,17,2.238,20,0.07,22,1.218,23,3.104,25,0.612,32,0.003,33,0.005,34,0.003,39,2.694,48,0.076,50,0.477,52,0.874,54,2.335,55,2.613,56,2.335,57,2.335,58,2.335,59,2.071,60,2.335,61,2.193,62,2.335,63,2.335,64,2.335,65,2.335,66,2.335,67,2.335,68,2.335,69,2.335,70,2.335,71,2.071,72,2.335,73,1.448,74,1.264,76,2.393,77,1.574,78,1.791,79,4.459,80,1.91,81,1.448,82,1.448,84,2.88,85,1.448,87,1.36,88,1.448,90,1.448,91,1.408,93,2.168,94,3.897,95,1.448,97,1.448,99,1.448,101,1.448,103,1.448,105,1.448,107,1.448,109,1.448,111,1.448,113,1.448,115,1.448,117,1.448,118,3.366,119,3.946,121,1.448,124,0.973,135,0.56,159,1.569,196,1.134,227,1.014,341,1.964,551,1.106,588,2.67,603,0.936,616,3.16,631,4.535,633,4.785,634,2.071,635,2.506,636,3.149,637,2.506,638,2.506,640,3.691,642,5.202,645,1.555,647,1.555,648,2.335,664,1.555,665,2.506,667,1.448,668,1.555,670,1.555,673,1.555,684,1.555,783,3.438,1148,1.688,1149,1.688,1150,1.688,1151,1.688,1152,1.688,1153,1.688,1154,1.688,1155,1.688,1156,1.688,1157,1.688,1158,1.688,1159,1.688,1160,1.688,1161,1.688,1162,1.688,1163,1.688,1164,1.688,1165,1.688,1166,1.688,1167,1.688,1168,1.688,1169,1.688,1170,1.688,1171,1.688,1182,1.36,1195,1.688,1196,2.335,1210,1.866,1211,1.866,1212,2.136,1213,3.008,1214,2.136,1215,2.136,1216,1.866]],["title/classes/User.html",[48,0.146,360,1.67]],["body/classes/User.html",[3,0.061,4,0.055,5,0.055,9,0.366,10,0.67,11,2.684,13,0.817,14,0.013,15,0.324,17,2.505,20,0.101,21,0.987,25,0.55,26,1.676,32,0.003,33,0.005,34,0.003,35,1.195,48,0.11,50,0.419,52,0.787,55,0.661,74,1.239,77,0.628,78,1.492,80,1.425,91,1.31,93,1.055,124,0.856,126,3.525,135,1.888,147,1.937,161,1.536,172,0.393,180,2.182,196,2.134,197,1.055,244,2.656,255,3.286,283,3.357,296,1.88,347,0.856,356,1.071,360,1.607,390,2.496,400,1.273,483,1.483,500,1.483,502,1.366,514,2.521,529,3.458,564,1.306,565,1.306,572,1.071,576,1.768,577,1.864,578,1.768,579,2.763,580,2.258,581,1.768,582,2.38,583,2.38,584,2.05,585,2.38,586,2.449,588,2.352,589,3.89,591,3.293,592,3.059,602,2.38,603,2.653,612,3.998,614,1.366,615,3.642,616,1.195,629,1.64,640,2.102,676,1.64,683,3.702,692,1.64,778,3.454,779,3.986,780,3.986,781,3.689,783,3.023,784,1.195,785,1.195,786,1.195,787,1.195,788,1.195,789,1.195,790,1.195,791,1.195,792,1.195,793,1.195,794,1.195,795,1.195,796,1.195,797,0.972,798,1.071,799,1.273,844,1.974,1070,1.483,1129,1.483,1178,2.449,1217,1.483,1218,3.958,1219,3.458,1220,3.458,1221,3.958,1222,4.595,1223,4.595,1224,3.958,1225,3.099,1226,1.877,1227,1.877,1228,1.877,1229,1.877,1230,1.877,1231,1.877,1232,1.877,1233,1.877,1234,3.458,1235,1.877,1236,1.877,1237,1.877,1238,1.877,1239,1.877,1240,3.099,1241,2.707,1242,1.877,1243,1.877,1244,1.877,1245,1.877,1246,1.877,1247,3.099,1248,3.958,1249,1.877,1250,2.707,1251,2.707,1252,2.707,1253,1.877,1254,3.099,1255,1.877,1256,1.877,1257,4.595,1258,1.877,1259,1.877,1260,1.877,1261,1.877,1262,1.877,1263,1.877]],["title/classes/UserDto.html",[48,0.146,889,2.233]],["body/classes/UserDto.html",[3,0.133,4,0.119,5,0.119,9,0.376,10,1.206,13,0.836,14,0.013,15,0.396,17,1.384,20,0.133,25,0.99,32,0.006,33,0.008,34,0.006,48,0.226,50,0.908,74,1.218,91,1.442,93,1.899,135,1.991,142,1.338,143,1.93,147,2.684,163,4.572,196,1.796,390,2.542,514,4.054,561,4.46,564,2.351,565,2.351,566,3.782,568,2.756,571,4.869,572,2.318,588,1.65,683,4.987,778,2.318,783,2.789,797,2.105,798,2.318,804,2.958,805,2.958,806,2.958,808,2.958,809,2.958,889,3.027,1178,3.212,1219,5.561,1220,5.561,1234,4.871,1264,3.55,1265,4.065,1266,4.065,1267,5.577,1268,4.065,1269,4.065,1270,4.065,1271,4.065,1272,4.065,1273,5.577,1274,4.065,1275,4.065,1276,6.367,1277,4.065]],["title/controllers/UsersController.html",[7,1.5,1278,2.994]],["body/controllers/UsersController.html",[3,0.163,4,0.146,5,0.146,7,1.815,14,0.013,15,0.437,20,0.163,25,0.884,32,0.007,33,0.009,34,0.007,38,3.623,39,2.702,40,3.376,41,3.623,42,3.623,48,0.177,142,1.639,172,1.042,189,2.098,196,1.305,265,3.17,309,3.376,311,3.623,324,2.839,325,3.822,360,2.591,742,4.644,743,4.327,744,3.933,745,2.702,746,2.993,747,2.993,748,2.993,749,3.623,750,3.623,757,3.933,761,3.623,885,4.644,889,3.822,1064,4.348,1278,4.644,1279,4.348,1280,4.978,1281,4.978,1282,3.933,1283,4.348,1284,4.978,1285,4.978,1286,4.978,1287,4.978]],["title/modules/UsersModule.html",[199,1.31,218,2.474]],["body/modules/UsersModule.html",[3,0.165,4,0.148,5,0.148,14,0.012,15,0.412,20,0.165,32,0.007,33,0.009,34,0.007,48,0.179,77,1.024,172,1.058,189,2.715,199,2.258,201,2.302,202,2.617,203,2.881,204,2.881,205,2.617,206,3.496,207,3.673,218,4.638,219,3.673,220,2.742,221,2.617,223,2.881,226,3.038,227,2.399,240,1.978,325,4.404,360,2.051,443,3.217,445,3.038,1278,5.161,1282,3.991,1283,4.412,1288,4.412,1289,4.412,1290,3.991,1291,5.052,1292,5.602,1293,4.412,1294,4.412]],["title/classes/UsersService.html",[48,0.146,325,2.233]],["body/classes/UsersService.html",[3,0.07,4,0.063,5,0.063,9,0.198,10,0.745,13,0.864,14,0.012,15,0.265,17,2.238,20,0.07,22,1.218,23,3.104,25,0.612,32,0.003,33,0.005,34,0.003,39,2.694,48,0.076,50,0.477,52,0.874,54,2.335,55,2.613,56,2.335,57,2.335,58,2.335,59,2.071,60,2.335,61,2.193,62,2.335,63,2.335,64,2.335,65,2.335,66,2.335,67,2.335,68,2.335,69,2.335,70,2.335,71,2.071,72,2.335,73,1.448,74,1.264,76,2.393,77,1.574,78,1.791,79,4.459,80,1.91,81,1.448,82,1.448,84,2.88,85,1.448,87,1.36,88,1.448,90,1.448,91,1.408,93,2.168,94,3.897,95,1.448,97,1.448,99,1.448,101,1.448,103,1.448,105,1.448,107,1.448,109,1.448,111,1.448,113,1.448,115,1.448,117,1.448,118,3.366,119,3.946,121,1.448,124,0.973,135,0.56,159,1.569,196,1.134,227,1.014,325,1.869,341,1.964,360,0.867,551,1.106,588,2.67,603,0.936,616,3.16,631,4.535,633,4.785,634,2.071,635,2.506,636,3.149,637,2.506,638,2.506,640,3.691,642,5.202,645,1.555,647,1.555,648,2.335,664,1.555,665,2.506,667,1.448,668,1.555,670,1.555,673,1.555,684,1.555,783,3.438,1148,1.688,1149,1.688,1150,1.688,1151,1.688,1152,1.688,1153,1.688,1154,1.688,1155,1.688,1156,1.688,1157,1.688,1158,1.688,1159,1.688,1160,1.688,1161,1.688,1162,1.688,1163,1.688,1164,1.688,1165,1.688,1166,1.688,1167,1.688,1168,1.688,1169,1.688,1170,1.688,1171,1.688,1211,1.866,1213,3.008,1216,1.866,1282,1.688,1295,1.866,1296,2.136,1297,2.136,1298,2.136]],["title/classes/ValidateTokenInput.html",[48,0.146,299,2.79]],["body/classes/ValidateTokenInput.html",[3,0.183,4,0.165,5,0.165,9,0.52,10,1.488,13,0.618,14,0.012,15,0.398,20,0.183,25,0.998,32,0.008,33,0.01,34,0.008,48,0.245,50,1.255,74,0.9,91,1.306,135,1.472,138,5.879,141,3.378,142,1.849,143,2.667,144,3.204,145,4.906,146,4.906,147,2.368,299,4.667,366,4.474,1299,6.011,1300,4.906,1301,5.617]],["title/coverage.html",[1302,4.912]],["body/coverage.html",[0,2.364,1,2.004,5,0.06,6,3.064,7,2.486,8,3.064,13,0.226,14,0.013,16,1.233,18,2.285,21,0.653,24,1.391,27,1.391,32,0.003,33,0.005,34,0.003,36,1.791,37,1.791,48,0.287,49,1.621,51,1.791,126,0.974,129,1.493,130,1.791,131,1.791,144,1.17,148,1.233,149,1.791,150,1.791,173,0.935,188,1.493,190,1.791,193,1.306,199,0.653,205,1.062,222,2.633,235,1.621,241,1.493,249,2.004,256,1.881,258,1.791,263,1.493,264,1.791,279,1.233,282,1.391,286,1.391,299,1.391,316,1.233,325,1.113,327,1.17,329,1.493,333,1.391,360,0.833,407,1.391,408,1.791,428,1.391,429,1.391,430,1.391,431,1.306,435,1.306,451,1.791,485,1.493,486,1.621,489,1.391,492,1.621,539,2.633,541,1.791,561,1.233,562,1.791,563,1.791,574,1.791,631,1.17,632,1.791,732,1.493,733,1.791,737,1.493,743,1.391,745,1.113,748,1.233,751,1.493,753,1.391,755,1.306,777,1.791,797,1.062,801,1.791,811,3.064,815,1.306,837,1.493,838,1.791,844,5.43,850,1.306,851,1.791,860,1.493,861,1.791,863,1.493,867,1.621,873,1.791,874,2.633,876,1.791,877,2.633,879,1.493,880,1.791,881,2.633,882,1.306,885,1.493,886,1.791,887,3.287,889,1.113,891,1.391,892,1.791,893,1.791,901,2.633,902,2.633,905,1.621,906,1.621,912,1.791,913,1.791,915,1.621,916,1.791,917,1.791,948,1.791,949,2.633,955,1.791,956,1.791,957,1.791,973,1.621,974,1.791,978,1.791,995,2.633,1003,1.791,1039,1.621,1040,1.791,1041,1.621,1042,1.791,1044,1.621,1045,2.633,1046,1.791,1059,1.621,1060,1.791,1062,1.621,1063,1.791,1065,1.621,1066,1.791,1067,2.426,1080,1.493,1081,1.791,1089,1.306,1102,1.791,1107,2.633,1112,1.791,1113,1.791,1116,1.621,1117,1.791,1121,1.791,1129,3.829,1137,1.621,1140,1.621,1143,1.791,1144,1.791,1182,1.306,1183,1.791,1186,1.791,1189,1.493,1190,1.791,1196,1.391,1205,1.621,1207,1.621,1210,1.791,1217,1.621,1264,1.791,1278,1.493,1279,1.791,1290,1.621,1292,1.621,1295,1.791,1299,1.791,1300,1.791,1302,1.791,1303,1.621,1304,2.051,1305,2.051,1306,7.427,1307,7.495,1308,8.068,1309,2.051,1310,3.332,1311,1.791,1312,1.791,1313,4.847,1314,6.018,1315,4.209,1316,4.209,1317,4.847,1318,2.051,1319,2.051,1320,2.051,1321,2.051,1322,4.209,1323,3.332,1324,4.847,1325,2.633,1326,2.911,1327,1.791,1328,1.791,1329,1.791,1330,1.791,1331,1.791,1332,1.621,1333,1.791,1334,1.791,1335,1.791,1336,1.791,1337,2.051,1338,1.791,1339,2.051,1340,2.051,1341,1.791,1342,2.051,1343,2.911,1344,2.911,1345,1.791,1346,1.791,1347,1.791,1348,1.791,1349,1.791,1350,2.051,1351,2.051,1352,2.051,1353,2.051,1354,2.051,1355,2.051]],["title/dependencies.html",[202,2.564,1356,3.431]],["body/dependencies.html",[14,0.013,32,0.006,33,0.009,34,0.006,48,0.208,124,1.985,125,3.17,142,1.434,143,2.068,172,0.912,202,2.256,225,3.804,227,2.068,417,3.441,434,2.619,449,2.954,450,5.105,482,3.441,483,3.441,484,3.804,496,3.804,497,3.804,553,4.239,572,2.484,678,3.17,904,3.804,965,5.212,986,3.441,1015,5.105,1017,3.804,1047,3.804,1120,3.804,1332,3.441,1357,4.355,1358,4.355,1359,4.355,1360,4.355,1361,4.355,1362,4.355,1363,4.355,1364,4.355,1365,7.353,1366,4.355,1367,4.355,1368,4.355,1369,4.355,1370,4.355,1371,4.355,1372,4.355,1373,4.355,1374,4.355,1375,4.355,1376,4.355,1377,4.355,1378,4.355,1379,4.355,1380,4.355,1381,4.355,1382,4.355,1383,4.355,1384,4.355,1385,5.844,1386,4.355,1387,4.355,1388,4.355,1389,4.355,1390,4.355,1391,4.355,1392,4.355,1393,4.355,1394,4.355,1395,4.355,1396,4.355,1397,4.355,1398,4.355,1399,4.355,1400,4.355,1401,5.844,1402,4.355,1403,4.355,1404,4.355,1405,4.355,1406,4.355,1407,4.355,1408,4.355,1409,4.355,1410,4.355,1411,4.355]],["title/miscellaneous/enumerations.html",[1412,1.957,1413,4.324]],["body/miscellaneous/enumerations.html",[9,0.532,14,0.012,32,0.008,33,0.01,34,0.008,147,2.424,296,2.73,320,4.734,418,5.516,485,4.185,588,3.306,683,5.081,1067,5.081,1179,5.022,1180,5.022,1217,4.543,1250,6.097,1251,6.097,1252,6.097,1412,3.279,1413,5.022,1414,5.75,1415,5.75,1416,5.75,1417,5.75,1418,5.75,1419,5.75]],["title/miscellaneous/functions.html",[1412,1.957,1420,4.324]],["body/miscellaneous/functions.html",[9,0.52,14,0.012,32,0.008,33,0.01,34,0.008,40,3.809,76,2.293,77,1.508,78,1.716,80,1.829,205,3.854,743,4.667,745,3.735,867,5.438,1045,4.438,1076,5.009,1325,4.438,1328,4.906,1329,6.011,1330,4.906,1341,6.011,1412,3.204,1420,4.906,1421,5.617,1422,5.617,1423,4.906,1424,5.617,1425,5.617,1426,5.617,1427,5.617]],["title/index.html",[9,0.318,1428,2.997,1429,2.997]],["body/index.html",[4,0.134,14,0.009,32,0.007,33,0.009,34,0.007,155,3.987,221,3.124,386,5.267,551,2.365,914,3.607,986,3.607,1241,3.987,1303,3.607,1430,6.753,1431,6.03,1432,6.03,1433,4.565,1434,6.03,1435,7.673,1436,4.565,1437,4.565,1438,4.565,1439,4.565,1440,4.565,1441,6.03,1442,4.565,1443,6.03,1444,4.565,1445,4.565,1446,3.987,1447,4.565,1448,4.565,1449,4.565,1450,4.565,1451,5.899,1452,4.565,1453,4.565,1454,4.565,1455,4.565,1456,4.565,1457,4.565,1458,4.565,1459,4.565,1460,4.565,1461,4.565,1462,4.565,1463,3.987,1464,4.565,1465,4.565,1466,4.565,1467,4.565,1468,4.565,1469,6.03,1470,4.565,1471,4.565,1472,6.03,1473,4.565,1474,4.565,1475,4.565,1476,4.565,1477,4.565,1478,4.565,1479,4.565,1480,4.565,1481,3.987,1482,4.565,1483,4.565,1484,3.987,1485,4.565,1486,4.565,1487,4.565,1488,4.565,1489,4.565,1490,4.565,1491,4.565,1492,4.565,1493,4.565,1494,4.565,1495,4.565,1496,4.565,1497,6.03,1498,4.565,1499,4.565,1500,4.565,1501,4.565,1502,4.565,1503,4.565,1504,4.565,1505,4.565,1506,4.565,1507,4.565,1508,4.565,1509,4.565,1510,4.565,1511,4.565,1512,4.565,1513,4.565,1514,4.565,1515,4.565,1516,4.565,1517,4.565,1518,4.565,1519,4.565]],["title/license.html",[1428,2.997,1429,2.997,1520,2.997]],["body/license.html",[14,0.009,31,3.561,32,0.007,33,0.009,34,0.007,221,2.534,553,2.942,944,5.511,1303,3.865,1446,7.113,1463,4.273,1481,4.273,1520,4.273,1521,4.892,1522,6.983,1523,4.892,1524,4.892,1525,4.892,1526,4.892,1527,4.892,1528,4.892,1529,4.892,1530,4.892,1531,6.309,1532,4.892,1533,4.892,1534,4.892,1535,6.983,1536,4.892,1537,6.309,1538,4.892,1539,4.892,1540,6.309,1541,4.892,1542,4.892,1543,4.892,1544,4.892,1545,4.892,1546,4.892,1547,4.892,1548,6.309,1549,4.892,1550,4.892,1551,4.892,1552,4.892,1553,4.892,1554,4.892,1555,6.309,1556,6.309,1557,4.892,1558,4.892,1559,4.892,1560,4.892,1561,4.892,1562,4.892,1563,4.892,1564,4.892,1565,4.892,1566,4.892,1567,4.892,1568,4.892,1569,4.892,1570,4.892,1571,4.892,1572,4.892,1573,4.892,1574,4.892,1575,4.892,1576,4.892,1577,4.892,1578,4.892,1579,4.892,1580,4.892,1581,4.892,1582,4.892,1583,4.892,1584,4.892,1585,4.892]],["title/modules.html",[201,2.563]],["body/modules.html",[14,0.01,32,0.008,33,0.01,34,0.008,200,4.089,201,2.56,211,3.809,212,3.809,213,3.809,214,3.809,215,3.809,216,3.809,217,3.809,218,3.378,900,4.438,1031,6.499,1451,7.163,1586,8.201,1587,8.201,1588,8.394,1589,7.44]],["title/overview.html",[1590,4.912]],["body/overview.html",[2,1.918,14,0.012,32,0.005,33,0.008,34,0.005,50,0.827,189,1.561,193,3.857,199,1.179,200,6.042,201,1.688,202,1.918,203,2.112,204,2.112,205,1.918,206,2.01,207,1.918,208,3.234,209,3.234,210,3.234,211,5.63,212,4.707,213,4.108,214,4.885,215,5.02,216,5.213,217,4.108,218,4.331,219,2.981,220,2.01,221,1.918,257,1.622,316,4.546,325,3.572,327,4.222,400,2.511,407,4.108,424,3.234,426,3.234,427,3.234,428,4.108,429,4.108,430,4.108,431,3.857,540,2.926,631,4.222,751,4.409,771,3.234,772,3.234,891,5.02,998,3.234,999,3.234,1089,3.857,1097,3.234,1099,3.234,1134,3.234,1135,3.234,1136,3.234,1288,3.234,1289,3.234,1590,3.234,1591,3.234,1592,3.703,1593,3.703,1594,3.234,1595,3.234]],["title/miscellaneous/typealiases.html",[1412,1.957,1596,4.95]],["body/miscellaneous/typealiases.html",[9,0.538,13,0.639,14,0.012,32,0.008,33,0.01,34,0.008,87,4.473,91,1.103,94,4.473,123,5.55,161,2.878,614,5.112,1412,3.313,1597,5.808,1598,7.024,1599,8.331,1600,7.024,1601,7.024,1602,7.024,1603,7.024,1604,5.808,1605,7.024]],["title/miscellaneous/variables.html",[1412,1.957,1606,4.324]],["body/miscellaneous/variables.html",[9,0.218,13,0.669,14,0.013,16,2.778,17,2.601,18,3.776,21,1.672,26,1.685,32,0.003,33,0.005,34,0.003,55,0.83,59,2.24,71,2.24,77,0.936,91,1.208,147,0.994,161,1.168,179,2.059,180,1.119,197,2.069,199,1.186,222,1.862,235,3.65,240,1.458,241,2.712,242,2.059,243,2.059,244,2.469,245,2.059,246,2.059,247,2.059,248,2.059,249,2.24,250,2.059,251,2.944,252,2.944,253,2.944,254,2.944,255,3.269,296,1.119,308,1.599,347,1.074,366,1.417,400,1.599,443,2.942,445,2.778,449,1.599,486,2.944,492,2.944,584,1.93,588,3.148,642,3.133,735,2.712,797,1.93,816,1.716,820,2.527,821,2.712,831,1.599,832,1.599,839,1.417,842,1.344,844,1.501,901,1.862,902,3.65,903,2.059,905,2.944,906,2.944,907,2.059,908,2.059,909,2.059,910,2.059,911,2.059,914,2.944,1076,2.712,1137,1.862,1140,2.944,1141,2.059,1142,2.059,1205,1.862,1207,2.944,1208,2.059,1209,2.059,1290,1.862,1292,2.944,1293,2.059,1294,2.059,1311,2.059,1312,3.254,1325,1.862,1326,2.059,1327,3.254,1331,2.059,1332,2.944,1333,3.254,1334,3.254,1335,2.059,1336,3.254,1338,2.059,1343,2.059,1344,4.035,1345,4.585,1346,3.254,1347,2.059,1348,3.254,1349,2.059,1412,1.344,1423,2.059,1484,2.059,1591,2.059,1594,5.764,1595,2.059,1606,2.059,1607,2.357,1608,4.619,1609,2.357,1610,2.357,1611,2.357,1612,3.726,1613,3.726,1614,3.726,1615,2.357,1616,2.357,1617,2.357,1618,2.357,1619,3.726,1620,2.357,1621,4.619,1622,4.619,1623,3.726,1624,3.726,1625,2.357,1626,2.357,1627,2.357,1628,2.357,1629,2.357,1630,2.357,1631,2.357,1632,2.357,1633,2.357,1634,2.357,1635,2.357,1636,2.357,1637,2.357,1638,2.357,1639,2.357,1640,2.357,1641,2.357,1642,2.357,1643,2.357,1644,2.357,1645,3.726,1646,2.357,1647,2.357,1648,2.357,1649,2.357,1650,2.357,1651,2.357,1652,2.357,1653,2.357,1654,2.357,1655,2.357,1656,5.717,1657,2.357,1658,2.357,1659,2.357,1660,2.357,1661,2.357,1662,2.357,1663,2.357,1664,5.717,1665,2.357,1666,2.357,1667,2.357,1668,2.357,1669,2.357,1670,2.357,1671,2.357,1672,2.357,1673,2.357,1674,2.357,1675,2.357,1676,2.357,1677,2.357,1678,2.357,1679,2.357,1680,2.357,1681,2.357,1682,2.357,1683,2.357,1684,2.357,1685,2.357,1686,2.357,1687,2.357]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":844,"title":{},"body":{"classes/Course.html":{},"classes/PagedReqDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.1",{"_index":1364,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1371,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1366,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1308,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1337,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1310,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1342,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1306,"title":{},"body":{"coverage.html":{}}}],["0/26",{"_index":1317,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1319,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1314,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1313,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1322,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1324,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1309,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1323,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":35,"title":{"interfaces/AbstractControllerOptions-1.html":{}},"body":{"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["1.0.0",{"_index":1400,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["1.8.10",{"_index":1362,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1050,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["12",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1592,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1315,"title":{},"body":{"coverage.html":{}}}],["17.1.1",{"_index":1358,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":1594,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1320,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":1523,"title":{},"body":{"license.html":{}}}],["21",{"_index":1339,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":376,"title":{},"body":{"controllers/AuthController.html":{}}}],["3",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":1375,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["3.23.0",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1340,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1321,"title":{},"body":{"coverage.html":{}}}],["3/16",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1316,"title":{},"body":{"coverage.html":{}}}],["3/24",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":1593,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1399,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["4.5.10",{"_index":1372,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1373,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["5.9.18",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.8",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":375,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["60000",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":1591,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["7.0.0",{"_index":1368,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":1367,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1365,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.5.1",{"_index":1394,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1595,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":623,"title":{},"body":{"classes/BaseEntity.html":{}}}],["_${propertykey",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":704,"title":{},"body":{"injectables/BaseService.html":{}}}],["abortearly",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":1463,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstract",{"_index":53,"title":{},"body":{"classes/AbstractService.html":{}}}],["abstractcontrolleroptions",{"_index":1,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithauthoptions",{"_index":24,"title":{"interfaces/AbstractControllerWithAuthOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithswagger",{"_index":867,"title":{},"body":{"controllers/CoursesController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcontrollerwithswagger(options",{"_index":1425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractcontrollerwithswaggeroptions",{"_index":27,"title":{"interfaces/AbstractControllerWithSwaggerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcrudcontroller",{"_index":743,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["abstractcrudcontroller(options",{"_index":1426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["abstractdocument",{"_index":1598,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["abstractservice",{"_index":49,"title":{"classes/AbstractService.html":{}},"body":{"classes/AbstractService.html":{},"coverage.html":{}}}],["access",{"_index":945,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["accessors",{"_index":586,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/CurrentUserService.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["account",{"_index":1035,"title":{},"body":{"injectables/MailService.html":{}}}],["acctverifydto",{"_index":129,"title":{"classes/AcctVerifyDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["achieving",{"_index":1460,"title":{},"body":{"index.html":{}}}],["action",{"_index":1579,"title":{},"body":{"license.html":{}}}],["activate",{"_index":582,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["addons/in",{"_index":1360,"title":{},"body":{"dependencies.html":{}}}],["admin",{"_index":1252,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1597,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":358,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["amazing",{"_index":1467,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1546,"title":{},"body":{"license.html":{}}}],["anyparamconstructor",{"_index":679,"title":{},"body":{"injectables/BaseService.html":{}}}],["api_auth_enabled",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":1023,"title":{},"body":{"injectables/MailService.html":{}}}],["api_key_mailgun",{"_index":909,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":742,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["apiconflictresponse",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception",{"_index":148,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TracksController.html":{},"coverage.html":{}}}],["apiexception})@apiresponse({status",{"_index":740,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["apiexception})@apiresponse({type",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(authenticationguard",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiokresponse",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":163,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({enum",{"_index":1270,"title":{},"body":{"classes/UserDto.html":{}}}],["apiresponse",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["apiswaggeroperation",{"_index":1334,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('categories",{"_index":760,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["apitags('tracks",{"_index":1199,"title":{},"body":{"controllers/TracksController.html":{}}}],["apitags('users",{"_index":1284,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":194,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_email",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":188,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appemail",{"_index":812,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["applicable",{"_index":1489,"title":{},"body":{"index.html":{}}}],["application",{"_index":1472,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":200,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":193,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectural",{"_index":1477,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":920,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":1583,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1517,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1532,"title":{},"body":{"license.html":{}}}],["async",{"_index":55,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/TempTokensService.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":18,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"controllers/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":436,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":145,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["auth.guard",{"_index":750,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":949,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":975,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["auth.guard.ts:7",{"_index":950,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":749,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["auth/models/dto/auth.dto",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_guard_type",{"_index":1327,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":263,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1336,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":329,"title":{"guards/AuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["autherrors",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherrors.expired_token",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_login_attempt",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_token",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["autheventenum",{"_index":418,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["authguard",{"_index":951,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":952,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":976,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authhandler",{"_index":407,"title":{"injectables/AuthHandler.html":{}},"body":{"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodule",{"_index":211,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobj",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1572,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":327,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authservice.validateuser(username",{"_index":994,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["available",{"_index":1031,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["await",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/DbTest.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["basedto",{"_index":561,"title":{"classes/BaseDto.html":{}},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["basedto:12",{"_index":806,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:15",{"_index":804,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:9",{"_index":805,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["baseentity",{"_index":126,"title":{"classes/BaseEntity.html":{}},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"modules/SharedModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentity.modelname",{"_index":1141,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["baseentity.schema",{"_index":1142,"title":{},"body":{"modules/SharedModule.html":{},"miscellaneous/variables.html":{}}}],["baseentity:12",{"_index":790,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:14",{"_index":785,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:16",{"_index":792,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:18",{"_index":789,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:20",{"_index":787,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:22",{"_index":786,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:24",{"_index":784,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:26",{"_index":791,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:44",{"_index":795,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:53",{"_index":796,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:62",{"_index":794,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:71",{"_index":793,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:9",{"_index":788,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["basemodel",{"_index":1140,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseservice",{"_index":631,"title":{"injectables/BaseService.html":{}},"body":{"injectables/BaseService.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["baseservice.throwmongoerror(e",{"_index":701,"title":{},"body":{"injectables/BaseService.html":{}}}],["baseservice:105",{"_index":1153,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:112",{"_index":1154,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:120",{"_index":1158,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:124",{"_index":1162,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:129",{"_index":1163,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:137",{"_index":1159,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:140",{"_index":1164,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:149",{"_index":1165,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:157",{"_index":1168,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:169",{"_index":1169,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:177",{"_index":1148,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:182",{"_index":1149,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:25",{"_index":1171,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:26",{"_index":1170,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:35",{"_index":1166,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:39",{"_index":1167,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:47",{"_index":1150,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:50",{"_index":1157,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:54",{"_index":1160,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:58",{"_index":1161,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:66",{"_index":1151,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:83",{"_index":1152,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:91",{"_index":1155,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["baseservice:96",{"_index":1156,"title":{},"body":{"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["bcrypt",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(plaintoken",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pw",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(plaintoken",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearerauthname",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/LocalAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RoleGuard.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1508,"title":{},"body":{"index.html":{}}}],["bring",{"_index":1465,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1588,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1586,"title":{},"body":{"modules.html":{}}}],["buildschema",{"_index":611,"title":{},"body":{"classes/BaseEntity.html":{}}}],["buildschema(this",{"_index":617,"title":{},"body":{"classes/BaseEntity.html":{}}}],["built",{"_index":1470,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1374,"title":{},"body":{"dependencies.html":{}}}],["business",{"_index":420,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["c",{"_index":31,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"license.html":{}}}],["cache",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":542,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"guards/RoleGuard.html":{}}}],["canactivate(context",{"_index":546,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"guards/RoleGuard.html":{}}}],["canlogin",{"_index":364,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["career",{"_index":1455,"title":{},"body":{"index.html":{}}}],["catch",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/HttpExceptionFilter.html":{},"classes/User.html":{}}}],["catch(error",{"_index":919,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":925,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories",{"_index":734,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["categories.controller",{"_index":774,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":752,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":732,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":212,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["category",{"_index":753,"title":{"classes/Category.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{}}}],["category.dto",{"_index":758,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryResDto.html":{}}}],["category.dto.ts",{"_index":874,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["category.modelname",{"_index":775,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["category.schema",{"_index":776,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categorydto",{"_index":755,"title":{"classes/CategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["categoryservice",{"_index":751,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{},"overview.html":{}}}],["ccn",{"_index":262,"title":{},"body":{"injectables/AppService.html":{}}}],["charge",{"_index":1528,"title":{},"body":{"license.html":{}}}],["check",{"_index":1494,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1575,"title":{},"body":{"license.html":{}}}],["clan",{"_index":1431,"title":{},"body":{"index.html":{}}}],["class",{"_index":48,"title":{"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}},"body":{"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":50,"title":{},"body":{"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"overview.html":{}}}],["classtype",{"_index":1600,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["click",{"_index":1479,"title":{},"body":{"index.html":{}}}],["client",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["client({transport",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["clientbaseurl",{"_index":132,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["clientredis",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["cluster_appmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":424,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":426,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":425,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":427,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":771,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":772,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":998,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":999,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1000,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_profilemodule",{"_index":1097,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1098,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":1099,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":1134,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":1135,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":1136,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1288,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1289,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1430,"title":{},"body":{"index.html":{}}}],["codeclannigeria",{"_index":1490,"title":{},"body":{"index.html":{}}}],["codeclannigeria.dev",{"_index":1456,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1454,"title":{},"body":{"index.html":{}}}],["columnsize",{"_index":797,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsize.length128",{"_index":848,"title":{},"body":{"classes/Course.html":{},"classes/Track.html":{}}}],["columnsize.length256",{"_index":849,"title":{},"body":{"classes/Course.html":{}}}],["columnsize.length32",{"_index":800,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Track.html":{}}}],["columnsize.length64",{"_index":1257,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":1475,"title":{},"body":{"index.html":{}}}],["community",{"_index":1435,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1476,"title":{},"body":{"index.html":{}}}],["compression",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["comprised",{"_index":1436,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1493,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1554,"title":{},"body":{"license.html":{}}}],["config",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":174,"title":{},"body":{"classes/ApiException.html":{}}}],["configmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":173,"title":{"interfaces/Configuration.html":{}},"body":{"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["configuration().appemail",{"_index":388,"title":{},"body":{"controllers/AuthController.html":{}}}],["configuration().environment",{"_index":178,"title":{},"body":{"classes/ApiException.html":{}}}],["configuration().isauthenabled",{"_index":556,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{}}}],["configuration().jwtsecret",{"_index":972,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":385,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["confirmation",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmed",{"_index":371,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail",{"_index":1222,"title":{},"body":{"classes/User.html":{}}}],["conflictexception",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["conflictexception('email",{"_index":370,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('track",{"_index":1204,"title":{},"body":{"controllers/TracksController.html":{}}}],["conflictexception('user",{"_index":357,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception(`${input.name",{"_index":769,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["connect",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["connection",{"_index":1584,"title":{},"body":{"license.html":{}}}],["console.log(context.switchtohttp().getrequest().sessionid",{"_index":953,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["const",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/SharedModule.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":159,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["constructor(@optional",{"_index":899,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["constructor(authservice",{"_index":544,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(entity",{"_index":639,"title":{},"body":{"injectables/BaseService.html":{}}}],["constructor(message",{"_index":160,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(moduleref",{"_index":979,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":195,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthenticationGuard.html":{},"controllers/CategoriesController.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"controllers/TracksController.html":{}}}],["constructor(protected",{"_index":1286,"title":{},"body":{"controllers/UsersController.html":{}}}],["constructor(req",{"_index":895,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["constructor(tokenentity",{"_index":1145,"title":{},"body":{"injectables/TempTokensService.html":{}}}],["constructor(userentity",{"_index":1211,"title":{},"body":{"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["constructor(usersservice",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["context",{"_index":549,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"guards/RoleGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":554,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["contextid",{"_index":989,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contextidfactory",{"_index":985,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contextidfactory.getbyrequest(request",{"_index":990,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["contract",{"_index":1580,"title":{},"body":{"license.html":{}}}],["controller",{"_index":7,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CoursesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CoursesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('categories",{"_index":759,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('courses",{"_index":870,"title":{},"body":{"controllers/CoursesController.html":{}}}],["controller('profile",{"_index":1091,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller('tracks",{"_index":1198,"title":{},"body":{"controllers/TracksController.html":{}}}],["controller('users",{"_index":1285,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllername",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.indexof('controller",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.substr",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":189,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":1548,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1531,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1522,"title":{},"body":{"license.html":{}}}],["count",{"_index":54,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["count(filter",{"_index":73,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["countasync",{"_index":56,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["countasync(filter",{"_index":82,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["course",{"_index":837,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"controllers/CoursesController.html":{},"coverage.html":{}}}],["course.dto",{"_index":865,"title":{},"body":{"controllers/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseResDto.html":{}}}],["course.dto.ts",{"_index":877,"title":{},"body":{"classes/CreateCourseDto.html":{},"classes/PagedCourseResDto.html":{},"coverage.html":{}}}],["coursedto",{"_index":850,"title":{"classes/CourseDto.html":{}},"body":{"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseResDto.html":{},"coverage.html":{}}}],["courses",{"_index":862,"title":{},"body":{"controllers/CoursesController.html":{}}}],["courses.controller",{"_index":872,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses/courses.module",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["coursescontroller",{"_index":860,"title":{"controllers/CoursesController.html":{}},"body":{"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["coursesmodule",{"_index":213,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":1302,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":735,"title":{},"body":{"controllers/CategoriesController.html":{},"interfaces/DefaultAuthObject.html":{},"controllers/TracksController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":766,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["create(input",{"_index":736,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["createcategorydto",{"_index":737,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcoursedto",{"_index":863,"title":{"classes/CreateCourseDto.html":{}},"body":{"controllers/CoursesController.html":{},"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["created",{"_index":1447,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":564,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["createdby",{"_index":576,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["createdto",{"_index":38,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["createentity",{"_index":635,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["createentity(doc",{"_index":645,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["createquery",{"_index":682,"title":{},"body":{"injectables/BaseService.html":{}}}],["createtrackdto",{"_index":879,"title":{"classes/CreateTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"controllers/TracksController.html":{},"coverage.html":{}}}],["createtransport",{"_index":1005,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":885,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["crypto",{"_index":1248,"title":{},"body":{"classes/User.html":{}}}],["ctx",{"_index":926,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":930,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":929,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":1501,"title":{},"body":{"index.html":{}}}],["currentuser",{"_index":894,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["currentuserservice",{"_index":891,"title":{"injectables/CurrentUserService.html":{}},"body":{"injectables/CurrentUserService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["customname",{"_index":1077,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["damages",{"_index":1576,"title":{},"body":{"license.html":{}}}],["data",{"_index":414,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["database",{"_index":249,"title":{"interfaces/Database.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_host",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["date().gettime",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().toisostring",{"_index":184,"title":{},"body":{"classes/ApiException.html":{}}}],["date(date.now",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(new",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{}}}],["db",{"_index":1361,"title":{},"body":{"dependencies.html":{}}}],["dbfactory",{"_index":906,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbtest",{"_index":900,"title":{"modules/DbTest.html":{}},"body":{"modules/DbTest.html":{},"modules.html":{}}}],["deactivate",{"_index":583,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deal",{"_index":1534,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1585,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator(target",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":135,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["default",{"_index":17,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthobj",{"_index":1345,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultauthobject",{"_index":16,"title":{"interfaces/DefaultAuthObject.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":448,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":74,"title":{},"body":{"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["delete",{"_index":584,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/Course.html":{},"interfaces/DefaultAuthObject.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedat",{"_index":577,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deletedby",{"_index":578,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deleteresulttype",{"_index":1601,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":202,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":839,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":1123,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(user",{"_index":1125,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["desire",{"_index":1448,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1507,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1441,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1442,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1544,"title":{},"body":{"license.html":{}}}],["doc",{"_index":22,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["documentation",{"_index":1303,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentquery",{"_index":1605,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":123,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"miscellaneous/typealiases.html":{}}}],["domain",{"_index":822,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{}}}],["done",{"_index":1126,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":1132,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["e",{"_index":692,"title":{},"body":{"injectables/BaseService.html":{},"classes/User.html":{}}}],["email",{"_index":147,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"injectables/ProfileService.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email')@httpcode(httpstatus.ok",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["email_token",{"_index":1180,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["emailparamname",{"_index":133,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["enableimplicitconversion",{"_index":1096,"title":{},"body":{"controllers/ProfileController.html":{}}}],["encryptedtoken",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1440,"title":{},"body":{"index.html":{}}}],["engineers",{"_index":1443,"title":{},"body":{"index.html":{}}}],["enrollmentcount",{"_index":840,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{}}}],["entity",{"_index":39,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"classes/AbstractService.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"injectables/TempTokensService.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"controllers/UsersController.html":{},"classes/UsersService.html":{}}}],["entitydto",{"_index":40,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["enum",{"_index":1178,"title":{},"body":{"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["enumerations",{"_index":1413,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":813,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["envvalidation",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":667,"title":{},"body":{"injectables/BaseService.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["err.errmsg",{"_index":690,"title":{},"body":{"injectables/BaseService.html":{}}}],["error",{"_index":151,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":1127,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error.getstatus",{"_index":931,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.name",{"_index":937,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response",{"_index":942,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.error",{"_index":936,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.errors",{"_index":938,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.message",{"_index":943,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.name",{"_index":935,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.stack",{"_index":933,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorname",{"_index":934,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":152,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["errors/api",{"_index":924,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ethereal",{"_index":1034,"title":{},"body":{"injectables/MailService.html":{}}}],["event",{"_index":1571,"title":{},"body":{"license.html":{}}}],["eventpattern",{"_index":416,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["eventpattern(autheventenum.userregistered",{"_index":412,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["exception",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TracksController.html":{}}}],["exception.filter.ts",{"_index":917,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":921,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.ts",{"_index":150,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["exception.ts:10",{"_index":166,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:12",{"_index":168,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:14",{"_index":164,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:16",{"_index":165,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:18",{"_index":170,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:20",{"_index":167,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:22",{"_index":162,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:8",{"_index":169,"title":{},"body":{"classes/ApiException.html":{}}}],["exceptionfilter",{"_index":918,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":1247,"title":{},"body":{"classes/User.html":{}}}],["excludeextraneousvalues",{"_index":1095,"title":{},"body":{"controllers/ProfileController.html":{}}}],["executioncontext",{"_index":547,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"guards/RoleGuard.html":{}}}],["exist",{"_index":354,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["exist.id",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.token",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":359,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["expandvariables",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["expireafterseconds",{"_index":1079,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expireat",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["expired",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired_token",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinmins",{"_index":374,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["exports",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":571,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@apiproperty",{"_index":566,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@apiproperty()@isemail()@maxlength(columnsize.length64",{"_index":1265,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@ismongoid()@apiproperty",{"_index":568,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length128)@apiproperty",{"_index":852,"title":{},"body":{"classes/CourseDto.html":{},"classes/TrackDto.html":{}}}],["expose()@maxlength(columnsize.length32)@apiproperty()@isalphanumeric",{"_index":802,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{}}}],["expose()@maxlength(columnsize.length64)@apiproperty",{"_index":1267,"title":{},"body":{"classes/UserDto.html":{}}}],["express",{"_index":553,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["extractjwt",{"_index":963,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":969,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["failedsigninattempts",{"_index":1218,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false').default('true",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":1510,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1480,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["files",{"_index":1533,"title":{},"body":{"license.html":{}}}],["filter",{"_index":79,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["filter.hasownproperty('id",{"_index":702,"title":{},"body":{"injectables/BaseService.html":{}}}],["filter['id",{"_index":706,"title":{},"body":{"injectables/BaseService.html":{}}}],["find",{"_index":914,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":57,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findall(filter",{"_index":85,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findallasync",{"_index":58,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findallasync(filter",{"_index":88,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findbyid",{"_index":59,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"miscellaneous/variables.html":{}}}],["findbyid(baseservice.toobjectid(id",{"_index":716,"title":{},"body":{"injectables/BaseService.html":{}}}],["findbyid(id",{"_index":90,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findbyidandupdate(baseservice.toobjectid(id",{"_index":724,"title":{},"body":{"injectables/BaseService.html":{}}}],["findbyidasync",{"_index":60,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findbyidasync(id",{"_index":95,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findone",{"_index":61,"title":{},"body":{"classes/AbstractService.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findone(filter",{"_index":97,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findoneasync",{"_index":62,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["findoneasync(filter",{"_index":99,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["firstname",{"_index":1219,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["fitness",{"_index":1567,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1487,"title":{},"body":{"index.html":{}}}],["following",{"_index":1553,"title":{},"body":{"license.html":{}}}],["forbiddenexception('invalid",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":1491,"title":{},"body":{"index.html":{}}}],["fortune",{"_index":1524,"title":{},"body":{"license.html":{}}}],["free",{"_index":1481,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":1439,"title":{},"body":{"index.html":{}}}],["full",{"_index":1241,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fullname",{"_index":1224,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":1129,"title":{},"body":{"injectables/SessionSerializer.html":{},"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":1420,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1551,"title":{},"body":{"license.html":{}}}],["future",{"_index":1437,"title":{},"body":{"index.html":{}}}],["generaterandomtoken",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterandomtoken(64",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken(undefined",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth",{"_index":1085,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getauthobj",{"_index":1346,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcurrentuser",{"_index":897,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["getfullname",{"_index":1238,"title":{},"body":{"classes/User.html":{}}}],["gethello",{"_index":191,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":1242,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass",{"_index":1245,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass(this",{"_index":1263,"title":{},"body":{"classes/User.html":{}}}],["getmodelname",{"_index":609,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getprofile",{"_index":1083,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":1092,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(req",{"_index":1084,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofileasync",{"_index":1103,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getprofileasync(email",{"_index":1105,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getschema",{"_index":607,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getters",{"_index":619,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getting",{"_index":1428,"title":{"index.html":{},"license.html":{}},"body":{}}],["getuserid",{"_index":636,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["getwelcome",{"_index":259,"title":{},"body":{"injectables/AppService.html":{}}}],["global",{"_index":1138,"title":{},"body":{"modules/SharedModule.html":{}}}],["goal",{"_index":1461,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1527,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1589,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":539,"title":{"guards/AuthenticationGuard.html":{},"guards/RoleGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":540,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["handler",{"_index":423,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handlers/auth.handler",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{}}}],["handleuserregistered",{"_index":409,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["handleuserregistered(data",{"_index":410,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["hapi/joi",{"_index":1357,"title":{},"body":{"dependencies.html":{}}}],["harddelete",{"_index":63,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["harddelete(filter",{"_index":101,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["harddeletebyid",{"_index":64,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["harddeletebyid(id",{"_index":103,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["hash",{"_index":1246,"title":{},"body":{"classes/User.html":{}}}],["hash(this.password",{"_index":1255,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":382,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":386,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1526,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1573,"title":{},"body":{"license.html":{}}}],["host",{"_index":819,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Mailer.html":{}}}],["host.switchtohttp",{"_index":927,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":381,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":922,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":915,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ethereal.email/message/waqkmgkddxqdoou",{"_index":1038,"title":{},"body":{"injectables/MailService.html":{}}}],["httpstatus",{"_index":171,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/TracksController.html":{}}}],["httpstatus.bad_request",{"_index":765,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["httpstatus.created",{"_index":352,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["httpstatus.forbidden",{"_index":764,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["httpstatus.unauthorized",{"_index":940,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpstatus[statuscode",{"_index":187,"title":{},"body":{"classes/ApiException.html":{}}}],["id",{"_index":93,"title":{},"body":{"classes/AbstractService.html":{},"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{}}}],["identifier",{"_index":1304,"title":{},"body":{"coverage.html":{}}}],["idtype",{"_index":1602,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ignoreexpiration",{"_index":970,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"guards/RoleGuard.html":{}}}],["implied",{"_index":1563,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["imports",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["in.dto.ts",{"_index":1046,"title":{},"body":{"classes/PagedReqDto.html":{},"coverage.html":{}}}],["in.dto.ts:10",{"_index":1056,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["in.dto.ts:13",{"_index":1054,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["in.dto.ts:5",{"_index":1057,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["in.dto.ts:7",{"_index":1052,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["included",{"_index":1557,"title":{},"body":{"license.html":{}}}],["including",{"_index":1537,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["info.messageid",{"_index":1029,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":783,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{}}}],["inject",{"_index":675,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{}}}],["inject(request",{"_index":686,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{}}}],["injectable",{"_index":256,"title":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"coverage.html":{}}}],["injectables",{"_index":257,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"overview.html":{}}}],["injectmodel",{"_index":684,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["injectmodel(baseentity.modelname",{"_index":687,"title":{},"body":{"injectables/BaseService.html":{}}}],["injectmodel(temporarytoken.modelname",{"_index":1172,"title":{},"body":{"injectables/TempTokensService.html":{}}}],["injectmodel(track.modelname",{"_index":1215,"title":{},"body":{"classes/TracksService.html":{}}}],["injectmodel(user.modelname",{"_index":1298,"title":{},"body":{"classes/UsersService.html":{}}}],["innovators",{"_index":1438,"title":{},"body":{"index.html":{}}}],["input",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["input.email",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.name",{"_index":768,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["input.password",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.title",{"_index":1203,"title":{},"body":{"controllers/TracksController.html":{}}}],["insert",{"_index":65,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["insert(entity",{"_index":105,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["insertasync",{"_index":66,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["insertasync(entity",{"_index":107,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["interface.ts",{"_index":37,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":676,"title":{},"body":{"injectables/BaseService.html":{},"classes/User.html":{}}}],["internalservererrorexception(e",{"_index":1256,"title":{},"body":{"classes/User.html":{}}}],["internalservererrorexception(err",{"_index":689,"title":{},"body":{"injectables/BaseService.html":{}}}],["invalid_login_attempt",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_token",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isactive",{"_index":579,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isalphanumeric",{"_index":807,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{}}}],["isauthenable",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isauthenabled",{"_index":814,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["isdeleted",{"_index":580,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isemail",{"_index":1273,"title":{},"body":{"classes/UserDto.html":{}}}],["isemailverified",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["isenum",{"_index":1274,"title":{},"body":{"classes/UserDto.html":{}}}],["isenum(userrole",{"_index":1277,"title":{},"body":{"classes/UserDto.html":{}}}],["isglobal",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isjson",{"_index":1058,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["isjson()@isoptional",{"_index":1053,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["ismongoid",{"_index":573,"title":{},"body":{"classes/BaseDto.html":{}}}],["isnotempty",{"_index":138,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{}}}],["isoptional",{"_index":1051,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["isoptional()@isjson",{"_index":1055,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["issue",{"_index":1497,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1495,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":136,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CourseDto.html":{}}}],["isurl()@maxlength(columnsize.length256",{"_index":855,"title":{},"body":{"classes/CourseDto.html":{}}}],["isvalid",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalAuthGuard.html":{}}}],["isvalidpassword",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["item",{"_index":118,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["item).exec",{"_index":729,"title":{},"body":{"injectables/BaseService.html":{}}}],["joi.number().default(27017",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().default('redis://localhost:6379",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().required",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('true",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1515,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt",{"_index":449,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign(payload",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_secret",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_validity_hours",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":748,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":1312,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtfromrequest",{"_index":968,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtpayload",{"_index":489,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["jwtstrategy",{"_index":428,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidityhrs",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["key",{"_index":821,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1562,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":1220,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["legend",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length1024",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length128",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length16",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length256",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length32",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length512",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length64",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length8",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":1503,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1577,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1574,"title":{},"body":{"license.html":{}}}],["license",{"_index":1520,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":1047,"title":{},"body":{"classes/PagedReqDto.html":{},"dependencies.html":{}}}],["limitation",{"_index":1538,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1564,"title":{},"body":{"license.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{}}}],["local",{"_index":986,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{},"index.html":{}}}],["localauthguard",{"_index":973,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":429,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lockoutenddate",{"_index":1221,"title":{},"body":{"classes/User.html":{}}}],["logger",{"_index":415,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{}}}],["logger.debug(`message",{"_index":1027,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`preview",{"_index":1036,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(data",{"_index":422,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["logger.error(e",{"_index":700,"title":{},"body":{"injectables/BaseService.html":{}}}],["logger.error(error",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger.log(user",{"_index":1133,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["logic",{"_index":421,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["login",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(email",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(input",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginreqdto",{"_index":144,"title":{"classes/LoginReqDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["loginresdto",{"_index":333,"title":{"classes/LoginResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["loginresdto})@apiunauthorizedresponse({type",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":1225,"title":{},"body":{"classes/User.html":{}}}],["mail",{"_index":1014,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.options",{"_index":1010,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":1002,"title":{},"body":{"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["mail/mail.service",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["mailer",{"_index":815,"title":{"interfaces/Mailer.html":{}},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["mailer.domain",{"_index":1025,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer.key",{"_index":1024,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer_api_key",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain_mailgun",{"_index":910,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mailgun",{"_index":1017,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["mailmodule",{"_index":214,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":1012,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":316,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["make",{"_index":1505,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":1500,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":778,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128",{"_index":858,"title":{},"body":{"classes/CourseDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length256",{"_index":859,"title":{},"body":{"classes/CourseDto.html":{}}}],["maxlength(columnsize.length32",{"_index":810,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length64",{"_index":1276,"title":{},"body":{"classes/UserDto.html":{}}}],["measures",{"_index":1458,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":629,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["members",{"_index":1469,"title":{},"body":{"index.html":{}}}],["memory",{"_index":904,"title":{},"body":{"modules/DbTest.html":{},"dependencies.html":{}}}],["mentee",{"_index":1250,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentor",{"_index":1251,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":1566,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1542,"title":{},"body":{"license.html":{}}}],["message",{"_index":153,"title":{},"body":{"classes/ApiException.html":{}}}],["metadata",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":52,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{}}}],["mg",{"_index":1016,"title":{},"body":{"injectables/MailService.html":{}}}],["minlength",{"_index":1110,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["minlength(6",{"_index":1108,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["miscellaneous",{"_index":1412,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1521,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1471,"title":{},"body":{"index.html":{}}}],["model",{"_index":11,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/CoursesController.html":{},"classes/User.html":{}}}],["modelcreate",{"_index":30,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/CoursesController.html":{}}}],["modelname",{"_index":587,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modeloptions",{"_index":1074,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["models/auth.enums",{"_index":419,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{}}}],["models/base.entity",{"_index":127,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"modules/SharedModule.html":{}}}],["models/category.entity",{"_index":754,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["models/course.entity",{"_index":869,"title":{},"body":{"controllers/CoursesController.html":{}}}],["models/dto/acct",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/auth.dto",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["models/dto/category.dto",{"_index":756,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["models/dto/create",{"_index":757,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["models/dto/reset",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/tack.dto",{"_index":1194,"title":{},"body":{"controllers/TracksController.html":{}}}],["models/dto/user.dto",{"_index":1281,"title":{},"body":{"controllers/UsersController.html":{}}}],["models/dto/validate",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dtos/course.dto",{"_index":866,"title":{},"body":{"controllers/CoursesController.html":{}}}],["models/dtos/create",{"_index":864,"title":{},"body":{"controllers/CoursesController.html":{}}}],["models/jwt",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["models/temporary",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/TempTokensService.html":{}}}],["models/track.entity",{"_index":1195,"title":{},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{}}}],["models/user.entity",{"_index":1282,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{}}}],["modelvm",{"_index":28,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/CoursesController.html":{}}}],["modify",{"_index":1541,"title":{},"body":{"license.html":{}}}],["module",{"_index":199,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["moduleref",{"_index":980,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["modules",{"_index":201,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["mongod",{"_index":905,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongod.geturi",{"_index":911,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongodb",{"_index":681,"title":{},"body":{"injectables/BaseService.html":{},"modules/DbTest.html":{}}}],["mongodb_uri",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoerror",{"_index":665,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["mongomemoryserver",{"_index":903,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":125,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":443,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forroot(configuration().database.uri",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forrootasync",{"_index":907,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1514,"title":{},"body":{"index.html":{}}}],["name",{"_index":77,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/CreateCategoryDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ne",{"_index":707,"title":{},"body":{"injectables/BaseService.html":{}}}],["ne(true",{"_index":718,"title":{},"body":{"injectables/BaseService.html":{}}}],["needs",{"_index":1498,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":1359,"title":{},"body":{"dependencies.html":{}}}],["nestjs/bull",{"_index":1363,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":172,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":678,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":417,"title":{},"body":{"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/BaseService.html":{},"modules/CategoriesModule.html":{},"modules/DbTest.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1369,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":1370,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":142,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/BaseDto.html":{},"controllers/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["new",{"_index":21,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":402,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{}}}],["nigeria",{"_index":1432,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":1015,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":1022,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":1037,"title":{},"body":{"injectables/MailService.html":{}}}],["noninfringement",{"_index":1570,"title":{},"body":{"license.html":{}}}],["note",{"_index":1488,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception('token",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception('user",{"_index":368,"title":{},"body":{"controllers/AuthController.html":{}}}],["notice",{"_index":1555,"title":{},"body":{"license.html":{}}}],["null",{"_index":180,"title":{},"body":{"classes/ApiException.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/Course.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":161,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["obj.util.ts",{"_index":1344,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":642,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"miscellaneous/variables.html":{}}}],["object.defineproperty",{"_index":703,"title":{},"body":{"injectables/BaseService.html":{}}}],["object.getownpropertydescriptor(filter",{"_index":705,"title":{},"body":{"injectables/BaseService.html":{}}}],["object.interface",{"_index":19,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["object.interface.ts",{"_index":913,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["observable",{"_index":1119,"title":{},"body":{"guards/RoleGuard.html":{}}}],["obtaining",{"_index":1530,"title":{},"body":{"license.html":{}}}],["ochi",{"_index":1525,"title":{},"body":{"license.html":{}}}],["official",{"_index":1433,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":888,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["omittype(userdto",{"_index":890,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["ongoing",{"_index":1450,"title":{},"body":{"index.html":{}}}],["onmoduleinit",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["operation.decorator.ts",{"_index":1333,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationid",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":78,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"injectables/CurrentUserService.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optional()@inject(request",{"_index":673,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["options",{"_index":1076,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["opts",{"_index":648,"title":{},"body":{"injectables/BaseService.html":{},"classes/PagedReqDto.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["opts).where(whereclause",{"_index":712,"title":{},"body":{"injectables/BaseService.html":{}}}],["otherwise",{"_index":1582,"title":{},"body":{"license.html":{}}}],["out",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["out.dto",{"_index":747,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["out.dto.ts",{"_index":1341,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["overview",{"_index":1590,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1356,"title":{"dependencies.html":{}},"body":{}}],["pagedcategoryresdto",{"_index":1039,"title":{"classes/PagedCategoryResDto.html":{}},"body":{"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["pagedcourseresdto",{"_index":1041,"title":{"classes/PagedCourseResDto.html":{}},"body":{"classes/PagedCourseResDto.html":{},"coverage.html":{}}}],["pagedoutdto",{"_index":745,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pagedoutdto(categorydto",{"_index":762,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/PagedCategoryResDto.html":{}}}],["pagedoutdto(coursedto",{"_index":1043,"title":{},"body":{"classes/PagedCourseResDto.html":{}}}],["pagedoutdto(entitydto",{"_index":1427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pagedoutdto(trackdto",{"_index":1061,"title":{},"body":{"classes/PagedTrackResDto.html":{},"controllers/TracksController.html":{}}}],["pagedoutdto(userdto",{"_index":1064,"title":{},"body":{"classes/PagedUserResDto.html":{},"controllers/UsersController.html":{}}}],["pagedreqdto",{"_index":1044,"title":{"classes/PagedReqDto.html":{}},"body":{"classes/PagedReqDto.html":{},"coverage.html":{}}}],["pagedresdto",{"_index":41,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["pagedtrackresdto",{"_index":1059,"title":{"classes/PagedTrackResDto.html":{}},"body":{"classes/PagedTrackResDto.html":{},"coverage.html":{}}}],["pageduserresdto",{"_index":1062,"title":{"classes/PagedUserResDto.html":{}},"body":{"classes/PagedUserResDto.html":{},"coverage.html":{}}}],["pane",{"_index":1496,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":76,"title":{},"body":{"classes/AbstractService.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1457,"title":{},"body":{"index.html":{}}}],["partial",{"_index":119,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["particular",{"_index":1568,"title":{},"body":{"license.html":{}}}],["pass",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":965,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":433,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":447,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportserializer",{"_index":1122,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":962,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":966,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":987,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password')@httpcode(httpstatus.ok",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["password_reset_tokens",{"_index":1078,"title":{},"body":{"classes/PasswordToken.html":{}}}],["password_token",{"_index":1179,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["passwordhash",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordtoken",{"_index":1065,"title":{"classes/PasswordToken.html":{}},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["path",{"_index":154,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["paths",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.ts",{"_index":956,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["permission",{"_index":944,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"license.html":{}}}],["permit",{"_index":1549,"title":{},"body":{"license.html":{}}}],["person",{"_index":1529,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1550,"title":{},"body":{"license.html":{}}}],["picktype",{"_index":141,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(categorydto",{"_index":875,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["picktype(coursedto",{"_index":878,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["picktype(loginreqdto",{"_index":146,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(registeruserdto",{"_index":996,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["picktype(trackdto",{"_index":884,"title":{},"body":{"classes/CreateTrackDto.html":{}}}],["plaintoclass",{"_index":1087,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoclass(userdto",{"_index":1094,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoken",{"_index":397,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["playlisturl",{"_index":841,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCourseDto.html":{}}}],["please",{"_index":384,"title":{},"body":{"controllers/AuthController.html":{}}}],["populate('user",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":816,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1559,"title":{},"body":{"license.html":{}}}],["post",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["post('confirm",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":351,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiconflictresponse({type",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@apiresponse({type",{"_index":738,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["pre",{"_index":1244,"title":{},"body":{"classes/User.html":{}}}],["pre('save",{"_index":1253,"title":{},"body":{"classes/User.html":{}}}],["prefix",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/CoursesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1030,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{},"injectables/MailService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["process",{"_index":1512,"title":{},"body":{"index.html":{}}}],["process.env.api_auth_enabled",{"_index":829,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.app_email",{"_index":830,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_host",{"_index":833,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_name",{"_index":835,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_port",{"_index":834,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_secret",{"_index":825,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_validity_hours",{"_index":826,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_api_key",{"_index":831,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["process.env.mailer_domain",{"_index":832,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["process.env.mongodb_uri",{"_index":836,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.node_env",{"_index":824,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.port",{"_index":823,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.redis_server_url",{"_index":828,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.root_url",{"_index":827,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["production",{"_index":179,"title":{},"body":{"classes/ApiException.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":1082,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":1101,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.service",{"_index":1090,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":1080,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":215,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":1089,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":84,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RoleGuard.html":{},"injectables/TempTokensService.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["prop",{"_index":612,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({default",{"_index":592,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({enum",{"_index":1070,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({ref",{"_index":1072,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{}}}],["prop({required",{"_index":589,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{}}}],["propertydescriptor",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propose",{"_index":1464,"title":{},"body":{"index.html":{}}}],["protected",{"_index":633,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["provide",{"_index":1449,"title":{},"body":{"index.html":{}}}],["provided",{"_index":1560,"title":{},"body":{"license.html":{}}}],["provider",{"_index":992,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["providers",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pub",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["publish",{"_index":1543,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1506,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1569,"title":{},"body":{"license.html":{}}}],["put",{"_index":1482,"title":{},"body":{"index.html":{}}}],["pw",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["pw.dto",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["pw.dto.ts",{"_index":1113,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["pw.dto.ts:7",{"_index":1114,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["query",{"_index":81,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["queryitem",{"_index":94,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":87,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["questions",{"_index":1518,"title":{},"body":{"index.html":{}}}],["randombytes(columnsize.length32",{"_index":1260,"title":{},"body":{"classes/User.html":{}}}],["randombytes(size).tostring('hex",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":196,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/CurrentUserService.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"classes/UsersService.html":{}}}],["record",{"_index":411,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["redis",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["redis_server_url",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisurl",{"_index":817,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["ref",{"_index":591,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["reflect",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":353,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(input",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":279,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["registeruserresdto",{"_index":282,"title":{"classes/RegisterUserResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["repeat",{"_index":1511,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1492,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1473,"title":{},"body":{"index.html":{}}}],["req",{"_index":634,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["req.url",{"_index":939,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request",{"_index":551,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"index.html":{}}}],["request.body",{"_index":557,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["request.user",{"_index":560,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["require('nodemailer/lib/mailer",{"_index":1018,"title":{},"body":{"injectables/MailService.html":{}}}],["required",{"_index":615,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["res",{"_index":928,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.status(statuscode).json(exception",{"_index":947,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassinput",{"_index":286,"title":{"classes/ResetPassInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"coverage.html":{}}}],["resetpassword",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(@body",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(input",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":946,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":923,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restore",{"_index":585,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["restriction",{"_index":1536,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":624,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret._id",{"_index":626,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret.id",{"_index":625,"title":{},"body":{"classes/BaseEntity.html":{}}}],["return",{"_index":197,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"injectables/CurrentUserService.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RoleGuard.html":{},"controllers/TracksController.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["returnmodeltype",{"_index":640,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{}}}],["returns",{"_index":80,"title":{},"body":{"classes/AbstractService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1539,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["roleguard",{"_index":1116,"title":{"guards/RoleGuard.html":{}},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["root_url",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooturl",{"_index":818,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["rxjs",{"_index":1120,"title":{},"body":{"guards/RoleGuard.html":{},"dependencies.html":{}}}],["saved",{"_index":362,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved.isemailverified",{"_index":365,"title":{},"body":{"controllers/AuthController.html":{}}}],["schema",{"_index":445,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"modules/CategoriesModule.html":{},"modules/SharedModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["scope",{"_index":677,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{}}}],["scope.request",{"_index":685,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{}}}],["scoped",{"_index":991,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["search",{"_index":1048,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["secretorkey",{"_index":971,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sell",{"_index":1547,"title":{},"body":{"license.html":{}}}],["sendemailverifytoken",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(@body",{"_index":367,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(input",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(@body",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(input",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["sending",{"_index":1032,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync",{"_index":1006,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync(mailoptions",{"_index":1009,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":1028,"title":{},"body":{"injectables/MailService.html":{}}}],["serializeuser",{"_index":1124,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":1130,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"modules/DbTest.html":{}}}],["services",{"_index":1139,"title":{},"body":{"modules/SharedModule.html":{}}}],["session",{"_index":450,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["session.serializer",{"_index":438,"title":{},"body":{"modules/AuthModule.html":{}}}],["sessionserializer",{"_index":430,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["setrandompass",{"_index":1223,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":602,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shall",{"_index":1556,"title":{},"body":{"license.html":{}}}],["shared",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"injectables/TempTokensService.html":{}}}],["shared/config/configuration",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{}}}],["shared/constants",{"_index":798,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["shared/controllers",{"_index":868,"title":{},"body":{"controllers/CoursesController.html":{}}}],["shared/controllers/base.controller",{"_index":744,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["shared/errors",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/errors/api",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["shared/models/base.entity",{"_index":799,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shared/models/dto/base",{"_index":808,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["shared/models/dto/paged",{"_index":746,"title":{},"body":{"controllers/CategoriesController.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["shared/services",{"_index":1214,"title":{},"body":{"classes/TracksService.html":{}}}],["shared/services/base.service",{"_index":1297,"title":{},"body":{"classes/UsersService.html":{}}}],["shared/types",{"_index":1249,"title":{},"body":{"classes/User.html":{}}}],["shared/utils/random",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/validations/env.validation",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":216,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skill",{"_index":1502,"title":{},"body":{"index.html":{}}}],["skills",{"_index":1483,"title":{},"body":{"index.html":{}}}],["skip",{"_index":1049,"title":{},"body":{"classes/PagedReqDto.html":{}}}],["slack",{"_index":1516,"title":{},"body":{"index.html":{}}}],["softdelete",{"_index":67,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdelete(filter",{"_index":109,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeleteasync",{"_index":68,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeleteasync(filter",{"_index":111,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeletebyid",{"_index":69,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeletebyid(id",{"_index":113,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeletebyidasync",{"_index":70,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["softdeletebyidasync(id",{"_index":115,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["software",{"_index":1446,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1504,"title":{},"body":{"index.html":{}}}],["solved",{"_index":1499,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"controllers/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryResDto.html":{},"classes/PagedCourseResDto.html":{},"classes/PagedReqDto.html":{},"classes/PagedTrackResDto.html":{},"classes/PagedUserResDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"index.html":{}}}],["src/.../abstract",{"_index":1421,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../abstract.type.ts",{"_index":1599,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.enums.ts",{"_index":1414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth.errors.ts",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticate.decorator.ts",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.controller.ts",{"_index":1422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../constants.ts",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1423,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../paged",{"_index":1424,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../random",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.ts",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temporary",{"_index":1415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tracks.module.ts",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.module.ts",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":190,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":192,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":258,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":260,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:110",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:135",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:51",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:61",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:72",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:97",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":432,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:111",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:128",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:30",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:53",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:71",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:75",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:95",{"_index":471,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1311,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":541,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":545,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:17",{"_index":548,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:21",{"_index":552,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/jwt",{"_index":948,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/local",{"_index":974,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/role.guard.ts",{"_index":1117,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/auth/guards/role.guard.ts:6",{"_index":1118,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/auth/handlers/auth.handler.ts",{"_index":408,"title":{},"body":{"injectables/AuthHandler.html":{},"coverage.html":{}}}],["src/auth/handlers/auth.handler.ts:9",{"_index":413,"title":{},"body":{"injectables/AuthHandler.html":{}}}],["src/auth/models/auth.enums.ts",{"_index":1417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/models/dto/acct",{"_index":130,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts",{"_index":995,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts:11",{"_index":997,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/reset",{"_index":1112,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["src/auth/models/dto/validate",{"_index":1299,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["src/auth/models/jwt",{"_index":955,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/models/pass",{"_index":1066,"title":{},"body":{"classes/PasswordToken.html":{},"coverage.html":{}}}],["src/auth/models/temporary",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/session.serializer.ts",{"_index":1121,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:11",{"_index":1128,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:8",{"_index":1131,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":957,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":961,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":959,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts",{"_index":978,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/local.strategy.ts:16",{"_index":984,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/strategies/local.strategy.ts:8",{"_index":981,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/temp",{"_index":1143,"title":{},"body":{"injectables/TempTokensService.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts",{"_index":733,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts:43",{"_index":741,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":773,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.service.ts",{"_index":1318,"title":{},"body":{"coverage.html":{}}}],["src/categories/models/category.entity.ts",{"_index":777,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/categories/models/category.entity.ts:13",{"_index":782,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/dto/category.dto.ts",{"_index":801,"title":{},"body":{"classes/CategoryDto.html":{},"coverage.html":{}}}],["src/categories/models/dto/category.dto.ts:12",{"_index":803,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dto/create",{"_index":873,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/categories/models/dto/paged",{"_index":1040,"title":{},"body":{"classes/PagedCategoryResDto.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts",{"_index":861,"title":{},"body":{"controllers/CoursesController.html":{},"coverage.html":{}}}],["src/courses/courses.module.ts",{"_index":871,"title":{},"body":{"modules/CoursesModule.html":{}}}],["src/courses/models/course.entity.ts",{"_index":838,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/courses/models/course.entity.ts:14",{"_index":847,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:22",{"_index":843,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:29",{"_index":846,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:34",{"_index":845,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/dtos/course.dto.ts",{"_index":851,"title":{},"body":{"classes/CourseDto.html":{},"coverage.html":{}}}],["src/courses/models/dtos/course.dto.ts:12",{"_index":857,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:16",{"_index":853,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:19",{"_index":856,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:21",{"_index":854,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/create",{"_index":876,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["src/courses/models/dtos/paged",{"_index":1042,"title":{},"body":{"classes/PagedCourseResDto.html":{},"coverage.html":{}}}],["src/mail/mail.module.ts",{"_index":1001,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1003,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:10",{"_index":1013,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:11",{"_index":1007,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:16",{"_index":1008,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:28",{"_index":1011,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":1325,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/profile/profile.controller.ts",{"_index":1081,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:16",{"_index":1086,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":1100,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":1102,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:7",{"_index":1104,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:9",{"_index":1106,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/shared/config/configuration.ts",{"_index":811,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["src/shared/constants.ts",{"_index":1326,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/controllers/abstract",{"_index":1328,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/controllers/base.controller.ts",{"_index":1330,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/decorators/api",{"_index":1331,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authenticate.decorator.ts",{"_index":1335,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/errors/api",{"_index":149,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/shared/errors/auth.errors.ts",{"_index":1338,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/http",{"_index":916,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interfaces/abstract",{"_index":6,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/base",{"_index":36,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"coverage.html":{}}}],["src/shared/interfaces/default",{"_index":912,"title":{},"body":{"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts",{"_index":574,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts:12",{"_index":598,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:14",{"_index":593,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:16",{"_index":600,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:18",{"_index":597,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:20",{"_index":595,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:22",{"_index":594,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:24",{"_index":590,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:26",{"_index":599,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:27",{"_index":608,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:41",{"_index":610,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:44",{"_index":605,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:53",{"_index":606,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:62",{"_index":604,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:71",{"_index":601,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:9",{"_index":596,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/dto/base",{"_index":562,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/paged",{"_index":1045,"title":{},"body":{"classes/PagedReqDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/services/abstract.service.ts",{"_index":51,"title":{},"body":{"classes/AbstractService.html":{},"coverage.html":{}}}],["src/shared/services/abstract.service.ts:11",{"_index":86,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:12",{"_index":89,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:14",{"_index":98,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:15",{"_index":100,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:17",{"_index":92,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:18",{"_index":96,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:20",{"_index":102,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:21",{"_index":112,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:23",{"_index":104,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:24",{"_index":116,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:26",{"_index":110,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:27",{"_index":114,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:29",{"_index":120,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:30",{"_index":122,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:35",{"_index":75,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:36",{"_index":83,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:8",{"_index":106,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/abstract.service.ts:9",{"_index":108,"title":{},"body":{"classes/AbstractService.html":{}}}],["src/shared/services/base.service.ts",{"_index":632,"title":{},"body":{"injectables/BaseService.html":{},"coverage.html":{}}}],["src/shared/services/base.service.ts:105",{"_index":651,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:112",{"_index":652,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:120",{"_index":656,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:124",{"_index":660,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:129",{"_index":661,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:137",{"_index":657,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:140",{"_index":662,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:149",{"_index":663,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:157",{"_index":671,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:169",{"_index":672,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:177",{"_index":643,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:182",{"_index":644,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:25",{"_index":674,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:26",{"_index":641,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:35",{"_index":666,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:39",{"_index":669,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:47",{"_index":646,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:50",{"_index":655,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:54",{"_index":658,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:58",{"_index":659,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:66",{"_index":649,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:83",{"_index":650,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:91",{"_index":653,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/base.service.ts:96",{"_index":654,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/shared/services/current",{"_index":892,"title":{},"body":{"injectables/CurrentUserService.html":{},"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":1137,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/types/abstract.type.ts",{"_index":1604,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/shared/utils/get",{"_index":1343,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/random",{"_index":1347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/validations/env.validation.ts",{"_index":1349,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/models/dto/create",{"_index":880,"title":{},"body":{"classes/CreateTrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/paged",{"_index":1060,"title":{},"body":{"classes/PagedTrackResDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts",{"_index":1186,"title":{},"body":{"classes/TrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/tack.dto.ts:12",{"_index":1188,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/tack.dto.ts:16",{"_index":1187,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/track.entity.ts",{"_index":1183,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/tracks/models/track.entity.ts:14",{"_index":1185,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:22",{"_index":1184,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/tracks.controller.ts",{"_index":1190,"title":{},"body":{"controllers/TracksController.html":{},"coverage.html":{}}}],["src/tracks/tracks.controller.ts:44",{"_index":1192,"title":{},"body":{"controllers/TracksController.html":{}}}],["src/tracks/tracks.module.ts",{"_index":1205,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.service.ts",{"_index":1210,"title":{},"body":{"classes/TracksService.html":{},"coverage.html":{}}}],["src/tracks/tracks.service.ts:7",{"_index":1212,"title":{},"body":{"classes/TracksService.html":{}}}],["src/users/models/dto/create",{"_index":886,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/paged",{"_index":1063,"title":{},"body":{"classes/PagedUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/register",{"_index":1107,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts",{"_index":1264,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts:13",{"_index":1268,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:17",{"_index":1269,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:22",{"_index":1266,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:26",{"_index":1272,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/user.entity.ts",{"_index":1217,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/models/user.entity.ts:39",{"_index":1228,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:47",{"_index":1230,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:56",{"_index":1226,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:59",{"_index":1233,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:67",{"_index":1235,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:70",{"_index":1229,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:72",{"_index":1231,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:74",{"_index":1227,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:81",{"_index":1239,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:84",{"_index":1237,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:89",{"_index":1236,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:92",{"_index":1243,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1279,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":1290,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts",{"_index":1295,"title":{},"body":{"classes/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:7",{"_index":1296,"title":{},"body":{"classes/UsersService.html":{}}}],["stack",{"_index":155,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["stacktrace",{"_index":932,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stage",{"_index":1453,"title":{},"body":{"index.html":{}}}],["stand",{"_index":1474,"title":{},"body":{"index.html":{}}}],["started",{"_index":1429,"title":{"index.html":{},"license.html":{}},"body":{}}],["startup",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["stated",{"_index":1462,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1305,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":616,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{}}}],["status",{"_index":156,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["statuscode",{"_index":157,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["strategies/jwt.strategy",{"_index":439,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":440,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":964,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":91,"title":{},"body":{"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1478,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1552,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1545,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1558,"title":{},"body":{"license.html":{}}}],["suggested",{"_index":1485,"title":{},"body":{"index.html":{}}}],["super",{"_index":967,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(categoryservice",{"_index":763,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["super(tokenentity",{"_index":1173,"title":{},"body":{"injectables/TempTokensService.html":{}}}],["super(trackservice",{"_index":1201,"title":{},"body":{"controllers/TracksController.html":{}}}],["super(userentity",{"_index":1216,"title":{},"body":{"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["super(usersservice",{"_index":1287,"title":{},"body":{"controllers/UsersController.html":{}}}],["super.canactivate(context",{"_index":954,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["super.create(input",{"_index":770,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["super.login(request",{"_index":977,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["support",{"_index":1451,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1587,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1332,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger.controller.ts",{"_index":1329,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["symbol",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":23,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["table",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["tack.dto",{"_index":883,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackResDto.html":{}}}],["talents",{"_index":1468,"title":{},"body":{"index.html":{}}}],["target",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor.name",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tcreatedto",{"_index":45,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["technical",{"_index":1444,"title":{},"body":{"index.html":{}}}],["temp",{"_index":441,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["temporary",{"_index":1075,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken",{"_index":435,"title":{"classes/TemporaryToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/PasswordToken.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"coverage.html":{}}}],["temporarytoken.modelname",{"_index":444,"title":{},"body":{"modules/AuthModule.html":{}}}],["temporarytoken.schema",{"_index":446,"title":{},"body":{"modules/AuthModule.html":{}}}],["temporarytoken:16",{"_index":1069,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:19",{"_index":1068,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:27",{"_index":1071,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temporarytoken:30",{"_index":1073,"title":{},"body":{"classes/PasswordToken.html":{}}}],["temptokens",{"_index":1181,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["temptokensservice",{"_index":431,"title":{"injectables/TempTokensService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/TempTokensService.html":{},"coverage.html":{},"overview.html":{}}}],["tentity",{"_index":43,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["tentitydto",{"_index":44,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["test",{"_index":1484,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":902,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/.../db",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/db",{"_index":901,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":780,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["thanks",{"_index":1519,"title":{},"body":{"index.html":{}}}],["this.appservice.getwelcome",{"_index":198,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetemptoken",{"_index":372,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateemailtoken",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatepasswordtoken",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":558,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.categoryservice.findoneasync",{"_index":767,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.client.connect",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.client.emit(autheventenum.userregistered",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.config",{"_index":1020,"title":{},"body":{"injectables/MailService.html":{}}}],["this.count(filter",{"_index":731,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.createtransport",{"_index":1019,"title":{},"body":{"injectables/MailService.html":{}}}],["this.entity",{"_index":688,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.entity(doc",{"_index":694,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.entity.countdocuments(filter",{"_index":730,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.entity.create(entity",{"_index":698,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.entity.find(filter",{"_index":711,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.entity.findbyidanddelete(baseservice.toobjectid(id",{"_index":723,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.entity.findone(filter",{"_index":714,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.entity.findoneanddelete(filter",{"_index":720,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.entity.findoneandupdate(filter",{"_index":721,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.error",{"_index":176,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":181,"title":{},"body":{"classes/ApiException.html":{}}}],["this.findall(filter).exec",{"_index":713,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.findbyid(id).exec",{"_index":719,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.findone(filter).exec",{"_index":715,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.firstname",{"_index":1258,"title":{},"body":{"classes/User.html":{}}}],["this.getuserid",{"_index":697,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.insert(entity",{"_index":699,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.lastname",{"_index":1259,"title":{},"body":{"classes/User.html":{}}}],["this.mailservice.sendmailasync",{"_index":387,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.message",{"_index":175,"title":{},"body":{"classes/ApiException.html":{}}}],["this.moduleref.resolve(authservice",{"_index":993,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.name",{"_index":627,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.path",{"_index":182,"title":{},"body":{"classes/ApiException.html":{}}}],["this.profileservice.getprofileasync(req.user['email",{"_index":1093,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.req.user?.['role",{"_index":709,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.req?.user?.['userid",{"_index":695,"title":{},"body":{"injectables/BaseService.html":{},"injectables/CurrentUserService.html":{}}}],["this.softdelete(filter).exec",{"_index":722,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.softdeletebyid(id).exec",{"_index":725,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.stack",{"_index":177,"title":{},"body":{"classes/ApiException.html":{}}}],["this.status",{"_index":186,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":185,"title":{},"body":{"classes/ApiException.html":{}}}],["this.throwmongoerror(e",{"_index":693,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.timestamp",{"_index":183,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tokenservice",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.createentity",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.harddeletebyid(id",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.insertasync(token",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackservice.findoneasync",{"_index":1202,"title":{},"body":{"controllers/TracksController.html":{}}}],["this.transporter",{"_index":1021,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":1026,"title":{},"body":{"injectables/MailService.html":{}}}],["this.update(id",{"_index":728,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.usersservice.createentity(input",{"_index":361,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findoneasync",{"_index":355,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["this.usersservice.insertasync(user",{"_index":363,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.updateasync(doc.id",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validaterequest(request",{"_index":555,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validatetoken",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":1033,"title":{},"body":{"injectables/MailService.html":{}}}],["throw",{"_index":356,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"injectables/LocalStrategy.html":{},"controllers/TracksController.html":{},"classes/User.html":{}}}],["throwmongoerror",{"_index":637,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["throwmongoerror(err",{"_index":664,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["timestamp",{"_index":158,"title":{},"body":{"classes/ApiException.html":{}}}],["timestamps",{"_index":575,"title":{},"body":{"classes/BaseEntity.html":{}}}],["title",{"_index":842,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":1466,"title":{},"body":{"index.html":{}}}],["tojson",{"_index":618,"title":{},"body":{"classes/BaseEntity.html":{}}}],["token",{"_index":366,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["token')@httpcode(httpstatus.ok",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{}}}],["token.dto.ts",{"_index":1300,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["token.dto.ts:8",{"_index":1301,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.entity",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"injectables/TempTokensService.html":{}}}],["token.entity.ts",{"_index":1067,"title":{},"body":{"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["token.entity.ts:16",{"_index":1175,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:19",{"_index":1174,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:27",{"_index":1176,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:30",{"_index":1177,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.service",{"_index":442,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.service.ts",{"_index":1144,"title":{},"body":{"injectables/TempTokensService.html":{},"coverage.html":{}}}],["token.service.ts:9",{"_index":1146,"title":{},"body":{"injectables/TempTokensService.html":{}}}],["token.ts",{"_index":1348,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenentity",{"_index":1147,"title":{},"body":{"injectables/TempTokensService.html":{}}}],["tokenparamname",{"_index":134,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["tokenservice",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.email",{"_index":373,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokentype.password",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["toobjectid",{"_index":638,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["toobjectid(id",{"_index":668,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["tort",{"_index":1581,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1261,"title":{},"body":{"classes/User.html":{}}}],["towards",{"_index":1459,"title":{},"body":{"index.html":{}}}],["tpagedresdto",{"_index":47,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["track",{"_index":1182,"title":{"classes/Track.html":{}},"body":{"classes/Track.html":{},"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"coverage.html":{}}}],["track.dto",{"_index":1193,"title":{},"body":{"controllers/TracksController.html":{}}}],["track.dto.ts",{"_index":881,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackResDto.html":{},"coverage.html":{}}}],["track.modelname",{"_index":1208,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["track.schema",{"_index":1209,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["trackdto",{"_index":882,"title":{"classes/TrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/PagedTrackResDto.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"coverage.html":{}}}],["trackmodelconfig",{"_index":1207,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tracks",{"_index":1191,"title":{},"body":{"controllers/TracksController.html":{}}}],["tracks.controller",{"_index":1206,"title":{},"body":{"modules/TracksModule.html":{}}}],["tracks.service",{"_index":1197,"title":{},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{}}}],["tracks/tracks.module",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["trackscontroller",{"_index":1189,"title":{"controllers/TracksController.html":{}},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["trackservice",{"_index":1200,"title":{},"body":{"controllers/TracksController.html":{}}}],["tracksmodule",{"_index":217,"title":{"modules/TracksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["tracksservice",{"_index":1196,"title":{"classes/TracksService.html":{}},"body":{"controllers/TracksController.html":{},"modules/TracksModule.html":{},"classes/TracksService.html":{},"coverage.html":{}}}],["transform",{"_index":622,"title":{},"body":{"classes/BaseEntity.html":{}}}],["transformer",{"_index":572,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"controllers/ProfileController.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transport",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["transport.redis",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["transporter",{"_index":1004,"title":{},"body":{"injectables/MailService.html":{}}}],["trim",{"_index":779,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["true",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"controllers/CoursesController.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Mailer.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"guards/RoleGuard.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/User.html":{}}}],["tsconfig",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["tupdatedto",{"_index":46,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerOptions-1.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AbstractService.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthHandler.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/CurrentUserService.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RoleGuard.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"controllers/TracksController.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1596,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose/typegoose",{"_index":124,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":613,"title":{},"body":{"classes/BaseEntity.html":{}}}],["typegoose/typegoose/lib/types",{"_index":680,"title":{},"body":{"injectables/BaseService.html":{}}}],["typeof",{"_index":941,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["types",{"_index":128,"title":{},"body":{"classes/AbstractService.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{}}}],["types.objectid",{"_index":670,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["types.objectid(id",{"_index":691,"title":{},"body":{"injectables/BaseService.html":{}}}],["ui",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('password",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["unauthorizedexception('please",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"controllers/TracksController.html":{},"classes/User.html":{}}}],["undefined})@apiresponse({status",{"_index":739,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/TracksController.html":{}}}],["undefined})@exclude",{"_index":1232,"title":{},"body":{"classes/User.html":{}}}],["unique",{"_index":781,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["update",{"_index":71,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":117,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["update?.createdat",{"_index":726,"title":{},"body":{"injectables/BaseService.html":{}}}],["update?.updatedat",{"_index":727,"title":{},"body":{"injectables/BaseService.html":{}}}],["updateasync",{"_index":72,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["updateasync(id",{"_index":121,"title":{},"body":{"classes/AbstractService.html":{},"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["updatedat",{"_index":565,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateUserDto.html":{},"classes/PasswordToken.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["updatedby",{"_index":581,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/PasswordToken.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["updatedto",{"_index":42,"title":{},"body":{"interfaces/AbstractControllerOptions-1.html":{},"controllers/CategoriesController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["updateresulttype",{"_index":1603,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["uri",{"_index":820,"title":{},"body":{"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":377,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["url(clientbaseurl",{"_index":378,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(emailparamname",{"_index":380,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(tokenparamname",{"_index":379,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1540,"title":{},"body":{"license.html":{}}}],["usecreateindex",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":908,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["useguards(authenticationguard",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":761,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/ProfileController.html":{},"controllers/TracksController.html":{},"controllers/UsersController.html":{}}}],["usenewurlparser",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":360,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"injectables/LocalStrategy.html":{},"classes/PasswordToken.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"coverage.html":{}}}],["user's",{"_index":1240,"title":{},"body":{"classes/User.html":{}}}],["user.dto",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedUserResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":887,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["user.dto.ts:13",{"_index":1109,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:17",{"_index":1111,"title":{},"body":{"classes/RegisterUserResDto.html":{}}}],["user.email",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":1275,"title":{},"body":{"classes/UserDto.html":{}}}],["user.fullname",{"_index":383,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.isactive",{"_index":559,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/LocalStrategy.html":{}}}],["user.isemailverified",{"_index":369,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.modelname",{"_index":1293,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user.password",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1294,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user.service.ts",{"_index":893,"title":{},"body":{"injectables/CurrentUserService.html":{},"coverage.html":{}}}],["user.service.ts:6",{"_index":896,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["user.service.ts:8",{"_index":898,"title":{},"body":{"injectables/CurrentUserService.html":{}}}],["user_registered",{"_index":1419,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userdto",{"_index":889,"title":{"classes/UserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserResDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["userentity",{"_index":1213,"title":{},"body":{"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["userid",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{}}}],["usermodel",{"_index":1292,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":983,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["usernamefield",{"_index":988,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userregistered",{"_index":1418,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userrole",{"_index":683,"title":{},"body":{"injectables/BaseService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["userrole.admin",{"_index":710,"title":{},"body":{"injectables/BaseService.html":{}}}],["userrole.mentee",{"_index":1234,"title":{},"body":{"classes/User.html":{},"classes/UserDto.html":{}}}],["userrole})@isenum(userrole)@expose",{"_index":1271,"title":{},"body":{"classes/UserDto.html":{}}}],["users",{"_index":1280,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":1291,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1283,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/models/dto/register",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["users/models/dto/user.dto",{"_index":1088,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users/models/user.entity",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{}}}],["users/users.module",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{}}}],["users/users.service",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{}}}],["userscontroller",{"_index":1278,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":218,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":325,"title":{"classes/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ProfileService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"classes/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["valid('development",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":958,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/ResetPassInput.html":{}}}],["validate(payload",{"_index":960,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(request",{"_index":982,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateemailtoken",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken(input",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken",{"_index":457,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken(resetpassinput",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":543,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validaterequest(request",{"_index":550,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validatetoken",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(userid",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetokeninput",{"_index":299,"title":{"classes/ValidateTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["validatetokeninput:8",{"_index":1115,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validateuser",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":247,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":143,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedReqDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["value",{"_index":588,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/Course.html":{},"injectables/MailService.html":{},"classes/PagedReqDto.html":{},"classes/PasswordToken.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1307,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1606,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification.dto",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{}}}],["verification.dto.ts",{"_index":131,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["verification.dto.ts:10",{"_index":140,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:12",{"_index":139,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:8",{"_index":137,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verified",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(@body",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(input",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{}}}],["versionkey",{"_index":621,"title":{},"body":{"classes/BaseEntity.html":{}}}],["virtuals",{"_index":620,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vm",{"_index":29,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["vm.dto",{"_index":809,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["vm.dto.ts",{"_index":563,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["vm.dto.ts:12",{"_index":570,"title":{},"body":{"classes/BaseDto.html":{}}}],["vm.dto.ts:15",{"_index":567,"title":{},"body":{"classes/BaseDto.html":{}}}],["vm.dto.ts:9",{"_index":569,"title":{},"body":{"classes/BaseDto.html":{}}}],["void",{"_index":603,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{},"classes/PasswordToken.html":{},"injectables/SessionSerializer.html":{},"injectables/TempTokensService.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksService.html":{},"classes/User.html":{},"classes/UsersService.html":{}}}],["wait",{"_index":1509,"title":{},"body":{"index.html":{}}}],["want",{"_index":1513,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1565,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1561,"title":{},"body":{"license.html":{}}}],["website",{"_index":1434,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":261,"title":{},"body":{"injectables/AppService.html":{}}}],["where('isdeleted",{"_index":717,"title":{},"body":{"injectables/BaseService.html":{}}}],["whereclause",{"_index":708,"title":{},"body":{"injectables/BaseService.html":{}}}],["wherever",{"_index":1452,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1578,"title":{},"body":{"license.html":{}}}],["without",{"_index":1535,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1486,"title":{},"body":{"index.html":{}}}],["writable",{"_index":614,"title":{},"body":{"classes/BaseEntity.html":{},"injectables/BaseService.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["writable).createdby",{"_index":696,"title":{},"body":{"injectables/BaseService.html":{}}}],["writable).isactive",{"_index":630,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isdeleted",{"_index":628,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isemailverified",{"_index":1262,"title":{},"body":{"classes/User.html":{}}}],["writable).password",{"_index":1254,"title":{},"body":{"classes/User.html":{}}}],["writers",{"_index":1445,"title":{},"body":{"index.html":{}}}],["x",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":647,"title":{},"body":{"injectables/BaseService.html":{},"injectables/TempTokensService.html":{},"classes/TracksService.html":{},"classes/UsersService.html":{}}}],["zoom",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControllerOptions.html":{"url":"interfaces/AbstractControllerOptions.html","title":"interface - AbstractControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerOptions-1.html":{"url":"interfaces/AbstractControllerOptions-1.html","title":"interface - AbstractControllerOptions-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createDto\n                                \n                                \n                                        entity\n                                \n                                \n                                        entityDto\n                                \n                                \n                                        pagedResDto\n                                \n                                \n                                        updateDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDto\n                                    \n                                \n                                \n                                    \n                                        createDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDto\n                                    \n                                \n                                \n                                    \n                                        entityDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagedResDto\n                                    \n                                \n                                \n                                    \n                                        pagedResDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDto\n                                    \n                                \n                                \n                                    \n                                        updateDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AbstractControllerOptions {\n  entity: { new (): TEntity };\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedResDto: { new (): TPagedResDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithAuthOptions.html":{"url":"interfaces/AbstractControllerWithAuthOptions.html","title":"interface - AbstractControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:         DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithSwaggerOptions.html":{"url":"interfaces/AbstractControllerWithSwaggerOptions.html","title":"interface - AbstractControllerWithSwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithSwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        modelCreate\n                                \n                                \n                                        modelVm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        modelCreate\n                                    \n                                \n                                \n                                    \n                                        modelCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelVm\n                                    \n                                \n                                \n                                    \n                                        modelVm:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractService.html":{"url":"classes/AbstractService.html","title":"class - AbstractService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/abstract.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                count\n                            \n                            \n                                    Abstract\n                                    Async\n                                countAsync\n                            \n                            \n                                    Abstract\n                                findAll\n                            \n                            \n                                    Abstract\n                                    Async\n                                findAllAsync\n                            \n                            \n                                    Abstract\n                                findById\n                            \n                            \n                                    Abstract\n                                    Async\n                                findByIdAsync\n                            \n                            \n                                    Abstract\n                                findOne\n                            \n                            \n                                    Abstract\n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Abstract\n                                hardDelete\n                            \n                            \n                                    Abstract\n                                hardDeleteById\n                            \n                            \n                                    Abstract\n                                insert\n                            \n                            \n                                    Abstract\n                                    Async\n                                insertAsync\n                            \n                            \n                                    Abstract\n                                softDelete\n                            \n                            \n                                    Abstract\n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                    Abstract\n                                softDeleteById\n                            \n                            \n                                    Abstract\n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Abstract\n                                update\n                            \n                            \n                                    Abstract\n                                    Async\n                                updateAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            count\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    count(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hardDelete(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insert(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDelete(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: any)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/abstract.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DocumentType } from '@typegoose/typegoose';\nimport { Query } from 'mongoose';\n\nimport { BaseEntity } from '../models/base.entity';\nimport { QueryItem, QueryList } from '../types';\n\nexport abstract class AbstractService {\n  abstract insert(entity: T): Promise>;\n  abstract async insertAsync(entity: T): Promise>;\n\n  abstract findAll(filter: any): QueryList;\n  abstract async findAllAsync(filter: any): Promise>>;\n\n  abstract findOne(filter: any): QueryItem;\n  abstract async findOneAsync(filter: any): Promise>;\n\n  abstract findById(id: string): QueryItem;\n  abstract async findByIdAsync(id: string): Promise>;\n\n  abstract hardDelete(filter: any): QueryItem;\n  abstract async softDeleteAsync(filter: any): Promise;\n\n  abstract hardDeleteById(id: string): QueryItem;\n  abstract async softDeleteByIdAsync(id: string): Promise>;\n\n  abstract softDelete(filter: any): QueryItem;\n  abstract softDeleteById(id: string): QueryItem;\n\n  abstract update(id: string, item: Partial): QueryItem;\n  abstract async updateAsync(\n    id: string,\n    item: Partial\n  ): Promise>;\n\n  abstract count(filter: any): Query;\n  abstract async countAsync(filter: any): Promise;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctVerifyDto.html":{"url":"classes/AcctVerifyDto.html","title":"class - AcctVerifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctVerifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/acct-verification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBaseUrl\n                            \n                            \n                                emailParamName\n                            \n                            \n                                tokenParamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty, IsUrl } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class AcctVerifyDto extends PickType(LoginReqDto, ['email']) {\n  @IsUrl()\n  clientBaseUrl: string;\n  @IsNotEmpty()\n  tokenParamName: string;\n  @IsNotEmpty()\n  emailParamName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/errors/api-exception.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: any, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/shared/errors/api-exception.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport configuration from '../config/configuration';\n\nexport class ApiException {\n  @ApiProperty()\n  statusCode?: number;\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  status?: string;\n  @ApiProperty()\n  error?: string;\n  @ApiProperty()\n  errors?: any;\n  @ApiProperty()\n  timestamp?: string;\n  @ApiProperty()\n  path?: string;\n  @ApiProperty()\n  stack?: string;\n\n  constructor(\n    message: string,\n    error: string,\n    stack: string,\n    errors: any,\n    path: string,\n    statusCode: number\n  ) {\n    this.message = message;\n    this.error = error;\n    this.stack = configuration().environment === 'production' ? null : stack;\n    this.errors = errors;\n    this.path = path;\n    this.timestamp = new Date().toISOString();\n    this.statusCode = statusCode;\n    this.status = HttpStatus[statusCode];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getWelcome();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { MailModule } from './mail/mail.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { SharedModule } from './shared';\nimport configuration from './shared/config/configuration';\nimport { envValidation } from './shared/validations/env.validation';\nimport { TracksModule } from './tracks/tracks.module';\nimport { UsersModule } from './users/users.module';\nimport { CoursesModule } from './courses/courses.module';\n\nexport const Config = ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n});\nconst Database = MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n});\n@Module({\n  imports: [\n    SharedModule,\n    AuthModule,\n    UsersModule,\n    Config,\n    Database,\n    MailModule,\n    ProfileModule,\n    TracksModule,\n    CategoriesModule,\n    CoursesModule\n  ],\n\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWelcome\n                        \n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcome(): string {\n    return 'Welcome to CCN!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                sendEmailVerifyToken\n                            \n                            \n                                    Async\n                                sendForgotPwToken\n                            \n                            \n                                    Async\n                                verifyEmailToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(input: LoginReqDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginResDto})@ApiUnauthorizedResponse({type: ApiException})@UseGuards(AuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                LoginReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(input: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiConflictResponse({type: ApiException})@ApiResponse({type: RegisterUserResDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(input: ResetPassInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPassInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailVerifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerifyToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email-confirmation-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendForgotPwToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendForgotPwToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-password-reset-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmailToken(input: ValidateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ValidateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Post,\n  UnauthorizedException,\n  UseGuards\n} from '@nestjs/common';\nimport {\n  ApiConflictResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n  ApiOkResponse,\n  ApiResponse\n} from '@nestjs/swagger';\n\nimport { LoginReqDto } from '../auth/models/dto/auth.dto';\nimport { MailService } from '../mail/mail.service';\nimport configuration from '../shared/config/configuration';\nimport { ApiException } from '../shared/errors/api-exception';\nimport { TokenType } from './models/temporary-token.entity';\nimport {\n  RegisterUserDto,\n  RegisterUserResDto\n} from '../users/models/dto/register-user.dto';\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { AuthenticationGuard } from './guards/auth.guard';\nimport { AcctVerifyDto } from './models/dto/acct-verification.dto';\nimport { LoginResDto } from './models/dto/auth.dto';\nimport { ResetPassInput } from './models/dto/reset-pw.dto';\nimport { ValidateTokenInput } from './models/dto/validate-token.dto';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly mailService: MailService\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: LoginResDto })\n  @ApiUnauthorizedResponse({ type: ApiException })\n  @UseGuards(AuthenticationGuard)\n  async login(@Body() input: LoginReqDto): Promise {\n    const accessToken = await this.authService.login(\n      input.email,\n      input.password\n    );\n    return { accessToken };\n  }\n  @Post('register')\n  @ApiConflictResponse({ type: ApiException })\n  @ApiResponse({ type: RegisterUserResDto, status: HttpStatus.CREATED })\n  async register(@Body() input: RegisterUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    const saved = await this.usersService.insertAsync(user);\n    return { canLogin: saved.isEmailVerified };\n  }\n\n  @Post('send-email-confirmation-token')\n  @HttpCode(HttpStatus.OK)\n  async sendEmailVerifyToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User with email does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email has already been confirmed');\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.EMAIL,\n      expiresInMins: 60 * 24\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please confirm your email here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n  @Post('confirm-email')\n  @HttpCode(HttpStatus.OK)\n  async verifyEmailToken(@Body() input: ValidateTokenInput): Promise {\n    const { email, token } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email already verified');\n    await this.authService.validateEmailToken({\n      userId: user.id,\n      plainToken: token\n    });\n  }\n  @Post('send-password-reset-token')\n  @HttpCode(HttpStatus.OK)\n  async sendForgotPwToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) return;\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.PASSWORD,\n      expiresInMins: 10\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please reset your password here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n\n  @Post('reset-password')\n  @HttpCode(HttpStatus.OK)\n  async resetPassword(@Body() input: ResetPassInput): Promise {\n    const { email, token, newPassword } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new UnauthorizedException('Password reset failed');\n    await this.authService.validatePasswordToken({\n      userId: exist.id,\n      plainToken: token,\n      newPassword\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthHandler.html":{"url":"injectables/AuthHandler.html","title":"injectable - AuthHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/handlers/auth.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                handleUserRegistered\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            handleUserRegistered\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleUserRegistered(data: Record)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @EventPattern(AuthEventEnum.UserRegistered)\n                \n            \n\n            \n                \n                    Defined in src/auth/handlers/auth.handler.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { EventPattern } from '@nestjs/microservices';\n\nimport { AuthEventEnum } from '../models/auth.enums';\n\n@Injectable()\nexport class AuthHandler {\n  @EventPattern(AuthEventEnum.UserRegistered)\n  async handleUserRegistered(data: Record) {\n    // business logic\n    Logger.debug(data, 'handler');\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthHandler\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            TempTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\n\nimport { MailService } from '../mail/mail.service';\nimport { TemporaryToken } from './models/temporary-token.entity';\nimport { UsersModule } from '../users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { AuthHandler } from './handlers/auth.handler';\nimport { SessionSerializer } from './session.serializer';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { TempTokensService } from './temp-token.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n    ]),\n    PassportModule.register({ defaultStrategy: 'jwt', session: true }),\n    UsersModule\n  ],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    JwtStrategy,\n    SessionSerializer,\n    MailService,\n    AuthHandler,\n    TempTokensService\n  ],\n  controllers: [AuthController],\n  exports: [\n    AuthService,\n    MongooseModule.forFeature([\n      { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n    ]),\n    PassportModule.register({ defaultStrategy: 'jwt', session: true })\n  ]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTempToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                            \n                                    Async\n                                pub\n                            \n                            \n                                    Async\n                                validateEmailToken\n                            \n                            \n                                    Async\n                                validatePasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, tokenService: TempTokensService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TempTokensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateTempToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTempToken(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            onModuleInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            pub\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    pub()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmailToken(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePasswordToken(resetPassInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPassInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(userId: string, type: TokenType, plainToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ClientRedis\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Client({transport: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/auth.service.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Logger,\n  OnModuleInit,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { Client, ClientRedis, Transport } from '@nestjs/microservices';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport configuration from '~shared/config/configuration';\nimport { TokenType } from 'src/auth/models/temporary-token.entity';\nimport { generateRandomToken } from '~shared/utils/random-token';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthEventEnum } from './models/auth.enums';\nimport { JwtPayload } from './models/jwt-payload';\nimport { TempTokensService } from './temp-token.service';\nimport { authErrors } from '~shared/errors';\n\n@Injectable()\nexport class AuthService implements OnModuleInit {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly tokenService: TempTokensService\n  ) {}\n  @Client({ transport: Transport.REDIS })\n  private client: ClientRedis;\n\n  async onModuleInit() {\n    // Connect your client to the redis server on startup.\n    try {\n      // await this.client.connect();\n    } catch (error) {\n      //Logger.error(error);\n    }\n  }\n  async validateUser(email: string, pw: string): Promise {\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    if (!user.isEmailVerified)\n      throw new UnauthorizedException('Please confirm your email');\n    try {\n      const isValid = await bcrypt.compare(pw, user.password);\n      if (!isValid) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    } catch (error) {\n      Logger.error(error);\n      throw authErrors.INVALID_LOGIN_ATTEMPT;\n    }\n    return user;\n  }\n\n  async login(email: string, pass: string): Promise {\n    const user = await this.usersService.findOneAsync({ email });\n\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    const isValidPassword = await bcrypt.compare(pass, user.password);\n    if (!isValidPassword) throw authErrors.INVALID_LOGIN_ATTEMPT;\n\n    const { jwtValidityHrs, jwtSecret } = configuration();\n    const expiresIn = 60 * 60 * jwtValidityHrs;\n    const payload: JwtPayload = {\n      email: user.email,\n      userId: user.id,\n      role: user.role\n    };\n    return jwt.sign(payload, jwtSecret, { expiresIn });\n  }\n\n  async pub(): Promise {\n    this.client.emit(AuthEventEnum.UserRegistered, 'email');\n  }\n\n  async generateTempToken({\n    user,\n    type,\n    expiresInMins\n  }: {\n    user: User;\n    type: TokenType;\n    expiresInMins: number;\n  }): Promise {\n    const plainToken = generateRandomToken(64);\n    const encryptedToken = await bcrypt.hash(plainToken, 10);\n    const token = this.tokenService.createEntity({\n      token: encryptedToken,\n      expireAt: new Date(new Date().getTime() + expiresInMins * 60000),\n      type,\n      user: user.id as any\n    });\n    await this.tokenService.insertAsync(token);\n    return plainToken;\n  }\n  async validateEmailToken(input: {\n    userId: string;\n    plainToken: string;\n  }): Promise {\n    const { userId, plainToken } = input;\n\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.EMAIL,\n      plainToken\n    );\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { isEmailVerified: true });\n    await this.tokenService.hardDeleteById(id);\n  }\n  async validatePasswordToken(resetPassInput: {\n    userId: string;\n    plainToken: string;\n    newPassword: string;\n  }): Promise {\n    const { userId, plainToken, newPassword } = resetPassInput;\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.PASSWORD,\n      plainToken\n    );\n    const passwordHash = await bcrypt.hash(newPassword, 10);\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { password: passwordHash });\n    await this.tokenService.hardDeleteById(id);\n  }\n  private async validateToken(\n    userId: string,\n    type: TokenType,\n    plainToken: string\n  ) {\n    const exist = await this.tokenService\n      .findOne({ user: userId, type })\n      .populate('user');\n\n    if (!exist) throw authErrors.EXPIRED_TOKEN;\n    try {\n      const isValid = await bcrypt.compare(plainToken, exist.token);\n      if (!isValid) throw authErrors.INVALID_TOKEN;\n    } catch (error) {\n      throw authErrors.INVALID_TOKEN;\n    }\n    return exist;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nimport configuration from '../../shared/config/configuration';\nimport { AuthService } from '../auth.service';\nimport { LoginReqDto } from '../models/dto/auth.dto';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext) {\n    const request = context.switchToHttp().getRequest();\n    return await this.validateRequest(request);\n  }\n  async validateRequest(request: Request): Promise {\n    if (!configuration().isAuthEnabled) return true;\n    const { email, password }: LoginReqDto = request.body;\n    const user = await this.authService.validateUser(email, password);\n    if (!user || !user.isActive) throw new UnauthorizedException();\n    request.user = user;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/base-vm.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base-vm.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base-vm.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base-vm.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nexport class BaseDto {\n  @Expose()\n  @IsMongoId()\n  @ApiProperty()\n  id: string;\n  @Expose()\n  @ApiProperty()\n  readonly updatedAt: Date;\n  @Expose()\n  @ApiProperty()\n  readonly createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:71\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:62\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:53\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop, Ref } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { Schema } from 'mongoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { Writable } from '../types';\n\nexport class BaseEntity extends TimeStamps {\n  id: string;\n\n  @prop({ required: true, default: false })\n  readonly isDeleted!: boolean;\n  @prop({ default: null, ref: BaseEntity })\n  readonly createdBy?: Ref = null;\n  @prop({ default: null, ref: BaseEntity })\n  readonly updatedBy?: Ref = null;\n  @prop({ required: true, default: true })\n  readonly isActive: boolean = true;\n  @prop({ default: null, ref: BaseEntity })\n  readonly deletedBy?: Ref = null;\n  @prop({ default: null })\n  readonly deletedAt?: Date;\n  @prop({ required: true, default: new Date() })\n  readonly createdAt: Date = new Date();\n  @prop({ required: true, default: new Date() })\n  readonly updatedAt: Date = null;\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true,\n        versionKey: false,\n        transform: (_, ret) => {\n          ret.id = ret._id;\n          delete ret._id;\n        }\n      }\n    });\n  }\n  static get modelName(): string {\n    return this.name;\n  }\n  delete(): void {\n    (this as Writable).isDeleted = true;\n  }\n\n  /**\n   * Sets {isDeleted} to false\n   *\n   * @memberof BaseEntity\n   */\n  restore(): void {\n    (this as Writable).isDeleted = false;\n  }\n\n  /**\n   * Sets {isActive} to true\n   *\n   * @memberof BaseEntity\n   */\n  deactivate(): void {\n    (this as Writable).isActive = false;\n  }\n\n  /**\n   * Sets isActive to false\n   *\n   * @memberof BaseEntity\n   */\n  activate(): void {\n    (this as Writable).isActive = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseService.html":{"url":"injectables/BaseService.html","title":"injectable - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/base.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entity\n                            \n                            \n                                    Private\n                                    Readonly\n                                req\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                    Async\n                                countAsync\n                            \n                            \n                                createEntity\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findAllAsync\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findByIdAsync\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Protected\n                                getUserId\n                            \n                            \n                                hardDelete\n                            \n                            \n                                hardDeleteById\n                            \n                            \n                                insert\n                            \n                            \n                                    Async\n                                insertAsync\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                softDeleteById\n                            \n                            \n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Protected\n                                    Static\n                                throwMongoError\n                            \n                            \n                                    Protected\n                                    Static\n                                toObjectId\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                updateAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity: ReturnModelType>)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/base.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    ReturnModelType>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEntity\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEntity(doc?: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter: object, opts: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserId()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \nhardDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nhardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            throwMongoError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    throwMongoError(err: MongoError)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            MongoError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            toObjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toObjectId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/base.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnModelType>\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/services/base.service.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            req\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Inject(REQUEST)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/services/base.service.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  Logger,\n  Optional,\n  Scope\n} from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { DocumentType, ReturnModelType } from '@typegoose/typegoose';\nimport { AnyParamConstructor } from '@typegoose/typegoose/lib/types';\nimport { Request } from 'express';\nimport { MongoError } from 'mongodb';\nimport { CreateQuery, Query, Types } from 'mongoose';\n\nimport { BaseEntity } from '../models/base.entity';\nimport { QueryItem, QueryList, Writable } from '../types';\nimport { UserRole } from './../../users/models/user.entity';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class BaseService {\n  @Optional()\n  @Inject(REQUEST)\n  private readonly req: Request;\n  protected entity: ReturnModelType>;\n\n  constructor(\n    @InjectModel(BaseEntity.modelName)\n    entity: ReturnModelType>\n  ) {\n    this.entity = entity;\n  }\n\n  protected static throwMongoError(err: MongoError): void {\n    throw new InternalServerErrorException(err, err.errmsg);\n  }\n\n  protected static toObjectId(id: string): Types.ObjectId {\n    try {\n      return Types.ObjectId(id);\n    } catch (e) {\n      this.throwMongoError(e);\n    }\n  }\n\n  createEntity(doc?: Partial): T {\n    return new this.entity(doc);\n  }\n  protected getUserId(): any {\n    return this.req?.user?.['userId'] || null;\n  }\n\n  insert(entity: T): Promise> {\n    (entity as Writable).createdBy = this.getUserId();\n    return this.entity.create(entity as CreateQuery>);\n  }\n  async insertAsync(entity: T): Promise> {\n    try {\n      return await this.insert(entity);\n    } catch (e) {\n      Logger.error(e);\n      BaseService.throwMongoError(e);\n    }\n  }\n  findAll(filter = {}, opts = {}): QueryList {\n    if (filter.hasOwnProperty('id')) {\n      Object.defineProperty(\n        filter,\n        '_id',\n        Object.getOwnPropertyDescriptor(filter, 'id')\n      );\n      delete filter['id'];\n    }\n    filter = { ...filter, isDeleted: { $ne: true } };\n    const whereClause =\n      this.req.user?.['role'] === UserRole.ADMIN\n        ? {}\n        : { createdBy: this.getUserId() };\n    return this.entity.find(filter, null, opts).where(whereClause);\n  }\n\n  async findAllAsync(filter = {}): Promise>> {\n    try {\n      return await this.findAll(filter).exec();\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  findOne(filter = {}): QueryItem {\n    filter = { ...filter, isDeleted: { $ne: true } };\n    return this.entity.findOne(filter);\n  }\n\n  async findOneAsync(filter = {}): Promise> {\n    try {\n      return await this.findOne(filter).exec();\n    } catch (e) {\n      Logger.error(e);\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  findById(id: string): QueryItem {\n    return this.entity\n      .findById(BaseService.toObjectId(id))\n      .where('isDeleted')\n      .ne(true);\n  }\n\n  async findByIdAsync(id: string): Promise> {\n    try {\n      return await this.findById(id).exec();\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  hardDelete(filter = {}): QueryItem {\n    filter = { ...filter, isDeleted: { $ne: true } };\n    return this.entity.findOneAndDelete(filter);\n  }\n  softDelete(filter = {}): QueryItem {\n    filter = { ...filter, isDeleted: { $ne: true } };\n    const update = { isDeleted: true, deletedBy: this.getUserId() } as any;\n    return this.entity.findOneAndUpdate(filter, update);\n  }\n  async softDeleteAsync(filter = {}): Promise {\n    try {\n      await this.softDelete(filter).exec();\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  hardDeleteById(id: string): QueryItem {\n    return this.entity.findByIdAndDelete(BaseService.toObjectId(id));\n  }\n  softDeleteById(id: string): QueryItem {\n    const update = { isDeleted: true, deletedBy: this.getUserId() } as any;\n\n    return this.entity\n      .findByIdAndUpdate(BaseService.toObjectId(id), update)\n      .where('isDeleted')\n      .ne(true);\n  }\n\n  async softDeleteByIdAsync(id: string): Promise> {\n    try {\n      return await this.softDeleteById(id).exec();\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  update(id: string, item: Partial): QueryItem {\n    const update = { ...item, updatedBy: this.getUserId() } as any;\n    delete update?.createdAt;\n    delete update?.updatedAt;\n    return this.entity\n      .findByIdAndUpdate(BaseService.toObjectId(id), update, {\n        new: true\n      })\n      .where('isDeleted')\n      .ne(true);\n  }\n\n  async updateAsync(id: string, item: Partial): Promise> {\n    try {\n      return await this.update(id, item).exec();\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n\n  count(filter = {}): Query {\n    filter = { ...filter, isDeleted: { $ne: true } };\n    return this.entity.countDocuments(filter);\n  }\n\n  async countAsync(filter = {}): Promise {\n    try {\n      return await this.count(filter);\n    } catch (e) {\n      BaseService.throwMongoError(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: CreateCategoryDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AbstractCrudController } from '~shared/controllers/base.controller';\nimport { ApiException } from '~shared/errors/api-exception';\nimport { PagedOutDto } from '~shared/models/dto/paged-out.dto';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { CategoryService } from './categories.service';\nimport { Category } from './models/category.entity';\nimport { CategoryDto } from './models/dto/category.dto';\nimport { CreateCategoryDto } from './models/dto/create-category.dto';\n\n@Controller('categories')\n@ApiTags('categories')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\nexport class CategoriesController extends AbstractCrudController({\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CreateCategoryDto,\n  updateDto: CreateCategoryDto,\n  pagedResDto: PagedOutDto(CategoryDto)\n}) {\n  constructor(private readonly categoryService: CategoryService) {\n    super(categoryService);\n  }\n  @Post()\n  @ApiResponse({ type: CreateCategoryDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateCategoryDto): Promise {\n    const exist = await this.categoryService.findOneAsync({ name: input.name });\n    if (exist) throw new ConflictException(`${input.name} already exists`);\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoryService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { Category } from './models/category.entity';\nimport { CategoriesController } from './categories.controller';\nimport { CategoryService } from './categories.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Category.modelName, schema: Category.schema },\n    ]),\n  ],\n  controllers: [CategoriesController],\n  providers: [CategoryService],\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/category.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/category.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\nimport { prop } from '@typegoose/typegoose';\n\nexport class Category extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: true\n  })\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dto/category.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dto/category.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:12\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { MaxLength, IsAlphanumeric } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base-vm.dto';\n\nexport class CategoryDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  name: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appEmail\n                                \n                                \n                                        database\n                                \n                                \n                                        environment\n                                \n                                \n                                        isAuthEnabled\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        jwtValidityHrs\n                                \n                                \n                                        mailer\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUrl\n                                \n                                \n                                        rootUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appEmail\n                                    \n                                \n                                \n                                    \n                                        appEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         Database\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Database\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthEnabled\n                                    \n                                \n                                \n                                    \n                                        isAuthEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtValidityHrs\n                                    \n                                \n                                \n                                    \n                                        jwtValidityHrs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                    \n                                \n                                \n                                    \n                                        mailer:         Mailer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Mailer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUrl\n                                    \n                                \n                                \n                                    \n                                        redisUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                    Readonly\n                                playlistUrl\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Course extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    unique: false\n  })\n  readonly playlistUrl!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly enrollmentCount!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseDto.html":{"url":"classes/CourseDto.html","title":"class - CourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                playlistUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length128)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()@MaxLength(columnSize.length256)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:12\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength, IsUrl } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base-vm.dto';\n\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CoursesController.html":{"url":"controllers/CoursesController.html","title":"controller - CoursesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                courses\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateCourseDto } from './models/dtos/create-course.dto';\nimport { CourseDto } from './models/dtos/course.dto';\nimport { Controller } from '@nestjs/common';\nimport { abstractControllerWithSwagger } from '~shared/controllers';\nimport { Course } from './models/course.entity';\n\n@Controller('courses')\nexport class CoursesController extends abstractControllerWithSwagger({\n  model: Course,\n  modelCreate: CreateCourseDto,\n  modelVm: CourseDto,\n  auth: true\n}) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            CoursesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { CoursesController } from './courses.controller';\n\n@Module({\n  controllers: [CoursesController]\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CategoryDto } from './category.dto';\n\nexport class CreateCategoryDto extends PickType(CategoryDto, ['name']) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDto.html":{"url":"classes/CreateCourseDto.html","title":"class - CreateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/create-course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CourseDto } from './course.dto';\n\nexport class CreateCourseDto extends PickType(CourseDto, [\n  'title',\n  'description',\n  'playlistUrl'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrackDto.html":{"url":"classes/CreateTrackDto.html","title":"class - CreateTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { TrackDto } from './tack.dto';\n\nexport class CreateTrackDto extends PickType(TrackDto, [\n  'title',\n  'description'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto extends OmitType(UserDto, [\n  'id',\n  'updatedAt',\n  'createdAt'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CurrentUserService.html":{"url":"injectables/CurrentUserService.html","title":"injectable - CurrentUserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CurrentUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/current-user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    currentUser\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(req: Request)\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/current-user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n\n                \n                    \n                        getcurrentUser()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/current-user.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable, Optional, Scope } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CurrentUserService {\n  constructor(@Optional() @Inject(REQUEST) private readonly req: Request) {}\n  get currentUser(): string | null {\n    return this.req?.user?.['userId'] || null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Database.html":{"url":"interfaces/Database.html","title":"interface - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        name\n                                \n                                \n                                        port\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DbTest.html":{"url":"modules/DbTest.html","title":"module - DbTest","body":"\n                   \n\n\n\n\n    Modules\n    DbTest\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/db-test.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nconst mongod = new MongoMemoryServer();\n\nconst dbFactory = MongooseModule.forRootAsync({\n  useFactory: async () => {\n    process.env.MAILER_API_KEY = 'api_key_mailgun';\n    process.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\n    const uri = await mongod.getUri();\n\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n});\n\n@Module({\n  imports: [dbFactory],\n  exports: [dbFactory]\n})\nexport class DbTest {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultAuthObject.html":{"url":"interfaces/DefaultAuthObject.html","title":"interface - DefaultAuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultAuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        create\n                                \n                                \n                                            Optional\n                                        delete\n                                \n                                \n                                            Optional\n                                        find\n                                \n                                \n                                            Optional\n                                        findById\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultAuthObject {\n  find?: boolean;\n  findById?: boolean;\n  create?: boolean;\n  update?: boolean;\n  delete?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiException } from '../errors/api-exception';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(error: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse() as Response;\n    const req = ctx.getRequest();\n    const statusCode = error.getStatus();\n    const stacktrace = error.stack;\n    const errorName = error.response.name || error.response.error || error.name;\n    const errors = error.response.errors || null;\n    const path = req ? req.url : null;\n\n    if (statusCode === HttpStatus.UNAUTHORIZED) {\n      if (typeof error.response !== 'string') {\n        error.response.message =\n          error.response.message ||\n          'You do not have permission to access this resource';\n      }\n    }\n\n    const exception = new ApiException(\n      error.response.message,\n      errorName,\n      stacktrace,\n      errors,\n      path,\n      statusCode\n    );\n    res.status(statusCode).json(exception);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport configuration from '../../shared/config/configuration';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // console.log(context.switchToHttp().getRequest().sessionID);\n    return configuration().isAuthEnabled ? super.canActivate(context) : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        role\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  email: string;\n  role: string;\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport configuration from '../../shared/config/configuration';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().jwtSecret,\n    });\n  }\n\n  async validate(payload: any): Promise {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/local-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {\n  async canActivate(context: ExecutionContext) {\n    const isValid = (await super.canActivate(context)) as boolean;\n    const request = context.switchToHttp().getRequest();\n    await super.logIn(request);\n    return isValid;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(request: Request, username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/local.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ContextIdFactory, ModuleRef } from '@nestjs/core';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private moduleRef: ModuleRef) {\n    super({\n      passReqToCallback: true,\n      usernameField: 'email',\n    });\n  }\n\n  async validate(request: Request, username: string, password: string) {\n    const contextId = ContextIdFactory.getByRequest(request);\n    // \"AuthService\" is a request-scoped provider\n    const authService = await this.moduleRef.resolve(AuthService, contextId);\n    const user = await authService.validateUser(username, password);\n    if (!user.isActive) throw new UnauthorizedException();\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReqDto.html":{"url":"classes/LoginReqDto.html","title":"class - LoginReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResDto.html":{"url":"classes/LoginResDto.html","title":"class - LoginResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTransport\n                            \n                            \n                                    Async\n                                sendMailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTransport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMailAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailAsync(mailOptions: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/mail/mail.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : configuration()\n                        \n                    \n                        \n                            \n                                    Defined in src/mail/mail.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Mail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/mail/mail.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as mg from 'nodemailer-mailgun-transport';\nimport Mail = require('nodemailer/lib/mailer');\nimport configuration from '~shared/config/configuration';\n\n@Injectable()\nexport class MailService {\n  private readonly config = configuration();\n  private transporter: Mail;\n  constructor() {\n    this.createTransport();\n  }\n\n  private createTransport() {\n    const { mailer } = this.config;\n    this.transporter = nodemailer.createTransport(\n      mg({\n        auth: {\n          api_key: mailer.key,\n          domain: mailer.domain\n        }\n      })\n    );\n  }\n\n  async sendMailAsync(mailOptions: Mail.Options) {\n    const info = await this.transporter.sendMail(mailOptions);\n    Logger.debug(`Message sent: ${info.messageId}`);\n\n    // Preview only available when sending through an Ethereal account\n    // Logger.debug(`Preview URL: ${nodemailer.getTestMessageUrl(info)}`);\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mailer.html":{"url":"interfaces/Mailer.html","title":"interface - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCategoryResDto.html":{"url":"classes/PagedCategoryResDto.html","title":"class - PagedCategoryResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCategoryResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dto/paged-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PagedOutDto } from '~shared/models/dto/paged-out.dto';\nimport { CategoryDto } from './category.dto';\n\nexport class PagedCategoryResDto extends PagedOutDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCourseResDto.html":{"url":"classes/PagedCourseResDto.html","title":"class - PagedCourseResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCourseResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/paged-course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PagedOutDto } from '~shared/models/dto/paged-out.dto';\n\nimport { CourseDto } from './course.dto';\n\nexport class PagedCourseResDto extends PagedOutDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedReqDto.html":{"url":"classes/PagedReqDto.html","title":"class - PagedReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-in.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                opts\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-in.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            opts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsJSON()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-in.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsJSON()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-in.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/paged-in.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsJSON, IsOptional } from 'class-validator';\n\nexport class PagedReqDto {\n  @IsOptional()\n  skip?: number = 0;\n  @IsOptional()\n  limit?: number = 100;\n  @IsOptional()\n  @IsJSON()\n  search?: string;\n  @IsJSON()\n  @IsOptional()\n  opts?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedTrackResDto.html":{"url":"classes/PagedTrackResDto.html","title":"class - PagedTrackResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedTrackResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/paged-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PagedOutDto } from '~shared/models/dto/paged-out.dto';\n\nimport { TrackDto } from './tack.dto';\n\nexport class PagedTrackResDto extends PagedOutDto(TrackDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedUserResDto.html":{"url":"classes/PagedUserResDto.html","title":"class - PagedUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/paged-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserDto } from './user.dto';\nimport { PagedOutDto } from '~shared/models/dto/paged-out.dto';\n\nexport class PagedUserResDto extends PagedOutDto(UserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordToken.html":{"url":"classes/PasswordToken.html","title":"class - PasswordToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/pass-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TemporaryToken\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         TemporaryToken\n\n                                \n                            \n                        \n                            \n                                    Defined in         TemporaryToken:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions } from '@typegoose/typegoose';\n\nimport { TemporaryToken } from './temporary-token.entity';\n\n@modelOptions({ options: { customName: 'password_reset_tokens' } })\n@index({ createdAt: 1 }, { expireAfterSeconds: 1 })\nexport class PasswordToken extends TemporaryToken {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { UserDto } from '../users/models/dto/user.dto';\nimport { ProfileService } from './profile.service';\n\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly profileService: ProfileService) {}\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  async getProfile(@Req() req: Request): Promise {\n    const user = await this.profileService.getProfileAsync(req.user['email']);\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { UsersModule } from '../users/users.module';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\n\n@Module({\n  imports: [UsersModule],\n  providers: [ProfileService],\n  controllers: [ProfileController],\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfileAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfileAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileAsync(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\n\n@Injectable()\nexport class ProfileService {\n  constructor(private readonly usersService: UsersService) {}\n  async getProfileAsync(email: string): Promise {\n    return this.usersService.findOneAsync({ email });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserResDto.html":{"url":"classes/RegisterUserResDto.html","title":"class - RegisterUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                canLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            canLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassInput.html":{"url":"classes/ResetPassInput.html","title":"class - ResetPassInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/reset-pw.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ValidateTokenInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/reset-pw.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nimport { ValidateTokenInput } from './validate-token.dto';\n\nexport class ResetPassInput extends ValidateTokenInput {\n  @IsNotEmpty()\n  newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/role.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/role.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RoleGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n  deserializeUser(user: User, done: (err: Error, user: User) => void): any {\n    //Logger.log(user);\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nBaseService \n\nBaseService \n\n\n\nCurrentUserService \n\nCurrentUserService \n\n\n\nSharedModule\n\nSharedModule\n\nBaseService  -->\n\nSharedModule->BaseService \n\n\n\nCurrentUserService  -->\n\nSharedModule->CurrentUserService \n\n\n\n\n\nBaseService\n\nBaseService\n\nSharedModule -->\n\nBaseService->SharedModule\n\n\n\n\n\nCurrentUserService\n\nCurrentUserService\n\nSharedModule -->\n\nCurrentUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BaseService\n                        \n                        \n                            CurrentUserService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BaseService\n                        \n                        \n                            CurrentUserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { BaseEntity } from './models/base.entity';\nimport { BaseService, CurrentUserService } from './services';\n\nconst BaseModel = MongooseModule.forFeature([\n  { name: BaseEntity.modelName, schema: BaseEntity.schema }\n]);\n\n@Global()\n@Module({\n  imports: [BaseModel],\n  providers: [BaseService, CurrentUserService],\n  exports: [BaseService, CurrentUserService, BaseModel]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TempTokensService.html":{"url":"injectables/TempTokensService.html","title":"injectable - TempTokensService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TempTokensService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/temp-token.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entity\n                            \n                            \n                                    Private\n                                    Readonly\n                                req\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                    Async\n                                countAsync\n                            \n                            \n                                createEntity\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findAllAsync\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findByIdAsync\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Protected\n                                getUserId\n                            \n                            \n                                hardDelete\n                            \n                            \n                                hardDeleteById\n                            \n                            \n                                insert\n                            \n                            \n                                    Async\n                                insertAsync\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                softDeleteById\n                            \n                            \n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Protected\n                                    Static\n                                throwMongoError\n                            \n                            \n                                    Protected\n                                    Static\n                                toObjectId\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                updateAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenEntity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/auth/temp-token.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tokenEntity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:177\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:182\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEntity\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEntity(doc?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter: object, opts: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:112\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:91\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:96\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserId()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \nhardDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:120\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nhardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:137\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:124\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:129\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:149\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            throwMongoError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    throwMongoError(err: MongoError)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            MongoError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            toObjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toObjectId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:157\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:169\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnModelType>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            req\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Inject(REQUEST)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:25\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\n\nimport { BaseService } from '../shared';\nimport { TemporaryToken } from './models/temporary-token.entity';\n\n@Injectable()\nexport class TempTokensService extends BaseService {\n  constructor(\n    @InjectModel(TemporaryToken.modelName)\n    protected readonly tokenEntity: ReturnModelType\n  ) {\n    super(tokenEntity);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemporaryToken.html":{"url":"classes/TemporaryToken.html","title":"class - TemporaryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemporaryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/temporary-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions, prop, Ref } from '@typegoose/typegoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { BaseEntity } from '../../shared/models/base.entity';\n\nexport enum TokenType {\n  PASSWORD = 'PASSWORD_TOKEN',\n  EMAIL = 'EMAIL_TOKEN'\n}\n\n@index({ user: 1, type: 1 }, { unique: true })\n@modelOptions({ options: { customName: 'temptokens' } })\n@index({ expireAt: 1 }, { expireAfterSeconds: 0 })\nexport class TemporaryToken extends BaseEntity {\n  @prop({ required: true })\n  readonly token!: string;\n\n  @prop({ required: true, type: Date })\n  readonly expireAt!: Date;\n\n  @prop({\n    enum: TokenType,\n    type: String,\n    unique: false,\n    required: true\n  })\n  readonly type?: TokenType;\n\n  @prop({ ref: User, unique: false, required: true })\n  readonly user?: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/track.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\nimport { index, prop } from '@typegoose/typegoose';\n\n@index({ title: 1 }, { unique: true })\nexport class Track extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackDto.html":{"url":"classes/TrackDto.html","title":"class - TrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/tack.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length128)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/tack.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:12\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsAlphanumeric, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base-vm.dto';\n\nexport class TrackDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TracksController.html":{"url":"controllers/TracksController.html","title":"controller - TracksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TracksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tracks\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTrackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiResponse({type: CreateTrackDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { AbstractCrudController } from '~shared/controllers/base.controller';\nimport { ApiException } from '~shared/errors/api-exception';\nimport { PagedOutDto } from '~shared/models/dto/paged-out.dto';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { CreateTrackDto } from './models/dto/create-track.dto';\nimport { TrackDto } from './models/dto/tack.dto';\nimport { Track } from './models/track.entity';\nimport { TracksService } from './tracks.service';\n\n@Controller('tracks')\n@ApiTags('tracks')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\nexport class TracksController extends AbstractCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedResDto: PagedOutDto(TrackDto)\n}) {\n  constructor(private readonly trackService: TracksService) {\n    super(trackService);\n  }\n\n  @Post()\n  @ApiResponse({ type: CreateTrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTrackDto): Promise {\n    const exist = await this.trackService.findOneAsync({ title: input.title });\n    if (exist)\n      throw new ConflictException('Track with the title already exists');\n\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TracksModule.html":{"url":"modules/TracksModule.html","title":"module - TracksModule","body":"\n                   \n\n\n\n\n    Modules\n    TracksModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tracks/tracks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            TracksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { Track } from './models/track.entity';\nimport { TracksController } from './tracks.controller';\nimport { TracksService } from './tracks.service';\n\nconst trackModelConfig = MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n]);\n@Module({\n  imports: [trackModelConfig],\n  controllers: [TracksController],\n  providers: [TracksService],\n  exports: [trackModelConfig]\n})\nexport class TracksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TracksService.html":{"url":"classes/TracksService.html","title":"class - TracksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TracksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entity\n                            \n                            \n                                    Private\n                                    Readonly\n                                req\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                    Async\n                                countAsync\n                            \n                            \n                                createEntity\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findAllAsync\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findByIdAsync\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Protected\n                                getUserId\n                            \n                            \n                                hardDelete\n                            \n                            \n                                hardDeleteById\n                            \n                            \n                                insert\n                            \n                            \n                                    Async\n                                insertAsync\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                softDeleteById\n                            \n                            \n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Protected\n                                    Static\n                                throwMongoError\n                            \n                            \n                                    Protected\n                                    Static\n                                toObjectId\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                updateAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/tracks/tracks.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnModelType>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            req\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Inject(REQUEST)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:25\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:177\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:182\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEntity\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEntity(doc?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter: object, opts: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:112\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:91\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:96\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserId()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \nhardDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:120\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nhardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:137\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:124\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:129\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:149\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            throwMongoError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    throwMongoError(err: MongoError)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            MongoError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            toObjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toObjectId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:157\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:169\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { BaseService } from '~shared/services';\n\nimport { Track } from './models/track.entity';\n\nexport class TracksService extends BaseService {\n  constructor(\n    @InjectModel(Track.modelName)\n    protected readonly userEntity: ReturnModelType\n  ) {\n    super(userEntity);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                failedSignInAttempts\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isEmailVerified\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lockOutEndDate\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                setRandomPass\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, lowercase: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            failedSignInAttempts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lockOutEndDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: UserRole, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRandomPass\n                        \n                        \n                    \n                \n            \n            \n                \nsetRandomPass()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:81\n                                \n                            \n                    \n                        \n                                Get User's full name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:92\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport {\n  index,\n  pre,\n  prop,\n  getModelForClass,\n  ReturnModelType\n} from '@typegoose/typegoose';\nimport { hash } from 'bcrypt';\nimport { Exclude } from 'class-transformer';\nimport * as crypto from 'crypto';\n\nimport { columnSize } from '../../shared/constants';\nimport { BaseEntity } from '../../shared/models/base.entity';\nimport { Writable } from '../../shared/types';\n\nexport enum UserRole {\n  MENTEE = 'MENTEE',\n  MENTOR = 'MENTOR',\n  ADMIN = 'ADMIN'\n}\n\n@pre('save', async function () {\n  try {\n    (this as Writable).password = await hash(this.password, 10);\n  } catch (e) {\n    throw new InternalServerErrorException(e);\n  }\n})\n@index({ email: 1 }, { unique: true })\nexport class User extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly firstName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly lastName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: false\n  })\n  readonly email!: string;\n  @prop({ required: true, maxlength: columnSize.length64 })\n  @Exclude()\n  readonly password!: string;\n\n  @prop({\n    enum: UserRole,\n    type: String,\n    required: true,\n    default: UserRole.MENTEE\n  })\n  readonly role: UserRole = UserRole.MENTEE;\n\n  @prop({ required: true, default: false })\n  readonly isEmailVerified: boolean;\n  @prop({ default: undefined })\n  readonly lockOutEndDate?: Date;\n  @prop({ required: true, default: 0 })\n  readonly failedSignInAttempts!: number;\n  /**\n   * Get User's full name\n   *\n   * @readonly\n   * @memberof User\n   */\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  setRandomPass(): void {\n    (this as Writable).password = crypto\n      .randomBytes(columnSize.length32)\n      .toString();\n  }\n  confirmEmail(): void {\n    (this as Writable).isEmailVerified = true;\n  }\n  static get model(): ReturnModelType {\n    return getModelForClass(this);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                role\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()@IsEmail()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: UserRole})@IsEnum(UserRole)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsMongoId()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:12\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsEmail, IsEnum, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base-vm.dto';\n\nimport { UserRole } from '../user.entity';\n\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @ApiProperty()\n  firstName: string;\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @ApiProperty()\n  lastName: string;\n  @Expose()\n  @ApiProperty()\n  @IsEmail()\n  @MaxLength(columnSize.length64)\n  email: string;\n  @ApiProperty({ enum: UserRole })\n  @IsEnum(UserRole)\n  @Expose()\n  role: UserRole = UserRole.MENTEE;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { PagedOutDto } from '~shared/models/dto/paged-out.dto';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { AbstractCrudController } from '../shared/controllers/base.controller';\nimport { CreateUserDto } from './models/dto/create-user.dto';\nimport { UserDto } from './models/dto/user.dto';\nimport { User } from './models/user.entity';\nimport { UsersService } from './users.service';\n\n@ApiTags('Users')\n@Controller('users')\n@UseGuards(JwtAuthGuard)\n@ApiBearerAuth()\nexport class UsersController extends AbstractCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: UserDto,\n  pagedResDto: PagedOutDto(UserDto)\n}) {\n  constructor(protected readonly usersService: UsersService) {\n    super(usersService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { User } from './models/user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\nconst UserModel = MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n]);\n@Module({\n  imports: [UserModel],\n  providers: [UsersService],\n  controllers: [UsersController],\n  exports: [UsersService, UserModel]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersService.html":{"url":"classes/UsersService.html","title":"class - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                entity\n                            \n                            \n                                    Private\n                                    Readonly\n                                req\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                    Async\n                                countAsync\n                            \n                            \n                                createEntity\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findAllAsync\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                findByIdAsync\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                findOneAsync\n                            \n                            \n                                    Protected\n                                getUserId\n                            \n                            \n                                hardDelete\n                            \n                            \n                                hardDeleteById\n                            \n                            \n                                insert\n                            \n                            \n                                    Async\n                                insertAsync\n                            \n                            \n                                softDelete\n                            \n                            \n                                    Async\n                                softDeleteAsync\n                            \n                            \n                                softDeleteById\n                            \n                            \n                                    Async\n                                softDeleteByIdAsync\n                            \n                            \n                                    Protected\n                                    Static\n                                throwMongoError\n                            \n                            \n                                    Protected\n                                    Static\n                                toObjectId\n                            \n                            \n                                update\n                            \n                            \n                                    Async\n                                updateAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ReturnModelType>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            req\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Inject(REQUEST)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:25\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:177\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Query\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            countAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    countAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:182\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEntity\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEntity(doc?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    doc\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(filter: object, opts: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryList\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAllAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:83\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:105\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:112\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:91\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOneAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:96\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUserId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserId()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDelete\n                        \n                        \n                    \n                \n            \n            \n                \nhardDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:120\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hardDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nhardDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:137\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:54\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            insertAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertAsync(entity: T)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:58\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDelete\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDelete(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:124\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteAsync(filter: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:129\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            softDeleteById\n                        \n                        \n                    \n                \n            \n            \n                \nsoftDeleteById(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:140\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            softDeleteByIdAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    softDeleteByIdAsync(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:149\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            throwMongoError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    throwMongoError(err: MongoError)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n                                    \n                                            MongoError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Static\n                            toObjectId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toObjectId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Types.ObjectId\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:157\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         QueryItem\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateAsync(id: string, item: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:169\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\n\nimport { BaseService } from '../shared/services/base.service';\nimport { User } from './models/user.entity';\n\nexport class UsersService extends BaseService {\n  constructor(\n    @InjectModel(User.modelName)\n    protected readonly userEntity: ReturnModelType\n  ) {\n    super(userEntity);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateTokenInput.html":{"url":"classes/ValidateTokenInput.html","title":"class - ValidateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/validate-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class ValidateTokenInput extends PickType(LoginReqDto, ['email']) {\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Database\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/handlers/auth.handler.ts\n            \n            injectable\n            AuthHandler\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/acct-verification.dto.ts\n            \n            class\n            AcctVerifyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginReqDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/reset-pw.dto.ts\n            \n            class\n            ResetPassInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/validate-token.dto.ts\n            \n            class\n            ValidateTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/pass-token.entity.ts\n            \n            class\n            PasswordToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/models/temporary-token.entity.ts\n            \n            class\n            TemporaryToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/temp-token.service.ts\n            \n            injectable\n            TempTokensService\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/models/category.entity.ts\n            \n            class\n            Category\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/categories/models/dto/category.dto.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/categories/models/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/models/dto/paged-category.dto.ts\n            \n            class\n            PagedCategoryResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.controller.ts\n            \n            controller\n            CoursesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/models/course.entity.ts\n            \n            class\n            Course\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            CourseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/create-course.dto.ts\n            \n            class\n            CreateCourseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/paged-course.dto.ts\n            \n            class\n            PagedCourseResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Configuration\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Database\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Mailer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            AUTH_GUARD_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            columnSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/abstract-with-swagger.controller.ts\n            \n            function\n            abstractControllerWithSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/base.controller.ts\n            \n            function\n            AbstractCrudController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/api-swagger-operation.decorator.ts\n            \n            variable\n            ApiSwaggerOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authenticate.decorator.ts\n            \n            variable\n            Authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/errors/api-exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/errors/auth.errors.ts\n            \n            variable\n            authErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithSwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            DefaultAuthObject\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/shared/models/dto/base-vm.dto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-in.dto.ts\n            \n            class\n            PagedReqDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-out.dto.ts\n            \n            function\n            PagedOutDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/services/abstract.service.ts\n            \n            class\n            AbstractService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            injectable\n            BaseService\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/shared/services/current-user.service.ts\n            \n            injectable\n            CurrentUserService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/shared.module.ts\n            \n            variable\n            BaseModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            defaultAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            getAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/random-token.ts\n            \n            variable\n            generateRandomToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/validations/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateTrackDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/paged-track.dto.ts\n            \n            class\n            PagedTrackResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/tack.dto.ts\n            \n            class\n            TrackDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tracks/models/track.entity.ts\n            \n            class\n            Track\n            \n                18 %\n                (3/16)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            controller\n            TracksController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            trackModelConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.service.ts\n            \n            class\n            TracksService\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                src/users/models/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/paged-user.dto.ts\n            \n            class\n            PagedUserResDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/models/user.entity.ts\n            \n            class\n            User\n            \n                12 %\n                (3/24)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.module.ts\n            \n            variable\n            UserModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            class\n            UsersService\n            \n                0 %\n                (0/26)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            dbFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/db-test.module.ts\n            \n            variable\n            mongod\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs-addons/in-memory-db : ^1.8.10\n        \n            @nestjs/bull : ^0.1.1\n        \n            @nestjs/common : ^7.2.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.2.0\n        \n            @nestjs/microservices : ^7.2.0\n        \n            @nestjs/mongoose : ^7.0.1\n        \n            @nestjs/passport : ^7.0.0\n        \n            @nestjs/platform-express : ^7.2.0\n        \n            @nestjs/schedule : ^0.4.0\n        \n            @nestjs/swagger : ^4.5.10\n        \n            @typegoose/typegoose : ^7.2.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.14.0\n        \n            cache-manager : ^3.3.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            compression : ^1.7.4\n        \n            connect-mongo : ^3.2.0\n        \n            cookie-parser : ^1.4.5\n        \n            cookie-session : ^1.4.0\n        \n            express-rate-limit : ^5.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.9.18\n        \n            nodemailer : ^6.4.8\n        \n            nodemailer-mailgun-transport : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.5\n        \n            swagger-ui-express : ^4.1.4\n        \n            tsconfig-paths : ^3.9.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthEventEnum   (src/.../auth.enums.ts)\n                        \n                        \n                            TokenType   (src/.../temporary-token.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/models/auth.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthEventEnum\n                    \n                \n                        \n                            \n                                 UserRegistered\n                            \n                        \n                        \n                            \n                                Value : user_registered\n                            \n                        \n            \n        \n\n    src/auth/models/temporary-token.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : PASSWORD_TOKEN\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL_TOKEN\n                            \n                        \n            \n        \n\n    src/users/models/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MENTEE\n                            \n                        \n                        \n                            \n                                Value : MENTEE\n                            \n                        \n                        \n                            \n                                 MENTOR\n                            \n                        \n                        \n                            \n                                Value : MENTOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            abstractControllerWithSwagger   (src/.../abstract-with-swagger.controller.ts)\n                        \n                        \n                            AbstractCrudController   (src/.../base.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            PagedOutDto   (src/.../paged-out.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/controllers/abstract-with-swagger.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            abstractControllerWithSwagger\n                        \n                        \n                    \n                \n            \n            \n                \nabstractControllerWithSwagger(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/shared/controllers/base.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            AbstractCrudController\n                        \n                        \n                    \n                \n            \n            \n                \nAbstractCrudController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/shared/models/dto/paged-out.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PagedOutDto\n                        \n                        \n                    \n                \n            \n            \n                \nPagedOutDto(entityDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCode Clan Nigeria\n \nThe official website for code clan nigeria community\nWe are a community comprised of future innovators.\nFront-end developers, DevOps engineers, full stack developers, technical\nwriters, software engineers.\nThis community was created out of a desire to provide ongoing support\nto you wherever stage you are in your coding career.\nThis is codeclannigeria.dev\nAs part of the measures towards achieving out goal stated above, we propose to bring together the amazing talents of our community members to built a website and a mobile application that represents all that we\nstand for.\nHow You Come In\nTo get a complete documentation of the source code and the architectural structure of the application, click here.\nFeel free to put your skills to the test. Here is a suggested workflow for you to follow:\nNote: This is applicable to codeclannigeria community members only.\n\nFork this repository into your local computer\nCheck the issues pane for an issue that needs to be solved\nFind an issue that matches your current skill level and solve it\nMake your pull request to the develop branch\nWait for some feedback.\nRepeat the process\n\nWant more support? Join our slack\ncommunity and ask questions.\nThanks for your support\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Fortune Ochi\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DbTest\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TracksModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nBaseService \n\nBaseService \n\nBaseService  -->\n\nSharedModule->BaseService \n\n\n\n\n\nCurrentUserService \n\nCurrentUserService \n\nCurrentUserService  -->\n\nSharedModule->CurrentUserService \n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthHandler\n\nAuthHandler\n\nAuthModule -->\n\nAuthHandler->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoriesModule -->\n\nCategoryService->CategoriesModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nBaseService\n\nBaseService\n\nSharedModule -->\n\nBaseService->SharedModule\n\n\n\n\n\nCurrentUserService\n\nCurrentUserService\n\nSharedModule -->\n\nCurrentUserService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    33 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractDocument   (src/.../abstract.type.ts)\n                        \n                        \n                            ClassType   (src/.../abstract.type.ts)\n                        \n                        \n                            DeleteResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            IdType   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryItem   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryList   (src/.../abstract.type.ts)\n                        \n                        \n                            UpdateResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            Writable   (src/.../abstract.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/types/abstract.type.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IdType\n                \n            \n            \n                \n                        string | number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Writable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiSwaggerOperation   (src/.../api-swagger-operation.decorator.ts)\n                        \n                        \n                            AUTH_GUARD_TYPE   (src/.../constants.ts)\n                        \n                        \n                            Authenticate   (src/.../authenticate.decorator.ts)\n                        \n                        \n                            authErrors   (src/.../auth.errors.ts)\n                        \n                        \n                            BaseModel   (src/.../shared.module.ts)\n                        \n                        \n                            columnSize   (src/.../constants.ts)\n                        \n                        \n                            Config   (src/.../app.module.ts)\n                        \n                        \n                            Database   (src/.../app.module.ts)\n                        \n                        \n                            dbFactory   (test/.../db-test.module.ts)\n                        \n                        \n                            defaultAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            generateRandomToken   (src/.../random-token.ts)\n                        \n                        \n                            getAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            mongod   (test/.../db-test.module.ts)\n                        \n                        \n                            trackModelConfig   (src/.../tracks.module.ts)\n                        \n                        \n                            UserModel   (src/.../users.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/api-swagger-operation.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiSwaggerOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: {\n  title: string;\n  description?: string;\n  operationId?: string;\n  deprecated?: boolean;\n}): MethodDecorator => {\n  return (target, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const controllerName = target.constructor.name;\n    ApiOperation({\n      ...options,\n      operationId: `${controllerName.substr(\n        0,\n        controllerName.indexOf('Controller'),\n      )}_${propertyKey}`,\n    })(target, propertyKey, descriptor);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  length8: 2 ** 3,\n  length16: 2 ** 4,\n  length32: 2 ** 5,\n  length64: 2 ** 6,\n  length128: 2 ** 7,\n  length256: 2 ** 8,\n  length512: 2 ** 9,\n  length1024: 2 ** 10\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authenticate.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthEnable: boolean,\n  decorator: MethodDecorator\n): MethodDecorator => {\n  return (target, key: string | symbol, value: any): any => {\n    if (isAuthEnable) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/errors/auth.errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  INVALID_LOGIN_ATTEMPT: new UnauthorizedException(\n    'Email or Password is incorrect'\n  ),\n  INVALID_TOKEN: new ForbiddenException('Invalid token'),\n  EXPIRED_TOKEN: new NotFoundException('Token expired')\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/shared.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: BaseEntity.modelName, schema: BaseEntity.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Database\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n})\n                        \n                    \n\n\n            \n        \n\n    test/db-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRootAsync({\n  useFactory: async () => {\n    process.env.MAILER_API_KEY = 'api_key_mailgun';\n    process.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\n    const uri = await mongod.getUri();\n\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mongod\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoMemoryServer()\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/get-auth-obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DefaultAuthObject\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  find: true,\n  findById: true,\n  create: true,\n  update: true,\n  delete: true,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  authObj: DefaultAuthObject | boolean,\n): DefaultAuthObject => {\n  let auth = null;\n\n  if (!!authObj) {\n    return auth;\n  }\n\n  if (authObj === true) {\n    auth = defaultAuthObj;\n  } else if (authObj === false) {\n    auth = {\n      find: false,\n      findById: false,\n      create: false,\n      update: false,\n      delete: false,\n    };\n  } else {\n    auth = {\n      ...defaultAuthObj,\n      ...authObj,\n    };\n  }\n\n  return auth;\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/validations/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): any => {\n  return Joi.object({\n    NODE_ENV: Joi.string()\n      .valid('development', 'production', 'test')\n      .default('development'),\n    PORT: Joi.number().default(3000),\n    JWT_SECRET: Joi.string().required(),\n    JWT_VALIDITY_HOURS: Joi.number().required(),\n    ROOT_URL: Joi.string().uri().required(),\n    REDIS_SERVER_URL: Joi.string().uri().default('redis://localhost:6379'),\n    DATABASE_PORT: Joi.number().default(27017),\n    DATABASE_HOST: Joi.string().default('localhost'),\n    DATABASE_NAME: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n    MAILER_API_KEY: Joi.string().required(),\n    MAILER_DOMAIN: Joi.string().required(),\n    API_AUTH_ENABLED: Joi.string().valid('true', 'false').default('true'),\n    APP_EMAIL: Joi.string().email().required()\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/random-token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandomToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n  randomBytes(size).toString('hex')\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  bearerAuthName: 'x-auth'\n}\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            trackModelConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/users/users.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
