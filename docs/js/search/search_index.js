var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControllerOptions.html",[0,1.03,1,2.922]],["body/interfaces/AbstractControllerOptions.html",[0,1.821,1,5.165,2,2.183,3,0.148,4,0.133,5,0.119,6,4.033,7,2.595,8,4.033,9,0.488,10,1.296,11,5.793,12,4.728,13,0.642,14,0.011,15,0.241,16,3.38,17,1.869,18,2.65,19,3.552,20,0.203,21,2.153,22,3.365,23,3.365,24,4.728,25,1.088,26,1.712,27,3.771,28,4.362,29,4.362,30,4.362,31,4.033,32,0.007,33,0.008,34,0.007]],["title/interfaces/AbstractControllerWithAuthOptions.html",[0,1.03,24,2.922]],["body/interfaces/AbstractControllerWithAuthOptions.html",[0,1.811,1,5.136,2,2.156,3,0.147,4,0.132,5,0.117,6,3.985,7,2.564,8,3.985,9,0.482,10,1.286,11,3.985,13,0.463,14,0.011,15,0.238,16,3.855,17,1.847,18,3.115,19,3.509,20,0.202,21,2.141,22,3.324,23,3.324,24,5.136,25,1.182,26,2.332,27,3.725,28,4.31,29,4.31,30,4.31,31,3.985,32,0.007,33,0.008,34,0.007]],["title/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.03,27,2.922]],["body/interfaces/AbstractControllerWithSwaggerOptions.html",[0,1.793,1,4.63,2,2.112,3,0.144,4,0.129,5,0.115,6,3.902,7,2.511,8,3.902,9,0.472,10,1.269,11,3.902,12,5.351,13,0.702,14,0.011,15,0.234,16,3.31,17,1.809,18,2.596,19,3.436,20,0.2,21,2.12,22,3.255,23,3.255,24,5.087,25,1.171,26,1.656,27,4.63,28,6.19,29,4.22,30,6.19,31,3.902,32,0.006,33,0.008,34,0.006]],["title/classes/AcctVerifyDto.html",[35,0.168,36,3.125]],["body/classes/AcctVerifyDto.html",[3,0.144,4,0.13,5,0.116,9,0.475,10,1.274,13,0.634,14,0.011,15,0.327,20,0.144,25,0.845,32,0.007,33,0.008,34,0.007,35,0.267,36,4.971,37,0.923,38,6.83,39,4.674,40,6.497,41,6.497,42,6.497,43,1.34,44,1.901,45,5.901,46,1.32,47,5.325,48,5.532,49,5.325,50,5.325,51,3.274,52,1.19,53,1.933,54,3.115,55,4.674,56,4.674,57,2.27]],["title/classes/ApiException.html",[35,0.168,58,2.174]],["body/classes/ApiException.html",[3,0.101,4,0.091,5,0.081,9,0.332,10,1,13,0.677,14,0.011,15,0.234,20,0.101,21,1.068,32,0.005,33,0.006,34,0.005,35,0.147,37,0.644,43,1.416,44,1.994,46,1.41,52,0.831,58,2.715,59,7.035,60,3.265,61,2.114,62,5.6,63,6.669,64,4.793,65,6.669,66,6.669,67,3.296,68,6.669,69,6.168,70,2.421,71,3.719,72,2.744,73,5.296,74,1.392,75,0.855,76,3.607,77,3.719,78,3.719,79,3.719,80,3.719,81,3.719,82,3.719,83,3.719,84,1.907,85,0.904,86,3.719,87,3.719,88,3.719,89,3.719,90,3.719,91,3.719,92,3.719,93,3.719,94,3.719,95,3.719]],["title/controllers/AppController.html",[7,2.011,96,3.125]],["body/controllers/AppController.html",[3,0.155,4,0.139,5,0.124,7,3.344,9,0.51,14,0.011,15,0.337,20,0.155,32,0.007,33,0.009,34,0.007,35,0.226,43,1.152,44,1.468,46,1.02,52,1.278,85,1.389,96,5.197,97,2.711,98,5.018,99,2.083,100,7.981,101,5.716,102,1.642,103,4.962,104,5.018,105,4.558,106,5.716,107,5.018,108,4.214,109,1.552,110,2.14,111,5.716]],["title/modules/AppModule.html",[112,1.289,113,3.125]],["body/modules/AppModule.html",[3,0.097,4,0.087,5,0.078,14,0.011,15,0.371,20,0.139,32,0.004,33,0.006,34,0.004,35,0.141,85,0.868,96,4.444,97,2.44,103,4.728,104,3.134,112,1.833,113,6.391,114,1.575,115,1.694,116,1.83,117,1.83,118,1.694,119,2.971,120,1.694,121,3.134,122,3.134,123,3.134,124,5.019,125,5.019,126,5.019,127,5.019,128,5.019,129,5.019,130,4.728,131,5.019,132,4.478,133,4.067,134,2.637,135,1.759,136,1.632,137,2.847,138,2.637,139,3.571,140,3.134,141,1.994,142,1.83,143,3.571,144,3.571,145,3.571,146,3.571,147,3.571,148,3.571,149,1.575,150,2.089,151,3.571,152,4.101,153,3.571,154,3.134,155,2.847,156,2.461,157,3.571,158,1.706,159,3.545,160,3.134,161,3.134,162,2.152,163,3.134,164,3.134,165,3.134,166,3.134,167,3.009,168,3.134,169,2.847,170,2.847,171,2.847,172,2.847,173,1.759]],["title/injectables/AppService.html",[103,2.752,174,1.748]],["body/injectables/AppService.html",[3,0.165,4,0.148,5,0.132,9,0.543,14,0.011,15,0.268,20,0.165,32,0.007,33,0.009,34,0.007,35,0.241,43,1.197,46,1.086,85,1.479,99,2.164,102,1.748,103,4.755,110,2.278,174,3.019,175,3.56,176,5.342,177,8.154,178,6.086,179,6.086,180,6.086]],["title/controllers/AuthController.html",[7,2.011,181,3.125]],["body/controllers/AuthController.html",[3,0.057,4,0.051,5,0.046,7,0.997,9,0.187,13,0.615,14,0.011,15,0.338,18,0.812,20,0.057,21,1.975,32,0.003,33,0.004,34,0.003,35,0.083,36,4.573,40,3.003,41,3.003,42,3.003,44,1.511,46,1.05,52,0.47,54,2.917,57,3.27,58,2.218,61,1.47,67,1.829,70,0.961,74,2.203,75,1.353,84,1.078,85,0.511,97,0.997,99,1.011,102,1.69,105,1.676,109,1.175,110,2.055,135,2.457,149,0.927,150,1.23,158,2.568,181,2.522,182,1.845,183,1.845,184,3.301,185,4.327,186,3.422,187,3.422,188,3.422,189,3.422,190,3.422,191,2.102,192,4.047,193,3.238,194,2.102,195,2.102,196,2.102,197,2.102,198,3.003,199,2.102,200,3.059,201,2.102,202,3.067,203,2.102,204,2.102,205,2.982,206,0.896,207,2.102,208,3.959,209,2.102,210,3.437,211,3.422,212,2.102,213,2.102,214,2.102,215,4.987,216,3.422,217,3.422,218,2.102,219,2.102,220,2.557,221,2.102,222,2.102,223,3.437,224,3.422,225,2.102,226,2.102,227,2.002,228,1.292,229,1.549,230,1.549,231,1.23,232,1.676,233,1.23,234,3.422,235,3.422,236,2.002,237,3.422,238,1.23,239,2.102,240,2.102,241,1.845,242,2.661,243,1.845,244,1.676,245,1.23,246,3.217,247,0.896,248,2.531,249,1.549,250,2.661,251,1.676,252,1.549,253,2.102,254,2.102,255,2.102,256,2.358,257,1.845,258,2.102,259,2.102,260,2.102,261,1.845,262,1.549,263,1.676,264,1.676,265,2.102,266,2.102,267,2.809,268,2.102,269,4.047,270,2.102,271,2.728,272,3.105,273,2.102,274,2.102,275,1.292,276,2.102,277,3.619,278,4.377,279,2.102,280,3.017,281,2.102,282,2.661,283,1.292,284,2.102,285,2.102,286,2.102,287,1.676,288,2.102,289,4.659,290,2.102,291,3.422,292,3.003,293,3.422,294,2.102,295,3.422,296,1.845,297,3.003,298,1.845,299,2.102,300,3.003,301,3.422,302,3.422,303,3.422,304,4.987,305,3.422,306,3.422,307,3.422,308,2.102,309,3.003,310,3.422,311,3.422,312,3.003,313,1.41,314,3.422,315,2.102,316,2.102,317,2.102,318,2.358,319,1.845,320,3.003,321,2.102,322,1.845,323,1.448,324,2.102,325,2.728,326,2.102,327,2.102,328,2.102,329,2.102]],["title/modules/AuthModule.html",[112,1.289,124,2.922]],["body/modules/AuthModule.html",[3,0.11,4,0.099,5,0.088,14,0.011,15,0.367,20,0.11,32,0.005,33,0.007,34,0.005,35,0.161,75,0.937,85,0.99,97,2.678,112,1.971,114,1.798,115,1.933,116,2.089,117,2.089,118,1.933,119,3.193,120,3.074,124,5.9,133,4.245,134,2.895,135,2.008,136,1.863,138,2.895,141,2.275,142,2.089,156,2.808,158,1.352,159,4.466,162,1.204,181,4.777,242,4.675,243,3.577,250,5.118,251,3.249,263,3.249,264,3.249,330,3.577,331,4.075,332,3.577,333,3.577,334,5.239,335,5.239,336,5.604,337,3.249,338,4.075,339,2.808,340,4.163,341,1.525,342,4.075,343,3.004,344,4.075,345,4.075,346,3.577,347,3.577,348,2.384,349,3.577,350,2.275,351,3.577,352,3.577,353,3.577,354,3.249]],["title/interfaces/AuthObj.html",[0,1.03,355,2.752]],["body/interfaces/AuthObj.html",[0,1.796,2,2.118,3,0.144,4,0.13,5,0.115,9,0.474,10,1.272,13,0.577,14,0.011,15,0.234,16,2.616,18,2.051,20,0.183,26,2.636,32,0.006,33,0.008,34,0.006,247,2.263,355,5.404,356,3.914,357,3.914,358,5.73,359,5.73,360,3.625,361,3.446,362,4.37,363,4.37,364,3.451,365,3.451,366,2.6]],["title/injectables/AuthService.html",[174,1.748,250,2.607]],["body/injectables/AuthService.html",[3,0.062,4,0.056,5,0.05,9,0.204,12,4.21,13,0.684,14,0.011,15,0.318,20,0.062,21,1.314,22,2.248,32,0.003,33,0.004,34,0.003,35,0.09,43,1.275,46,1.145,57,2.23,61,1.603,62,1.682,64,2.373,70,1.671,72,0.881,74,2.402,75,1.475,84,1.17,85,0.554,99,1.08,102,1.755,109,0.993,110,1.958,136,1.043,149,1.613,150,1.335,158,2.588,162,0.674,174,1.507,175,1.335,184,3.355,200,3.008,208,1.954,210,2.519,220,1.17,246,3.651,247,0.973,248,3.574,249,1.682,250,2.248,262,4.22,263,1.819,264,1.819,267,3.717,272,3.375,277,2.813,278,1.819,280,3.29,289,2.97,292,2.003,296,2.003,297,4.015,298,3.209,312,2.003,318,4.863,319,3.209,320,6.328,322,2.003,323,2.519,325,2.915,336,3.856,346,2.003,347,2.003,367,2.003,368,4.574,369,3.656,370,3.656,371,3.656,372,4.574,373,3.656,374,2.003,375,4.574,376,2.281,377,2.281,378,2.281,379,3.656,380,2.281,381,3.656,382,2.281,383,3.656,384,2.281,385,2.281,386,2.281,387,3.656,388,4.574,389,2.281,390,4.015,391,2.915,392,1.682,393,2.003,394,1.819,395,1.403,396,1.819,397,2.281,398,2.373,399,1.819,400,2.915,401,2.281,402,2.281,403,1.819,404,2.281,405,3.656,406,2.281,407,3.209,408,3.656,409,2.281,410,2.281,411,2.281,412,5.232,413,2.281,414,2.281,415,2.281,416,2.519,417,2.519,418,3.656,419,1.274,420,2.281,421,2.281,422,2.281,423,3.656,424,2.281,425,2.281,426,2.003,427,2.003,428,2.281,429,2.281,430,2.281,431,1.144,432,3.656,433,3.656,434,2.003,435,3.656,436,3.656,437,2.281,438,2.281,439,2.281,440,2.281,441,2.281,442,2.003,443,2.281,444,2.281,445,3.656,446,1.819]],["title/guards/AuthenticationGuard.html",[252,3.125,447,3.38]],["body/guards/AuthenticationGuard.html",[3,0.121,4,0.109,5,0.097,9,0.397,13,0.581,14,0.011,15,0.334,20,0.121,21,1.278,32,0.005,33,0.007,34,0.005,35,0.176,46,1.21,54,3.509,57,1.897,61,1.695,70,2.035,74,2.54,75,1.559,85,1.081,99,1.772,102,1.723,108,3.281,109,1.209,110,2.54,149,1.964,150,2.603,158,2.25,162,1.772,174,2.472,184,3.328,193,5.068,200,3.095,220,3.075,232,4.782,238,2.603,246,3.102,250,4.801,251,3.548,252,4.421,257,3.906,272,2.646,280,2.281,448,3.548,449,3.906,450,5.788,451,5.998,452,4.45,453,4.45,454,4.782,455,5.788,456,4.45,457,3.548,458,5.998,459,4.45,460,3.281,461,3.906,462,4.45,463,3.548,464,4.45,465,4.45,466,4.45,467,3.906]],["title/classes/AvatarUploadDto.html",[35,0.168,468,3.125]],["body/classes/AvatarUploadDto.html",[3,0.162,4,0.146,5,0.176,9,0.534,10,1.369,13,0.621,14,0.011,15,0.264,20,0.162,32,0.007,33,0.009,34,0.007,35,0.237,37,1.037,43,1.185,44,1.537,46,1.067,52,1.338,76,3.09,468,5.344,469,6.364,470,5.253,471,5.253,472,5.344,473,5.344,474,5.984]],["title/interfaces/BaseControllerOptions.html",[0,1.03,475,2.922]],["body/interfaces/BaseControllerOptions.html",[0,1.788,2,2.099,3,0.143,4,0.128,5,0.114,7,2.496,9,0.469,10,1.264,12,4.613,13,0.631,14,0.011,15,0.232,16,3.298,17,1.798,18,2.586,19,3.416,20,0.2,21,2.298,22,3.236,23,3.236,25,1.062,26,1.647,32,0.006,33,0.008,34,0.006,475,5.073,476,3.626,477,3.626,478,3.879,479,4.14,480,4.613,481,3.626,482,2.593,483,3.879,484,2.812,485,3.879,486,2.812,487,3.879,488,1.695,489,4.195]],["title/interfaces/BaseControllerWithAuthOptions.html",[0,1.03,480,2.922]],["body/interfaces/BaseControllerWithAuthOptions.html",[0,1.779,2,2.075,3,0.141,4,0.127,5,0.113,7,2.467,9,0.464,10,1.255,13,0.446,14,0.011,15,0.229,16,3.801,17,1.777,18,3.079,19,3.376,20,0.199,21,2.29,22,3.198,23,3.198,25,1.161,26,2.291,32,0.006,33,0.008,34,0.006,475,5.045,476,3.584,477,3.584,478,3.834,479,2.78,480,5.045,481,3.584,482,2.563,483,3.834,484,2.78,485,3.834,486,2.78,487,3.834,488,1.675,489,4.147]],["title/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.03,481,2.922]],["body/interfaces/BaseControllerWithSwaggerOpts.html",[0,1.72,2,1.934,3,0.131,4,0.118,5,0.105,7,2.3,9,0.433,10,1.199,12,5.698,13,0.733,14,0.011,15,0.214,16,3.128,17,1.657,18,2.453,19,3.147,20,0.192,21,2.24,22,2.981,23,2.981,25,1.123,26,1.517,32,0.006,33,0.008,34,0.006,475,4.375,476,3.341,477,3.341,478,3.574,479,2.591,480,4.879,481,4.375,482,3.701,483,3.574,484,4.014,485,3.574,486,4.014,487,3.574,488,2.42,489,3.866]],["title/classes/BaseDto.html",[35,0.168,490,1.871]],["body/classes/BaseDto.html",[3,0.142,4,0.128,5,0.114,9,0.468,10,1.262,13,0.63,14,0.011,15,0.324,20,0.142,32,0.006,33,0.008,34,0.006,35,0.291,37,0.909,43,1.092,44,1.888,46,1.311,52,1.173,53,1.904,76,3.134,109,2.304,313,3.19,431,2.3,490,2.948,491,4.606,492,2.668,493,2.668,494,4.108,495,5.247,496,3.069,497,5.247,498,5.247,499,3.538,500,2.027,501,4.925]],["title/classes/BaseEntity.html",[35,0.168,502,2.266]],["body/classes/BaseEntity.html",[3,0.069,4,0.062,5,0.055,9,0.228,10,0.755,13,0.611,14,0.011,15,0.267,17,2.745,20,0.069,21,1.601,25,0.634,26,1.744,32,0.003,33,0.005,34,0.003,35,0.101,37,0.443,43,0.805,44,1.783,46,1.398,61,1.734,99,1.182,102,1.601,109,2.253,110,1.497,162,2.39,173,3.515,198,2.243,206,2.735,246,1.168,247,1.089,313,3.008,350,3.378,366,2.337,431,1.542,492,1.788,493,1.788,502,3.975,503,2.243,504,5.574,505,2.882,506,2.882,507,2.882,508,3.923,509,3.539,510,2.882,511,3.261,512,3.261,513,3.261,514,3.51,515,4.927,516,2.933,517,3.261,518,2.555,519,4.483,520,4.22,521,3.261,522,2.555,523,2.555,524,2.555,525,2.555,526,2.555,527,2.555,528,2.555,529,2.555,530,2.555,531,3.753,532,3.42,533,2.555,534,2.555,535,2.555,536,2.555,537,2.555,538,2.555,539,2.555,540,2.555,541,4.174,542,1.366,543,2.555,544,2.037,545,1.884,546,2.037,547,3.112,548,3.51,549,2.555,550,2.555,551,2.555,552,2.555,553,2.555,554,2.555,555,2.555,556,2.555,557,3.999,558,2.555,559,3.999,560,4.325,561,3.999]],["title/interfaces/BufferedFile.html",[0,1.03,562,2.367]],["body/interfaces/BufferedFile.html",[0,1.301,2,2.137,3,0.145,4,0.131,5,0.116,9,0.478,10,1.279,13,0.704,14,0.011,20,0.145,32,0.007,33,0.008,34,0.007,43,1.434,72,2.867,562,3.78,563,4.702,564,4.702,565,8.341,566,7.798,567,7.798,568,7.798,569,7.798,570,6.845]],["title/classes/CategoriesController.html",[35,0.168,571,3.125]],["body/classes/CategoriesController.html",[3,0.105,4,0.094,5,0.084,9,0.344,13,0.658,14,0.011,15,0.36,18,1.489,20,0.105,21,1.108,25,0.862,32,0.005,33,0.007,34,0.005,35,0.153,37,0.668,44,0.99,46,0.969,52,0.862,58,3.225,61,1.357,67,3.65,70,1.763,74,2.034,75,1.446,84,1.977,85,0.937,99,1.605,102,1.108,109,1.047,110,1.443,158,1.802,184,2.682,200,2.316,206,2.316,208,2.903,227,2.255,228,3.341,231,3.178,233,2.255,236,3.995,247,1.643,272,1.701,275,2.371,277,3.341,280,1.977,282,2.371,283,2.371,360,1.643,364,2.785,365,1.977,366,1.489,395,2.371,479,2.06,482,1.9,484,2.06,486,2.06,488,1.242,571,4.005,572,3.074,573,3.868,574,3.855,575,5.035,576,3.855,577,5.433,578,2.371,579,5.035,580,2.657,581,2.842,582,4.594,583,2.503,584,2.842,585,2.842,586,3.855,587,3.341,588,3.034,589,2.842,590,2.153,591,2.503,592,2.06,593,3.034,594,2.503,595,3.384,596,4.084,597,3.384,598,3.527,599,3.855,600,2.842,601,3.384,602,3.341,603,3.744,604,2.842,605,3.855,606,2.371,607,2.503,608,2.657,609,2.503,610,2.503,611,3.855,612,1.399,613,3.855,614,3.855,615,2.503]],["title/modules/CategoriesModule.html",[112,1.289,125,2.922]],["body/modules/CategoriesModule.html",[3,0.138,4,0.124,5,0.11,14,0.011,15,0.357,20,0.138,32,0.006,33,0.008,34,0.006,35,0.201,75,1.168,85,1.235,97,2.411,112,2.202,114,2.243,115,2.411,116,2.606,117,2.606,118,2.411,119,3.226,120,3.435,125,5.454,134,3.356,135,2.504,136,2.324,138,2.606,141,2.838,142,2.606,158,1.686,348,2.973,350,2.838,571,4.826,575,6.219,595,4.462,596,3.3,597,4.462,616,4.462,617,4.462,618,4.052,619,3.83,620,3.3,621,5.083,622,5.774,623,4.462,624,4.462,625,2.973,626,3.126]],["title/classes/Category.html",[35,0.168,596,2.752]],["body/classes/Category.html",[3,0.085,4,0.077,5,0.068,9,0.5,10,0.886,13,0.661,14,0.011,15,0.247,17,2.636,20,0.085,21,0.905,25,0.744,26,1.468,32,0.004,33,0.006,34,0.004,35,0.125,37,0.546,43,0.916,44,1.946,46,1.442,61,1.852,75,1.428,99,1.386,102,1.785,109,2.268,162,2.426,173,3.274,206,3.076,313,2.561,341,1.179,366,2.166,431,1.468,492,1.703,493,1.703,502,4.463,505,2.745,506,2.745,507,2.745,508,3.635,509,3.28,510,2.745,511,3.28,512,3.28,513,3.28,516,3.185,517,3.887,519,4.075,520,3.469,521,3.635,531,3.28,532,3.061,541,2.745,542,1.683,547,1.758,596,3.046,627,2.764,628,1.872,629,3.046,630,3.046,631,3.448,632,3.233,633,3.149,634,3.663,635,1.937,636,1.937,637,1.937,638,1.937,639,1.937,640,1.937,641,1.937,642,1.937,643,1.937,644,1.937,645,1.937,646,1.937,647,1.937,648,1.179,649,1.937,650,1.937,651,1.937]],["title/classes/CategoryDto.html",[35,0.168,582,2.607]],["body/classes/CategoryDto.html",[3,0.128,4,0.115,5,0.103,9,0.422,10,1.18,13,0.663,14,0.011,15,0.328,20,0.169,25,1.11,32,0.006,33,0.008,34,0.006,35,0.295,37,0.82,43,1.264,44,1.987,46,1.38,53,1.718,75,1.608,109,2.158,313,2.576,341,1.772,431,1.955,488,1.525,490,3.506,492,2.268,493,2.268,494,3.843,496,2.769,499,3.199,500,1.828,582,3.843,598,3.073,628,1.888,634,3.199,648,1.772,652,3.774,653,2.463,654,3.774,655,4.733,656,4.733,657,4.733,658,3.073,659,3.073,660,3.073,661,2.857,662,2.332,663,2.529,664,2.332,665,4.155]],["title/interfaces/Cloudinary.html",[0,1.03,666,2.48]],["body/interfaces/Cloudinary.html",[0,1.773,2,1.798,3,0.122,4,0.11,5,0.098,9,0.402,10,1.143,13,0.585,14,0.011,17,1.54,20,0.122,26,1.41,32,0.006,33,0.007,34,0.006,43,1.425,72,2.637,75,1.84,149,2.669,162,1.332,167,4.269,416,4.168,417,4.168,666,4.452,667,3.106,668,5.517,669,5.611,670,4.168,671,5.029,672,3.926,673,4.487,674,4.168,675,4.459,676,4.459,677,4.459,678,4.459,679,4.459,680,3.322,681,3.322,682,3.322,683,3.322,684,3.322,685,3.322,686,3.322,687,3.322,688,3.106,689,3.106,690,3.322,691,3.322,692,3.322,693,3.322,694,3.322,695,3.322,696,3.322]],["title/interfaces/Configuration.html",[0,1.03,149,1.871]],["body/interfaces/Configuration.html",[0,1.677,2,1.575,3,0.107,4,0.096,5,0.086,9,0.352,10,1.044,13,0.703,14,0.011,17,1.349,20,0.107,26,1.994,32,0.005,33,0.007,34,0.005,43,1.421,72,2.985,75,1.587,149,2.812,162,1.167,167,4.687,416,5.006,417,5.006,666,4.687,667,2.721,668,4.757,669,4.073,670,3.808,671,5.326,672,3.587,673,4.927,674,3.808,675,5.355,676,5.355,677,5.355,678,5.355,679,5.355,680,2.911,681,2.911,682,2.911,683,2.911,684,2.911,685,2.911,686,2.911,687,2.911,688,2.721,689,2.721,690,2.911,691,2.911,692,2.911,693,2.911,694,2.911,695,2.911,696,2.911]],["title/interfaces/ControllerAuth.html",[0,1.03,361,2.752]],["body/interfaces/ControllerAuth.html",[0,1.745,2,1.994,3,0.136,4,0.122,5,0.108,9,0.446,10,1.223,13,0.675,14,0.011,15,0.22,16,2.462,18,1.931,20,0.176,26,2.524,32,0.006,33,0.008,34,0.006,247,2.13,355,5.671,356,3.684,357,3.684,358,3.684,359,3.684,360,3.5,361,4.204,362,5.111,363,5.111,364,4.036,365,4.036,366,3.041]],["title/classes/Course.html",[35,0.168,697,2.922]],["body/classes/Course.html",[3,0.074,4,0.067,5,0.059,9,0.458,10,0.795,13,0.666,14,0.011,15,0.227,17,2.623,20,0.074,21,0.783,25,0.667,26,1.316,32,0.003,33,0.005,34,0.003,35,0.108,37,0.473,43,1.122,44,1.972,46,1.439,61,1.772,72,1.625,99,1.243,102,1.658,109,2.302,162,2.49,173,3.585,206,3.102,313,2.379,341,1.021,366,1.984,431,1.316,492,1.527,493,1.527,502,4.369,505,2.461,506,2.461,507,2.461,508,3.376,509,3.004,510,2.461,511,3.004,512,3.004,513,3.004,516,3.013,517,4.149,519,3.855,520,3.223,521,3.376,531,3.004,532,2.844,541,3.648,542,1.457,547,3.223,612,2.095,628,2.629,629,3.747,630,3.747,631,4.223,632,2.899,634,3.555,635,1.677,636,1.677,637,1.677,638,1.677,639,1.677,640,1.677,641,1.677,642,1.677,643,1.677,644,1.677,645,1.677,646,1.677,647,1.677,648,1.021,649,1.677,650,1.677,651,1.677,653,1.808,697,2.899,698,2.394,699,4.094,700,3.785,701,2.727,702,2.349,703,2.727,704,2.727,705,2.727,706,1.879,707,2.727]],["title/classes/CourseDto.html",[35,0.168,708,2.752]],["body/classes/CourseDto.html",[3,0.116,4,0.104,5,0.093,9,0.381,10,1.102,13,0.676,14,0.011,15,0.34,20,0.158,25,1.054,32,0.005,33,0.007,34,0.005,35,0.283,37,0.74,43,1.29,44,1.981,45,4.649,46,1.408,52,0.954,53,1.55,72,2.253,76,2.831,109,2.213,313,2.404,341,1.598,431,1.825,488,1.375,490,3.403,492,2.117,493,2.117,494,3.586,496,2.498,499,3.263,500,1.649,612,2.41,628,1.703,634,3.036,648,1.598,653,2.338,658,2.772,659,2.772,660,2.772,661,2.666,662,2.104,663,2.282,664,2.104,699,5.295,700,4.896,708,3.786,709,3.404,710,4.27,711,4.27,712,4.27,713,4.27,714,4.27,715,4.27,716,4.27,717,3.411,718,2.772,719,3.748,720,2.942,721,3.748]],["title/classes/CoursesController.html",[35,0.168,722,3.125]],["body/classes/CoursesController.html",[3,0.105,4,0.095,5,0.084,9,0.346,13,0.659,14,0.011,15,0.361,18,1.499,20,0.105,21,1.115,25,0.616,32,0.005,33,0.007,34,0.005,35,0.154,37,0.672,44,0.997,46,0.974,52,0.867,58,3.236,61,1.363,67,3.661,70,1.774,74,2.043,75,1.254,84,1.989,85,0.943,99,1.613,102,1.115,109,1.054,110,1.453,158,1.287,184,2.691,200,2.327,206,2.327,208,2.917,227,2.27,228,3.356,231,3.193,233,2.27,236,4.007,247,1.654,272,1.712,275,2.386,277,3.356,280,1.989,282,2.386,283,2.386,360,1.654,364,3.236,365,1.989,366,1.499,395,2.386,479,2.074,482,1.912,484,2.074,486,2.074,488,1.25,578,2.386,580,2.674,581,2.861,583,2.519,584,2.861,585,2.861,587,3.356,588,3.047,589,2.861,590,2.167,591,2.519,592,2.074,593,3.047,594,2.519,600,2.861,602,3.882,603,4.351,604,2.861,606,2.386,607,2.519,608,2.674,609,2.519,610,2.519,612,1.981,615,2.519,697,4.351,708,4.447,720,3.761,722,4.023,723,3.406,724,3.881,725,5.049,726,3.881,727,5.458,728,5.518,729,3.881,730,3.406,731,3.406,732,3.881,733,3.406,734,3.881,735,3.881,736,2.861,737,3.406]],["title/modules/CoursesModule.html",[112,1.289,126,2.922]],["body/modules/CoursesModule.html",[3,0.134,4,0.121,5,0.108,14,0.011,15,0.355,20,0.134,32,0.006,33,0.008,34,0.006,35,0.196,75,1.139,85,1.204,97,2.351,112,2.175,114,2.187,115,2.351,116,2.541,117,2.541,118,2.351,119,3.525,120,3.394,126,5.647,134,3.302,135,2.442,136,2.266,138,2.541,141,2.767,142,2.541,158,1.644,348,2.899,350,2.767,619,3.768,620,3.217,625,2.899,626,3.048,697,3.415,722,4.748,725,6.36,730,4.35,731,4.35,738,4.35,739,4.35,740,4.35,741,3.951,742,4.956,743,5.705,744,4.35,745,4.35]],["title/classes/CreateCategoryDto.html",[35,0.168,579,3.125]],["body/classes/CreateCategoryDto.html",[3,0.17,4,0.153,5,0.136,14,0.011,15,0.328,20,0.17,25,0.992,32,0.008,33,0.009,34,0.008,35,0.248,37,1.084,51,3.847,52,1.399,75,1.438,579,5.489,582,3.847,601,5.492,653,2.203,746,5.492,747,5.492,748,6.256]],["title/classes/CreateCourseDto.html",[35,0.168,728,3.125]],["body/classes/CreateCourseDto.html",[3,0.169,4,0.152,5,0.135,14,0.011,15,0.328,20,0.169,25,0.989,32,0.008,33,0.009,34,0.008,35,0.247,37,1.08,51,3.834,52,1.394,612,2.263,653,2.195,700,4.596,708,4.047,728,5.478,733,5.473,749,5.473,750,5.473,751,6.235]],["title/classes/CreateStageDto.html",[35,0.168,752,2.922]],["body/classes/CreateStageDto.html",[3,0.153,4,0.137,5,0.122,9,0.502,10,1.319,13,0.482,14,0.011,15,0.35,20,0.153,25,0.893,32,0.007,33,0.009,34,0.007,35,0.3,37,0.975,43,1.141,44,1.445,46,1.004,51,3.46,52,1.258,53,2.042,496,3.291,499,3.192,500,2.174,501,5.146,612,2.042,653,1.981,752,4.811,753,6.128,754,4.939,755,3.236,756,5.627,757,3.291,758,4.939,759,5.627,760,4.148]],["title/classes/CreateTaskDto.html",[35,0.168,761,2.922]],["body/classes/CreateTaskDto.html",[3,0.165,4,0.148,5,0.132,14,0.011,15,0.347,20,0.165,25,0.965,32,0.007,33,0.009,34,0.007,35,0.29,37,1.055,52,1.361,431,1.904,492,2.209,493,2.209,500,2.351,661,3.349,761,5.047,762,5.342,763,5.342,764,3.742,765,3.742,766,5.342,767,6.086]],["title/classes/CreateTrackDto.html",[35,0.168,768,2.752]],["body/classes/CreateTrackDto.html",[3,0.153,4,0.138,5,0.123,13,0.484,14,0.011,15,0.335,20,0.19,25,1.11,32,0.007,33,0.009,34,0.007,35,0.277,37,0.978,43,0.922,52,1.262,76,2.982,431,2.189,472,4.161,473,4.161,492,2.539,493,2.539,562,3.906,764,3.471,768,4.541,769,4.5,770,4.5,771,4.954,772,4.954,773,2.781,774,4.5,775,6.14,776,4.541,777,3.89,778,4.5]],["title/classes/CreateUserDto.html",[35,0.168,779,2.752]],["body/classes/CreateUserDto.html",[3,0.168,4,0.151,5,0.134,14,0.011,15,0.326,20,0.168,25,0.982,32,0.008,33,0.009,34,0.008,35,0.245,37,1.073,52,1.384,245,3.622,431,1.937,492,2.247,493,2.247,764,3.807,779,4.804,780,5.435,781,4.564,782,3.309,783,4.936,784,4.019]],["title/classes/CreateWithThumbnailTrackDto.html",[35,0.168,777,2.922]],["body/classes/CreateWithThumbnailTrackDto.html",[3,0.145,4,0.131,5,0.116,9,0.478,10,1.279,13,0.58,14,0.011,15,0.327,20,0.184,25,1.074,32,0.007,33,0.008,34,0.007,35,0.268,37,0.928,43,1.106,44,1.376,46,0.956,52,1.198,76,2.886,431,2.118,471,4.702,472,4.99,473,4.99,492,2.457,493,2.457,562,4.144,764,3.294,768,3.477,769,5.397,770,4.271,771,4.702,772,4.702,773,2.639,774,4.271,775,5.942,776,4.395,777,4.665,778,5.918,785,5.357]],["title/interfaces/Database.html",[0,1.03,167,2.48]],["body/interfaces/Database.html",[0,1.76,2,1.766,3,0.12,4,0.108,5,0.096,9,0.395,10,1.129,13,0.621,14,0.011,17,1.513,20,0.12,26,1.386,32,0.005,33,0.007,34,0.005,43,1.422,72,2.923,75,1.832,149,2.638,162,1.309,167,4.426,416,4.119,417,4.119,666,4.238,667,3.052,668,4.993,669,4.406,670,5.214,671,5.492,672,4.912,673,4.455,674,4.119,675,4.406,676,4.406,677,4.406,678,4.406,679,4.406,680,3.264,681,3.264,682,3.264,683,3.264,684,3.264,685,3.264,686,3.264,687,3.264,688,3.052,689,3.052,690,3.264,691,3.264,692,3.264,693,3.264,694,3.264,695,3.264,696,3.264]],["title/modules/DbTest.html",[112,1.289,786,3.38]],["body/modules/DbTest.html",[3,0.143,4,0.128,5,0.114,14,0.011,15,0.325,20,0.182,21,1.512,32,0.006,33,0.008,34,0.006,35,0.208,85,1.279,110,1.97,112,2.035,114,2.322,120,2.496,138,2.698,141,2.938,142,2.698,158,2.57,162,2.175,169,4.195,170,4.195,171,4.195,172,4.195,173,2.593,184,2.243,272,2.322,672,4.345,688,3.626,689,3.626,786,5.337,787,4.195,788,4.195,789,5.876,790,5.262,791,5.262,792,5.262,793,5.262,794,5.262,795,5.262,796,5.262,797,5.337,798,4.195,799,5.869,800,4.619,801,4.619,802,4.619]],["title/interfaces/DefaultAuthObject.html",[0,1.03,16,2.089]],["body/interfaces/DefaultAuthObject.html",[0,1.678,2,1.839,3,0.125,4,0.112,5,0.1,9,0.411,10,1.16,13,0.657,14,0.011,15,0.203,16,3.026,18,1.781,20,0.167,26,2.709,32,0.006,33,0.008,34,0.006,61,2.089,247,1.966,355,5.121,356,3.399,357,3.399,358,3.399,359,3.399,360,3.703,361,2.993,362,4.979,363,4.979,364,3.932,365,3.932,366,2.963]],["title/classes/FindDto.html",[35,0.168,803,3.38]],["body/classes/FindDto.html",[3,0.137,4,0.123,5,0.11,9,0.451,10,1.232,13,0.654,14,0.011,15,0.223,17,2.229,20,0.137,32,0.006,33,0.008,34,0.006,35,0.258,37,0.876,43,1.247,44,1.96,46,1.361,53,1.834,61,2.083,72,2.948,477,4.977,516,2.982,702,3.642,803,5.2,804,4.436,805,6.34,806,7.222,807,7.222,808,6.523,809,4.596,810,5.054,811,5.054,812,5.054,813,5.054,814,5.054,815,5.054,816,7.222]],["title/classes/HttpExceptionFilter.html",[35,0.168,817,3.38]],["body/classes/HttpExceptionFilter.html",[3,0.122,4,0.11,5,0.098,9,0.402,13,0.386,14,0.011,15,0.301,20,0.122,21,1.294,32,0.006,33,0.007,34,0.006,35,0.178,37,0.781,43,0.736,46,0.804,58,3.101,61,1.126,62,3.322,63,5.309,65,5.309,68,5.993,74,1.687,75,1.036,84,2.31,85,1.095,99,1.787,102,1.294,158,2.734,192,4.459,238,2.636,241,5.309,390,3.956,407,3.956,446,5.443,460,4.459,520,3.377,532,2.22,670,4.705,817,4.822,818,5.309,819,3.956,820,6.827,821,6.048,822,7.297,823,4.506,824,6.048,825,4.506,826,4.506,827,4.506,828,4.506,829,4.506,830,4.506,831,4.506,832,4.506,833,6.048,834,4.506,835,6.048,836,4.506,837,4.506,838,4.506,839,4.506,840,4.506,841,3.956,842,4.506,843,6.827,844,3.956,845,4.506,846,4.506,847,4.506]],["title/interfaces/IBaseController.html",[0,1.03,848,3.38]],["body/interfaces/IBaseController.html",[0,1.087,2,1.784,3,0.121,4,0.109,5,0.097,9,0.399,13,0.651,14,0.011,20,0.121,32,0.005,33,0.007,34,0.005,43,1.345,46,1.354,61,1.896,74,2.842,75,1.745,99,1.778,102,2.181,200,3.545,208,4.179,363,3.907,364,3.085,365,3.085,366,2.325,431,1.883,476,5.388,483,5.764,485,5.014,487,5.014,532,2.965,578,3.701,848,4.798,849,3.926,850,6.018,851,4.473,852,6.018,853,4.473,854,6.018,855,6.801,856,4.473,857,6.018,858,6.018,859,4.473,860,6.018,861,4.473]],["title/interfaces/IPagedListDto.html",[0,1.03,862,3.38]],["body/interfaces/IPagedListDto.html",[0,1.309,2,2.15,3,0.146,4,0.131,5,0.117,9,0.481,10,1.284,13,0.69,14,0.011,15,0.328,20,0.184,23,4.954,32,0.007,33,0.008,34,0.007,35,0.213,52,1.205,72,3.019,76,2.897,85,1.309,110,2.017,460,3.973,482,3.348,488,1.736,862,5.934,863,4.297,864,4.297,865,8.057,866,8.057,867,4.73,868,5.389,869,3.973,870,6.795]],["title/injectables/JwtAuthGuard.html",[174,1.748,592,2.266]],["body/injectables/JwtAuthGuard.html",[3,0.142,4,0.128,5,0.114,9,0.468,13,0.45,14,0.011,15,0.353,20,0.142,25,0.832,26,2.091,32,0.006,33,0.008,34,0.006,35,0.208,46,0.936,61,1.311,74,1.964,75,1.206,85,1.275,99,1.974,102,1.507,110,1.964,149,2.315,150,3.069,162,1.55,174,2.754,175,3.069,200,2.848,339,3.616,340,3.868,341,1.964,450,5.861,454,4.183,455,6.17,457,5.327,463,4.183,592,3.571,871,5.865,872,4.606,873,5.247,874,7.351,875,5.247,876,4.606,877,5.247,878,5.247,879,5.247]],["title/interfaces/JwtPayload.html",[0,1.03,398,2.752]],["body/interfaces/JwtPayload.html",[0,1.421,2,2.332,3,0.159,4,0.143,5,0.127,9,0.522,10,1.35,13,0.662,14,0.011,15,0.258,20,0.159,32,0.007,33,0.009,34,0.007,43,1.372,57,3.429,247,2.493,318,5.543,360,3.429,398,4.641,419,4.491,880,5.133,881,5.133]],["title/injectables/JwtStrategy.html",[174,1.748,334,2.922]],["body/injectables/JwtStrategy.html",[3,0.138,4,0.124,5,0.111,9,0.455,13,0.437,14,0.011,15,0.349,20,0.138,25,0.809,32,0.006,33,0.008,34,0.006,35,0.202,46,1.17,61,1.273,70,3.315,74,1.908,75,1.172,85,1.238,99,1.938,102,1.464,110,1.908,149,2.249,150,2.982,173,2.511,174,2.703,175,2.982,184,3.091,200,2.796,334,4.52,339,3.513,392,3.757,398,4.97,399,4.064,400,6.104,882,4.474,883,6.365,884,5.097,885,5.097,886,7.252,887,5.097,888,5.097,889,5.097,890,5.097,891,4.474,892,5.097,893,5.097,894,5.097,895,5.097,896,5.097,897,5.097,898,5.097]],["title/classes/LoginReqDto.html",[35,0.168,54,2.48]],["body/classes/LoginReqDto.html",[3,0.166,4,0.149,5,0.133,14,0.011,15,0.324,20,0.199,25,0.969,32,0.007,33,0.009,34,0.007,35,0.291,37,1.058,43,0.998,51,3.755,52,1.365,54,4.293,57,2.603,202,3.755,220,3.131,244,4.869,245,3.572,256,4.208,271,4.869,899,4.869,900,5.36]],["title/classes/LoginResDto.html",[35,0.168,256,2.922]],["body/classes/LoginResDto.html",[3,0.16,4,0.144,5,0.128,9,0.527,10,1.358,13,0.506,14,0.011,15,0.317,20,0.195,25,0.937,32,0.007,33,0.009,34,0.007,35,0.285,37,1.023,43,1.175,46,1.053,51,3.631,52,1.32,54,3.454,57,2.517,202,3.631,220,3.027,244,4.708,245,3.454,256,4.956,271,6.183,899,4.708,900,5.183,901,5.905]],["title/modules/MailModule.html",[112,1.289,127,2.922]],["body/modules/MailModule.html",[3,0.153,4,0.138,5,0.123,14,0.011,15,0.309,20,0.153,32,0.007,33,0.009,34,0.007,35,0.223,85,1.371,112,2.311,114,2.49,115,2.677,116,2.894,117,2.894,118,2.677,119,3.745,120,3.605,127,5.814,134,3.586,135,2.781,136,2.58,242,5.373,902,4.954,903,4.954,904,5.644,905,5.644,906,5.644]],["title/injectables/MailService.html",[174,1.748,242,2.607]],["body/injectables/MailService.html",[3,0.159,4,0.105,5,0.093,9,0.384,10,1.107,13,0.502,14,0.011,15,0.33,17,1.469,18,1.661,20,0.117,32,0.005,33,0.007,34,0.005,35,0.17,46,1.336,61,1.074,70,3.048,74,1.61,75,0.988,85,1.045,99,1.732,102,1.683,109,1.81,149,2.941,150,2.516,158,1.944,159,4.594,174,2.416,175,2.516,184,2.842,200,2.498,242,3.604,267,5.299,272,1.898,300,5.144,516,1.966,532,2.119,673,2.644,674,2.964,907,3.775,908,6.666,909,7.158,910,5.86,911,5.86,912,4.301,913,5.86,914,6.666,915,4.301,916,4.301,917,4.301,918,6.666,919,4.301,920,5.851,921,5.86,922,3.775,923,3.775,924,4.301,925,4.301,926,4.301,927,4.301,928,4.301,929,3.775,930,4.301,931,4.301,932,4.301,933,4.301,934,4.301,935,4.301,936,5.86,937,3.775,938,4.301,939,4.301,940,4.301,941,4.301,942,4.301,943,4.301,944,4.301]],["title/interfaces/Mailer.html",[0,1.03,673,2.607]],["body/interfaces/Mailer.html",[0,1.786,2,1.83,3,0.124,4,0.112,5,0.1,9,0.409,10,1.156,13,0.524,14,0.011,17,1.567,20,0.124,26,1.435,32,0.006,33,0.007,34,0.006,43,1.419,72,2.661,75,1.689,149,2.701,162,1.356,167,4.299,416,4.218,417,4.218,666,4.299,667,3.161,668,5.541,669,4.512,670,4.218,671,5.065,672,3.973,673,4.708,674,5.277,675,4.512,676,4.512,677,4.512,678,4.512,679,4.512,680,3.382,681,3.382,682,3.382,683,3.382,684,3.382,685,3.382,686,3.382,687,3.382,688,3.161,689,3.161,690,3.382,691,3.382,692,3.382,693,3.382,694,3.382,695,3.382,696,3.382]],["title/classes/PagedCategoryOutDto.html",[35,0.168,598,2.752]],["body/classes/PagedCategoryOutDto.html",[3,0.156,4,0.14,5,0.125,14,0.011,15,0.353,20,0.192,25,1.123,32,0.007,33,0.009,34,0.007,35,0.317,37,0.997,43,1.157,53,2.088,75,1.322,341,2.154,488,1.853,490,3.123,499,3.505,500,2.222,582,3.538,598,4.595,628,2.295,648,2.154,652,4.587,653,2.026,661,3.236,662,2.835,663,3.075,664,2.835,665,5.05]],["title/classes/PagedCourseOutputDto.html",[35,0.168,720,2.922]],["body/classes/PagedCourseOutputDto.html",[3,0.146,4,0.131,5,0.117,14,0.011,15,0.363,20,0.184,25,1.076,32,0.007,33,0.008,34,0.007,35,0.309,37,0.931,43,1.215,45,5.408,52,1.201,53,1.95,72,2.076,76,3.168,109,1.459,341,2.011,488,1.731,490,2.993,499,3.569,500,2.076,612,1.95,628,2.143,648,2.011,653,1.892,661,3.101,662,2.647,663,2.871,664,2.647,699,4.284,700,3.961,708,3.488,709,4.284,717,3.968,718,3.488,719,4.716,720,4.674,721,4.716]],["title/classes/PagedListStageDto.html",[35,0.168,945,2.752]],["body/classes/PagedListStageDto.html",[3,0.137,4,0.124,5,0.11,13,0.62,14,0.011,15,0.363,20,0.177,25,1.037,32,0.006,33,0.008,34,0.006,35,0.302,37,0.878,43,1.068,52,1.133,53,1.84,72,1.958,76,2.786,109,1.775,162,1.498,341,1.897,488,1.633,490,2.883,499,3.615,500,1.958,612,1.84,628,2.022,648,1.897,653,1.784,661,2.988,662,2.497,663,2.709,664,2.497,702,2.83,717,3.823,718,3.29,755,2.161,757,2.965,760,3.736,773,3.764,809,3.649,945,4.242,946,4.041,947,5.736,948,4.449,949,3.736,950,4.449,951,4.449]],["title/classes/PagedListTaskDto.html",[35,0.168,952,2.752]],["body/classes/PagedListTaskDto.html",[3,0.139,4,0.125,5,0.111,13,0.622,14,0.011,15,0.35,20,0.178,25,1.042,32,0.006,33,0.008,34,0.006,35,0.303,37,0.886,43,1.252,52,1.143,53,1.855,64,3.318,76,2.801,313,3.268,341,1.914,488,1.647,490,2.899,499,3.71,500,1.975,501,5.353,612,1.855,628,2.039,648,1.914,653,1.8,661,3.004,662,2.519,663,2.732,664,2.519,717,3.844,755,2.179,765,3.143,809,3.669,952,4.265,953,4.076,954,5.768,955,4.487,956,2.519,957,4.487,958,4.076,959,4.076,960,4.487]],["title/classes/PagedTrackOutputDto.html",[35,0.168,961,2.752]],["body/classes/PagedTrackOutputDto.html",[3,0.145,4,0.13,5,0.116,14,0.011,15,0.362,20,0.183,25,1.072,32,0.007,33,0.008,34,0.007,35,0.308,37,0.925,43,1.211,48,4.656,52,1.194,53,1.938,76,2.88,109,1.835,162,1.578,341,1.999,488,1.72,490,2.981,499,3.561,500,2.063,612,1.938,628,2.13,648,1.999,653,1.88,661,3.089,662,2.631,663,2.854,664,2.631,717,3.953,718,3.467,773,2.631,776,3.467,809,3.773,961,4.386,962,4.258,963,4.688]],["title/classes/PagedUserOutputDto.html",[35,0.168,964,2.752]],["body/classes/PagedUserOutputDto.html",[3,0.118,4,0.106,5,0.094,13,0.616,14,0.011,15,0.35,20,0.16,25,0.936,32,0.005,33,0.007,34,0.005,35,0.284,37,0.752,43,1.318,52,0.971,53,1.576,57,1.851,64,2.819,72,2.279,76,3.204,109,1.952,162,2.221,341,1.625,360,2.856,419,2.425,488,1.399,490,2.603,499,3.781,500,1.677,628,1.732,648,1.625,651,2.67,653,1.529,661,2.697,662,2.139,664,2.139,773,3.541,782,2.321,784,2.819,809,4.196,949,3.201,964,3.829,965,3.462,966,6.309,967,5.178,968,3.812,969,3.812,970,3.812,971,3.812,972,6.309,973,3.462,974,3.462,975,3.812,976,2.992,977,3.462,978,3.812,979,3.812,980,5.178,981,3.812,982,3.812,983,3.812,984,3.462,985,3.812,986,3.812,987,3.462,988,2.67,989,3.812]],["title/controllers/ProfileController.html",[7,2.011,990,3.125]],["body/controllers/ProfileController.html",[3,0.083,4,0.075,5,0.133,7,1.458,9,0.274,13,0.631,14,0.011,15,0.348,20,0.083,21,1.587,32,0.004,33,0.006,34,0.004,35,0.182,44,1.419,46,0.986,52,0.687,61,1.38,67,3.689,74,2.069,75,1.27,84,1.576,85,0.747,97,1.458,99,1.361,102,1.587,105,2.45,108,2.266,109,0.835,110,1.725,158,2.036,162,1.814,183,2.698,184,3.209,192,5.739,193,4.978,200,2.943,206,1.964,208,2.953,227,1.798,229,2.266,231,1.798,233,1.798,236,3.591,238,2.695,246,2.806,248,2.695,249,2.266,267,1.995,269,2.266,272,2.709,280,2.833,431,1.729,468,3.396,500,1.187,562,3.428,587,3.775,592,1.643,606,3.398,653,1.082,782,3.825,990,3.396,991,2.698,992,3.074,993,4.607,994,4.607,995,4.607,996,3.074,997,3.074,998,3.074,999,3.074,1000,4.525,1001,3.074,1002,3.074,1003,3.074,1004,3.074,1005,3.074,1006,4.607,1007,4.607,1008,4.607,1009,3.074,1010,3.074,1011,3.074,1012,2.698,1013,4.044,1014,2.698,1015,2.698,1016,2.698,1017,2.698,1018,2.45,1019,4.044,1020,2.698,1021,2.698,1022,2.45,1023,3.074,1024,3.074,1025,3.074,1026,3.074,1027,3.074,1028,3.074,1029,3.074,1030,3.587,1031,2.698,1032,3.074,1033,3.074,1034,3.074,1035,4.406,1036,3.074,1037,3.074,1038,4.607,1039,4.044,1040,4.044,1041,3.074,1042,4.044,1043,3.074,1044,3.074,1045,3.074,1046,2.698,1047,2.698,1048,3.074,1049,4.044,1050,4.851,1051,2.698,1052,3.074,1053,2.698,1054,3.074,1055,2.45,1056,2.698,1057,2.698,1058,2.698,1059,3.074,1060,3.074]],["title/modules/ProfileModule.html",[112,1.289,128,2.922]],["body/modules/ProfileModule.html",[3,0.136,4,0.123,5,0.109,14,0.011,15,0.348,20,0.136,32,0.006,33,0.008,34,0.006,35,0.199,85,1.221,97,3.082,112,2.19,114,2.217,115,2.384,116,2.576,117,2.576,118,2.384,119,3.549,120,3.416,128,5.892,133,4.51,134,3.332,135,2.476,136,2.298,138,3.332,156,3.463,248,4.725,249,3.705,990,5.31,1030,5.583,1031,4.411,1061,4.411,1062,5.026,1063,4.411,1064,4.411,1065,5.026,1066,5.026]],["title/injectables/ProfileService.html",[174,1.748,1030,2.752]],["body/injectables/ProfileService.html",[3,0.131,4,0.118,5,0.138,9,0.433,13,0.544,14,0.011,15,0.353,20,0.131,32,0.006,33,0.008,34,0.006,35,0.192,43,1.157,46,1.133,61,1.586,70,2.217,74,2.377,75,1.459,85,1.178,99,1.876,102,1.393,109,1.317,142,2.486,158,1.608,174,2.617,175,2.836,184,3.018,200,2.706,246,2.217,247,2.067,272,2.801,318,5.373,542,2.591,562,4.194,988,3.904,1022,3.866,1030,4.122,1067,4.256,1068,6.349,1069,4.849,1070,6.593,1071,4.849,1072,6.349,1073,6.349,1074,4.849,1075,4.849,1076,3.574,1077,4.256,1078,4.256,1079,4.849,1080,4.256,1081,4.849,1082,4.256,1083,4.849,1084,4.849]],["title/classes/RegisterUserDto.html",[35,0.168,202,2.607]],["body/classes/RegisterUserDto.html",[3,0.151,4,0.136,5,0.121,9,0.496,10,1.308,13,0.476,14,0.011,15,0.333,20,0.188,25,0.881,26,1.739,32,0.007,33,0.008,34,0.007,35,0.299,37,0.963,43,1.132,44,1.427,46,0.991,52,1.242,53,2.017,109,1.509,202,4.26,205,3.829,220,3.869,245,3.25,287,4.43,419,3.103,431,1.739,492,2.017,493,2.017,764,3.417,781,4.096,782,2.97,783,4.43,784,3.607,988,3.417,1085,5.523,1086,6.08,1087,5.557,1088,4.877]],["title/classes/RegisterUserResDto.html",[35,0.168,205,2.922]],["body/classes/RegisterUserResDto.html",[3,0.151,4,0.136,5,0.121,9,0.497,10,1.311,13,0.478,14,0.011,15,0.333,20,0.188,25,0.884,26,2.172,32,0.007,33,0.008,34,0.007,35,0.299,37,0.966,43,0.911,46,0.994,52,1.246,53,2.023,109,2.052,202,3.428,205,4.783,220,2.857,245,3.261,287,6.026,419,3.112,431,1.744,492,2.023,493,2.023,764,3.428,781,4.109,782,2.979,783,4.444,784,3.618,988,3.428,1085,5.533,1086,4.893,1088,4.893,1089,5.574]],["title/classes/ResetPassInput.html",[35,0.168,210,2.922]],["body/classes/ResetPassInput.html",[3,0.154,4,0.138,5,0.123,9,0.505,10,1.324,13,0.601,14,0.011,15,0.309,20,0.154,25,1.112,32,0.007,33,0.009,34,0.007,35,0.277,37,0.981,43,1.244,44,1.8,46,1.25,48,5.481,53,2.055,210,4.83,223,5.481,261,4.97,289,4.55,325,6.069,634,2.589,883,4.97,1090,6.152,1091,4.97,1092,5.662,1093,5.662]],["title/guards/RolesGuard.html",[447,3.38,593,2.367]],["body/guards/RolesGuard.html",[3,0.131,4,0.118,5,0.105,9,0.433,13,0.544,14,0.011,15,0.353,20,0.131,26,1.987,32,0.006,33,0.008,34,0.006,35,0.192,46,1.133,61,1.586,70,2.217,74,2.377,75,1.459,85,1.178,99,1.876,102,1.393,108,3.574,110,2.377,149,2.139,150,2.836,158,2.348,162,1.433,174,2.617,193,4.122,238,2.836,247,2.067,360,2.706,398,4.122,399,3.866,400,3.866,419,2.707,448,3.866,450,5.989,454,5.062,455,5.989,457,3.866,460,3.574,461,4.256,463,3.866,467,4.256,590,3.545,593,3.545,1094,4.256,1095,4.849,1096,8,1097,4.849,1098,4.849,1099,4.256,1100,4.849,1101,4.849,1102,4.849]],["title/injectables/SessionSerializer.html",[174,1.748,335,2.922]],["body/injectables/SessionSerializer.html",[3,0.133,4,0.12,5,0.106,9,0.437,13,0.548,14,0.011,15,0.314,20,0.133,25,1.014,32,0.006,33,0.008,34,0.006,35,0.194,46,1.141,61,1.597,62,4.714,74,2.394,75,1.47,85,1.191,99,1.89,102,1.837,174,2.636,175,2.867,246,3.998,247,2.089,335,4.407,339,3.378,532,3.717,869,4.714,1103,4.303,1104,7.117,1105,6.395,1106,6.395,1107,6.395,1108,8.024,1109,7.543,1110,6.395,1111,4.902,1112,6.395,1113,4.902,1114,6.395]],["title/modules/SharedModule.html",[112,1.289,129,2.922]],["body/modules/SharedModule.html",[3,0.171,4,0.154,5,0.137,14,0.011,15,0.278,20,0.171,32,0.008,33,0.009,34,0.008,35,0.249,85,1.531,112,2.274,114,2.78,119,3.104,120,2.988,129,5.153,138,3.23,1115,6.301,1116,7.477]],["title/classes/Stage.html",[35,0.168,956,2.089]],["body/classes/Stage.html",[3,0.073,4,0.065,5,0.058,9,0.452,10,0.783,13,0.663,14,0.011,15,0.273,17,2.611,20,0.073,21,0.768,25,0.657,26,1.296,32,0.003,33,0.005,34,0.003,35,0.106,37,0.463,43,1.01,44,1.963,46,1.434,61,1.76,72,1.6,99,1.224,102,1.641,109,2.297,162,2.499,173,3.36,206,3.004,313,2.354,341,1.001,366,1.959,431,1.296,492,1.504,493,1.504,502,4.355,505,2.423,506,2.423,507,2.423,508,3.341,509,2.967,510,2.423,511,2.967,512,2.967,513,2.967,516,2.989,517,3.989,519,4.324,520,3.189,521,3.341,531,2.967,532,2.814,541,3.615,542,1.429,544,2.132,547,3.451,612,2.073,628,2.279,629,3.708,630,3.708,631,3.8,632,2.855,634,3.54,635,1.644,636,1.644,637,1.644,638,1.644,639,1.644,640,1.644,641,1.644,642,1.644,643,1.644,644,1.644,645,1.644,646,1.644,647,1.644,648,1.001,649,1.644,650,1.644,651,1.644,653,1.786,702,2.313,706,1.843,755,2.787,760,3.739,956,2.041,1117,2.347,1118,2.674,1119,2.674,1120,2.674,1121,1.843,1122,5.014,1123,2.674,1124,2.674,1125,2.132,1126,2.674]],["title/classes/StageDto.html",[35,0.168,757,2.48]],["body/classes/StageDto.html",[3,0.108,4,0.097,5,0.086,9,0.354,10,1.047,13,0.696,14,0.011,15,0.341,17,1.355,20,0.15,25,1.013,32,0.005,33,0.007,34,0.005,35,0.274,37,0.687,43,1.189,44,1.987,46,1.38,52,0.887,53,1.44,61,1.384,72,2.141,76,2.363,109,2.23,162,1.172,313,2.285,341,1.485,431,1.734,488,1.278,490,3.326,492,2.012,493,2.012,494,3.408,496,2.32,499,3.327,500,1.532,516,1.814,612,2.319,628,1.582,634,2.921,648,1.485,653,2.249,654,3.163,658,2.575,659,2.575,660,2.575,661,2.534,662,1.954,663,2.12,664,1.954,702,3.095,717,3.242,718,2.575,755,2.723,757,3.242,760,4.709,773,3.714,809,3.095,945,2.575,946,3.163,947,4.865,948,3.482,949,2.924,950,3.482,951,3.482,1127,3.967,1128,3.967,1129,3.967,1130,3.163,1131,3.967,1132,3.967,1133,3.967,1134,3.967]],["title/classes/StagesController.html",[35,0.168,1135,3.125]],["body/classes/StagesController.html",[3,0.098,4,0.088,5,0.078,9,0.321,13,0.645,14,0.011,15,0.359,18,1.39,20,0.098,21,1.486,25,0.821,32,0.004,33,0.006,34,0.004,35,0.142,37,0.624,44,0.924,46,0.923,52,0.805,58,3.105,61,1.292,67,3.539,70,2.365,74,1.937,75,1.189,84,1.845,85,0.874,99,1.529,102,1.034,110,1.347,158,2.009,184,2.582,200,2.205,206,2.205,208,2.765,227,2.106,228,3.181,230,3.814,231,3.026,233,2.106,236,3.873,247,1.534,267,2.337,272,2.672,275,2.213,277,2.213,280,2.652,282,2.213,283,2.213,360,1.534,364,2.652,365,1.845,366,1.39,395,2.213,431,1.126,479,1.924,482,1.773,484,1.924,486,1.924,488,1.159,573,3.724,578,2.213,580,2.48,581,2.653,583,2.337,584,2.653,585,2.653,587,3.181,588,2.889,589,2.653,590,2.01,591,2.337,592,1.924,593,2.889,594,2.337,600,2.653,602,3.181,606,2.213,607,2.337,608,2.48,609,2.337,610,2.337,612,1.878,615,2.337,736,2.653,752,5.033,755,2.582,757,3.873,758,3.159,945,3.358,956,3.456,1080,3.159,1135,3.814,1136,2.87,1137,3.599,1138,4.298,1139,4.829,1140,4.072,1141,3.599,1142,4.541,1143,3.599,1144,3.159,1145,3.159,1146,3.599,1147,3.159,1148,3.159,1149,3.159,1150,3.599,1151,3.159,1152,3.159,1153,3.599,1154,3.599]],["title/modules/StagesModule.html",[112,1.289,130,2.752]],["body/modules/StagesModule.html",[3,0.128,4,0.115,5,0.102,14,0.011,15,0.357,20,0.128,32,0.006,33,0.008,34,0.006,35,0.186,75,1.082,85,1.144,97,2.233,112,2.122,114,2.077,115,2.233,116,2.414,117,2.414,118,2.233,119,3.438,120,3.31,130,5.397,132,4.879,134,3.193,135,2.32,136,2.152,138,3.193,141,2.629,142,2.414,155,3.754,158,2.066,348,2.754,350,2.629,619,4.518,620,3.056,625,2.754,626,2.895,956,2.32,1135,4.591,1138,5.561,1147,4.133,1148,4.133,1155,4.133,1156,4.708,1157,4.133,1158,4.133,1159,3.754,1160,4.708,1161,5.564,1162,4.133,1163,4.133]],["title/classes/Task.html",[35,0.168,1164,2.752]],["body/classes/Task.html",[3,0.062,4,0.056,5,0.05,9,0.409,10,0.693,13,0.675,14,0.011,15,0.27,17,2.644,20,0.1,21,1.507,25,0.582,26,1.149,32,0.003,33,0.004,34,0.003,35,0.091,37,0.397,43,1.051,44,1.944,46,1.426,61,1.669,67,2.453,99,1.085,102,1.649,109,2.294,162,2.469,173,3.168,206,3.013,313,2.524,341,0.858,366,1.773,427,4.029,431,1.149,492,1.332,493,1.332,502,4.242,505,2.147,506,2.147,507,2.147,508,3.069,509,2.685,510,2.147,511,2.685,512,2.685,513,2.685,516,3.055,517,3.762,519,4.368,520,2.93,521,3.069,531,2.685,532,3.017,541,3.762,542,1.226,545,1.69,546,1.828,547,3.847,612,1.904,628,2.093,629,3.406,630,3.406,631,3.53,632,2.53,634,3.414,635,1.41,636,1.41,637,1.41,638,1.41,639,1.41,640,1.41,641,1.41,642,1.41,643,1.41,644,1.41,645,1.41,646,1.41,647,1.41,648,0.858,649,1.41,650,1.41,651,1.41,653,1.616,706,1.58,755,2.61,956,3.017,959,3.66,976,2.53,1121,2.53,1125,1.828,1164,2.383,1165,1.828,1166,4.606,1167,4.59,1168,4.59,1169,4.029,1170,2.293,1171,2.293,1172,2.293,1173,5.038,1174,4.59,1175,1.828,1176,2.293,1177,2.293,1178,2.293,1179,2.293,1180,2.013,1181,2.706,1182,3.222,1183,3.222,1184,2.293,1185,2.293]],["title/classes/TaskDto.html",[35,0.168,765,2.607]],["body/classes/TaskDto.html",[3,0.107,4,0.096,5,0.086,9,0.352,10,1.042,13,0.703,14,0.011,15,0.32,20,0.15,25,1.01,32,0.005,33,0.007,34,0.005,35,0.273,37,0.683,43,1.309,44,2.024,46,1.406,52,0.881,53,1.43,61,1.378,64,3.581,76,2.352,109,2.043,313,3.344,341,1.475,431,1.726,488,1.269,490,3.319,492,2.002,493,2.002,494,3.392,496,3.724,499,3.439,500,1.522,501,4.692,612,2.31,628,1.572,634,2.91,648,1.475,653,2.241,654,3.142,658,2.558,659,2.558,660,2.558,661,2.522,662,1.941,663,2.106,664,1.941,717,3.227,755,2.713,765,3.392,809,3.08,952,2.558,953,3.142,954,4.842,955,3.459,956,3.136,957,3.459,958,3.142,959,5.075,960,3.459,1130,3.142,1186,3.94,1187,3.94,1188,3.94,1189,3.94,1190,3.94,1191,3.94,1192,3.94,1193,3.94]],["title/classes/TasksController.html",[35,0.168,1194,3.125]],["body/classes/TasksController.html",[3,0.084,4,0.076,5,0.068,9,0.278,13,0.633,14,0.011,15,0.353,18,1.202,20,0.084,21,1.774,25,0.737,32,0.004,33,0.006,34,0.004,35,0.123,37,0.539,43,0.91,44,1.194,46,0.993,52,0.695,58,3.388,61,1.39,67,3.532,70,2.125,74,2.084,75,1.279,84,1.595,85,0.756,99,1.374,102,1.335,110,1.165,158,2.192,184,2.956,200,2.632,206,1.982,208,2.485,227,1.82,228,2.859,229,2.293,230,2.293,231,2.72,233,1.82,236,3.867,247,1.326,267,3.613,269,2.293,272,3.06,275,1.913,280,3.166,282,1.913,283,1.913,360,1.326,364,2.383,365,1.595,366,1.202,395,1.913,479,1.663,482,1.533,484,1.663,486,1.663,488,1.002,573,3.423,578,1.913,583,2.02,587,3.423,588,2.596,589,2.293,590,1.737,591,2.02,592,1.663,593,3.108,594,2.02,600,2.293,602,2.859,603,3.836,606,2.859,607,2.02,609,3.018,610,2.02,612,1.687,615,2.02,736,2.293,755,1.982,761,4.779,765,3.798,766,2.731,952,3.018,956,2.291,1035,2.48,1138,4.009,1139,4.438,1140,3.798,1142,4.886,1144,2.731,1145,2.731,1149,2.731,1151,2.731,1152,2.731,1164,4.666,1194,3.427,1195,2.48,1196,4.649,1197,3.111,1198,4.779,1199,3.111,1200,3.111,1201,2.731,1202,2.731,1203,3.111,1204,3.111,1205,3.111,1206,3.111,1207,3.111,1208,3.111,1209,5.566,1210,2.731,1211,3.111,1212,3.111,1213,2.731,1214,2.731,1215,3.111,1216,3.111,1217,3.111,1218,3.111,1219,3.111,1220,3.111,1221,3.111,1222,4.886,1223,4.081,1224,3.111,1225,3.111,1226,3.111,1227,3.111,1228,3.111]],["title/modules/TasksModule.html",[112,1.289,131,2.922]],["body/modules/TasksModule.html",[3,0.119,4,0.108,5,0.096,14,0.011,15,0.362,20,0.119,32,0.005,33,0.007,34,0.005,35,0.174,75,1.013,85,1.071,97,2.09,112,2.052,114,1.944,115,2.09,116,2.259,117,2.259,118,2.09,119,3.326,120,3.201,130,5.054,131,5.848,132,4.787,133,4.347,134,3.054,135,2.171,136,2.015,138,3.054,141,2.46,142,2.259,154,3.868,155,3.513,156,3.037,158,1.976,348,2.578,350,2.46,619,4.418,620,2.861,625,2.578,626,2.71,1164,2.861,1194,4.392,1198,5.848,1213,3.868,1214,3.868,1229,3.868,1230,4.406,1231,3.868,1232,3.868,1233,3.513,1234,4.406,1235,5.382,1236,3.868,1237,3.868]],["title/classes/TemporaryToken.html",[35,0.168,343,3.125]],["body/classes/TemporaryToken.html",[3,0.072,4,0.065,5,0.058,9,0.509,10,0.781,13,0.706,14,0.011,15,0.223,17,2.523,20,0.112,21,0.766,25,0.656,26,1.293,32,0.003,33,0.005,34,0.003,35,0.106,37,0.462,43,1.009,44,1.961,46,1.434,57,1.136,61,1.907,99,1.221,102,1.638,109,2.296,162,2.356,173,3.356,206,2.783,220,1.367,246,3.114,247,1.136,262,4.549,289,3.286,313,2.902,343,3.047,366,1.956,426,5.006,431,1.293,492,1.5,493,1.5,502,4.353,505,2.418,506,2.418,507,2.418,508,3.336,509,2.961,510,2.418,511,2.961,512,2.961,513,2.961,516,2.985,517,3.82,519,4.321,520,3.184,521,3.336,531,2.961,532,2.81,541,3.61,542,1.425,547,3.646,631,3.795,634,3.537,635,1.639,636,1.639,637,1.639,638,1.639,639,1.639,640,1.639,641,1.639,642,1.639,643,1.639,644,1.639,645,1.639,646,1.639,647,1.639,649,1.639,650,3.113,702,1.488,976,2.848,1121,1.837,1175,2.125,1238,4.921,1239,2.125,1240,2.666,1241,2.666,1242,2.666,1243,2.666,1244,4.133,1245,2.34,1246,2.34,1247,2.125,1248,2.666,1249,2.666,1250,2.666]],["title/classes/Track.html",[35,0.168,755,1.807]],["body/classes/Track.html",[3,0.073,4,0.066,5,0.058,9,0.454,10,0.785,13,0.664,14,0.011,15,0.253,17,2.705,20,0.073,21,0.772,25,0.659,26,1.301,32,0.003,33,0.005,34,0.003,35,0.106,37,0.465,43,1.116,44,1.965,46,1.435,61,1.763,99,1.229,102,1.645,109,2.298,162,2.448,173,3.365,206,3.155,313,2.36,341,1.005,366,1.965,431,1.301,492,1.509,493,1.509,502,4.358,505,2.432,506,2.432,507,2.432,508,3.349,509,2.975,510,2.432,511,2.975,512,2.975,513,2.975,516,3.226,517,3.831,519,4.33,520,3.94,521,3.623,531,2.975,532,2.821,541,3.623,542,1.435,547,2.321,612,2.078,628,2.284,629,3.717,630,3.717,631,3.808,632,2.865,634,3.543,635,1.652,636,1.652,637,1.652,638,1.652,639,1.652,640,1.652,641,1.652,642,1.652,643,1.652,644,1.652,645,1.652,646,1.652,647,1.652,648,1.005,649,1.652,650,1.652,651,1.652,653,1.791,706,1.851,755,1.772,776,3.302,956,2.506,1121,1.851,1180,2.358,1251,2.358,1252,4.465,1253,2.686,1254,2.686,1255,2.686,1256,2.686]],["title/classes/TrackDto.html",[35,0.168,773,2.089]],["body/classes/TrackDto.html",[3,0.116,4,0.105,5,0.093,9,0.383,10,1.105,13,0.662,14,0.011,15,0.341,20,0.159,25,1.056,32,0.005,33,0.007,34,0.005,35,0.283,37,0.743,43,1.292,44,1.984,46,1.378,48,4.032,52,0.959,53,1.557,61,1.461,76,2.494,109,2.241,162,1.268,313,2.412,341,1.606,431,1.831,488,1.382,490,3.408,492,2.123,493,2.123,494,3.598,496,2.51,499,3.269,500,1.657,612,2.416,628,1.711,634,3.044,648,1.606,653,2.344,658,2.785,659,2.785,660,2.785,661,2.675,662,2.114,663,2.293,664,2.114,717,3.422,718,2.785,773,2.883,776,4.322,809,3.267,961,2.785,962,3.42,963,3.766,1130,3.42,1257,4.29,1258,4.29,1259,3.766,1260,3.766,1261,4.29,1262,4.29]],["title/classes/TracksController.html",[35,0.168,1263,3.125]],["body/classes/TracksController.html",[3,0.063,4,0.057,5,0.05,9,0.207,13,0.658,14,0.011,15,0.345,18,0.896,20,0.063,21,1.856,25,0.588,32,0.003,33,0.005,34,0.003,35,0.147,37,0.402,43,1.006,44,1.357,46,1.03,52,0.519,58,3.44,61,1.442,67,3.791,70,1.061,74,2.161,75,1.327,84,1.189,85,0.564,99,1.095,102,1.517,110,1.732,158,2.353,162,1.095,184,3.143,192,4.256,193,3.429,200,2.86,206,2.252,208,3.085,227,1.357,228,2.844,229,1.71,230,1.71,231,2.167,233,1.357,236,4.046,238,2.167,247,0.989,269,2.731,272,3.052,275,2.278,277,3.248,280,3.312,282,2.278,283,2.278,318,2.553,360,0.989,364,1.899,365,1.189,366,1.431,395,1.427,431,0.726,479,1.24,482,1.143,484,1.24,486,1.24,488,0.747,500,0.896,562,2.949,573,2.844,578,1.427,580,1.599,583,2.405,587,3.55,588,2.069,590,1.295,591,1.506,592,1.24,593,2.583,594,1.506,602,2.278,603,3.64,604,1.71,606,3.248,607,2.405,608,2.553,609,3.003,610,1.506,612,1.917,615,1.506,736,2.731,737,3.252,755,2.86,757,1.357,768,3.996,773,3.033,774,1.85,776,2.405,777,3.64,778,4.211,961,2.405,1012,2.036,1014,2.036,1015,3.252,1016,2.036,1017,2.036,1018,1.85,1020,2.036,1021,2.036,1022,1.85,1035,1.85,1039,2.036,1040,2.036,1042,2.036,1046,2.036,1047,2.036,1049,2.036,1050,4.06,1051,2.036,1053,2.036,1055,1.85,1056,2.036,1057,2.036,1058,2.036,1076,1.71,1077,2.036,1078,2.036,1082,2.036,1139,2.954,1140,3.248,1201,3.252,1202,3.252,1210,2.036,1222,3.252,1223,3.252,1252,3.252,1263,2.731,1264,1.85,1265,3.705,1266,3.705,1267,3.705,1268,2.32,1269,2.32,1270,2.32,1271,2.32,1272,2.32,1273,2.32,1274,6.155,1275,2.32,1276,2.32,1277,2.32,1278,2.32,1279,2.32,1280,2.32,1281,2.32,1282,2.32,1283,2.32,1284,2.32,1285,2.036,1286,2.32,1287,2.036,1288,2.32,1289,2.036,1290,2.036,1291,2.954,1292,2.32,1293,3.705,1294,2.32,1295,2.32,1296,2.32,1297,2.32,1298,2.32,1299,2.32,1300,2.32,1301,2.32,1302,2.32,1303,2.32,1304,2.32,1305,2.32,1306,2.32,1307,3.705,1308,2.32,1309,2.32,1310,2.32,1311,2.32,1312,2.32]],["title/modules/TracksModule.html",[112,1.289,132,2.607]],["body/modules/TracksModule.html",[3,0.128,4,0.115,5,0.102,14,0.011,15,0.357,20,0.128,32,0.006,33,0.008,34,0.006,35,0.186,75,1.082,85,1.144,97,2.233,112,2.122,114,2.077,115,2.233,116,2.414,117,2.414,118,2.233,119,3.438,120,3.31,132,5.113,133,4.43,134,3.193,135,2.32,136,2.152,138,3.193,141,2.629,142,2.414,156,3.245,158,2.066,348,2.754,350,2.629,619,4.518,620,3.056,625,2.754,626,2.895,755,2.007,1140,5.268,1263,4.591,1289,4.133,1290,4.133,1313,4.133,1314,4.708,1315,4.133,1316,4.133,1317,3.754,1318,4.708,1319,5.564,1320,4.133,1321,4.133]],["title/classes/UpdateProfileDto.html",[35,0.168,1000,3.125]],["body/classes/UpdateProfileDto.html",[3,0.169,4,0.152,5,0.135,14,0.011,15,0.328,20,0.169,25,0.989,32,0.008,33,0.009,34,0.008,35,0.247,37,1.08,52,1.394,57,2.658,245,3.647,419,3.481,764,3.834,779,4.047,988,3.834,1000,5.478,1322,5.473,1323,5.473,1324,6.235,1325,6.235]],["title/classes/User.html",[35,0.168,246,1.938]],["body/classes/User.html",[3,0.045,4,0.041,5,0.036,9,0.327,10,0.531,11,2.698,13,0.667,14,0.011,15,0.27,17,2.74,20,0.076,21,0.808,25,0.446,26,1.348,32,0.002,33,0.003,34,0.002,35,0.111,37,0.288,43,1.255,44,1.958,46,1.431,57,1.837,61,1.58,72,1.664,75,0.647,85,0.403,99,0.831,102,1.603,109,2.319,110,1.053,162,2.468,173,2.749,184,0.708,206,3.164,220,1.876,246,1.673,272,0.733,280,0.851,313,2.158,323,1.144,341,0.622,360,1.56,366,1.414,391,1.324,419,2.044,431,0.88,434,3.213,442,1.458,446,1.324,492,1.021,493,1.021,500,0.642,502,3.967,505,1.646,506,1.646,507,1.646,508,2.52,509,2.141,510,1.646,511,2.141,512,2.141,513,2.141,514,2.469,516,2.892,517,3.7,519,3.7,520,3.532,521,3.063,531,2.141,532,2.891,541,4.13,542,0.888,545,1.224,546,1.324,547,3.276,548,1.458,560,1.458,628,2.523,629,4.106,630,4.106,631,2.251,634,3.116,635,1.021,636,1.021,637,1.021,638,1.021,639,1.021,640,1.021,641,1.021,642,1.021,643,1.021,644,1.021,645,1.021,646,1.021,647,1.021,648,0.622,649,1.021,650,1.021,653,1.289,661,1.673,702,2.406,706,1.144,755,1.56,784,2.376,869,1.224,973,2.918,974,2.918,976,1.939,977,2.918,984,2.918,987,2.918,988,2.251,1070,2.469,1121,1.144,1125,1.324,1175,1.324,1326,1.324,1327,3.66,1328,3.66,1329,3.66,1330,4.308,1331,4.308,1332,3.66,1333,2.813,1334,1.661,1335,2.813,1336,1.661,1337,1.661,1338,1.661,1339,1.661,1340,1.661,1341,1.661,1342,1.661,1343,1.661,1344,1.661,1345,1.661,1346,1.661,1347,1.661,1348,1.661,1349,1.661,1350,1.661,1351,1.661,1352,1.661,1353,1.661,1354,1.661,1355,1.661,1356,2.813,1357,2.469,1358,1.661,1359,1.661,1360,1.661,1361,1.661,1362,1.661,1363,1.661,1364,3.66,1365,2.469,1366,2.469,1367,2.469,1368,1.661,1369,2.813,1370,1.661,1371,1.661,1372,1.661,1373,4.821,1374,1.661,1375,1.661,1376,1.661,1377,1.661,1378,1.661,1379,1.661]],["title/classes/UserDto.html",[35,0.168,782,2.266]],["body/classes/UserDto.html",[3,0.082,4,0.074,5,0.066,9,0.271,10,0.862,13,0.708,14,0.011,15,0.315,17,1.038,20,0.124,25,0.87,32,0.004,33,0.006,34,0.004,35,0.242,37,0.526,43,1.334,44,2.02,46,1.403,52,0.679,53,1.102,57,2.339,61,1.91,64,2.964,72,2.357,76,2.789,109,2.181,162,2.107,313,1.882,341,1.137,360,2.789,419,3.064,431,1.429,488,0.978,490,3.032,492,1.657,493,1.657,494,2.808,496,1.777,499,3.495,500,1.173,516,1.388,628,1.211,634,2.508,648,1.137,651,2.808,653,1.932,658,1.972,659,1.972,660,1.972,661,2.088,662,1.496,664,1.496,773,3.386,782,2.44,784,3.562,809,3.653,949,2.239,964,1.972,965,2.421,966,5.742,967,4.008,968,2.666,969,2.666,970,2.666,971,2.666,972,5.356,973,4.374,974,4.374,975,2.666,976,2.093,977,3.64,978,2.666,979,4.008,980,5.356,981,4.008,982,4.008,983,2.666,984,4.374,985,2.666,986,4.008,987,4.374,988,3.374,989,2.666,1259,4.008,1260,2.666,1380,3.037,1381,3.037,1382,3.037,1383,3.037,1384,4.566,1385,3.037,1386,3.037,1387,3.037,1388,3.037,1389,3.037,1390,3.037,1391,3.037,1392,3.037,1393,3.037,1394,3.037,1395,3.037,1396,3.037,1397,3.037,1398,3.037]],["title/classes/UsersController.html",[35,0.168,1399,3.125]],["body/classes/UsersController.html",[3,0.105,4,0.094,5,0.084,9,0.344,13,0.658,14,0.011,15,0.356,18,1.489,20,0.105,21,1.108,25,0.862,32,0.005,33,0.007,34,0.005,35,0.153,37,0.668,44,0.99,46,0.969,52,0.862,57,1.643,58,3.225,61,1.357,67,3.65,70,1.763,74,2.034,75,1.249,84,1.977,85,0.937,99,1.605,102,1.108,109,1.047,110,1.443,158,1.802,184,2.682,200,2.316,206,2.316,208,2.903,227,2.255,228,3.341,231,3.178,233,2.255,236,3.995,245,2.255,246,2.876,248,4.37,272,1.701,275,2.371,277,3.341,278,3.074,280,1.977,282,2.371,283,2.371,360,1.643,362,2.503,363,2.503,364,2.785,365,1.977,366,1.489,374,3.384,395,2.371,479,2.06,482,1.9,484,2.06,486,2.06,488,1.242,573,3.868,578,2.371,580,2.657,581,2.842,583,2.503,584,2.842,585,2.842,587,3.341,588,3.034,590,2.153,591,2.503,592,2.06,593,3.034,594,2.503,602,4.2,604,2.842,606,2.371,607,2.503,608,2.657,609,2.503,610,2.503,612,1.399,615,2.503,779,4.85,782,3.65,964,3.527,1285,3.384,1287,3.384,1399,4.005,1400,3.074,1401,3.855,1402,3.855,1403,3.855,1404,3.384,1405,3.384,1406,3.855,1407,3.855,1408,3.855]],["title/modules/UsersModule.html",[112,1.289,133,2.367]],["body/modules/UsersModule.html",[3,0.134,4,0.121,5,0.108,14,0.011,15,0.355,20,0.175,32,0.006,33,0.008,34,0.006,35,0.196,75,1.139,85,1.204,97,2.351,112,2.175,114,2.187,115,2.351,116,2.541,117,2.541,118,2.351,119,3.525,120,3.394,133,4.575,134,3.302,135,2.442,136,2.266,138,2.541,141,2.767,142,2.541,158,1.644,246,2.266,248,5.047,348,2.899,350,2.767,619,3.768,620,3.217,625,2.899,626,3.048,1399,4.748,1404,4.35,1405,4.35,1409,4.35,1410,4.35,1411,4.956,1412,3.951,1413,4.956,1414,5.705,1415,4.35,1416,4.35]],["title/classes/ValidateTokenInput.html",[35,0.168,223,2.922]],["body/classes/ValidateTokenInput.html",[3,0.158,4,0.142,5,0.127,9,0.52,10,1.348,13,0.499,14,0.011,15,0.34,20,0.158,25,0.925,32,0.007,33,0.009,34,0.007,35,0.282,37,1.01,43,1.166,44,1.497,46,1.04,48,5.313,51,3.584,52,1.303,53,2.115,54,3.409,55,5.116,56,5.116,57,2.484,223,4.916,289,5.005,1417,6.262,1418,5.116,1419,5.828]],["title/coverage.html",[1420,5.094]],["body/coverage.html",[0,1.774,1,1.172,5,0.037,6,2.745,7,2.927,8,2.745,13,0.146,14,0.011,16,0.838,18,1.888,21,0.488,24,1.172,27,1.172,32,0.002,33,0.004,34,0.002,35,0.333,36,1.253,38,1.492,39,1.492,54,0.995,58,0.872,59,1.492,60,1.492,96,1.253,98,1.492,103,1.104,112,0.517,118,0.806,137,2.288,149,0.75,152,1.356,159,1.978,167,1.679,174,2.83,176,1.492,181,1.253,182,1.492,202,1.045,205,1.172,210,1.172,223,1.172,242,1.045,246,0.777,248,0.995,250,1.045,252,1.253,256,1.172,323,1.172,334,1.172,335,1.172,336,1.253,337,1.356,340,1.253,343,1.253,355,1.104,356,2.745,357,2.745,361,1.104,367,1.492,394,1.356,396,1.356,398,1.104,447,2.288,449,1.492,468,1.253,469,1.492,470,1.492,475,1.172,476,3.014,477,2.566,478,2.745,480,1.172,481,1.172,488,0.548,490,0.75,491,1.492,502,0.909,503,1.492,562,0.949,563,1.492,564,1.492,571,1.253,572,2.288,573,3.005,575,1.253,579,1.253,582,1.045,588,0.949,590,0.949,592,0.909,593,0.949,596,1.104,598,1.104,618,1.356,619,2.559,622,1.356,627,1.492,648,0.636,652,2.288,666,0.995,667,3.014,673,1.045,697,1.172,698,1.492,702,4.941,708,1.104,709,2.288,720,1.172,722,1.253,723,1.492,725,1.253,728,1.253,741,1.356,743,1.356,746,1.492,747,1.492,749,1.492,750,1.492,752,1.172,753,1.492,754,1.492,755,0.725,757,0.995,761,1.172,762,1.492,763,1.492,765,1.045,768,1.104,769,2.288,770,2.288,773,0.838,777,1.172,779,1.104,780,1.492,781,2.745,782,0.909,787,2.969,788,2.969,797,1.356,798,1.356,799,1.356,803,1.356,804,1.492,817,1.356,818,1.492,819,1.492,848,1.356,849,1.492,862,1.356,863,2.288,864,2.288,869,3.224,871,1.492,872,1.492,880,1.492,881,1.492,882,1.492,899,2.288,907,1.492,945,1.104,946,2.288,952,1.104,953,2.288,956,0.838,961,1.104,962,2.288,964,1.104,965,2.288,990,1.253,991,1.492,1000,1.253,1030,1.104,1067,1.492,1076,1.253,1085,2.288,1090,1.492,1091,1.492,1094,1.492,1103,1.492,1117,1.492,1135,1.253,1136,2.288,1138,1.104,1140,1.045,1159,2.288,1161,1.356,1164,1.104,1165,1.356,1194,1.253,1195,2.288,1198,1.172,1233,2.288,1235,1.356,1238,1.356,1239,1.356,1251,1.492,1263,1.253,1264,2.969,1291,1.356,1317,2.288,1319,1.356,1322,1.492,1323,1.492,1326,1.356,1399,1.253,1400,2.288,1412,1.356,1414,1.356,1417,1.492,1418,1.492,1420,1.492,1421,1.356,1422,1.7,1423,1.7,1424,1.356,1425,1.492,1426,1.492,1427,8.463,1428,7.106,1429,8.14,1430,3.724,1431,3.724,1432,5.642,1433,6.867,1434,4.374,1435,4.374,1436,1.7,1437,1.7,1438,4.374,1439,1.7,1440,1.7,1441,1.7,1442,5.301,1443,1.7,1444,2.288,1445,1.7,1446,3.724,1447,2.519,1448,1.492,1449,1.492,1450,1.356,1451,1.492,1452,1.492,1453,1.492,1454,1.492,1455,1.492,1456,1.492,1457,1.492,1458,1.492,1459,1.7,1460,1.492,1461,1.7,1462,1.7,1463,1.7,1464,2.519,1465,2.519,1466,1.492,1467,1.492,1468,1.492,1469,1.492,1470,1.492,1471,1.492,1472,1.492,1473,1.7,1474,2.87,1475,1.7,1476,1.7,1477,1.7,1478,1.7,1479,1.7,1480,2.87,1481,1.7,1482,1.7,1483,1.7,1484,1.7,1485,1.7]],["title/dependencies.html",[115,2.421,1486,3.532]],["body/dependencies.html",[14,0.011,32,0.005,33,0.007,34,0.005,35,0.239,52,1.002,53,1.627,85,1.089,115,2.127,140,3.936,142,2.299,238,4.26,339,3.09,354,4.806,391,3.575,392,3.305,393,3.936,500,1.732,542,2.396,544,4.806,666,2.623,805,3.936,876,3.936,891,5.978,920,5.291,922,3.936,923,3.936,1018,3.575,1099,3.936,1122,3.936,1450,3.575,1487,4.484,1488,4.484,1489,4.484,1490,4.484,1491,6.81,1492,4.484,1493,4.484,1494,4.484,1495,4.484,1496,4.484,1497,4.484,1498,4.484,1499,4.484,1500,4.484,1501,4.484,1502,4.484,1503,4.484,1504,4.484,1505,4.484,1506,6.028,1507,4.484,1508,4.484,1509,4.484,1510,4.484,1511,4.484,1512,4.484,1513,6.028,1514,4.484,1515,4.484,1516,4.484,1517,3.936,1518,4.484,1519,4.484,1520,4.484,1521,4.484,1522,4.484,1523,4.484,1524,4.484,1525,4.484,1526,4.484,1527,4.484,1528,4.484,1529,4.484,1530,3.936,1531,4.484,1532,4.484,1533,4.484,1534,4.484,1535,6.028,1536,4.484,1537,4.484,1538,4.484,1539,4.484,1540,4.484,1541,4.484,1542,4.484,1543,4.484,1544,4.484,1545,4.484]],["title/miscellaneous/enumerations.html",[1546,2.066,1547,4.48]],["body/miscellaneous/enumerations.html",[9,0.518,14,0.011,32,0.007,33,0.009,34,0.007,57,2.476,220,2.978,262,5.249,360,3.035,516,3.918,1165,4.632,1173,6.25,1181,5.249,1182,6.25,1183,6.25,1238,4.632,1239,5.677,1245,5.099,1246,5.099,1326,4.632,1365,6.25,1366,6.25,1367,6.25,1546,3.398,1547,5.099,1548,5.809,1549,5.809,1550,5.809]],["title/miscellaneous/functions.html",[1546,2.066,1551,4.48]],["body/miscellaneous/functions.html",[9,0.529,13,0.617,14,0.01,32,0.007,33,0.009,34,0.007,61,1.8,74,2.698,75,1.656,102,2.07,118,3.683,482,2.919,488,2.321,588,4.024,863,4.724,864,5.745,1247,4.724,1424,5.745,1425,6.325,1426,6.817,1444,4.724,1448,5.201,1546,3.466,1551,5.201,1552,5.925,1553,5.201,1554,5.925,1555,5.925,1556,5.925]],["title/index.html",[9,0.315,1181,2.604,1557,3.101]],["body/index.html",[4,0.116,14,0.008,32,0.006,33,0.008,34,0.006,66,4.166,107,4.166,136,2.862,193,3.081,309,5.495,362,3.081,625,2.776,956,2.338,958,3.784,1013,4.166,1166,4.166,1357,4.166,1421,3.784,1530,4.166,1558,7.006,1559,6.26,1560,6.26,1561,4.746,1562,6.26,1563,7.952,1564,4.746,1565,4.746,1566,4.746,1567,4.746,1568,6.26,1569,4.746,1570,6.26,1571,4.746,1572,4.746,1573,4.166,1574,4.746,1575,4.746,1576,4.746,1577,6.149,1578,4.746,1579,4.746,1580,4.746,1581,4.746,1582,4.746,1583,4.746,1584,4.746,1585,4.746,1586,4.746,1587,4.746,1588,4.166,1589,4.746,1590,4.746,1591,4.746,1592,4.746,1593,4.746,1594,6.26,1595,4.746,1596,4.746,1597,6.26,1598,4.746,1599,4.746,1600,4.746,1601,4.746,1602,4.746,1603,4.746,1604,4.746,1605,4.166,1606,4.746,1607,4.166,1608,4.746,1609,4.746,1610,4.746,1611,4.746,1612,4.746,1613,4.746,1614,4.746,1615,4.746,1616,4.746,1617,4.746,1618,4.746,1619,6.26,1620,4.746,1621,4.746,1622,4.746,1623,4.746,1624,4.746,1625,4.746,1626,4.746,1627,4.746,1628,4.746,1629,4.746,1630,4.746,1631,4.746,1632,4.746,1633,4.746,1634,4.746,1635,4.746,1636,4.746,1637,4.746,1638,4.746,1639,4.746,1640,4.746,1641,4.746]],["title/license.html",[1181,2.604,1557,3.101,1642,3.101]],["body/license.html",[14,0.008,31,3.747,32,0.006,33,0.008,34,0.006,136,2.324,238,2.973,844,5.747,1421,4.052,1424,4.052,1573,7.405,1588,4.462,1605,4.462,1642,4.462,1643,5.083,1644,7.242,1645,5.083,1646,5.083,1647,5.083,1648,5.083,1649,5.083,1650,5.083,1651,5.083,1652,5.083,1653,6.547,1654,5.083,1655,5.083,1656,5.083,1657,7.242,1658,5.083,1659,6.547,1660,5.083,1661,5.083,1662,6.547,1663,5.083,1664,5.083,1665,5.083,1666,5.083,1667,5.083,1668,5.083,1669,6.547,1670,5.083,1671,5.083,1672,5.083,1673,5.083,1674,5.083,1675,5.083,1676,6.547,1677,6.547,1678,5.083,1679,5.083,1680,5.083,1681,5.083,1682,5.083,1683,5.083,1684,5.083,1685,5.083,1686,5.083,1687,5.083,1688,5.083,1689,5.083,1690,5.083,1691,5.083,1692,5.083,1693,5.083,1694,5.083,1695,5.083,1696,5.083,1697,5.083,1698,5.083,1699,5.083,1700,5.083,1701,5.083,1702,5.083,1703,5.083,1704,5.083,1705,5.083,1706,5.083]],["title/modules.html",[114,2.561]],["body/modules.html",[14,0.009,32,0.007,33,0.009,34,0.007,113,4.148,114,2.483,124,3.877,125,3.877,126,3.877,127,3.877,128,3.877,129,3.877,130,3.653,131,3.877,132,3.46,133,3.142,786,4.486,937,6.128,1577,7.59,1707,8.647,1708,8.647,1709,8.733,1710,6.981]],["title/overview.html",[1711,5.094]],["body/overview.html",[2,1.336,14,0.011,32,0.004,33,0.006,34,0.004,37,0.58,97,1.589,103,3.774,112,1.019,113,6.319,114,1.478,115,1.589,116,1.717,117,1.717,118,1.589,119,1.651,120,1.589,121,2.94,122,2.94,123,2.94,124,5.713,125,4.412,126,4.909,127,4.909,128,5.395,129,4.006,130,5,131,5.532,132,4.814,133,4.371,134,2.517,135,1.651,136,1.532,175,1.96,242,4.642,248,4.416,250,4.526,330,2.94,332,2.94,333,2.94,334,4.006,335,4.006,336,4.286,403,2.671,448,2.671,575,4.719,616,2.94,617,2.94,725,5.426,738,2.94,739,2.94,740,2.94,902,2.94,903,2.94,1030,4.778,1061,2.94,1063,2.94,1064,2.94,1138,4.778,1140,4.526,1155,2.94,1157,2.94,1158,2.94,1198,5.072,1229,2.94,1231,2.94,1232,2.94,1313,2.94,1315,2.94,1316,2.94,1409,2.94,1410,2.94,1711,2.94,1712,3.35,1713,3.35,1714,3.35,1715,2.94,1716,3.35]],["title/miscellaneous/typealiases.html",[1546,2.066,1717,5.104]],["body/miscellaneous/typealiases.html",[9,0.549,13,0.527,14,0.01,32,0.008,33,0.009,34,0.008,545,5.432,867,6.469,1546,3.597,1718,6.149,1719,7.37,1720,8.587,1721,7.37,1722,7.37,1723,7.37,1724,7.37,1725,6.149,1726,7.37,1727,7.37]],["title/miscellaneous/variables.html",[1546,2.066,1728,4.48]],["body/miscellaneous/variables.html",[5,0.055,9,0.131,10,0.276,13,0.547,14,0.011,16,0.721,17,2.708,18,2.139,21,1.284,26,1.813,32,0.002,33,0.003,34,0.002,43,1.043,57,0.624,72,0.976,75,1.204,110,2.073,112,0.768,137,1.167,149,0.646,152,2.655,158,1.738,159,3.081,160,1.285,161,1.285,162,2.126,163,1.285,164,1.285,165,1.285,166,1.285,167,1.477,168,1.285,169,2.013,170,2.013,171,2.013,172,2.013,173,2.729,184,1.076,200,0.624,220,0.75,232,1.167,246,0.669,272,1.114,289,0.95,323,1.009,337,1.167,340,2.455,348,3.066,349,1.285,350,3.092,351,1.285,352,1.285,353,1.285,354,1.167,355,2.572,358,3.296,359,3.296,360,0.624,361,1.639,362,1.639,363,1.639,364,0.75,365,2.507,366,1.889,392,1.079,394,2.013,396,2.013,403,1.167,472,1.079,473,1.079,479,2.39,482,2.203,484,2.39,486,2.39,488,1.44,516,3.653,547,1.41,562,0.817,570,1.285,572,1.167,573,3.7,582,2.048,588,2.497,590,3.36,596,0.95,598,0.95,602,3.926,603,3.37,612,0.531,618,1.167,619,3.389,622,2.013,623,1.285,624,1.285,625,1.948,626,2.048,648,0.945,653,1.173,666,0.856,668,1.74,671,1.009,672,1.639,702,0.817,741,1.167,743,2.013,744,1.285,745,1.285,752,1.74,755,0.624,757,0.856,761,1.74,765,0.9,768,1.639,773,0.721,779,1.639,782,0.782,787,1.167,788,3.159,789,1.285,797,2.655,798,2.013,799,2.013,800,1.285,801,1.285,802,1.285,841,4.292,929,1.285,945,0.95,952,0.95,956,0.721,961,0.95,964,0.95,1019,1.285,1055,1.167,1076,1.861,1136,1.167,1138,0.95,1140,0.9,1159,1.167,1161,2.013,1162,1.285,1163,1.285,1164,0.95,1169,1.285,1195,1.167,1198,1.009,1233,1.167,1235,2.013,1236,1.285,1237,1.285,1247,2.013,1264,1.167,1291,2.013,1317,1.167,1319,2.013,1320,1.285,1321,1.285,1400,1.167,1412,1.167,1414,2.013,1415,1.285,1416,1.285,1444,1.167,1447,1.285,1449,1.285,1450,2.013,1451,2.217,1452,2.217,1453,1.285,1454,2.217,1455,1.285,1456,2.217,1457,2.217,1458,1.285,1460,1.285,1464,1.285,1465,2.924,1466,3.925,1467,2.217,1468,1.285,1469,2.217,1470,1.285,1471,2.217,1472,1.285,1517,1.285,1546,0.856,1553,1.285,1607,1.285,1715,4.861,1728,1.285,1729,1.464,1730,1.464,1731,2.525,1732,1.464,1733,1.464,1734,1.464,1735,1.464,1736,2.525,1737,1.464,1738,1.464,1739,2.525,1740,2.525,1741,2.525,1742,1.464,1743,2.525,1744,1.464,1745,1.464,1746,3.331,1747,2.525,1748,1.464,1749,1.464,1750,1.464,1751,1.464,1752,1.464,1753,2.525,1754,3.962,1755,4.471,1756,3.962,1757,3.962,1758,2.525,1759,4.89,1760,2.525,1761,1.464,1762,1.464,1763,1.464,1764,1.464,1765,1.464,1766,1.464,1767,1.464,1768,1.464,1769,1.464,1770,1.464,1771,1.464,1772,1.464,1773,1.464,1774,1.464,1775,1.464,1776,1.464,1777,1.464,1778,1.464,1779,1.464,1780,1.464,1781,2.525,1782,1.464,1783,1.464,1784,1.464,1785,1.464,1786,1.464,1787,1.464,1788,1.464,1789,1.464,1790,1.464,1791,1.464,1792,1.464,1793,2.525,1794,2.525,1795,2.525,1796,2.525,1797,2.525,1798,2.525,1799,2.525,1800,2.525,1801,2.525,1802,2.525,1803,1.464,1804,2.525,1805,1.464,1806,1.464,1807,2.525,1808,1.464,1809,1.464,1810,2.525,1811,1.464,1812,1.464,1813,2.525,1814,1.464,1815,1.464,1816,2.525,1817,1.464,1818,1.464,1819,1.464,1820,1.464,1821,1.464,1822,1.464,1823,1.464,1824,1.464,1825,1.464,1826,5.538,1827,1.464,1828,1.464,1829,1.464,1830,1.464,1831,1.464,1832,1.464,1833,1.464,1834,1.464,1835,1.464,1836,1.464,1837,1.464,1838,1.464,1839,1.464,1840,1.464,1841,1.464,1842,1.464,1843,1.464,1844,1.464,1845,1.464,1846,1.464,1847,1.464,1848,1.464,1849,1.464,1850,1.464,1851,1.464,1852,1.464,1853,2.525,1854,1.464,1855,1.464,1856,1.464,1857,1.464,1858,1.464,1859,1.464,1860,1.464,1861,1.464,1862,1.464,1863,1.464,1864,2.525,1865,1.464,1866,1.464,1867,1.464,1868,1.464,1869,1.464]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":702,"title":{},"body":{"classes/Course.html":{},"classes/FindDto.html":{},"classes/PagedListStageDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":1538,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1445,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1481,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":1474,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1432,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1446,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1430,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1431,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":650,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["1.0.0",{"_index":1531,"title":{},"body":{"dependencies.html":{}}}],["1.17.1",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["1.22.0",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":808,"title":{},"body":{"classes/FindDto.html":{}}}],["1024",{"_index":1055,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":1712,"title":{},"body":{"overview.html":{}}}],["13",{"_index":1713,"title":{},"body":{"overview.html":{}}}],["14",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1716,"title":{},"body":{"overview.html":{}}}],["17.1.1",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1715,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1056,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["200kb",{"_index":1058,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["2020",{"_index":1645,"title":{},"body":{"license.html":{}}}],["21",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["2347063644568",{"_index":983,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["2347063644568'})@maxlength(columnsize.length64)@isoptional",{"_index":1388,"title":{},"body":{"classes/UserDto.html":{}}}],["24",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{}}}],["3",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["3.0.0",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["3.15.0",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["3.2.0",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["3.23.3",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["3.3.0",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["3.9.0",{"_index":1545,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":1462,"title":{},"body":{"coverage.html":{}}}],["3/15",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["3/18",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["3/21",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["3/30",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":1542,"title":{},"body":{"dependencies.html":{}}}],["4.5.12",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["48",{"_index":1714,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["5.9.23",{"_index":1525,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4.10",{"_index":1526,"title":{},"body":{"dependencies.html":{}}}],["6.6.0",{"_index":1540,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["60000",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["7",{"_index":1169,"title":{},"body":{"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["7.0.2",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["7.3.2",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseEntity.html":{}}}],["_${propertykey",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":1084,"title":{},"body":{"injectables/ProfileService.html":{}}}],["abortearly",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["above",{"_index":1588,"title":{},"body":{"index.html":{},"license.html":{}}}],["abstractcontrolleroptions",{"_index":1,"title":{"interfaces/AbstractControllerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithauthoptions",{"_index":24,"title":{"interfaces/AbstractControllerWithAuthOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractcontrollerwithswaggeroptions",{"_index":27,"title":{"interfaces/AbstractControllerWithSwaggerOptions.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["abstractdocument",{"_index":1719,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["access",{"_index":845,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["accessors",{"_index":514,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["accesstoken",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["account",{"_index":941,"title":{},"body":{"injectables/MailService.html":{}}}],["acctverifydto",{"_index":36,"title":{"classes/AcctVerifyDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["achieving",{"_index":1585,"title":{},"body":{"index.html":{}}}],["action",{"_index":1700,"title":{},"body":{"license.html":{}}}],["activate",{"_index":511,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["admin",{"_index":1367,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["aliases",{"_index":1718,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["amazing",{"_index":1592,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1667,"title":{},"body":{"license.html":{}}}],["api_auth_enabled",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api_key",{"_index":929,"title":{},"body":{"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["api_key_mailgun",{"_index":793,"title":{},"body":{"modules/DbTest.html":{}}}],["api_secret",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":587,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apibody",{"_index":1019,"title":{},"body":{"controllers/ProfileController.html":{},"miscellaneous/variables.html":{}}}],["apiconflictresponse",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":1020,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["apiconsumes('multipart/form",{"_index":1046,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["apiexception",{"_index":58,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["apiexception})@apibearerauth",{"_index":585,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["apiexception})@apiresponse({status",{"_index":584,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["apiexception})@apiresponse({type",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useguards(authenticationguard",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiexception})@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1279,"title":{},"body":{"classes/TracksController.html":{}}}],["apifile",{"_index":1457,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["apioperation",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":76,"title":{},"body":{"classes/ApiException.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/CourseDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/IPagedListDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiproperty()@expose",{"_index":494,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({readonly",{"_index":1259,"title":{},"body":{"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({type",{"_index":471,"title":{},"body":{"classes/AvatarUploadDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{}}}],["apiresponse",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["apiswaggeroperation",{"_index":1452,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":105,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["apitags(\"health",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags(\"profile",{"_index":1032,"title":{},"body":{"controllers/ProfileController.html":{}}}],["apitags('auth",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiunauthorizedresponse",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["app.controller",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_email",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcontroller",{"_index":96,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appemail",{"_index":679,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["applicable",{"_index":1612,"title":{},"body":{"index.html":{}}}],["application",{"_index":1597,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":113,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":103,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["architectural",{"_index":1601,"title":{},"body":{"index.html":{}}}],["argumentshost",{"_index":822,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["arising",{"_index":1704,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1639,"title":{},"body":{"index.html":{}}}],["assignedtasks",{"_index":1265,"title":{},"body":{"classes/TracksController.html":{}}}],["assignedtasks(@param(\"trackid",{"_index":1306,"title":{},"body":{"classes/TracksController.html":{}}}],["assignedtasks(trackid",{"_index":1270,"title":{},"body":{"classes/TracksController.html":{}}}],["associated",{"_index":1654,"title":{},"body":{"license.html":{}}}],["async",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":18,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/MailService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.dto",{"_index":55,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["auth.guard",{"_index":1024,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth.guard.ts",{"_index":872,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:9",{"_index":873,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthenticationGuard.html":{}}}],["auth/auth.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards",{"_index":594,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["auth/guards/jwt",{"_index":1023,"title":{},"body":{"controllers/ProfileController.html":{}}}],["auth/models/dto/auth.dto",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_guard_type",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":181,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticate",{"_index":1454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationguard",{"_index":252,"title":{"guards/AuthenticationGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["autherrors",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherrors.expired_token",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_login_attempt",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["autherrors.invalid_token",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["authguard",{"_index":875,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard(auth_guard_type",{"_index":877,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authmodule",{"_index":124,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["authobj",{"_index":355,"title":{"interfaces/AuthObj.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authobj.create",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.delete",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.find",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.findbyid",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj.update",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.create?.length",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.delete?.length",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.find?.length",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.findbyid?.length",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authobj?.update?.length",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authors",{"_index":1693,"title":{},"body":{"license.html":{}}}],["authroles",{"_index":358,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":250,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"coverage.html":{},"overview.html":{}}}],["autopopulate",{"_index":1122,"title":{},"body":{"classes/Stage.html":{},"dependencies.html":{}}}],["available",{"_index":937,"title":{},"body":{"injectables/MailService.html":{},"modules.html":{}}}],["avatar",{"_index":1007,"title":{},"body":{"controllers/ProfileController.html":{}}}],["avatars",{"_index":1082,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["avataruploaddto",{"_index":468,"title":{"classes/AvatarUploadDto.html":{}},"body":{"classes/AvatarUploadDto.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["avataruploaddto})@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":1009,"title":{},"body":{"controllers/ProfileController.html":{}}}],["await",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["badrequestexception",{"_index":1012,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["badrequestexception(\"file",{"_index":1049,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["badrequestexception(\"thumbnail",{"_index":1297,"title":{},"body":{"classes/TracksController.html":{}}}],["basecontrolleroptions",{"_index":475,"title":{"interfaces/BaseControllerOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithauthoptions",{"_index":480,"title":{"interfaces/BaseControllerWithAuthOptions.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecontrollerwithswaggeropts",{"_index":481,"title":{"interfaces/BaseControllerWithSwaggerOpts.html":{}},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["basecrudcontroller",{"_index":588,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["basecrudcontroller(options",{"_index":1555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["basectrl",{"_index":573,"title":{},"body":{"classes/CategoriesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basedto",{"_index":490,"title":{"classes/BaseDto.html":{}},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["basedto:11",{"_index":660,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:14",{"_index":658,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["basedto:8",{"_index":659,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["baseentity",{"_index":502,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"coverage.html":{}}}],["baseentity:12",{"_index":641,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:14",{"_index":636,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:16",{"_index":643,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:18",{"_index":640,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:20",{"_index":638,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:22",{"_index":637,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:24",{"_index":635,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:26",{"_index":642,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:44",{"_index":646,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:53",{"_index":647,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:62",{"_index":645,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:71",{"_index":644,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseentity:9",{"_index":639,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["baseservice",{"_index":619,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.compare(plaintoken",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pw",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(newpassword",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(plaintoken",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["binary",{"_index":473,"title":{},"body":{"classes/AvatarUploadDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["boolean",{"_index":26,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1630,"title":{},"body":{"index.html":{}}}],["bring",{"_index":1590,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1709,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1707,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":565,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["bufferedfile",{"_index":562,"title":{"interfaces/BufferedFile.html":{}},"body":{"interfaces/BufferedFile.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["buildschema",{"_index":540,"title":{},"body":{"classes/BaseEntity.html":{}}}],["buildschema(this",{"_index":549,"title":{},"body":{"classes/BaseEntity.html":{}}}],["built",{"_index":1595,"title":{},"body":{"index.html":{}}}],["bull",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":31,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"license.html":{}}}],["cache",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["canactivate",{"_index":450,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":454,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canlogin",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["career",{"_index":1580,"title":{},"body":{"index.html":{}}}],["catch",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/User.html":{}}}],["catch(error",{"_index":821,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":826,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories.controller",{"_index":621,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":595,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriescontroller",{"_index":571,"title":{"classes/CategoriesController.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":125,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesservice",{"_index":575,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":596,"title":{"classes/Category.html":{}},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category.dto",{"_index":601,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{}}}],["category.dto.ts",{"_index":747,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.modelname",{"_index":623,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["category.schema",{"_index":624,"title":{},"body":{"modules/CategoriesModule.html":{},"miscellaneous/variables.html":{}}}],["categorydto",{"_index":582,"title":{"classes/CategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CreateCategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorymodel",{"_index":622,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryservice",{"_index":577,"title":{},"body":{"classes/CategoriesController.html":{}}}],["ccn",{"_index":180,"title":{},"body":{"injectables/AppService.html":{}}}],["ccn/${foldername",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charge",{"_index":1650,"title":{},"body":{"license.html":{}}}],["check",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["claim",{"_index":1696,"title":{},"body":{"license.html":{}}}],["clan",{"_index":1559,"title":{},"body":{"index.html":{}}}],["class",{"_index":35,"title":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"modules/DbTest.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":37,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"overview.html":{}}}],["classtype",{"_index":867,"title":{},"body":{"interfaces/IPagedListDto.html":{},"miscellaneous/typealiases.html":{}}}],["click",{"_index":1603,"title":{},"body":{"index.html":{}}}],["clientbaseurl",{"_index":40,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["cloud_name",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary",{"_index":666,"title":{"interfaces/Cloudinary.html":{}},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cloudinary.v2.config",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary.v2.uploader.upload(content",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary_api_key",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary_api_secret",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cloudinary_name",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":333,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":616,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_exports",{"_index":617,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule",{"_index":738,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_exports",{"_index":739,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_coursesmodule_providers",{"_index":740,"title":{},"body":{"modules/CoursesModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":902,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":903,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":904,"title":{},"body":{"modules/MailModule.html":{}}}],["cluster_profilemodule",{"_index":1061,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_exports",{"_index":1063,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_imports",{"_index":1062,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_providers",{"_index":1064,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_stagesmodule",{"_index":1155,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_exports",{"_index":1157,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_stagesmodule_imports",{"_index":1156,"title":{},"body":{"modules/StagesModule.html":{}}}],["cluster_stagesmodule_providers",{"_index":1158,"title":{},"body":{"modules/StagesModule.html":{},"overview.html":{}}}],["cluster_tasksmodule",{"_index":1229,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_exports",{"_index":1231,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_imports",{"_index":1230,"title":{},"body":{"modules/TasksModule.html":{}}}],["cluster_tasksmodule_providers",{"_index":1232,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule",{"_index":1313,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_exports",{"_index":1315,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_tracksmodule_imports",{"_index":1314,"title":{},"body":{"modules/TracksModule.html":{}}}],["cluster_tracksmodule_providers",{"_index":1316,"title":{},"body":{"modules/TracksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1409,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1410,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1411,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":1558,"title":{},"body":{"index.html":{}}}],["codeclannigeria",{"_index":1613,"title":{},"body":{"index.html":{}}}],["codeclannigeria.dev",{"_index":1581,"title":{},"body":{"index.html":{}}}],["coding",{"_index":1579,"title":{},"body":{"index.html":{}}}],["columnsize",{"_index":648,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["columnsize.length128",{"_index":706,"title":{},"body":{"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["columnsize.length256",{"_index":707,"title":{},"body":{"classes/Course.html":{}}}],["columnsize.length32",{"_index":651,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/UserDto.html":{}}}],["columnsize.length64",{"_index":1373,"title":{},"body":{"classes/User.html":{}}}],["come",{"_index":1600,"title":{},"body":{"index.html":{}}}],["community",{"_index":1563,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1166,"title":{},"body":{"classes/Task.html":{},"index.html":{}}}],["completed",{"_index":1183,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["compression",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["comprised",{"_index":1564,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1616,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1675,"title":{},"body":{"license.html":{}}}],["config",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.key",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.name",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.secret",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":149,"title":{"interfaces/Configuration.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration().appemail",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{}}}],["configuration().isauthenabled",{"_index":463,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["configuration().jwtsecret",{"_index":898,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["confirm",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmation",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmed",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{}}}],["confirmemail",{"_index":1330,"title":{},"body":{"classes/User.html":{}}}],["conflictexception",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["conflictexception('email",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{}}}],["conflictexception('user",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["connect",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":1705,"title":{},"body":{"license.html":{}}}],["console.log(context.switchtohttp().getrequest().sessionid",{"_index":878,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["const",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":70,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(@injectmodel(user.modelname",{"_index":1079,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor(authservice",{"_index":452,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["constructor(categoryservice",{"_index":574,"title":{},"body":{"classes/CategoriesController.html":{}}}],["constructor(courseservice",{"_index":724,"title":{},"body":{"classes/CoursesController.html":{}}}],["constructor(message",{"_index":71,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(private",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{}}}],["constructor(protected",{"_index":604,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["constructor(reflector",{"_index":1095,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(stageservice",{"_index":1137,"title":{},"body":{"classes/StagesController.html":{}}}],["constructor(tasksservice",{"_index":1197,"title":{},"body":{"classes/TasksController.html":{}}}],["constructor(trackservice",{"_index":1268,"title":{},"body":{"classes/TracksController.html":{}}}],["constructor(userentity",{"_index":1069,"title":{},"body":{"injectables/ProfileService.html":{}}}],["constructor(usersservice",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["content",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":457,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1101,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":461,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["contract",{"_index":1701,"title":{},"body":{"license.html":{}}}],["controller",{"_index":7,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ProfileController.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"controllers/ProfileController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('profile",{"_index":1033,"title":{},"body":{"controllers/ProfileController.html":{}}}],["controller.interface.ts",{"_index":849,"title":{},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["controller.interface.ts:10",{"_index":859,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:11",{"_index":861,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:12",{"_index":853,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:8",{"_index":851,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controller.interface.ts:9",{"_index":856,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["controllerauth",{"_index":361,"title":{"interfaces/ControllerAuth.html":{}},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controllername",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.indexof('controller",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllername.substr",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controllers",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":1669,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1653,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1644,"title":{},"body":{"license.html":{}}}],["course",{"_index":697,"title":{"classes/Course.html":{}},"body":{"classes/Course.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["course.dto",{"_index":733,"title":{},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{}}}],["course.dto.ts",{"_index":750,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["course.modelname",{"_index":744,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["course.schema",{"_index":745,"title":{},"body":{"modules/CoursesModule.html":{},"miscellaneous/variables.html":{}}}],["coursedto",{"_index":708,"title":{"classes/CourseDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["coursemodel",{"_index":743,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["courses.controller",{"_index":742,"title":{},"body":{"modules/CoursesModule.html":{}}}],["courses.service",{"_index":730,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["courses/courses.module",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["coursescontroller",{"_index":722,"title":{"classes/CoursesController.html":{}},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{}}}],["courseservice",{"_index":727,"title":{},"body":{"classes/CoursesController.html":{}}}],["coursesmodule",{"_index":126,"title":{"modules/CoursesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoursesModule.html":{},"modules.html":{},"overview.html":{}}}],["coursesservice",{"_index":725,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":1420,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["coverage.ts",{"_index":1425,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["create",{"_index":364,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":610,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["create(input",{"_index":578,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["createcategorydto",{"_index":579,"title":{"classes/CreateCategoryDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createcoursedto",{"_index":728,"title":{"classes/CreateCourseDto.html":{}},"body":{"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["created",{"_index":1574,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":492,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["createdby",{"_index":505,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["createdto",{"_index":484,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["createstagedto",{"_index":752,"title":{"classes/CreateStageDto.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtaskdto",{"_index":761,"title":{"classes/CreateTaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtrack",{"_index":1266,"title":{},"body":{"classes/TracksController.html":{}}}],["createtrack(@body",{"_index":1296,"title":{},"body":{"classes/TracksController.html":{}}}],["createtrack(input",{"_index":1277,"title":{},"body":{"classes/TracksController.html":{}}}],["createtrackdto",{"_index":768,"title":{"classes/CreateTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtransport",{"_index":909,"title":{},"body":{"injectables/MailService.html":{}}}],["createuserdto",{"_index":779,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createwiththumbnailtrackdto",{"_index":777,"title":{"classes/CreateWithThumbnailTrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{}}}],["crypto",{"_index":1364,"title":{},"body":{"classes/User.html":{}}}],["ctx",{"_index":827,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":831,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":830,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["current",{"_index":1623,"title":{},"body":{"index.html":{}}}],["customdecorator",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["customname",{"_index":1248,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["damages",{"_index":1697,"title":{},"body":{"license.html":{}}}],["data",{"_index":1047,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["data')@apibearerauth",{"_index":1280,"title":{},"body":{"classes/TracksController.html":{}}}],["data')@apibody({description",{"_index":1005,"title":{},"body":{"controllers/ProfileController.html":{}}}],["database",{"_index":167,"title":{"interfaces/Database.html":{}},"body":{"modules/AppModule.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_host",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datauri",{"_index":1517,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["datauri.format(`.${file.originalname.split('.')[0",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datauriparser",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedListTaskDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["date().getdate",{"_index":1168,"title":{},"body":{"classes/Task.html":{}}}],["date().gettime",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["date().setdate(new",{"_index":1167,"title":{},"body":{"classes/Task.html":{}}}],["date().toisostring",{"_index":92,"title":{},"body":{"classes/ApiException.html":{}}}],["date(date.now",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["date(new",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"classes/Task.html":{}}}],["date})@type(undefined",{"_index":1188,"title":{},"body":{"classes/TaskDto.html":{}}}],["dbfactory",{"_index":799,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver",{"_index":797,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbserver.geturi",{"_index":802,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["dbtest",{"_index":786,"title":{"modules/DbTest.html":{}},"body":{"modules/DbTest.html":{},"modules.html":{}}}],["deactivate",{"_index":512,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deadline",{"_index":959,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{}}}],["deal",{"_index":1656,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1706,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorator(target",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":44,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["default",{"_index":17,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth",{"_index":1466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultauth.create.authroles",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.create.enableauth",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.authroles",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.delete.enableauth",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.authroles",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.find.enableauth",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.authroles",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.findbyid.enableauth",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.authroles",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauth.update.enableauth",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultauthobject",{"_index":16,"title":{"interfaces/DefaultAuthObject.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":46,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["delete",{"_index":366,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["delete(id",{"_index":852,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["deletedat",{"_index":506,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deletedby",{"_index":507,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["deleteresulttype",{"_index":1721,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":115,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":653,"title":{},"body":{"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["descriptor",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deserializeuser",{"_index":1105,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["deserializeuser(user",{"_index":1107,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["desire",{"_index":1575,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1629,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1568,"title":{},"body":{"index.html":{}}}],["devops",{"_index":1569,"title":{},"body":{"index.html":{}}}],["discard_original_filename",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["distribute",{"_index":1665,"title":{},"body":{"license.html":{}}}],["doc",{"_index":22,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["documentation",{"_index":1421,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentquery",{"_index":1726,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["documenttype",{"_index":1727,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["domain",{"_index":674,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{}}}],["done",{"_index":1108,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["done(null",{"_index":1114,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["dto",{"_index":1301,"title":{},"body":{"classes/TracksController.html":{}}}],["dto.thumbnail",{"_index":1303,"title":{},"body":{"classes/TracksController.html":{}}}],["dto.thumbnailurl",{"_index":1302,"title":{},"body":{"classes/TracksController.html":{}}}],["dto/avatar",{"_index":1026,"title":{},"body":{"controllers/ProfileController.html":{}}}],["dto/update",{"_index":1028,"title":{},"body":{"controllers/ProfileController.html":{}}}],["e",{"_index":1371,"title":{},"body":{"classes/User.html":{}}}],["each",{"_index":986,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["email",{"_index":57,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TemporaryToken.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["email')@httpcode(httpstatus.ok",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["email?.tolowercase",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["email_token",{"_index":1246,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["emailparamname",{"_index":41,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["empty",{"_index":1051,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["enableauth",{"_index":359,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"miscellaneous/variables.html":{}}}],["enableimplicitconversion",{"_index":1040,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["encoding",{"_index":566,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["encryptedtoken",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["end",{"_index":1567,"title":{},"body":{"index.html":{}}}],["engineers",{"_index":1570,"title":{},"body":{"index.html":{}}}],["enroll",{"_index":1267,"title":{},"body":{"classes/TracksController.html":{}}}],["enroll(@param(\"trackid",{"_index":1311,"title":{},"body":{"classes/TracksController.html":{}}}],["enroll(trackid",{"_index":1282,"title":{},"body":{"classes/TracksController.html":{}}}],["enrollmentcount",{"_index":699,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["entity",{"_index":479,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["entitydto",{"_index":482,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IPagedListDto.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":976,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["enumerations",{"_index":1547,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":675,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["envvalidation",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["err",{"_index":1109,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error",{"_index":62,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/SessionSerializer.html":{}}}],["error,user",{"_index":1110,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["error.getstatus",{"_index":832,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.name",{"_index":838,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response",{"_index":842,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.error",{"_index":837,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.errors",{"_index":839,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.message",{"_index":843,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.response.name",{"_index":836,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["error.stack",{"_index":834,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorname",{"_index":835,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errors",{"_index":63,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["errors/api",{"_index":825,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errortype",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["ethereal",{"_index":940,"title":{},"body":{"injectables/MailService.html":{}}}],["event",{"_index":1692,"title":{},"body":{"license.html":{}}}],["exception",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":819,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:14",{"_index":823,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.ts",{"_index":60,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["exception.ts:10",{"_index":81,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:12",{"_index":77,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:14",{"_index":78,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:16",{"_index":83,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:18",{"_index":80,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:20",{"_index":73,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:6",{"_index":82,"title":{},"body":{"classes/ApiException.html":{}}}],["exception.ts:8",{"_index":79,"title":{},"body":{"classes/ApiException.html":{}}}],["exceptionfilter",{"_index":820,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exclude",{"_index":661,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["exclude()@prop({default",{"_index":1342,"title":{},"body":{"classes/User.html":{}}}],["excludeextraneousvalues",{"_index":1039,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["executioncontext",{"_index":455,"title":{},"body":{"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["exist",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["exist.email",{"_index":1408,"title":{},"body":{"classes/UsersController.html":{}}}],["exist.id",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["exist.name",{"_index":614,"title":{},"body":{"classes/CategoriesController.html":{}}}],["exist.title",{"_index":737,"title":{},"body":{"classes/CoursesController.html":{},"classes/TracksController.html":{}}}],["exist.token",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["expandvariables",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["expireafterseconds",{"_index":1250,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["expireat",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"classes/TemporaryToken.html":{}}}],["expired",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expired_token",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expiresin",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresinmins",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["exports",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":499,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["expose()@apiproperty({type",{"_index":1132,"title":{},"body":{"classes/StageDto.html":{}}}],["expose()@isarray()@length(1",{"_index":1393,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isdate()@mindate(new",{"_index":1186,"title":{},"body":{"classes/TaskDto.html":{}}}],["expose()@isenum(userrole)@apiproperty({enum",{"_index":1391,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isoptional()@maxlength(columnsize.length128",{"_index":1380,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@isphonenumber('zz",{"_index":1387,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length128)@apiproperty",{"_index":710,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length32)@apiproperty()@isalphanumeric",{"_index":715,"title":{},"body":{"classes/CourseDto.html":{}}}],["expose()@maxlength(columnsize.length64",{"_index":1384,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@maxlength(columnsize.length64)@isemail",{"_index":1382,"title":{},"body":{"classes/UserDto.html":{}}}],["expose()@min(0)@isint()@isoptional",{"_index":1128,"title":{},"body":{"classes/StageDto.html":{}}}],["express",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":25,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{}}}],["extractjwt",{"_index":889,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":895,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["failed",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{}}}],["failedsigninattempts",{"_index":1327,"title":{},"body":{"classes/User.html":{}}}],["false",{"_index":173,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"modules/DbTest.html":{},"injectables/JwtStrategy.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false').default('true",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["feedback",{"_index":1632,"title":{},"body":{"index.html":{}}}],["feel",{"_index":1604,"title":{},"body":{"index.html":{}}}],["fieldname",{"_index":567,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.buffer",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.interface",{"_index":772,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{}}}],["file.interface.ts",{"_index":564,"title":{},"body":{"interfaces/BufferedFile.html":{},"coverage.html":{}}}],["file.mimetype.split('/')[0",{"_index":1052,"title":{},"body":{"controllers/ProfileController.html":{}}}],["file.size",{"_index":1054,"title":{},"body":{"controllers/ProfileController.html":{}}}],["fileinterceptor",{"_index":1017,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["filename",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1655,"title":{},"body":{"license.html":{}}}],["find",{"_index":362,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"classes/UsersController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["findall",{"_index":850,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findall(input",{"_index":854,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["findbyid",{"_index":363,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["findbyid(input",{"_index":858,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["finddto",{"_index":803,"title":{"classes/FindDto.html":{}},"body":{"classes/FindDto.html":{},"coverage.html":{}}}],["findone",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstname",{"_index":973,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["fitness",{"_index":1688,"title":{},"body":{"license.html":{}}}],["folder",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["foldername",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["follow",{"_index":1610,"title":{},"body":{"index.html":{}}}],["following",{"_index":1674,"title":{},"body":{"license.html":{}}}],["forbiddenexception('invalid",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fork",{"_index":1614,"title":{},"body":{"index.html":{}}}],["format",{"_index":472,"title":{},"body":{"classes/AvatarUploadDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"miscellaneous/variables.html":{}}}],["fortune",{"_index":1646,"title":{},"body":{"license.html":{}}}],["found",{"_index":1222,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["free",{"_index":1605,"title":{},"body":{"index.html":{},"license.html":{}}}],["front",{"_index":1566,"title":{},"body":{"index.html":{}}}],["full",{"_index":1357,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["fullname",{"_index":1332,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":869,"title":{},"body":{"interfaces/IPagedListDto.html":{},"injectables/SessionSerializer.html":{},"classes/User.html":{},"coverage.html":{}}}],["functions",{"_index":1551,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1672,"title":{},"body":{"license.html":{}}}],["future",{"_index":958,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"index.html":{}}}],["future'})@isoptional()@apiproperty({type",{"_index":1187,"title":{},"body":{"classes/TaskDto.html":{}}}],["generaterandomtoken",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generaterandomtoken(64",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetemptoken(undefined",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':trackid/stages",{"_index":1305,"title":{},"body":{"classes/TracksController.html":{}}}],["get(':trackid/stages')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1271,"title":{},"body":{"classes/TracksController.html":{}}}],["get()@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":997,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getauthobj",{"_index":1467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getauthtoken",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["getauthtoken(user",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfullname",{"_index":1354,"title":{},"body":{"classes/User.html":{}}}],["gethello",{"_index":100,"title":{},"body":{"controllers/AppController.html":{}}}],["getmodel",{"_index":1358,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass",{"_index":1361,"title":{},"body":{"classes/User.html":{}}}],["getmodelforclass(this",{"_index":1379,"title":{},"body":{"classes/User.html":{}}}],["getmodelname",{"_index":538,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getprofile",{"_index":993,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(@req",{"_index":1036,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getprofile(req",{"_index":996,"title":{},"body":{"controllers/ProfileController.html":{}}}],["getschema",{"_index":536,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getters",{"_index":551,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getting",{"_index":1557,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwelcome",{"_index":177,"title":{},"body":{"injectables/AppService.html":{}}}],["global",{"_index":1116,"title":{},"body":{"modules/SharedModule.html":{}}}],["goal",{"_index":1586,"title":{},"body":{"index.html":{}}}],["granted",{"_index":1649,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1710,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":447,"title":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":448,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["hapi/joi",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["hash",{"_index":1363,"title":{},"body":{"classes/User.html":{}}}],["hash(this.password",{"_index":1370,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["helmet",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["hereby",{"_index":1648,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1694,"title":{},"body":{"license.html":{}}}],["host",{"_index":670,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Mailer.html":{}}}],["host.switchtohttp",{"_index":828,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["httpcode(httpstatus.ok",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["httpexception",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":817,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://ethereal.email/message/waqkmgkddxqdoou",{"_index":944,"title":{},"body":{"injectables/MailService.html":{}}}],["httpstatus",{"_index":84,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.bad_request",{"_index":609,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.created",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.forbidden",{"_index":608,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["httpstatus.ok",{"_index":1035,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["httpstatus.unauthorized",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpstatus[statuscode",{"_index":95,"title":{},"body":{"classes/ApiException.html":{}}}],["ibasecontroller",{"_index":848,"title":{"interfaces/IBaseController.html":{}},"body":{"interfaces/IBaseController.html":{},"coverage.html":{}}}],["id",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/IBaseController.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["identifier",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":896,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1050,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["img.util",{"_index":1078,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["img.util.ts",{"_index":1471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":460,"title":{},"body":{"guards/AuthenticationGuard.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"guards/RolesGuard.html":{}}}],["implied",{"_index":1684,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["imports",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1678,"title":{},"body":{"license.html":{}}}],["including",{"_index":1659,"title":{},"body":{"license.html":{}}}],["incorrect",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{}}}],["info.messageid",{"_index":935,"title":{},"body":{"injectables/MailService.html":{}}}],["inherited",{"_index":634,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["inject",{"_index":1144,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["inject(stagesservice",{"_index":1215,"title":{},"body":{"classes/TasksController.html":{}}}],["inject(tracksservice",{"_index":1149,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["injectable",{"_index":174,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["injectables",{"_index":175,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"overview.html":{}}}],["injectmodel",{"_index":1075,"title":{},"body":{"injectables/ProfileService.html":{}}}],["inmemorydb",{"_index":798,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["innovators",{"_index":1565,"title":{},"body":{"index.html":{}}}],["input",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["input.email",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["input.email.tolowercase",{"_index":1407,"title":{},"body":{"classes/UsersController.html":{}}}],["input.name.touppercase",{"_index":613,"title":{},"body":{"classes/CategoriesController.html":{}}}],["input.stage",{"_index":1221,"title":{},"body":{"classes/TasksController.html":{}}}],["input.title.touppercase",{"_index":736,"title":{},"body":{"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["input.track",{"_index":1152,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{}},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["interface.ts",{"_index":478,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/AuthObj.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"interfaces/Mailer.html":{},"overview.html":{}}}],["internalservererrorexception",{"_index":1360,"title":{},"body":{"classes/User.html":{}}}],["internalservererrorexception(e",{"_index":1372,"title":{},"body":{"classes/User.html":{}}}],["invalid",{"_index":979,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["invalid_login_attempt",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["invalid_token",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ipagedlistdto",{"_index":862,"title":{"interfaces/IPagedListDto.html":{}},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{}}}],["isactive",{"_index":508,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isalphanumeric",{"_index":717,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["isarray",{"_index":966,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isauthenabled",{"_index":678,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["isauthenticationenabled",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdate",{"_index":954,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["isdeleted",{"_index":509,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["isemail",{"_index":967,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isemailverified",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["isenum",{"_index":968,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isenum(userrole",{"_index":975,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isglobal",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":947,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["isjson",{"_index":816,"title":{},"body":{"classes/FindDto.html":{}}}],["isjson()@isoptional",{"_index":811,"title":{},"body":{"classes/FindDto.html":{}}}],["ismongoid",{"_index":501,"title":{},"body":{"classes/BaseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["ismongoid()@expose",{"_index":496,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["isnotempty",{"_index":48,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/ResetPassInput.html":{},"classes/TrackDto.html":{},"classes/ValidateTokenInput.html":{}}}],["isoptional",{"_index":809,"title":{},"body":{"classes/FindDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["isoptional()@isjson",{"_index":813,"title":{},"body":{"classes/FindDto.html":{}}}],["isphonenumber",{"_index":969,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["isphonenumber(\"zz",{"_index":978,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["issue",{"_index":1619,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1617,"title":{},"body":{"index.html":{}}}],["isurl",{"_index":45,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["isurl()@maxlength(columnsize.length256)@expose",{"_index":713,"title":{},"body":{"classes/CourseDto.html":{}}}],["isvalid",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":865,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["joi.number().default(27017",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().default(3000",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().default('localhost",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().email().required",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().default('redis://localhost:6379",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().uri().required",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('true",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":1637,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign(payload",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_secret",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt_validity_hours",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":592,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":894,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtpayload",{"_index":398,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{},"coverage.html":{}}}],["jwtsecret",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["jwtstrategy",{"_index":334,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtvalidityhrs",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["key",{"_index":668,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":1683,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1057,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["lastname",{"_index":974,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["legend",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":970,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["length(1",{"_index":985,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["length1024",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length128",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length16",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length256",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length32",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length512",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length64",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["length8",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":1625,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1698,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1695,"title":{},"body":{"license.html":{}}}],["license",{"_index":1642,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":805,"title":{},"body":{"classes/FindDto.html":{},"dependencies.html":{}}}],["limitation",{"_index":1660,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1685,"title":{},"body":{"license.html":{}}}],["list.dto.ts",{"_index":864,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["literal",{"_index":12,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"injectables/AuthService.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["local",{"_index":1530,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["locked",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["lockoutenddate",{"_index":1328,"title":{},"body":{"classes/User.html":{}}}],["logger",{"_index":919,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`message",{"_index":933,"title":{},"body":{"injectables/MailService.html":{}}}],["logger.debug(`preview",{"_index":942,"title":{},"body":{"injectables/MailService.html":{}}}],["login",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(_",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["loginattemptcount",{"_index":1329,"title":{},"body":{"classes/User.html":{}}}],["loginreqdto",{"_index":54,"title":{"classes/LoginReqDto.html":{}},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["loginresdto",{"_index":256,"title":{"classes/LoginResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["loginresdto})@apiunauthorizedresponse({type",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["lowercase",{"_index":1335,"title":{},"body":{"classes/User.html":{}}}],["mail",{"_index":918,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.options",{"_index":914,"title":{},"body":{"injectables/MailService.html":{}}}],["mail.service",{"_index":906,"title":{},"body":{"modules/MailModule.html":{}}}],["mailer",{"_index":673,"title":{"interfaces/Mailer.html":{}},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["mailer.domain",{"_index":931,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer.key",{"_index":930,"title":{},"body":{"injectables/MailService.html":{}}}],["mailer_api_key",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailer_domain_mailgun",{"_index":796,"title":{},"body":{"modules/DbTest.html":{}}}],["mailgun",{"_index":922,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["mailmodule",{"_index":127,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoptions",{"_index":916,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":242,"title":{"injectables/MailService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main",{"_index":1426,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["make",{"_index":1627,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["matches",{"_index":1622,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":628,"title":{},"body":{"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128",{"_index":664,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["maxlength(columnsize.length128)@expose",{"_index":654,"title":{},"body":{"classes/CategoryDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{}}}],["maxlength(columnsize.length128)@expose()@isnotempty",{"_index":1257,"title":{},"body":{"classes/TrackDto.html":{}}}],["maxlength(columnsize.length256",{"_index":719,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["maxlength(columnsize.length32",{"_index":663,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length32)@expose",{"_index":656,"title":{},"body":{"classes/CategoryDto.html":{}}}],["maxlength(columnsize.length32)@isalphanumeric()@expose",{"_index":1130,"title":{},"body":{"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{}}}],["maxlength(columnsize.length64",{"_index":972,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["measures",{"_index":1583,"title":{},"body":{"index.html":{}}}],["memberof",{"_index":560,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["members",{"_index":1594,"title":{},"body":{"index.html":{}}}],["memory",{"_index":791,"title":{},"body":{"modules/DbTest.html":{}}}],["mentee",{"_index":1365,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["mentor",{"_index":1366,"title":{},"body":{"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["merchantability",{"_index":1687,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1424,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["message",{"_index":64,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/TaskDto.html":{},"classes/UserDto.html":{}}}],["metadata",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["methoddecorator",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["mg",{"_index":921,"title":{},"body":{"injectables/MailService.html":{}}}],["mimetype",{"_index":568,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["min",{"_index":948,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["min(0",{"_index":950,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["mindate",{"_index":955,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["mindate(new",{"_index":957,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["minlength",{"_index":1088,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["minlength(6",{"_index":1086,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["miscellaneous",{"_index":1546,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1643,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":1596,"title":{},"body":{"index.html":{}}}],["model",{"_index":11,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/User.html":{}}}],["modelcreate",{"_index":30,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modelname",{"_index":515,"title":{},"body":{"classes/BaseEntity.html":{}}}],["modeloptions",{"_index":1244,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["models/category.entity",{"_index":597,"title":{},"body":{"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["models/course.entity",{"_index":731,"title":{},"body":{"classes/CoursesController.html":{},"modules/CoursesModule.html":{}}}],["models/dto/acct",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/auth.dto",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{}}}],["models/dto/create",{"_index":1287,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["models/dto/reset",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dto/track.dto",{"_index":1288,"title":{},"body":{"classes/TracksController.html":{}}}],["models/dto/user.dto",{"_index":1403,"title":{},"body":{"classes/UsersController.html":{}}}],["models/dto/validate",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["models/dtos/category.dto",{"_index":599,"title":{},"body":{"classes/CategoriesController.html":{}}}],["models/dtos/course.dto",{"_index":732,"title":{},"body":{"classes/CoursesController.html":{}}}],["models/dtos/create",{"_index":600,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["models/dtos/stage.dto",{"_index":1146,"title":{},"body":{"classes/StagesController.html":{}}}],["models/dtos/task.dto",{"_index":1212,"title":{},"body":{"classes/TasksController.html":{}}}],["models/jwt",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["models/stage.entity",{"_index":1147,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{}}}],["models/task.entity",{"_index":1213,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{}}}],["models/temporary",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["models/track.entity",{"_index":1289,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["models/user.entity",{"_index":1404,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["modelvm",{"_index":28,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["modify",{"_index":1663,"title":{},"body":{"license.html":{}}}],["module",{"_index":112,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":114,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":790,"title":{},"body":{"modules/DbTest.html":{}}}],["mongodb_uri",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongomemoryserver",{"_index":789,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["mongoose",{"_index":544,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Stage.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forroot(configuration().database.uri",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule.forrootasync",{"_index":800,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":1636,"title":{},"body":{"index.html":{}}}],["name",{"_index":75,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"interfaces/Database.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":1620,"title":{},"body":{"index.html":{}}}],["nestjs/bull",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":85,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1099,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/DbTest.html":{},"injectables/ProfileService.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/SessionSerializer.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1018,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":52,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/CategoriesController.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/IPagedListDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UpdateProfileDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["new",{"_index":21,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{}}}],["nigeria",{"_index":1560,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodemailer",{"_index":920,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":928,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer.gettestmessageurl(info",{"_index":943,"title":{},"body":{"injectables/MailService.html":{}}}],["noninfringement",{"_index":1691,"title":{},"body":{"license.html":{}}}],["note",{"_index":1611,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["notfoundexception('token",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception('user",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["notfoundexception(`stage",{"_index":1220,"title":{},"body":{"classes/TasksController.html":{}}}],["notfoundexception(`track",{"_index":1223,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["notice",{"_index":1676,"title":{},"body":{"license.html":{}}}],["null",{"_index":520,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["number",{"_index":72,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"interfaces/BufferedFile.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["obj.util.ts",{"_index":1465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.interface",{"_index":19,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["object.interface.ts",{"_index":357,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["object.values(userrole",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":874,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["obtaining",{"_index":1652,"title":{},"body":{"license.html":{}}}],["ochi",{"_index":1647,"title":{},"body":{"license.html":{}}}],["official",{"_index":1561,"title":{},"body":{"index.html":{}}}],["omittype",{"_index":764,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UpdateProfileDto.html":{}}}],["omittype(createuserdto",{"_index":1325,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["omittype(taskdto",{"_index":767,"title":{},"body":{"classes/CreateTaskDto.html":{}}}],["omittype(trackdto",{"_index":775,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{}}}],["omittype(userdto",{"_index":783,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{}}}],["one_kb",{"_index":1291,"title":{},"body":{"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ongoing",{"_index":1576,"title":{},"body":{"index.html":{}}}],["operation.decorator.ts",{"_index":1451,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["operationid",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":61,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1247,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.interface.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["opts",{"_index":477,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/FindDto.html":{},"coverage.html":{}}}],["originalname",{"_index":569,"title":{},"body":{"interfaces/BufferedFile.html":{}}}],["otherwise",{"_index":1703,"title":{},"body":{"license.html":{}}}],["out",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1711,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1486,"title":{"dependencies.html":{}},"body":{}}],["paged",{"_index":870,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["pagedcategoryoutdto",{"_index":598,"title":{"classes/PagedCategoryOutDto.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedcourseoutputdto",{"_index":720,"title":{"classes/PagedCourseOutputDto.html":{}},"body":{"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["pagedlistdto",{"_index":488,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"interfaces/IPagedListDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["pagedlistdto(categorydto",{"_index":665,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{}}}],["pagedlistdto(coursedto",{"_index":721,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["pagedlistdto(entitydto",{"_index":1556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pagedlistdto(stagedto",{"_index":951,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{}}}],["pagedlistdto(taskdto",{"_index":960,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{}}}],["pagedlistdto(trackdto",{"_index":963,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{}}}],["pagedlistdto(userdto",{"_index":989,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["pagedliststagedto",{"_index":945,"title":{"classes/PagedListStageDto.html":{}},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedlisttaskdto",{"_index":952,"title":{"classes/PagedListTaskDto.html":{}},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagedtrackoutputdto",{"_index":961,"title":{"classes/PagedTrackOutputDto.html":{}},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pageduseroutputdto",{"_index":964,"title":{"classes/PagedUserOutputDto.html":{}},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1618,"title":{},"body":{"index.html":{}}}],["param",{"_index":1210,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["parameters",{"_index":74,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1582,"title":{},"body":{"index.html":{}}}],["particular",{"_index":1689,"title":{},"body":{"license.html":{}}}],["passport",{"_index":891,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":352,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["passportserializer",{"_index":1104,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["passportstrategy",{"_index":888,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":892,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["password')@httpcode(httpstatus.ok",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["password_token",{"_index":1245,"title":{},"body":{"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["passwordhash",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":65,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["paths",{"_index":1544,"title":{},"body":{"dependencies.html":{}}}],["payload",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"guards/RolesGuard.html":{}}}],["payload.ts",{"_index":881,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["permission",{"_index":844,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"license.html":{}}}],["permit",{"_index":1670,"title":{},"body":{"license.html":{}}}],["person",{"_index":1651,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1671,"title":{},"body":{"license.html":{}}}],["phone",{"_index":980,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["phonenumber",{"_index":984,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["photo",{"_index":1008,"title":{},"body":{"controllers/ProfileController.html":{}}}],["photourl",{"_index":988,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["picktype",{"_index":51,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(categorydto",{"_index":748,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["picktype(coursedto",{"_index":751,"title":{},"body":{"classes/CreateCourseDto.html":{}}}],["picktype(loginreqdto",{"_index":56,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ValidateTokenInput.html":{}}}],["picktype(registeruserdto",{"_index":900,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["picktype(stagedto",{"_index":759,"title":{},"body":{"classes/CreateStageDto.html":{}}}],["plaintoclass",{"_index":1021,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["plaintoclass(stagedto",{"_index":1309,"title":{},"body":{"classes/TracksController.html":{}}}],["plaintoclass(userdto",{"_index":1038,"title":{},"body":{"controllers/ProfileController.html":{}}}],["plaintoken",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["playlisturl",{"_index":700,"title":{},"body":{"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateCourseDto.html":{},"classes/PagedCourseOutputDto.html":{}}}],["please",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{}}}],["plugin",{"_index":1124,"title":{},"body":{"classes/Stage.html":{}}}],["plugin(autopopulate",{"_index":1126,"title":{},"body":{"classes/Stage.html":{}}}],["pluralize",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["populate('user",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":671,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1680,"title":{},"body":{"license.html":{}}}],["post",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["post(\":trackid/enroll",{"_index":1310,"title":{},"body":{"classes/TracksController.html":{}}}],["post(\"create_with_thumbnail",{"_index":1294,"title":{},"body":{"classes/TracksController.html":{}}}],["post(':taskid/submit",{"_index":1224,"title":{},"body":{"classes/TasksController.html":{}}}],["post(':taskid/submit')@httpcode(httpstatus.ok)@apiresponse({status",{"_index":1205,"title":{},"body":{"classes/TasksController.html":{}}}],["post(':trackid/enroll')@useguards(jwtauthguard)@httpcode(httpstatus.ok)@apibearerauth()@apiresponse({status",{"_index":1283,"title":{},"body":{"classes/TracksController.html":{}}}],["post('confirm",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create_with_thumbnail')@useguards(jwtauthguard",{"_index":1278,"title":{},"body":{"classes/TracksController.html":{}}}],["post('login",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login')@httpcode(httpstatus.ok)@apiokresponse({type",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register')@apiconflictresponse({type",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('reset",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('send",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('upload_profile_photo",{"_index":1044,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post('upload_profile_photo')@useinterceptors(undefined)@apiconsumes('multipart/form",{"_index":1004,"title":{},"body":{"controllers/ProfileController.html":{}}}],["post()@apibearerauth()@useguards(jwtauthguard",{"_index":1200,"title":{},"body":{"classes/TasksController.html":{}}}],["post()@useguards(jwtauthguard",{"_index":580,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["pre",{"_index":1362,"title":{},"body":{"classes/User.html":{}}}],["pre('save",{"_index":1368,"title":{},"body":{"classes/User.html":{}}}],["prefix",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProfileController.html":{}}}],["preview",{"_index":936,"title":{},"body":{"injectables/MailService.html":{}}}],["private",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["process",{"_index":1634,"title":{},"body":{"index.html":{}}}],["process.env.api_auth_enabled",{"_index":686,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.app_email",{"_index":687,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_api_key",{"_index":695,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_api_secret",{"_index":694,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.cloudinary_name",{"_index":696,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_host",{"_index":690,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_name",{"_index":692,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.database_port",{"_index":691,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_secret",{"_index":682,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.jwt_validity_hours",{"_index":683,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_api_key",{"_index":688,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mailer_domain",{"_index":689,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongodb_uri",{"_index":693,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.mongoms_system_binary",{"_index":794,"title":{},"body":{"modules/DbTest.html":{}}}],["process.env.node_env",{"_index":681,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.port",{"_index":680,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.redis_server_url",{"_index":685,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["process.env.root_url",{"_index":684,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["production",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":992,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.controller",{"_index":1066,"title":{},"body":{"modules/ProfileModule.html":{}}}],["profile.dto",{"_index":1029,"title":{},"body":{"controllers/ProfileController.html":{}}}],["profile.dto.ts",{"_index":1323,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["profile.service",{"_index":1031,"title":{},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["profile/profile.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["profilecontroller",{"_index":990,"title":{"controllers/ProfileController.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"coverage.html":{}}}],["profilemodule",{"_index":128,"title":{"modules/ProfileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profileservice",{"_index":1030,"title":{"injectables/ProfileService.html":{}},"body":{"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["promiselike",{"_index":886,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["prop",{"_index":541,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({default",{"_index":521,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({enum",{"_index":1175,"title":{},"body":{"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{}}}],["prop({maxlength",{"_index":1333,"title":{},"body":{"classes/User.html":{}}}],["prop({ref",{"_index":1121,"title":{},"body":{"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({required",{"_index":517,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["prop({type",{"_index":1349,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":10,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"interfaces/AuthObj.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"interfaces/IPagedListDto.html":{},"interfaces/JwtPayload.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["propertydescriptor",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propose",{"_index":1589,"title":{},"body":{"index.html":{}}}],["protected",{"_index":1080,"title":{},"body":{"injectables/ProfileService.html":{},"classes/StagesController.html":{}}}],["provide",{"_index":625,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1681,"title":{},"body":{"license.html":{}}}],["providers",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/SharedModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public_id",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["publish",{"_index":1664,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1628,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1690,"title":{},"body":{"license.html":{}}}],["put",{"_index":1013,"title":{},"body":{"controllers/ProfileController.html":{},"index.html":{}}}],["put()@useguards(jwtauthguard)@apibearerauth()@apiresponse({type",{"_index":1001,"title":{},"body":{"controllers/ProfileController.html":{}}}],["pw",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["pw.dto",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["pw.dto.ts",{"_index":1091,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["pw.dto.ts:7",{"_index":1092,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["queryitem",{"_index":1722,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["querylist",{"_index":1723,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["questions",{"_index":1640,"title":{},"body":{"index.html":{}}}],["randombytes(columnsize.length32",{"_index":1376,"title":{},"body":{"classes/User.html":{}}}],["randombytes(size).tostring('hex",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"injectables/MailService.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{}}}],["redis",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["redis_server_url",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redisurl",{"_index":677,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["ref",{"_index":519,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["reflect",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1096,"title":{},"body":{"guards/RolesGuard.html":{}}}],["register",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(@body",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(input",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":202,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["registeruserresdto",{"_index":205,"title":{"classes/RegisterUserResDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["repeat",{"_index":1633,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1615,"title":{},"body":{"index.html":{}}}],["represents",{"_index":1598,"title":{},"body":{"index.html":{}}}],["req",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["req.url",{"_index":840,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["req.user['userid",{"_index":1042,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["request",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/TracksController.html":{},"index.html":{}}}],["request.body",{"_index":464,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["request.user",{"_index":467,"title":{},"body":{"guards/AuthenticationGuard.html":{},"guards/RolesGuard.html":{}}}],["require('nodemailer/lib/mailer",{"_index":924,"title":{},"body":{"injectables/MailService.html":{}}}],["required",{"_index":547,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["res",{"_index":829,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["res.status(statuscode).json(exception",{"_index":847,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetpassinput",{"_index":210,"title":{"classes/ResetPassInput.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"coverage.html":{}}}],["resetpassword",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(@body",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetpassword(input",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":846,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response",{"_index":824,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restore",{"_index":513,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["restriction",{"_index":1658,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":34,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":555,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret._id",{"_index":557,"title":{},"body":{"classes/BaseEntity.html":{}}}],["ret.id",{"_index":556,"title":{},"body":{"classes/BaseEntity.html":{}}}],["return",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"modules/DbTest.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returnmodeltype",{"_index":1070,"title":{},"body":{"injectables/ProfileService.html":{},"classes/User.html":{}}}],["returns",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":1661,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1539,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"guards/RolesGuard.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["roles",{"_index":590,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(userrole.admin",{"_index":607,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["roles(userrole.mentee",{"_index":1225,"title":{},"body":{"classes/TasksController.html":{}}}],["roles.includes(role",{"_index":1102,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":593,"title":{"guards/RolesGuard.html":{}},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"coverage.html":{}}}],["rolesguard)@roles(userrole.admin",{"_index":1201,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["rolesguard)@roles(userrole.admin)@apiresponse({type",{"_index":581,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/UsersController.html":{}}}],["rolesguard)@roles(userrole.mentee)@apibearerauth()@apiresponse({status",{"_index":1207,"title":{},"body":{"classes/TasksController.html":{}}}],["root_url",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rooturl",{"_index":676,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["rxjs",{"_index":876,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"dependencies.html":{}}}],["sample",{"_index":982,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["saved",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{}}}],["saved.isemailverified",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["schema",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{},"classes/BaseEntity.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["search",{"_index":806,"title":{},"body":{"classes/FindDto.html":{}}}],["secret",{"_index":669,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{}}}],["secretorkey",{"_index":897,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure_url",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sell",{"_index":1668,"title":{},"body":{"license.html":{}}}],["sendemailverifytoken",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(@body",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendemailverifytoken(input",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(@body",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["sendforgotpwtoken(input",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["sending",{"_index":938,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync",{"_index":910,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailasync(mailoptions",{"_index":913,"title":{},"body":{"injectables/MailService.html":{}}}],["sent",{"_index":934,"title":{},"body":{"injectables/MailService.html":{}}}],["serializeuser",{"_index":1106,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["serializeuser(user",{"_index":1112,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["server",{"_index":792,"title":{},"body":{"modules/DbTest.html":{}}}],["session",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["session.serializer",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{}}}],["sessionserializer",{"_index":335,"title":{"injectables/SessionSerializer.html":{}},"body":{"modules/AuthModule.html":{},"injectables/SessionSerializer.html":{},"coverage.html":{},"overview.html":{}}}],["setmetadata(userrole",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setrandompass",{"_index":1331,"title":{},"body":{"classes/User.html":{}}}],["sets",{"_index":531,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shall",{"_index":1677,"title":{},"body":{"license.html":{}}}],["shared",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/config/configuration",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"guards/RolesGuard.html":{}}}],["shared/constants",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["shared/controllers",{"_index":589,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["shared/controllers/base.controller",{"_index":1285,"title":{},"body":{"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/decorators/roles.decorator",{"_index":591,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["shared/errors/api",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["shared/interfaces",{"_index":1022,"title":{},"body":{"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["shared/interfaces/buffer",{"_index":771,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{}}}],["shared/mail/mail.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/mail/mail.service",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["shared/models/base.entity",{"_index":649,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["shared/models/dto",{"_index":662,"title":{},"body":{"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["shared/models/dto/base.dto",{"_index":718,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/StageDto.html":{},"classes/TrackDto.html":{}}}],["shared/services",{"_index":620,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{}}}],["shared/types/abstract.type",{"_index":546,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["shared/utils/random",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["shared/utils/upload",{"_index":1077,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["shared/validations/env.validation",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":129,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["size",{"_index":570,"title":{},"body":{"interfaces/BufferedFile.html":{},"miscellaneous/variables.html":{}}}],["skill",{"_index":1624,"title":{},"body":{"index.html":{}}}],["skills",{"_index":1606,"title":{},"body":{"index.html":{}}}],["skip",{"_index":807,"title":{},"body":{"classes/FindDto.html":{}}}],["slack",{"_index":1638,"title":{},"body":{"index.html":{}}}],["software",{"_index":1573,"title":{},"body":{"index.html":{},"license.html":{}}}],["solve",{"_index":1626,"title":{},"body":{"index.html":{}}}],["solved",{"_index":1621,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"modules/CoursesModule.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"modules/SharedModule.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/UpdateProfileDto.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"classes/ValidateTokenInput.html":{},"index.html":{}}}],["src/.../abstract.type.ts",{"_index":1720,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../api",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.errors.ts",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authenticate.decorator.ts",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../base.controller.ts",{"_index":1552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../categories.controller.ts",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../categories.module.ts",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../courses.module.ts",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../env.validation.ts",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../file",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1553,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../paged",{"_index":1554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../random",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stages.controller.ts",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../stages.module.ts",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../task.entity.ts",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tasks.controller.ts",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tasks.module.ts",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../temporary",{"_index":1549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../tracks.controller.ts",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tracks.module.ts",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../upload",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.controller.ts",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.module.ts",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":101,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.service.ts",{"_index":176,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":178,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:101",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:114",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:139",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:54",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:64",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:76",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:111",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:15",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:46",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:58",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:78",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:94",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/guards/auth.guard.ts",{"_index":449,"title":{},"body":{"guards/AuthenticationGuard.html":{},"coverage.html":{}}}],["src/auth/guards/auth.guard.ts:14",{"_index":453,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:17",{"_index":456,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/auth.guard.ts:21",{"_index":459,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["src/auth/guards/jwt",{"_index":871,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":1094,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:10",{"_index":1097,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:13",{"_index":1098,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/models/dto/acct",{"_index":38,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts",{"_index":899,"title":{},"body":{"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"coverage.html":{}}}],["src/auth/models/dto/auth.dto.ts:11",{"_index":901,"title":{},"body":{"classes/LoginResDto.html":{}}}],["src/auth/models/dto/reset",{"_index":1090,"title":{},"body":{"classes/ResetPassInput.html":{},"coverage.html":{}}}],["src/auth/models/dto/validate",{"_index":1417,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["src/auth/models/jwt",{"_index":880,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/auth/models/temporary",{"_index":1238,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/auth/session.serializer.ts",{"_index":1103,"title":{},"body":{"injectables/SessionSerializer.html":{},"coverage.html":{}}}],["src/auth/session.serializer.ts:11",{"_index":1111,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/session.serializer.ts:8",{"_index":1113,"title":{},"body":{"injectables/SessionSerializer.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":882,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:18",{"_index":887,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:9",{"_index":884,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/temp",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["src/categories/categories.controller.ts",{"_index":572,"title":{},"body":{"classes/CategoriesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.controller.ts:32",{"_index":576,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:44",{"_index":586,"title":{},"body":{"classes/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":618,"title":{},"body":{"modules/CategoriesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/categories/categories.service.ts",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["src/categories/models/category.entity.ts",{"_index":627,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/categories/models/category.entity.ts:15",{"_index":633,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/models/dtos/category.dto.ts",{"_index":652,"title":{},"body":{"classes/CategoryDto.html":{},"classes/PagedCategoryOutDto.html":{},"coverage.html":{}}}],["src/categories/models/dtos/category.dto.ts:10",{"_index":657,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/category.dto.ts:13",{"_index":655,"title":{},"body":{"classes/CategoryDto.html":{}}}],["src/categories/models/dtos/create",{"_index":746,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts",{"_index":723,"title":{},"body":{"classes/CoursesController.html":{},"coverage.html":{}}}],["src/courses/courses.controller.ts:36",{"_index":726,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.controller.ts:47",{"_index":729,"title":{},"body":{"classes/CoursesController.html":{}}}],["src/courses/courses.module.ts",{"_index":741,"title":{},"body":{"modules/CoursesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/courses/courses.service.ts",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["src/courses/models/course.entity.ts",{"_index":698,"title":{},"body":{"classes/Course.html":{},"coverage.html":{}}}],["src/courses/models/course.entity.ts:15",{"_index":705,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:23",{"_index":701,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:30",{"_index":704,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/course.entity.ts:35",{"_index":703,"title":{},"body":{"classes/Course.html":{}}}],["src/courses/models/dtos/course.dto.ts",{"_index":709,"title":{},"body":{"classes/CourseDto.html":{},"classes/PagedCourseOutputDto.html":{},"coverage.html":{}}}],["src/courses/models/dtos/course.dto.ts:14",{"_index":716,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:18",{"_index":711,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:22",{"_index":714,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/course.dto.ts:24",{"_index":712,"title":{},"body":{"classes/CourseDto.html":{}}}],["src/courses/models/dtos/create",{"_index":749,"title":{},"body":{"classes/CreateCourseDto.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1444,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/profile/dto/avatar",{"_index":469,"title":{},"body":{"classes/AvatarUploadDto.html":{},"coverage.html":{}}}],["src/profile/dto/update",{"_index":1322,"title":{},"body":{"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts",{"_index":991,"title":{},"body":{"controllers/ProfileController.html":{},"coverage.html":{}}}],["src/profile/profile.controller.ts:37",{"_index":998,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:48",{"_index":1002,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.controller.ts:63",{"_index":1011,"title":{},"body":{"controllers/ProfileController.html":{}}}],["src/profile/profile.module.ts",{"_index":1065,"title":{},"body":{"modules/ProfileModule.html":{}}}],["src/profile/profile.service.ts",{"_index":1067,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/profile/profile.service.ts:10",{"_index":1071,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/profile/profile.service.ts:16",{"_index":1074,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/shared/config/configuration.ts",{"_index":667,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"interfaces/Mailer.html":{},"coverage.html":{}}}],["src/shared/constants.ts",{"_index":1447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/controllers/base.controller.ts",{"_index":1448,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/decorators/api",{"_index":1449,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/authenticate.decorator.ts",{"_index":1453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/file",{"_index":1455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/decorators/roles.decorator.ts",{"_index":1458,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/errors/api",{"_index":59,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/shared/errors/auth.errors.ts",{"_index":1460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/filters/http",{"_index":818,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/shared/interfaces/abstract",{"_index":6,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"coverage.html":{}}}],["src/shared/interfaces/base",{"_index":476,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{},"coverage.html":{}}}],["src/shared/interfaces/buffer",{"_index":563,"title":{},"body":{"interfaces/BufferedFile.html":{},"coverage.html":{}}}],["src/shared/interfaces/default",{"_index":356,"title":{},"body":{"interfaces/AuthObj.html":{},"interfaces/ControllerAuth.html":{},"interfaces/DefaultAuthObject.html":{},"coverage.html":{}}}],["src/shared/mail/mail.module.ts",{"_index":905,"title":{},"body":{"modules/MailModule.html":{}}}],["src/shared/mail/mail.service.ts",{"_index":907,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/shared/mail/mail.service.ts:10",{"_index":911,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:15",{"_index":912,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:27",{"_index":915,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/mail/mail.service.ts:9",{"_index":917,"title":{},"body":{"injectables/MailService.html":{}}}],["src/shared/models/base.entity.ts",{"_index":503,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/shared/models/base.entity.ts:12",{"_index":527,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:14",{"_index":522,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:16",{"_index":529,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:18",{"_index":526,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:20",{"_index":524,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:22",{"_index":523,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:24",{"_index":518,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:26",{"_index":528,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:27",{"_index":537,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:41",{"_index":539,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:44",{"_index":534,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:53",{"_index":535,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:62",{"_index":533,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:71",{"_index":530,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/base.entity.ts:9",{"_index":525,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/shared/models/dto/base.dto.ts",{"_index":491,"title":{},"body":{"classes/BaseDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/base.dto.ts:11",{"_index":498,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:14",{"_index":495,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/base.dto.ts:8",{"_index":497,"title":{},"body":{"classes/BaseDto.html":{}}}],["src/shared/models/dto/find.dto.ts",{"_index":804,"title":{},"body":{"classes/FindDto.html":{},"coverage.html":{}}}],["src/shared/models/dto/find.dto.ts:10",{"_index":814,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:13",{"_index":812,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:5",{"_index":815,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/find.dto.ts:7",{"_index":810,"title":{},"body":{"classes/FindDto.html":{}}}],["src/shared/models/dto/paged",{"_index":863,"title":{},"body":{"interfaces/IPagedListDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/shared/services/base.service.ts",{"_index":1463,"title":{},"body":{"coverage.html":{}}}],["src/shared/shared.module.ts",{"_index":1115,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/shared/types/abstract.type.ts",{"_index":1725,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/shared/utils/get",{"_index":1464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/random",{"_index":1468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/utils/upload",{"_index":1470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/validations/env.validation.ts",{"_index":1472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/models/dtos/create",{"_index":753,"title":{},"body":{"classes/CreateStageDto.html":{},"coverage.html":{}}}],["src/stages/models/dtos/stage.dto.ts",{"_index":946,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"coverage.html":{}}}],["src/stages/models/dtos/stage.dto.ts:15",{"_index":1131,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts:18",{"_index":1127,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts:23",{"_index":1129,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/dtos/stage.dto.ts:27",{"_index":1134,"title":{},"body":{"classes/StageDto.html":{}}}],["src/stages/models/stage.entity.ts",{"_index":1117,"title":{},"body":{"classes/Stage.html":{},"coverage.html":{}}}],["src/stages/models/stage.entity.ts:19",{"_index":1120,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts:28",{"_index":1118,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts:33",{"_index":1119,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/models/stage.entity.ts:40",{"_index":1123,"title":{},"body":{"classes/Stage.html":{}}}],["src/stages/stages.controller.ts",{"_index":1136,"title":{},"body":{"classes/StagesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/stages.controller.ts:27",{"_index":1141,"title":{},"body":{"classes/StagesController.html":{}}}],["src/stages/stages.controller.ts:43",{"_index":1143,"title":{},"body":{"classes/StagesController.html":{}}}],["src/stages/stages.module.ts",{"_index":1159,"title":{},"body":{"modules/StagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stages/stages.service.ts",{"_index":1473,"title":{},"body":{"coverage.html":{}}}],["src/tasks/models/dtos/create",{"_index":762,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/task.dto.ts",{"_index":953,"title":{},"body":{"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"coverage.html":{}}}],["src/tasks/models/dtos/task.dto.ts:19",{"_index":1192,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:22",{"_index":1190,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:25",{"_index":1193,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:28",{"_index":1191,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/dtos/task.dto.ts:35",{"_index":1189,"title":{},"body":{"classes/TaskDto.html":{}}}],["src/tasks/models/task.entity.ts",{"_index":1165,"title":{},"body":{"classes/Task.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/tasks/models/task.entity.ts:25",{"_index":1177,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:34",{"_index":1171,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:41",{"_index":1170,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:49",{"_index":1176,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:52",{"_index":1178,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:55",{"_index":1172,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/models/task.entity.ts:57",{"_index":1179,"title":{},"body":{"classes/Task.html":{}}}],["src/tasks/tasks.controller.ts",{"_index":1195,"title":{},"body":{"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/tasks.controller.ts:38",{"_index":1199,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:55",{"_index":1203,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.controller.ts:81",{"_index":1208,"title":{},"body":{"classes/TasksController.html":{}}}],["src/tasks/tasks.module.ts",{"_index":1233,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tasks/tasks.service.ts",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["src/tracks/models/dto/create",{"_index":769,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/track.dto.ts",{"_index":962,"title":{},"body":{"classes/PagedTrackOutputDto.html":{},"classes/TrackDto.html":{},"coverage.html":{}}}],["src/tracks/models/dto/track.dto.ts:13",{"_index":1262,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/track.dto.ts:17",{"_index":1258,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/dto/track.dto.ts:21",{"_index":1261,"title":{},"body":{"classes/TrackDto.html":{}}}],["src/tracks/models/track.entity.ts",{"_index":1251,"title":{},"body":{"classes/Track.html":{},"coverage.html":{}}}],["src/tracks/models/track.entity.ts:17",{"_index":1256,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:26",{"_index":1253,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:29",{"_index":1254,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/models/track.entity.ts:34",{"_index":1255,"title":{},"body":{"classes/Track.html":{}}}],["src/tracks/tracks.controller.ts",{"_index":1264,"title":{},"body":{"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.controller.ts:110",{"_index":1273,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:127",{"_index":1284,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:47",{"_index":1269,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:59",{"_index":1276,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.controller.ts:78",{"_index":1281,"title":{},"body":{"classes/TracksController.html":{}}}],["src/tracks/tracks.module.ts",{"_index":1317,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tracks/tracks.service.ts",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["src/users/models/dto/create",{"_index":780,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/register",{"_index":1085,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts",{"_index":965,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{},"coverage.html":{}}}],["src/users/models/dto/user.dto.ts:14",{"_index":1385,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:18",{"_index":1386,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:23",{"_index":1383,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:28",{"_index":1392,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:33",{"_index":1381,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:39",{"_index":1389,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:46",{"_index":1396,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:51",{"_index":1390,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/dto/user.dto.ts:56",{"_index":1398,"title":{},"body":{"classes/UserDto.html":{}}}],["src/users/models/user.entity.ts",{"_index":1326,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/models/user.entity.ts:100",{"_index":1355,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:103",{"_index":1353,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:108",{"_index":1352,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:112",{"_index":1359,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:33",{"_index":1338,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:40",{"_index":1340,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:49",{"_index":1336,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:56",{"_index":1346,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:60",{"_index":1347,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:67",{"_index":1334,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:69",{"_index":1350,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:72",{"_index":1345,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:77",{"_index":1343,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:84",{"_index":1348,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:87",{"_index":1339,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:89",{"_index":1341,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:91",{"_index":1337,"title":{},"body":{"classes/User.html":{}}}],["src/users/models/user.entity.ts:93",{"_index":1351,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1400,"title":{},"body":{"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts:33",{"_index":1401,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":1402,"title":{},"body":{"classes/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1412,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["stack",{"_index":66,"title":{},"body":{"classes/ApiException.html":{},"index.html":{}}}],["stacktrace",{"_index":833,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stage",{"_index":956,"title":{"classes/Stage.html":{}},"body":{"classes/PagedListTaskDto.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["stage.dto",{"_index":758,"title":{},"body":{"classes/CreateStageDto.html":{},"classes/StagesController.html":{}}}],["stage.dto.ts",{"_index":754,"title":{},"body":{"classes/CreateStageDto.html":{},"coverage.html":{}}}],["stage.dto.ts:14",{"_index":756,"title":{},"body":{"classes/CreateStageDto.html":{}}}],["stage.modelname",{"_index":1162,"title":{},"body":{"modules/StagesModule.html":{},"miscellaneous/variables.html":{}}}],["stage.schema",{"_index":1163,"title":{},"body":{"modules/StagesModule.html":{},"miscellaneous/variables.html":{}}}],["stage.title",{"_index":1154,"title":{},"body":{"classes/StagesController.html":{}}}],["stagedto",{"_index":757,"title":{"classes/StageDto.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stagemodel",{"_index":1161,"title":{},"body":{"modules/StagesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stages",{"_index":1252,"title":{},"body":{"classes/Track.html":{},"classes/TracksController.html":{}}}],["stages.controller",{"_index":1160,"title":{},"body":{"modules/StagesModule.html":{}}}],["stages.service",{"_index":1148,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{}}}],["stages/models/dtos/stage.dto",{"_index":1286,"title":{},"body":{"classes/TracksController.html":{}}}],["stages/models/stage.entity",{"_index":1180,"title":{},"body":{"classes/Task.html":{},"classes/Track.html":{}}}],["stages/stages.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{}}}],["stages/stages.service",{"_index":1211,"title":{},"body":{"classes/TasksController.html":{}}}],["stagescontroller",{"_index":1135,"title":{"classes/StagesController.html":{}},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{},"coverage.html":{}}}],["stageservice",{"_index":1142,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["stagesmodule",{"_index":130,"title":{"modules/StagesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["stagesservice",{"_index":1138,"title":{},"body":{"classes/StagesController.html":{},"modules/StagesModule.html":{},"classes/TasksController.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["stand",{"_index":1599,"title":{},"body":{"index.html":{}}}],["started",{"_index":1181,"title":{"index.html":{},"license.html":{}},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["stated",{"_index":1587,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":548,"title":{},"body":{"classes/BaseEntity.html":{},"classes/User.html":{}}}],["status",{"_index":67,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["statuscode",{"_index":68,"title":{},"body":{"classes/ApiException.html":{},"classes/HttpExceptionFilter.html":{}}}],["strategies/jwt.strategy",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":890,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":43,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/AvatarUploadDto.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/JwtPayload.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"interfaces/Mailer.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["string})@isoptional",{"_index":1395,"title":{},"body":{"classes/UserDto.html":{}}}],["structure",{"_index":1602,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1673,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1666,"title":{},"body":{"license.html":{}}}],["submittask",{"_index":1196,"title":{},"body":{"classes/TasksController.html":{}}}],["submittask(@param('taskid",{"_index":1226,"title":{},"body":{"classes/TasksController.html":{}}}],["submittask(taskid",{"_index":1204,"title":{},"body":{"classes/TasksController.html":{}}}],["substantial",{"_index":1679,"title":{},"body":{"license.html":{}}}],["suggested",{"_index":1608,"title":{},"body":{"index.html":{}}}],["super",{"_index":893,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["super(categoryservice",{"_index":605,"title":{},"body":{"classes/CategoriesController.html":{}}}],["super(courseservice",{"_index":734,"title":{},"body":{"classes/CoursesController.html":{}}}],["super(stageservice",{"_index":1150,"title":{},"body":{"classes/StagesController.html":{}}}],["super(tasksservice",{"_index":1216,"title":{},"body":{"classes/TasksController.html":{}}}],["super(trackservice",{"_index":1292,"title":{},"body":{"classes/TracksController.html":{}}}],["super(usersservice",{"_index":1406,"title":{},"body":{"classes/UsersController.html":{}}}],["super.canactivate(context",{"_index":879,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.create(dto",{"_index":1304,"title":{},"body":{"classes/TracksController.html":{}}}],["super.create(input",{"_index":615,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["support",{"_index":1577,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1708,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1450,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["symbol",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":23,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IPagedListDto.html":{}}}],["table",{"_index":1485,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1484,"title":{},"body":{"coverage.html":{}}}],["talents",{"_index":1593,"title":{},"body":{"index.html":{}}}],["target",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target.constructor.name",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["task",{"_index":1164,"title":{"classes/Task.html":{}},"body":{"classes/Task.html":{},"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["task.dto",{"_index":766,"title":{},"body":{"classes/CreateTaskDto.html":{},"classes/TasksController.html":{}}}],["task.dto.ts",{"_index":763,"title":{},"body":{"classes/CreateTaskDto.html":{},"coverage.html":{}}}],["task.modelname",{"_index":1236,"title":{},"body":{"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["task.schema",{"_index":1237,"title":{},"body":{"modules/TasksModule.html":{},"miscellaneous/variables.html":{}}}],["task.title",{"_index":1218,"title":{},"body":{"classes/TasksController.html":{}}}],["taskcount",{"_index":760,"title":{},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{}}}],["taskdto",{"_index":765,"title":{"classes/TaskDto.html":{}},"body":{"classes/CreateTaskDto.html":{},"classes/PagedListTaskDto.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["taskid",{"_index":1209,"title":{},"body":{"classes/TasksController.html":{}}}],["taskmodel",{"_index":1235,"title":{},"body":{"modules/TasksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasks.controller",{"_index":1234,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks.service",{"_index":1214,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["taskscontroller",{"_index":1194,"title":{"classes/TasksController.html":{}},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{}}}],["tasksmodule",{"_index":131,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":1198,"title":{},"body":{"classes/TasksController.html":{},"modules/TasksModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["taskstatus",{"_index":1173,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["taskstatus.completed",{"_index":1185,"title":{},"body":{"classes/Task.html":{}}}],["taskstatus.started",{"_index":1174,"title":{},"body":{"classes/Task.html":{}}}],["tcreatedto",{"_index":485,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["technical",{"_index":1571,"title":{},"body":{"index.html":{}}}],["technologies",{"_index":987,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["temp",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["temporarytoken",{"_index":343,"title":{"classes/TemporaryToken.html":{}},"body":{"modules/AuthModule.html":{},"classes/TemporaryToken.html":{},"coverage.html":{}}}],["temporarytoken.modelname",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temporarytoken.schema",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["temptokens",{"_index":1249,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["temptokensservice",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["tentitydto",{"_index":483,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["test",{"_index":1607,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["test.module.ts",{"_index":788,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["test/.../db",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test/helpers/db",{"_index":787,"title":{},"body":{"modules/DbTest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":630,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["thanks",{"_index":1641,"title":{},"body":{"index.html":{}}}],["this.appservice.getwelcome",{"_index":111,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.generatetemptoken",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getauthtoken(req.user",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateemailtoken",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validatepasswordtoken",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(email",{"_index":465,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.categoryservice.findoneasync",{"_index":611,"title":{},"body":{"classes/CategoriesController.html":{}}}],["this.config",{"_index":926,"title":{},"body":{"injectables/MailService.html":{}}}],["this.courseservice.findoneasync",{"_index":735,"title":{},"body":{"classes/CoursesController.html":{}}}],["this.createtransport",{"_index":925,"title":{},"body":{"injectables/MailService.html":{}}}],["this.error",{"_index":87,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errors",{"_index":89,"title":{},"body":{"classes/ApiException.html":{}}}],["this.firstname",{"_index":1374,"title":{},"body":{"classes/User.html":{}}}],["this.lastname",{"_index":1375,"title":{},"body":{"classes/User.html":{}}}],["this.mailservice.sendmailasync",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.message",{"_index":86,"title":{},"body":{"classes/ApiException.html":{}}}],["this.name",{"_index":558,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this.path",{"_index":90,"title":{},"body":{"classes/ApiException.html":{}}}],["this.profileservice.uploadavatar(file",{"_index":1059,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.reflector.get",{"_index":1100,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.stack",{"_index":88,"title":{},"body":{"classes/ApiException.html":{}}}],["this.stageservice.findbyidasync(input.stage",{"_index":1219,"title":{},"body":{"classes/TasksController.html":{}}}],["this.stageservice.findoneasync",{"_index":1153,"title":{},"body":{"classes/StagesController.html":{}}}],["this.status",{"_index":94,"title":{},"body":{"classes/ApiException.html":{}}}],["this.statuscode",{"_index":93,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tasksservice.findbyidasync(taskid",{"_index":1227,"title":{},"body":{"classes/TasksController.html":{}}}],["this.tasksservice.findoneasync",{"_index":1217,"title":{},"body":{"classes/TasksController.html":{}}}],["this.tasksservice.submittask(task",{"_index":1228,"title":{},"body":{"classes/TasksController.html":{}}}],["this.timestamp",{"_index":91,"title":{},"body":{"classes/ApiException.html":{}}}],["this.tokenservice",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.createentity",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.harddeletebyid(id",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.tokenservice.insertasync(token",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.trackservice.enroll(track.id",{"_index":1312,"title":{},"body":{"classes/TracksController.html":{}}}],["this.trackservice.findbyidasync(input.track",{"_index":1151,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["this.trackservice.findbyidasync(trackid",{"_index":1307,"title":{},"body":{"classes/TracksController.html":{}}}],["this.trackservice.findoneasync",{"_index":1293,"title":{},"body":{"classes/TracksController.html":{}}}],["this.trackservice.getstages(trackid",{"_index":1308,"title":{},"body":{"classes/TracksController.html":{}}}],["this.transporter",{"_index":927,"title":{},"body":{"injectables/MailService.html":{}}}],["this.transporter.sendmail(mailoptions",{"_index":932,"title":{},"body":{"injectables/MailService.html":{}}}],["this.userentity.updateone",{"_index":1083,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.userservice.findbyidasync(id",{"_index":1060,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.findbyidasync(req.user['userid",{"_index":1037,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.userservice.updateasync(id",{"_index":1043,"title":{},"body":{"controllers/ProfileController.html":{}}}],["this.usersservice.createentity(input",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.findoneasync",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UsersController.html":{}}}],["this.usersservice.incrementloginattempt(user.id",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.insertasync(user",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.resetloginattempt(user.id",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateasync(doc.id",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validaterequest(request",{"_index":462,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["this.validatetoken",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["through",{"_index":939,"title":{},"body":{"injectables/MailService.html":{}}}],["throw",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["thumbnail",{"_index":778,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/TracksController.html":{}}}],["thumbnail.mimetype.split('/')[0",{"_index":1298,"title":{},"body":{"classes/TracksController.html":{}}}],["thumbnail.size",{"_index":1299,"title":{},"body":{"classes/TracksController.html":{}}}],["thumbnailurl",{"_index":776,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{}}}],["timestamp",{"_index":69,"title":{},"body":{"classes/ApiException.html":{}}}],["timestamps",{"_index":504,"title":{},"body":{"classes/BaseEntity.html":{}}}],["title",{"_index":612,"title":{},"body":{"classes/CategoriesController.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateCourseDto.html":{},"classes/CreateStageDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["together",{"_index":1591,"title":{},"body":{"index.html":{}}}],["tojson",{"_index":550,"title":{},"body":{"classes/BaseEntity.html":{}}}],["token",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ResetPassInput.html":{},"classes/TemporaryToken.html":{},"classes/ValidateTokenInput.html":{},"miscellaneous/variables.html":{}}}],["token')@httpcode(httpstatus.ok",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["token.dto",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{}}}],["token.dto.ts",{"_index":1418,"title":{},"body":{"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["token.dto.ts:8",{"_index":1419,"title":{},"body":{"classes/ValidateTokenInput.html":{}}}],["token.entity",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.entity.ts",{"_index":1239,"title":{},"body":{"classes/TemporaryToken.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["token.entity.ts:16",{"_index":1241,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:19",{"_index":1240,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:27",{"_index":1242,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.entity.ts:30",{"_index":1243,"title":{},"body":{"classes/TemporaryToken.html":{}}}],["token.service",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["token.service.ts",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["token.ts",{"_index":1469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenparamname",{"_index":42,"title":{},"body":{"classes/AcctVerifyDto.html":{},"controllers/AuthController.html":{}}}],["tokenservice",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokentype",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/TemporaryToken.html":{},"miscellaneous/enumerations.html":{}}}],["tokentype.email",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tokentype.password",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["tort",{"_index":1702,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":1377,"title":{},"body":{"classes/User.html":{}}}],["totalcount",{"_index":866,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["towards",{"_index":1584,"title":{},"body":{"index.html":{}}}],["tpagedentityoutputdto",{"_index":489,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{}}}],["tpagedinputdto",{"_index":855,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["tpagedoutputdto",{"_index":857,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["track",{"_index":755,"title":{"classes/Track.html":{}},"body":{"classes/CreateStageDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["track.dto",{"_index":774,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/TracksController.html":{}}}],["track.dto.ts",{"_index":770,"title":{},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"coverage.html":{}}}],["track.dto.ts:23",{"_index":785,"title":{},"body":{"classes/CreateWithThumbnailTrackDto.html":{}}}],["track.modelname",{"_index":1320,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["track.schema",{"_index":1321,"title":{},"body":{"modules/TracksModule.html":{},"miscellaneous/variables.html":{}}}],["trackdto",{"_index":773,"title":{"classes/TrackDto.html":{}},"body":{"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["trackid",{"_index":1274,"title":{},"body":{"classes/TracksController.html":{}}}],["trackmodel",{"_index":1319,"title":{},"body":{"modules/TracksModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tracks",{"_index":784,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["tracks.controller",{"_index":1318,"title":{},"body":{"modules/TracksModule.html":{}}}],["tracks.service",{"_index":1290,"title":{},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{}}}],["tracks/models/dto/track.dto",{"_index":949,"title":{},"body":{"classes/PagedListStageDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/StageDto.html":{},"classes/UserDto.html":{}}}],["tracks/models/track.entity",{"_index":1125,"title":{},"body":{"classes/Stage.html":{},"classes/Task.html":{},"classes/User.html":{}}}],["tracks/tracks.module",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{}}}],["tracks/tracks.service",{"_index":1145,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{}}}],["trackscontroller",{"_index":1263,"title":{"classes/TracksController.html":{}},"body":{"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{}}}],["trackservice",{"_index":1139,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["tracksmodule",{"_index":132,"title":{"modules/TracksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules.html":{},"overview.html":{}}}],["tracksservice",{"_index":1140,"title":{},"body":{"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"modules/TracksModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["transform",{"_index":554,"title":{},"body":{"classes/BaseEntity.html":{}}}],["transformer",{"_index":500,"title":{},"body":{"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/CreateTaskDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"dependencies.html":{}}}],["transport",{"_index":923,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["transporter",{"_index":908,"title":{},"body":{"injectables/MailService.html":{}}}],["trim",{"_index":629,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["true",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"classes/Course.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Mailer.html":{},"classes/PagedListStageDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"guards/RolesGuard.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["true})@apiproperty({isarray",{"_index":1394,"title":{},"body":{"classes/UserDto.html":{}}}],["true})@expose()@isoptional",{"_index":1260,"title":{},"body":{"classes/TrackDto.html":{},"classes/UserDto.html":{}}}],["true})@expose()@type(undefined",{"_index":1397,"title":{},"body":{"classes/UserDto.html":{}}}],["true})@type(undefined",{"_index":1133,"title":{},"body":{"classes/StageDto.html":{}}}],["try",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["tsconfig",{"_index":1543,"title":{},"body":{"dependencies.html":{}}}],["tupdatedto",{"_index":487,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"interfaces/IBaseController.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{},"classes/AcctVerifyDto.html":{},"classes/ApiException.html":{},"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/AvatarUploadDto.html":{},"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"interfaces/BufferedFile.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/ControllerAuth.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CoursesController.html":{},"classes/CreateStageDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"interfaces/Database.html":{},"interfaces/DefaultAuthObject.html":{},"classes/FindDto.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"interfaces/IPagedListDto.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResDto.html":{},"injectables/MailService.html":{},"interfaces/Mailer.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1717,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typegoose/typegoose",{"_index":542,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"injectables/ProfileService.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"dependencies.html":{}}}],["typegoose/typegoose/lib/defaultclasses",{"_index":543,"title":{},"body":{"classes/BaseEntity.html":{}}}],["typeof",{"_index":841,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["types/abstract.type",{"_index":868,"title":{},"body":{"interfaces/IPagedListDto.html":{}}}],["ui",{"_index":1541,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthenticationGuard.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception('password",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{}}}],["uncompleted",{"_index":1182,"title":{},"body":{"classes/Task.html":{},"miscellaneous/enumerations.html":{}}}],["unconfirmed",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["unconfirmed_email",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/Stage.html":{},"classes/StagesController.html":{},"classes/Task.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UsersController.html":{}}}],["undefined})@apibearerauth()@apiresponse({status",{"_index":1275,"title":{},"body":{"classes/TracksController.html":{}}}],["undefined})@apiresponse({status",{"_index":583,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["undefined})@exclude",{"_index":1344,"title":{},"body":{"classes/User.html":{}}}],["undefined})@httpcode(httpstatus.ok",{"_index":1010,"title":{},"body":{"controllers/ProfileController.html":{}}}],["undefined})@useguards(jwtauthguard",{"_index":1206,"title":{},"body":{"classes/TasksController.html":{}}}],["undefined})@useguards(jwtauthguard)@apibearerauth()@apiresponse({status",{"_index":1272,"title":{},"body":{"classes/TracksController.html":{}}}],["uniqid",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unique",{"_index":631,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["unsupportedmediatypeexception",{"_index":1014,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["unsupportedmediatypeexception(\"file",{"_index":1053,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["update",{"_index":365,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/IBaseController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["update(id",{"_index":860,"title":{},"body":{"interfaces/IBaseController.html":{}}}],["updatedat",{"_index":493,"title":{},"body":{"classes/BaseDto.html":{},"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/CategoryDto.html":{},"classes/Course.html":{},"classes/CourseDto.html":{},"classes/CreateTaskDto.html":{},"classes/CreateTrackDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateWithThumbnailTrackDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TaskDto.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/TrackDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["updatedby",{"_index":510,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["updatedto",{"_index":486,"title":{},"body":{"interfaces/BaseControllerOptions.html":{},"interfaces/BaseControllerWithAuthOptions.html":{},"interfaces/BaseControllerWithSwaggerOpts.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["updateprofile",{"_index":994,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(@body",{"_index":1041,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofile(input",{"_index":999,"title":{},"body":{"controllers/ProfileController.html":{}}}],["updateprofiledto",{"_index":1000,"title":{"classes/UpdateProfileDto.html":{}},"body":{"controllers/ProfileController.html":{},"classes/UpdateProfileDto.html":{},"coverage.html":{}}}],["updateresulttype",{"_index":1724,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["upload",{"_index":1006,"title":{},"body":{"controllers/ProfileController.html":{}}}],["upload.decorator.ts",{"_index":1456,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload.dto",{"_index":1027,"title":{},"body":{"controllers/ProfileController.html":{}}}],["upload.dto.ts",{"_index":470,"title":{},"body":{"classes/AvatarUploadDto.html":{},"coverage.html":{}}}],["upload.dto.ts:5",{"_index":474,"title":{},"body":{"classes/AvatarUploadDto.html":{}}}],["uploadavatar",{"_index":1068,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadavatar(file",{"_index":1073,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadedfile",{"_index":1015,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["uploadfile",{"_index":995,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploadfile(@uploadedfile",{"_index":1048,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploadfile(file",{"_index":1003,"title":{},"body":{"controllers/ProfileController.html":{}}}],["uploadfiletocloud",{"_index":1076,"title":{},"body":{"injectables/ProfileService.html":{},"classes/TracksController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadfiletocloud(file",{"_index":1081,"title":{},"body":{"injectables/ProfileService.html":{}}}],["uploadfiletocloud(thumbnail",{"_index":1300,"title":{},"body":{"classes/TracksController.html":{}}}],["uppercase",{"_index":632,"title":{},"body":{"classes/Category.html":{},"classes/Course.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/Track.html":{}}}],["uri",{"_index":672,"title":{},"body":{"interfaces/Cloudinary.html":{},"interfaces/Configuration.html":{},"interfaces/Database.html":{},"modules/DbTest.html":{},"interfaces/Mailer.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MailService.html":{}}}],["url(clientbaseurl",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(emailparamname",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["url.searchparams.set(tokenparamname",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{}}}],["use",{"_index":1662,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":626,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["usecreateindex",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":801,"title":{},"body":{"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usefindandmodify",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["useguards",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["useguards(authenticationguard",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":606,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"controllers/ProfileController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{}}}],["useinterceptors",{"_index":1016,"title":{},"body":{"controllers/ProfileController.html":{},"classes/TracksController.html":{}}}],["useinterceptors(fileinterceptor(\"thumbnail",{"_index":1295,"title":{},"body":{"classes/TracksController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":1045,"title":{},"body":{"controllers/ProfileController.html":{}}}],["usenewurlparser",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":246,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthenticationGuard.html":{},"classes/BaseEntity.html":{},"controllers/ProfileController.html":{},"injectables/ProfileService.html":{},"injectables/SessionSerializer.html":{},"classes/TemporaryToken.html":{},"classes/User.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1356,"title":{},"body":{"classes/User.html":{}}}],["user.dto",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UpdateProfileDto.html":{},"classes/UsersController.html":{}}}],["user.dto.ts",{"_index":781,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":1087,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:19",{"_index":1089,"title":{},"body":{"classes/RegisterUserResDto.html":{}}}],["user.email",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.entity",{"_index":971,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["user.fullname",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.id",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.isactive",{"_index":466,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["user.isemailverified",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["user.loginattemptcount",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.modelname",{"_index":1415,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user.password",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.role",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.schema",{"_index":1416,"title":{},"body":{"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["user_locked_out",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdto",{"_index":782,"title":{"classes/UserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PagedUserOutputDto.html":{},"controllers/ProfileController.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userentity",{"_index":1072,"title":{},"body":{"injectables/ProfileService.html":{}}}],["userid",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/ProfileService.html":{},"classes/TracksController.html":{}}}],["usermodel",{"_index":1414,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrole",{"_index":360,"title":{},"body":{"interfaces/AuthObj.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"classes/PagedUserOutputDto.html":{},"guards/RolesGuard.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/User.html":{},"classes/UserDto.html":{},"classes/UsersController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["userrole.admin",{"_index":602,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"classes/UsersController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentee",{"_index":977,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/User.html":{},"classes/UserDto.html":{}}}],["userrole.mentor",{"_index":603,"title":{},"body":{"classes/CategoriesController.html":{},"classes/CoursesController.html":{},"classes/TasksController.html":{},"classes/TracksController.html":{},"miscellaneous/variables.html":{}}}],["userrole.mentor)@apiresponse({type",{"_index":1202,"title":{},"body":{"classes/TasksController.html":{},"classes/TracksController.html":{}}}],["users.controller",{"_index":1413,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1405,"title":{},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/models/dto/create",{"_index":1324,"title":{},"body":{"classes/UpdateProfileDto.html":{}}}],["users/models/dto/register",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginReqDto.html":{},"classes/LoginResDto.html":{}}}],["users/models/dto/user.dto",{"_index":1025,"title":{},"body":{"controllers/ProfileController.html":{}}}],["users/models/user.entity",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/AuthObj.html":{},"injectables/AuthService.html":{},"classes/BaseEntity.html":{},"classes/CategoriesController.html":{},"interfaces/ControllerAuth.html":{},"classes/CoursesController.html":{},"interfaces/DefaultAuthObject.html":{},"interfaces/JwtPayload.html":{},"injectables/ProfileService.html":{},"guards/RolesGuard.html":{},"injectables/SessionSerializer.html":{},"classes/StagesController.html":{},"classes/TasksController.html":{},"classes/TemporaryToken.html":{},"classes/TracksController.html":{}}}],["users/users.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{}}}],["users/users.service",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{}}}],["userscontroller",{"_index":1399,"title":{"classes/UsersController.html":{}},"body":{"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":1034,"title":{},"body":{"controllers/ProfileController.html":{}}}],["usersmodule",{"_index":133,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProfileModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ProfileController.html":{},"modules/ProfileModule.html":{},"classes/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/DbTest.html":{},"miscellaneous/variables.html":{}}}],["usr/local/bin/mongod",{"_index":795,"title":{},"body":{"modules/DbTest.html":{}}}],["valid",{"_index":981,"title":{},"body":{"classes/PagedUserOutputDto.html":{},"classes/UserDto.html":{}}}],["valid('development",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validate",{"_index":883,"title":{},"body":{"injectables/JwtStrategy.html":{},"classes/ResetPassInput.html":{}}}],["validate(payload",{"_index":885,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateemailtoken",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateemailtoken(input",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatepasswordtoken(resetpassinput",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["validaterequest",{"_index":451,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validaterequest(request",{"_index":458,"title":{},"body":{"guards/AuthenticationGuard.html":{}}}],["validatetoken",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetoken(userid",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["validatetokeninput",{"_index":223,"title":{"classes/ValidateTokenInput.html":{}},"body":{"controllers/AuthController.html":{},"classes/ResetPassInput.html":{},"classes/ValidateTokenInput.html":{},"coverage.html":{}}}],["validatetokeninput:8",{"_index":1093,"title":{},"body":{"classes/ResetPassInput.html":{}}}],["validateuser",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationoptions",{"_index":165,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validationschema",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":53,"title":{},"body":{"classes/AcctVerifyDto.html":{},"classes/BaseDto.html":{},"classes/CategoryDto.html":{},"classes/CourseDto.html":{},"classes/CreateStageDto.html":{},"classes/FindDto.html":{},"classes/PagedCategoryOutDto.html":{},"classes/PagedCourseOutputDto.html":{},"classes/PagedListStageDto.html":{},"classes/PagedListTaskDto.html":{},"classes/PagedTrackOutputDto.html":{},"classes/PagedUserOutputDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResDto.html":{},"classes/ResetPassInput.html":{},"classes/StageDto.html":{},"classes/TaskDto.html":{},"classes/TrackDto.html":{},"classes/UserDto.html":{},"classes/ValidateTokenInput.html":{},"dependencies.html":{}}}],["value",{"_index":516,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/FindDto.html":{},"injectables/MailService.html":{},"classes/Stage.html":{},"classes/StageDto.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1728,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verification.dto",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["verification.dto.ts",{"_index":39,"title":{},"body":{"classes/AcctVerifyDto.html":{},"coverage.html":{}}}],["verification.dto.ts:10",{"_index":50,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:12",{"_index":49,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verification.dto.ts:8",{"_index":47,"title":{},"body":{"classes/AcctVerifyDto.html":{}}}],["verified",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(@body",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemailtoken(input",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["versionkey",{"_index":553,"title":{},"body":{"classes/BaseEntity.html":{}}}],["virtuals",{"_index":552,"title":{},"body":{"classes/BaseEntity.html":{}}}],["vm",{"_index":29,"title":{},"body":{"interfaces/AbstractControllerOptions.html":{},"interfaces/AbstractControllerWithAuthOptions.html":{},"interfaces/AbstractControllerWithSwaggerOptions.html":{}}}],["void",{"_index":532,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Category.html":{},"classes/Course.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IBaseController.html":{},"injectables/MailService.html":{},"injectables/SessionSerializer.html":{},"classes/Stage.html":{},"classes/Task.html":{},"classes/TemporaryToken.html":{},"classes/Track.html":{},"classes/User.html":{}}}],["wait",{"_index":1631,"title":{},"body":{"index.html":{}}}],["want",{"_index":1635,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1686,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1682,"title":{},"body":{"license.html":{}}}],["website",{"_index":1562,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":179,"title":{},"body":{"injectables/AppService.html":{}}}],["wherever",{"_index":1578,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1699,"title":{},"body":{"license.html":{}}}],["without",{"_index":1657,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":1609,"title":{},"body":{"index.html":{}}}],["writable",{"_index":545,"title":{},"body":{"classes/BaseEntity.html":{},"classes/Task.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["writable).isactive",{"_index":561,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isdeleted",{"_index":559,"title":{},"body":{"classes/BaseEntity.html":{}}}],["writable).isemailverified",{"_index":1378,"title":{},"body":{"classes/User.html":{}}}],["writable).password",{"_index":1369,"title":{},"body":{"classes/User.html":{}}}],["writable).status",{"_index":1184,"title":{},"body":{"classes/Task.html":{}}}],["writers",{"_index":1572,"title":{},"body":{"index.html":{}}}],["yes",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["zoom",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/CoursesModule.html":{},"modules/MailModule.html":{},"modules/ProfileModule.html":{},"modules/StagesModule.html":{},"modules/TasksModule.html":{},"modules/TracksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControllerOptions.html":{"url":"interfaces/AbstractControllerOptions.html","title":"interface - AbstractControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        model\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                    \n                                \n                                \n                                    \n                                        model:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithAuthOptions.html":{"url":"interfaces/AbstractControllerWithAuthOptions.html","title":"interface - AbstractControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AbstractControllerWithSwaggerOptions.html":{"url":"interfaces/AbstractControllerWithSwaggerOptions.html","title":"interface - AbstractControllerWithSwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AbstractControllerWithSwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/abstract-controller-options.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        modelCreate\n                                \n                                \n                                        modelVm\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        modelCreate\n                                    \n                                \n                                \n                                    \n                                        modelCreate:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modelVm\n                                    \n                                \n                                \n                                    \n                                        modelVm:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface AbstractControllerOptions {\n  model: { new (doc?: any): T };\n}\n\nexport interface AbstractControllerWithAuthOptions\n  extends AbstractControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\n\nexport interface AbstractControllerWithSwaggerOptions\n  extends AbstractControllerWithAuthOptions {\n  modelVm: { new (): VM };\n  modelCreate: { new (): C };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AcctVerifyDto.html":{"url":"classes/AcctVerifyDto.html","title":"class - AcctVerifyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AcctVerifyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/acct-verification.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                clientBaseUrl\n                            \n                            \n                                emailParamName\n                            \n                            \n                                tokenParamName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clientBaseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenParamName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/acct-verification.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty, IsUrl } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class AcctVerifyDto extends PickType(LoginReqDto, ['email']) {\n  @IsUrl()\n  clientBaseUrl: string;\n  @IsNotEmpty()\n  tokenParamName: string;\n  @IsNotEmpty()\n  emailParamName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/errors/api-exception.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                errors\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                path\n                            \n                            \n                                    Optional\n                                stack\n                            \n                            \n                                    Optional\n                                status\n                            \n                            \n                                    Optional\n                                statusCode\n                            \n                            \n                                    Optional\n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string, error: string, stack: string, errors: any, path: string, statusCode: number)\n                    \n                \n                        \n                            \n                                Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        error\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errors\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            statusCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            timestamp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/errors/api-exception.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ApiException {\n  @ApiProperty()\n  statusCode?: number;\n  @ApiProperty()\n  message?: string;\n  @ApiProperty()\n  status?: string;\n  @ApiProperty()\n  error?: string;\n  @ApiProperty()\n  errors?: any;\n  @ApiProperty()\n  timestamp?: string;\n  @ApiProperty()\n  path?: string;\n  @ApiProperty()\n  stack?: string;\n\n  constructor(\n    message: string,\n    error: string,\n    stack: string,\n    errors: any,\n    path: string,\n    statusCode: number\n  ) {\n    this.message = message;\n    this.error = error;\n    this.stack = stack;\n    this.errors = errors;\n    this.path = path;\n    this.timestamp = new Date().toISOString();\n    this.statusCode = statusCode;\n    this.status = HttpStatus[statusCode];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller()\n@ApiTags(\"Health-Check\")\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  @Get()\n  getHello(): string {\n    return this.appService.getWelcome();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            CoursesModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            ProfileModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            StagesModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { CoursesModule } from './courses/courses.module';\nimport { ProfileModule } from './profile/profile.module';\nimport { SharedModule } from './shared';\nimport configuration from './shared/config/configuration';\nimport { MailModule } from './shared/mail/mail.module';\nimport { envValidation } from './shared/validations/env.validation';\nimport { StagesModule } from './stages/stages.module';\nimport { TracksModule } from './tracks/tracks.module';\nimport { UsersModule } from './users/users.module';\nimport { TasksModule } from './tasks/tasks.module';\n\nexport const Config = ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n});\nconst Database = MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n});\n@Module({\n  imports: [\n    SharedModule,\n    AuthModule,\n    UsersModule,\n    Config,\n    Database,\n    MailModule,\n    ProfileModule,\n    TracksModule,\n    CoursesModule,\n    CategoriesModule,\n    StagesModule,\n    TasksModule\n  ],\n\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWelcome\n                        \n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcome(): string {\n    return 'Welcome to CCN!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                sendEmailVerifyToken\n                            \n                            \n                                    Async\n                                sendForgotPwToken\n                            \n                            \n                                    Async\n                                verifyEmailToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(_: LoginReqDto, req?: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')@HttpCode(HttpStatus.OK)@ApiOkResponse({type: LoginResDto})@ApiUnauthorizedResponse({type: ApiException})@UseGuards(AuthenticationGuard)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _\n                                    \n                                                LoginReqDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(input: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')@ApiConflictResponse({type: ApiException})@ApiResponse({type: RegisterUserResDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            resetPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetPassword(input: ResetPassInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('reset-password')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ResetPassInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendEmailVerifyToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailVerifyToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-email-confirmation-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendForgotPwToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendForgotPwToken(input: AcctVerifyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('send-password-reset-token')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                AcctVerifyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            verifyEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyEmailToken(input: ValidateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-email')@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                ValidateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  Controller,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Post,\n  Req,\n  UnauthorizedException,\n  UseGuards\n} from '@nestjs/common';\nimport {\n  ApiConflictResponse,\n  ApiOkResponse,\n  ApiResponse,\n  ApiTags,\n  ApiUnauthorizedResponse\n} from '@nestjs/swagger';\nimport { Request } from 'express';\n\nimport { LoginReqDto } from '../auth/models/dto/auth.dto';\nimport configuration from '../shared/config/configuration';\nimport { ApiException } from '../shared/errors/api-exception';\nimport { MailService } from '../shared/mail/mail.service';\nimport {\n  RegisterUserDto,\n  RegisterUserResDto\n} from '../users/models/dto/register-user.dto';\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { AuthService } from './auth.service';\nimport { AuthenticationGuard } from './guards/auth.guard';\nimport { AcctVerifyDto } from './models/dto/acct-verification.dto';\nimport { LoginResDto } from './models/dto/auth.dto';\nimport { ResetPassInput } from './models/dto/reset-pw.dto';\nimport { ValidateTokenInput } from './models/dto/validate-token.dto';\nimport { TokenType } from './models/temporary-token.entity';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly mailService: MailService\n  ) {}\n\n  @Post('login')\n  @HttpCode(HttpStatus.OK)\n  @ApiOkResponse({ type: LoginResDto })\n  @ApiUnauthorizedResponse({ type: ApiException })\n  @UseGuards(AuthenticationGuard)\n  async login(\n    @Body() _: LoginReqDto,\n    @Req() req?: Request\n  ): Promise {\n    const accessToken = await this.authService.getAuthToken(req.user as User);\n    return { accessToken };\n  }\n  @Post('register')\n  @ApiConflictResponse({ type: ApiException })\n  @ApiResponse({ type: RegisterUserResDto, status: HttpStatus.CREATED })\n  async register(@Body() input: RegisterUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({ email: input.email });\n    if (exist)\n      throw new ConflictException('User with the email already exists');\n    const user = this.usersService.createEntity(input);\n    const saved = await this.usersService.insertAsync(user);\n\n    return { canLogin: saved.isEmailVerified };\n  }\n\n  @Post('send-email-confirmation-token')\n  @HttpCode(HttpStatus.OK)\n  async sendEmailVerifyToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User with email does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email has already been confirmed');\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.EMAIL,\n      expiresInMins: 60 * 24\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please confirm your email here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n  @Post('confirm-email')\n  @HttpCode(HttpStatus.OK)\n  async verifyEmailToken(@Body() input: ValidateTokenInput): Promise {\n    const { email, token } = input;\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) throw new NotFoundException('User does not exist');\n    if (user.isEmailVerified)\n      throw new ConflictException('Email already verified');\n    await this.authService.validateEmailToken({\n      userId: user.id,\n      plainToken: token\n    });\n  }\n  @Post('send-password-reset-token')\n  @HttpCode(HttpStatus.OK)\n  async sendForgotPwToken(@Body() input: AcctVerifyDto): Promise {\n    const { clientBaseUrl, tokenParamName, emailParamName, email } = input;\n\n    const user = await this.usersService.findOneAsync({ email });\n    if (!user) return;\n    const token = await this.authService.generateTempToken({\n      user,\n      type: TokenType.PASSWORD,\n      expiresInMins: 10\n    });\n    if (!token) return;\n    const url = new URL(clientBaseUrl);\n    url.searchParams.set(tokenParamName, token);\n    url.searchParams.set(emailParamName, email);\n    const html = `Hello ${user.fullName}, please reset your password here`;\n    this.mailService.sendMailAsync({\n      from: configuration().appEmail,\n      to: user.email,\n      html,\n      date: new Date(Date.now())\n    });\n  }\n\n  @Post('reset-password')\n  @HttpCode(HttpStatus.OK)\n  async resetPassword(@Body() input: ResetPassInput): Promise {\n    const { email, token, newPassword } = input;\n    const exist = await this.usersService.findOneAsync({ email });\n    if (!exist) throw new UnauthorizedException('Password reset failed');\n    await this.authService.validatePasswordToken({\n      userId: exist.id,\n      plainToken: token,\n      newPassword\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            MailService\n                        \n                        \n                            SessionSerializer\n                        \n                        \n                            TempTokensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\nimport { MailService } from '../shared/mail/mail.service';\nimport { UsersModule } from '../users/users.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { TemporaryToken } from './models/temporary-token.entity';\nimport { SessionSerializer } from './session.serializer';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { TempTokensService } from './temp-token.service';\n\nconst Config = [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n];\n@Module({\n  imports: [UsersModule, ...Config],\n  providers: [\n    AuthService,\n    JwtStrategy,\n    SessionSerializer,\n    MailService,\n    TempTokensService\n  ],\n  controllers: [AuthController],\n  exports: [AuthService, ...Config]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthObj.html":{"url":"interfaces/AuthObj.html","title":"interface - AuthObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authRoles\n                                \n                                \n                                        enableAuth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authRoles\n                                    \n                                \n                                \n                                    \n                                        authRoles:         UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableAuth\n                                    \n                                \n                                \n                                    \n                                        enableAuth:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTempToken\n                            \n                            \n                                    Async\n                                getAuthToken\n                            \n                            \n                                    Async\n                                validateEmailToken\n                            \n                            \n                                    Async\n                                validatePasswordToken\n                            \n                            \n                                    Private\n                                    Async\n                                validateToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, tokenService: TempTokensService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tokenService\n                                                  \n                                                        \n                                                                        TempTokensService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            generateTempToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTempToken(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAuthToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthToken(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateEmailToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateEmailToken(input: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validatePasswordToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePasswordToken(resetPassInput: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetPassInput\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            validateToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateToken(userId: string, type: TokenType, plainToken: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                TokenType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    plainToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, pw: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pw\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport configuration from '~shared/config/configuration';\nimport { authErrors } from '~shared/errors';\nimport { generateRandomToken } from '~shared/utils/random-token';\n\nimport { User } from '../users/models/user.entity';\nimport { UsersService } from '../users/users.service';\nimport { JwtPayload } from './models/jwt-payload';\nimport { TokenType } from './models/temporary-token.entity';\nimport { TempTokensService } from './temp-token.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly tokenService: TempTokensService\n  ) { }\n  async validateUser(email: string, pw: string): Promise {\n    const user = await this.usersService.findOneAsync({\n      email: email?.toLowerCase()\n    });\n    if (user.loginAttemptCount >= 3) {\n      throw new HttpException(\n        { message: 'User is locked out', errorType: 'USER_LOCKED_OUT' },\n        HttpStatus.UNAUTHORIZED\n      );\n    }\n    if (!user) throw authErrors.INVALID_LOGIN_ATTEMPT;\n    if (!user.isEmailVerified) {\n      throw new HttpException(\n        { message: 'Unconfirmed Email', errorType: 'UNCONFIRMED_EMAIL' },\n        HttpStatus.UNAUTHORIZED\n      );\n    }\n    await this.usersService.incrementLoginAttempt(user.id);\n    const isValid = await bcrypt.compare(pw, user.password);\n    if (!isValid) {\n      throw authErrors.INVALID_LOGIN_ATTEMPT;\n    }\n    await this.usersService.resetLoginAttempt(user.id)\n    return user;\n  }\n\n  async getAuthToken(user: User): Promise {\n    const { jwtValidityHrs, jwtSecret } = configuration();\n    const expiresIn = 60 * 60 * jwtValidityHrs;\n    const payload: JwtPayload = {\n      email: user.email,\n      userId: user.id,\n      role: user.role\n    };\n    return jwt.sign(payload, jwtSecret, { expiresIn });\n  }\n\n\n  async generateTempToken({\n    user,\n    type,\n    expiresInMins\n  }: {\n    user: User;\n    type: TokenType;\n    expiresInMins: number;\n  }): Promise {\n    const plainToken = generateRandomToken(64);\n    const encryptedToken = await bcrypt.hash(plainToken, 10);\n    const token = this.tokenService.createEntity({\n      token: encryptedToken,\n      expireAt: new Date(new Date().getTime() + expiresInMins * 60000),\n      type,\n      user: user.id as any\n    });\n    await this.tokenService.insertAsync(token);\n    return plainToken;\n  }\n  async validateEmailToken(input: {\n    userId: string;\n    plainToken: string;\n  }): Promise {\n    const { userId, plainToken } = input;\n\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.EMAIL,\n      plainToken\n    );\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { isEmailVerified: true });\n    await this.tokenService.hardDeleteById(id);\n  }\n  async validatePasswordToken(resetPassInput: {\n    userId: string;\n    plainToken: string;\n    newPassword: string;\n  }): Promise {\n    const { userId, plainToken, newPassword } = resetPassInput;\n    const { user, id } = await this.validateToken(\n      userId,\n      TokenType.PASSWORD,\n      plainToken\n    );\n    const passwordHash = await bcrypt.hash(newPassword, 10);\n\n    const doc = user as User;\n    await this.usersService.updateAsync(doc.id, { password: passwordHash });\n    await this.tokenService.hardDeleteById(id);\n  }\n  private async validateToken(\n    userId: string,\n    type: TokenType,\n    plainToken: string\n  ) {\n    const exist = await this.tokenService\n      .findOne({ user: userId, type })\n      .populate('user');\n\n    if (!exist) throw authErrors.EXPIRED_TOKEN;\n    try {\n      const isValid = await bcrypt.compare(plainToken, exist.token);\n      if (!isValid) throw authErrors.INVALID_TOKEN;\n    } catch (error) {\n      throw authErrors.INVALID_TOKEN;\n    }\n    return exist;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthenticationGuard.html":{"url":"guards/AuthenticationGuard.html","title":"guard - AuthenticationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthenticationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth.guard.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException\n} from '@nestjs/common';\nimport { Request } from 'express';\n\nimport configuration from '../../shared/config/configuration';\nimport { AuthService } from '../auth.service';\nimport { LoginReqDto } from '../models/dto/auth.dto';\n\n@Injectable()\nexport class AuthenticationGuard implements CanActivate {\n  constructor(private readonly authService: AuthService) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    return await this.validateRequest(request);\n  }\n  async validateRequest(request: Request): Promise {\n    if (!configuration().isAuthEnabled) return true;\n    const { email, password }: LoginReqDto = request.body;\n    const user = await this.authService.validateUser(email, password);\n\n    if (!user || !user.isActive) throw new UnauthorizedException();\n    request.user = user;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AvatarUploadDto.html":{"url":"classes/AvatarUploadDto.html","title":"class - AvatarUploadDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AvatarUploadDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/avatar-upload.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                file\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'binary'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profile/dto/avatar-upload.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class AvatarUploadDto {\n    @ApiProperty({ type: 'string', format: 'binary' })\n    file: any;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerOptions.html":{"url":"interfaces/BaseControllerOptions.html","title":"interface - BaseControllerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        entity\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithAuthOptions.html":{"url":"interfaces/BaseControllerWithAuthOptions.html","title":"interface - BaseControllerWithAuthOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithAuthOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     DefaultAuthObject | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DefaultAuthObject | boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseControllerWithSwaggerOpts.html":{"url":"interfaces/BaseControllerWithSwaggerOpts.html","title":"interface - BaseControllerWithSwaggerOpts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseControllerWithSwaggerOpts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller-opts-interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseControllerWithAuthOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createDto\n                                \n                                \n                                        entityDto\n                                \n                                \n                                        pagedListDto\n                                \n                                \n                                        updateDto\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createDto\n                                    \n                                \n                                \n                                    \n                                        createDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityDto\n                                    \n                                \n                                \n                                    \n                                        entityDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagedListDto\n                                    \n                                \n                                \n                                    \n                                        pagedListDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDto\n                                    \n                                \n                                \n                                    \n                                        updateDto:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DefaultAuthObject } from './default-auth-object.interface';\n\nexport interface BaseControllerOptions {\n  entity: { new (doc?: any): T };\n}\n\nexport interface BaseControllerWithAuthOptions\n  extends BaseControllerOptions {\n  auth: DefaultAuthObject | boolean;\n}\nexport interface BaseControllerWithSwaggerOpts extends BaseControllerWithAuthOptions {\n  entityDto: { new (): TEntityDto };\n  createDto: { new (): TCreateDto };\n  updateDto: { new (): TUpdateDto };\n  pagedListDto: { new (): TPagedEntityOutputDto };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseDto.html":{"url":"classes/BaseDto.html","title":"class - BaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/base.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/base.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nexport class BaseDto {\n  @IsMongoId()\n  @Expose()\n  readonly id: string;\n  @ApiProperty()\n  @Expose()\n  readonly updatedAt: Date;\n  @ApiProperty()\n  @Expose()\n  readonly createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/base.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    TimeStamps\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    schema\n                                \n                                \n                                    modelName\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/base.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:71\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:62\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/models/base.entity.ts:53\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        modelName\n                    \n                \n\n                \n                    \n                        getmodelName()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/models/base.entity.ts:41\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { buildSchema, prop, Ref } from '@typegoose/typegoose';\nimport { TimeStamps } from '@typegoose/typegoose/lib/defaultClasses';\nimport { Schema } from 'mongoose';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { User } from '../../users/models/user.entity';\n\nexport class BaseEntity extends TimeStamps {\n  id: string;\n\n  @prop({ required: true, default: false })\n  readonly isDeleted!: boolean;\n  @prop({ default: null, ref: BaseEntity })\n  readonly createdBy?: Ref = null;\n  @prop({ default: null, ref: BaseEntity })\n  readonly updatedBy?: Ref = null;\n  @prop({ required: true, default: true })\n  readonly isActive: boolean = true;\n  @prop({ default: null, ref: BaseEntity })\n  readonly deletedBy?: Ref = null;\n  @prop({ default: null })\n  readonly deletedAt?: Date;\n  @prop({ required: true, default: new Date() })\n  readonly createdAt: Date = new Date();\n  @prop({ required: true, default: new Date() })\n  readonly updatedAt: Date = null;\n  static get schema(): Schema {\n    return buildSchema(this as any, {\n      timestamps: true,\n      toJSON: {\n        getters: true,\n        virtuals: true,\n        versionKey: false,\n        transform: (_, ret) => {\n          ret.id = ret._id;\n          delete ret._id;\n        }\n      }\n    });\n  }\n  static get modelName(): string {\n    return this.name;\n  }\n  delete(): void {\n    (this as Writable).isDeleted = true;\n  }\n\n  /**\n   * Sets {isDeleted} to false\n   *\n   * @memberof BaseEntity\n   */\n  restore(): void {\n    (this as Writable).isDeleted = false;\n  }\n\n  /**\n   * Sets {isActive} to true\n   *\n   * @memberof BaseEntity\n   */\n  deactivate(): void {\n    (this as Writable).isActive = false;\n  }\n\n  /**\n   * Sets isActive to false\n   *\n   * @memberof BaseEntity\n   */\n  activate(): void {\n    (this as Writable).isActive = true;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BufferedFile.html":{"url":"interfaces/BufferedFile.html","title":"interface - BufferedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BufferedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/buffer-file.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        buffer\n                                \n                                \n                                        encoding\n                                \n                                \n                                        fieldname\n                                \n                                \n                                        mimetype\n                                \n                                \n                                        originalname\n                                \n                                \n                                        size\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        buffer\n                                    \n                                \n                                \n                                    \n                                        buffer:     Buffer | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Buffer | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldname\n                                    \n                                \n                                \n                                    \n                                        fieldname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        originalname\n                                    \n                                \n                                \n                                    \n                                        originalname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BufferedFile {\n    fieldname: string;\n    originalname: string;\n    encoding: string;\n    mimetype: string;\n    size: number;\n    buffer: Buffer | string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoriesController.html":{"url":"classes/CategoriesController.html","title":"class - CategoriesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.controller.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: CategoryDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\nimport { CategoryDto, PagedCategoryOutDto } from './models/dtos/category.dto';\nimport { CreateCategoryDto } from './models/dtos/create-category.dto';\n\nconst BaseCtrl = BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedListDto: PagedCategoryOutDto\n});\n\nexport class CategoriesController extends BaseCtrl {\n  constructor(protected readonly categoryService: CategoriesService) {\n    super(categoryService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: CategoryDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateCategoryDto): Promise {\n    const exist = await this.categoryService.findOneAsync({\n      title: input.name.toUpperCase()\n    });\n\n    if (exist)\n      throw new ConflictException(\n        `Category with the name \"${exist.name}\" already exists`\n      );\n\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\n\nCategoriesService \n\nCategoriesService \n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CategoriesController } from './categories.controller';\nimport { CategoriesService } from './categories.service';\nimport { Category } from './models/category.entity';\n\nconst CategoryModel = MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n]);\n@Module({\n  imports: [CategoryModel],\n  providers: [\n    CategoriesService,\n    { provide: BaseService, useClass: CategoriesService }\n  ],\n  controllers: [CategoriesController],\n  exports: [CategoriesService, CategoryModel]\n})\nexport class CategoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/category.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false, uppercase: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/category.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ name: 1 }, { unique: true })\nexport class Category extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    unique: false,\n    uppercase: true\n  })\n  readonly name!: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryDto.html":{"url":"classes/CategoryDto.html","title":"class - CategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/models/dtos/category.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cloudinary.html":{"url":"interfaces/Cloudinary.html","title":"interface - Cloudinary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cloudinary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        key\n                                \n                                \n                                        name\n                                \n                                \n                                        secret\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Configuration.html":{"url":"interfaces/Configuration.html","title":"interface - Configuration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Configuration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appEmail\n                                \n                                \n                                        cloudinary\n                                \n                                \n                                        database\n                                \n                                \n                                        environment\n                                \n                                \n                                        isAuthEnabled\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        jwtValidityHrs\n                                \n                                \n                                        mailer\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUrl\n                                \n                                \n                                        rootUrl\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appEmail\n                                    \n                                \n                                \n                                    \n                                        appEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cloudinary\n                                    \n                                \n                                \n                                    \n                                        cloudinary:         Cloudinary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Cloudinary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:         Database\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Database\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isAuthEnabled\n                                    \n                                \n                                \n                                    \n                                        isAuthEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtValidityHrs\n                                    \n                                \n                                \n                                    \n                                        jwtValidityHrs:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mailer\n                                    \n                                \n                                \n                                    \n                                        mailer:         Mailer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Mailer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUrl\n                                    \n                                \n                                \n                                    \n                                        redisUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rootUrl\n                                    \n                                \n                                \n                                    \n                                        rootUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ControllerAuth.html":{"url":"interfaces/ControllerAuth.html","title":"interface - ControllerAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ControllerAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        create\n                                \n                                \n                                        delete\n                                \n                                \n                                        find\n                                \n                                \n                                        findById\n                                \n                                \n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         AuthObj\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthObj\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Course.html":{"url":"classes/Course.html","title":"class - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/course.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                    Readonly\n                                playlistUrl\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/course.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Course extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length256,\n    unique: false\n  })\n  readonly playlistUrl!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly enrollmentCount!: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CourseDto.html":{"url":"classes/CourseDto.html","title":"class - CourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                enrollmentCount\n                            \n                            \n                                playlistUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length128)@ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            enrollmentCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            playlistUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsUrl()@MaxLength(columnSize.length256)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length32)@ApiProperty()@IsAlphanumeric()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/courses/models/dtos/course.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @Expose()\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoursesController.html":{"url":"classes/CoursesController.html","title":"class - CoursesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoursesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/courses.controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(courseService: CoursesService)\n                    \n                \n                        \n                            \n                                Defined in src/courses/courses.controller.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CoursesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateCourseDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: CourseDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/courses/courses.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateCourseDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { UserRole } from '../users/models/user.entity';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\nimport { CourseDto, PagedCourseOutputDto } from './models/dtos/course.dto';\nimport { CreateCourseDto } from './models/dtos/create-course.dto';\n\nexport class CoursesController extends BaseCrudController({\n  entity: Course,\n  entityDto: CourseDto,\n  createDto: CreateCourseDto,\n  updateDto: CreateCourseDto,\n  pagedListDto: PagedCourseOutputDto,\n  auth: {\n    create: [UserRole.MENTOR, UserRole.ADMIN],\n    update: [UserRole.MENTOR, UserRole.ADMIN],\n    delete: [UserRole.MENTOR, UserRole.ADMIN]\n  }\n}) {\n  constructor(protected readonly courseService: CoursesService) {\n    super(courseService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: CourseDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateCourseDto): Promise {\n    const exist = await this.courseService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Course with the title \"${exist.title}\" already exists`\n      );\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoursesModule.html":{"url":"modules/CoursesModule.html","title":"module - CoursesModule","body":"\n                   \n\n\n\n\n    Modules\n    CoursesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\n\nCoursesService \n\nCoursesService \n\n\n\nCoursesModule\n\nCoursesModule\n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/courses/courses.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CoursesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { CoursesController } from './courses.controller';\nimport { CoursesService } from './courses.service';\nimport { Course } from './models/course.entity';\n\nconst CourseModel = MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n]);\n@Module({\n  imports: [CourseModel],\n  providers: [\n    CoursesService,\n    { provide: BaseService, useClass: CoursesService }\n  ],\n  controllers: [CoursesController],\n  exports: [CoursesService, CourseModel]\n})\nexport class CoursesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/create-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CategoryDto } from './category.dto';\n\nexport class CreateCategoryDto extends PickType(CategoryDto, [\n  'name',\n  'description'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCourseDto.html":{"url":"classes/CreateCourseDto.html","title":"class - CreateCourseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCourseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/create-course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { CourseDto } from './course.dto';\n\nexport class CreateCourseDto extends PickType(CourseDto, [\n  'title',\n  'description',\n  'playlistUrl'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStageDto.html":{"url":"classes/CreateStageDto.html","title":"class - CreateStageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/create-stage.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                track\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/create-stage.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsMongoId } from 'class-validator';\n\nimport { StageDto } from './stage.dto';\n\nexport class CreateStageDto extends PickType(StageDto, [\n  'title',\n  'description',\n  'taskCount'\n]) {\n  @IsMongoId()\n  @Expose()\n  track: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTaskDto.html":{"url":"classes/CreateTaskDto.html","title":"class - CreateTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/create-task.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\n\nimport { TaskDto } from './task.dto';\n\n@Exclude()\nexport class CreateTaskDto extends OmitType(TaskDto, [\n  'createdAt',\n  'updatedAt',\n  'id'\n]) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTrackDto.html":{"url":"classes/CreateTrackDto.html","title":"class - CreateTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType } from '@nestjs/swagger';\nimport { BufferedFile } from '~shared/interfaces/buffer-file.interface';\n\nimport { TrackDto } from './track.dto';\n\nexport class CreateTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl'\n]) {\n\n}\n\n\nexport class CreateWithThumbnailTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl'\n]) {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  thumbnail: BufferedFile;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto extends OmitType(UserDto, [\n  'id',\n  'updatedAt',\n  'createdAt',\n  'tracks'\n]) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWithThumbnailTrackDto.html":{"url":"classes/CreateWithThumbnailTrackDto.html","title":"class - CreateWithThumbnailTrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWithThumbnailTrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/create-track.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                thumbnail\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbnail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         BufferedFile\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: 'string', format: 'binary'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/create-track.dto.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, OmitType } from '@nestjs/swagger';\nimport { BufferedFile } from '~shared/interfaces/buffer-file.interface';\n\nimport { TrackDto } from './track.dto';\n\nexport class CreateTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl'\n]) {\n\n}\n\n\nexport class CreateWithThumbnailTrackDto extends OmitType(TrackDto, [\n  'id',\n  'createdAt',\n  'updatedAt',\n  'thumbnailUrl'\n]) {\n  @ApiProperty({ type: 'string', format: 'binary' })\n  thumbnail: BufferedFile;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Database.html":{"url":"interfaces/Database.html","title":"interface - Database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        host\n                                \n                                \n                                        name\n                                \n                                \n                                        port\n                                \n                                \n                                        uri\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DbTest.html":{"url":"modules/DbTest.html","title":"module - DbTest","body":"\n                   \n\n\n\n\n    Modules\n    DbTest\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            test/helpers/db-test.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { MongoMemoryServer } from 'mongodb-memory-server';\n\nprocess.env.MAILER_API_KEY = 'api_key_mailgun';\nprocess.env.MONGOMS_SYSTEM_BINARY = '/usr/local/bin/mongod';\nprocess.env.MAILER_DOMAIN = 'mailer_domain_mailgun';\nconst dbServer = new MongoMemoryServer();\nexport const inMemoryDb = dbServer;\n\nconst dbFactory = MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n});\n\n@Module({\n  imports: [dbFactory],\n  exports: [dbFactory]\n})\nexport class DbTest {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultAuthObject.html":{"url":"interfaces/DefaultAuthObject.html","title":"interface - DefaultAuthObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DefaultAuthObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/default-auth-object.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        create\n                                \n                                \n                                            Optional\n                                        delete\n                                \n                                \n                                            Optional\n                                        find\n                                \n                                \n                                            Optional\n                                        findById\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create\n                                    \n                                \n                                \n                                    \n                                        create:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        delete:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        find\n                                    \n                                \n                                \n                                    \n                                        find:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        findById\n                                    \n                                \n                                \n                                    \n                                        findById:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         boolean | UserRole[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean | UserRole[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\n\ninterface AuthObj {\n  enableAuth: boolean;\n  authRoles: UserRole[];\n}\nexport interface ControllerAuth {\n  find: AuthObj;\n  findById: AuthObj;\n  create: AuthObj;\n  update: AuthObj;\n  delete: AuthObj;\n}\n\nexport interface DefaultAuthObject {\n  find?: boolean | UserRole[];\n  findById?: boolean | UserRole[];\n  create?: boolean | UserRole[];\n  update?: boolean | UserRole[];\n  delete?: boolean | UserRole[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindDto.html":{"url":"classes/FindDto.html","title":"class - FindDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/find.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                limit\n                            \n                            \n                                    Optional\n                                opts\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                    Optional\n                                skip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 100\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            opts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsJSON()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsJSON()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            skip\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/shared/models/dto/find.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsJSON, IsOptional } from 'class-validator';\n\nexport class FindDto {\n  @IsOptional()\n  skip?: number = 0;\n  @IsOptional()\n  limit?: number = 100;\n  @IsOptional()\n  @IsJSON()\n  search?: string;\n  @IsJSON()\n  @IsOptional()\n  opts?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/filters/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(error: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/filters/http-exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus\n} from '@nestjs/common';\nimport { Response } from 'express';\n\nimport { ApiException } from '../errors/api-exception';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(error: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const res = ctx.getResponse() as Response;\n    const req = ctx.getRequest();\n    const statusCode = error.getStatus();\n    const stacktrace = error.stack;\n    const errorName = error.response.name || error.response.error || error.name;\n    const errors = error.response.errors || null;\n    const path = req ? req.url : null;\n\n    if (statusCode === HttpStatus.UNAUTHORIZED) {\n      if (typeof error.response !== 'string') {\n        error.response.message =\n          error.response.message ||\n          'You do not have permission to access this resource';\n      }\n    }\n\n    const exception = new ApiException(\n      error.response.message,\n      errorName,\n      stacktrace,\n      errors,\n      path,\n      statusCode\n    );\n    res.status(statusCode).json(exception);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseController.html":{"url":"interfaces/IBaseController.html","title":"interface - IBaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/interfaces/base-controller.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    create\n                                \n                                \n                                    delete\n                                \n                                \n                                    findAll\n                                \n                                \n                                    findById\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(input: TCreateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TCreateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     void | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll(input: TPagedInputDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                            TPagedInputDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TPagedOutputDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findById\n                        \n                        \n                    \n                \n            \n            \n                \nfindById(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, input: TUpdateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/interfaces/base-controller.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                            TUpdateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     TEntityDto | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IBaseController {\n  create(input: TCreateDto): TEntityDto | Promise;\n  findAll(input: TPagedInputDto): TPagedOutputDto | Promise;\n  findById(input: string): TEntityDto | Promise;\n  update(id: string, input: TUpdateDto): TEntityDto | Promise;\n  delete(id: string): void | Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPagedListDto.html":{"url":"interfaces/IPagedListDto.html","title":"interface - IPagedListDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPagedListDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/models/dto/paged-list.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        items\n                                \n                                \n                                        totalCount\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCount\n                                    \n                                \n                                \n                                    \n                                        totalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { ClassType } from '../../types/abstract.type';\n\nexport interface IPagedListDto {\n  totalCount: number;\n  items: T[];\n}\n\nexport function PagedListDto(\n  entityDto: T\n): Type> {\n  class Paged implements IPagedListDto {\n    totalCount: number;\n    @ApiProperty({ type: entityDto })\n    items: T[];\n  }\n\n  return Paged;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/jwt-auth.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport configuration from '~shared/config/configuration';\nimport { AUTH_GUARD_TYPE } from '~shared/constants';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard(AUTH_GUARD_TYPE) {\n  canActivate(\n    context: ExecutionContext\n  ): boolean | Promise | Observable {\n    // console.log(context.switchToHttp().getRequest().sessionID);\n    return configuration().isAuthEnabled ? super.canActivate(context) : true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/jwt-payload.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        role\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:         UserRole\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserRole\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UserRole } from '../../users/models/user.entity';\nexport interface JwtPayload {\n  email: string;\n  role: UserRole;\n  userId: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload | PromiseLike)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload | PromiseLike\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\n\nimport configuration from '../../shared/config/configuration';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configuration().jwtSecret\n    });\n  }\n\n  async validate(\n    payload: JwtPayload | PromiseLike\n  ): Promise {\n    return payload;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginReqDto.html":{"url":"classes/LoginReqDto.html","title":"class - LoginReqDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginReqDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResDto.html":{"url":"classes/LoginResDto.html","title":"class - LoginResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/auth.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\n\nimport { RegisterUserDto } from '../../../users/models/dto/register-user.dto';\n\nexport class LoginReqDto extends PickType(RegisterUserDto, [\n  'email',\n  'password'\n]) {}\n\nexport class LoginResDto {\n  accessToken: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/mail/mail.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Module({\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/mail/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                config\n                            \n                            \n                                    Private\n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createTransport\n                            \n                            \n                                    Async\n                                sendMailAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/mail/mail.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createTransport\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTransport()\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMailAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMailAsync(mailOptions: Mail.Options)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/mail/mail.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mailOptions\n                                    \n                                            Mail.Options\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : configuration()\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Mail\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/mail/mail.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport * as nodemailer from 'nodemailer';\nimport * as mg from 'nodemailer-mailgun-transport';\nimport Mail = require('nodemailer/lib/mailer');\nimport configuration from '~shared/config/configuration';\n\n@Injectable()\nexport class MailService {\n  private readonly config = configuration();\n  private transporter: Mail;\n  constructor() {\n    this.createTransport();\n  }\n\n  private createTransport() {\n    const { mailer } = this.config;\n    this.transporter = nodemailer.createTransport(\n      mg({\n        auth: {\n          api_key: mailer.key,\n          domain: mailer.domain\n        }\n      })\n    );\n  }\n\n  async sendMailAsync(mailOptions: Mail.Options): Promise {\n    const info = await this.transporter.sendMail(mailOptions);\n    Logger.debug(`Message sent: ${info.messageId}`);\n\n    // Preview only available when sending through an Ethereal account\n    // Logger.debug(`Preview URL: ${nodemailer.getTestMessageUrl(info)}`);\n    // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Mailer.html":{"url":"interfaces/Mailer.html","title":"interface - Mailer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Mailer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/config/configuration.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        domain\n                                \n                                \n                                        key\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        domain\n                                    \n                                \n                                \n                                    \n                                        domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface Database {\n  host: string;\n  port: number;\n  name: string;\n  uri: string;\n}\ninterface Mailer {\n  key: string;\n  domain: string;\n}\ninterface Cloudinary {\n  key: string;\n  secret: string;\n  name: string;\n\n}\ninterface Configuration {\n  port: number;\n  jwtSecret: string;\n  jwtValidityHrs: number;\n  environment: string;\n  database: Database;\n  rootUrl: string;\n  redisUrl: string;\n  isAuthEnabled: boolean;\n  appEmail: string;\n  mailer: Mailer;\n  cloudinary: Cloudinary\n}\n\nexport default (): Configuration => ({\n  port: +process.env.PORT,\n  environment: process.env.NODE_ENV,\n  jwtSecret: process.env.JWT_SECRET,\n  jwtValidityHrs: +process.env.JWT_VALIDITY_HOURS,\n  rootUrl: process.env.ROOT_URL,\n  redisUrl: process.env.REDIS_SERVER_URL,\n  isAuthEnabled: process.env.API_AUTH_ENABLED === 'true',\n  appEmail: process.env.APP_EMAIL,\n  mailer: {\n    key: process.env.MAILER_API_KEY,\n    domain: process.env.MAILER_DOMAIN\n  },\n  database: {\n    host: process.env.DATABASE_HOST,\n    port: +process.env.DATABASE_PORT,\n    name: process.env.DATABASE_NAME,\n    uri: process.env.MONGODB_URI\n  },\n  cloudinary: {\n    secret: process.env.CLOUDINARY_API_SECRET,\n    key: process.env.CLOUDINARY_API_KEY,\n    name: process.env.CLOUDINARY_NAME\n  }\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCategoryOutDto.html":{"url":"classes/PagedCategoryOutDto.html","title":"class - PagedCategoryOutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCategoryOutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/models/dtos/category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose } from 'class-transformer';\nimport { MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CategoryDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @Expose()\n  name: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n}\nexport class PagedCategoryOutDto extends PagedListDto(CategoryDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedCourseOutputDto.html":{"url":"classes/PagedCourseOutputDto.html","title":"class - PagedCourseOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedCourseOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/courses/models/dtos/course.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsUrl, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto } from '~shared/models/dto/base.dto';\nimport { PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class CourseDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length32)\n  @ApiProperty()\n  @IsAlphanumeric()\n  title: string;\n  @Expose()\n  @MaxLength(columnSize.length128)\n  @ApiProperty()\n  description: string;\n  @IsUrl()\n  @MaxLength(columnSize.length256)\n  @Expose()\n  playlistUrl: string;\n\n  readonly enrollmentCount: number;\n}\nexport class PagedCourseOutputDto extends PagedListDto(CourseDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListStageDto.html":{"url":"classes/PagedListStageDto.html","title":"class - PagedListStageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListStageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/stage.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsAlphanumeric, IsInt, IsOptional, MaxLength, Min } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\n\n@Exclude()\nexport class StageDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  @IsOptional()\n  taskCount?: number = 0;\n  @Expose()\n  @ApiProperty({ type: TrackDto, readOnly: true })\n  @Type(() => TrackDto)\n  readonly track: TrackDto;\n}\nexport class PagedListStageDto extends PagedListDto(StageDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedListTaskDto.html":{"url":"classes/PagedListTaskDto.html","title":"class - PagedListTaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedListTaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/task.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport {\n  IsAlphanumeric,\n  IsDate,\n  IsMongoId,\n  IsOptional,\n  MaxLength,\n  MinDate\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TaskDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @IsMongoId()\n  @Expose()\n  track: string;\n  @IsMongoId()\n  @Expose()\n  stage: string;\n  @Expose()\n  @IsDate()\n  @MinDate(new Date(), { message: 'Date must be in future' })\n  @IsOptional()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  deadline?: Date;\n}\nexport class PagedListTaskDto extends PagedListDto(TaskDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedTrackOutputDto.html":{"url":"classes/PagedTrackOutputDto.html","title":"class - PagedTrackOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedTrackOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/track.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsNotEmpty, IsOptional, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  @IsNotEmpty()\n  description: string;\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly thumbnailUrl?: string;\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PagedUserOutputDto.html":{"url":"classes/PagedUserOutputDto.html","title":"class - PagedUserOutputDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PagedUserOutputDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsArray, IsEmail, IsEnum, IsOptional, IsPhoneNumber, Length, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\nimport { UserRole } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  lastName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  email: string;\n\n  @Expose()\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  role?: UserRole = UserRole.MENTEE;\n\n  @Expose()\n  @IsOptional()\n  @MaxLength(columnSize.length128)\n  description?: string;\n\n  @Expose()\n  @IsPhoneNumber(\"ZZ\", { message: 'Invalid phone number. Valid phone number sample +2347063644568' })\n  @MaxLength(columnSize.length64)\n  @IsOptional()\n  phoneNumber?: string;\n\n  @Expose()\n  @IsArray()\n  @Length(1, columnSize.length32, { each: true })\n  @ApiProperty({ isArray: true, type: String })\n  @IsOptional()\n  technologies?: string[];\n\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly photoUrl?: string;\n\n  @ApiProperty({ readOnly: true, type: TrackDto, isArray: true })\n  @Expose()\n  @Type(() => TrackDto)\n  readonly tracks: TrackDto[];\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfileController.html":{"url":"controllers/ProfileController.html","title":"controller - ProfileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                profile\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getProfile\n                            \n                            \n                                    Async\n                                updateProfile\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProfile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfile(input: UpdateProfileDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                UpdateProfileDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: BufferedFile, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload_profile_photo')@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBody({description: 'Upload avatar photo', type: AvatarUploadDto})@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({type: UserDto, status: undefined})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/profile/profile.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                BufferedFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  Put,\n  Req,\n  UnsupportedMediaTypeException,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiBody, ApiConsumes, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\nimport { BufferedFile } from '~shared/interfaces';\n\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { UserDto } from '../users/models/dto/user.dto';\nimport { UsersService } from '../users/users.service';\nimport { AvatarUploadDto } from './dto/avatar-upload.dto';\nimport { UpdateProfileDto } from './dto/update-profile.dto';\nimport { ProfileService } from './profile.service';\n\n@ApiTags(\"Profile\")\n@Controller('profile')\nexport class ProfileController {\n  constructor(private readonly userService: UsersService, private profileService: ProfileService) { }\n  @Get()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  async getProfile(@Req() req: Request): Promise {\n    const user = await this.userService.findByIdAsync(req.user['userId']);\n    return plainToClass(UserDto, user, {\n      excludeExtraneousValues: true,\n      enableImplicitConversion: true\n    });\n  }\n  @Put()\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  async updateProfile(@Body() input: UpdateProfileDto, @Req() req: Request): Promise {\n    const id = req.user['userId'];\n    await this.userService.updateAsync(id, input);\n  }\n  @Post('upload_profile_photo')\n  @UseInterceptors(FileInterceptor('file'))\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    description: 'Upload avatar photo',\n    type: AvatarUploadDto,\n  })\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ type: UserDto, status: HttpStatus.OK })\n  @HttpCode(HttpStatus.OK)\n  async uploadFile(@UploadedFile() file: BufferedFile, @Req() req: Request): Promise {\n    if (!file)\n      throw new BadRequestException(\"File image cannot be empty\")\n\n    if (file.mimetype.split('/')[0] !== \"image\")\n      throw new UnsupportedMediaTypeException(\"File is not an image\");\n\n    if (file.size / 1024 > 200)\n      throw new BadRequestException(\"File cannot be larger than 200KB\")\n\n    const id = req.user['userId'];\n    await this.profileService.uploadAvatar(file, id);\n    const user = await this.userService.findByIdAsync(id)\n\n    return plainToClass(UserDto, user, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfileService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfileController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProfileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\nimport { UsersModule } from '../users/users.module';\nimport { UsersService } from '../users/users.service';\nimport { ProfileController } from './profile.controller';\nimport { ProfileService } from './profile.service';\n\n@Module({\n  imports: [UsersModule],\n  providers: [UsersService, ProfileService],\n  controllers: [ProfileController],\n  exports: [ProfileService]\n})\nexport class ProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/profile.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntity: ReturnModelType<>)\n                    \n                \n                        \n                            \n                                Defined in src/profile/profile.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntity\n                                                  \n                                                        \n                                                                    ReturnModelType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            uploadAvatar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAvatar(file: BufferedFile, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profile/profile.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                                BufferedFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ReturnModelType } from '@typegoose/typegoose';\nimport { BufferedFile } from '~shared/interfaces';\nimport { uploadFileToCloud } from '~shared/utils/upload-img.util';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class ProfileService {\n\n\n    constructor(@InjectModel(User.modelName)\n    protected readonly userEntity: ReturnModelType) { }\n\n    async uploadAvatar(file: BufferedFile, userId: string): Promise {\n        const photoUrl = await uploadFileToCloud(file, \"avatars\", userId);\n        await this.userEntity.updateOne({ _id: userId }, { photoUrl })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MinLength(6)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt',\n  'tracks',\n  'photoUrl'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserResDto.html":{"url":"classes/RegisterUserResDto.html","title":"class - RegisterUserResDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserResDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/register-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                canLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            canLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/register-user.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\nimport { MinLength } from 'class-validator';\n\nimport { UserDto } from './user.dto';\n\nexport class RegisterUserDto extends OmitType(UserDto, [\n  'id',\n  'role',\n  'createdAt',\n  'updatedAt',\n  'tracks',\n  'photoUrl'\n]) {\n  @MinLength(6)\n  password: string;\n}\n\nexport class RegisterUserResDto {\n  readonly canLogin: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassInput.html":{"url":"classes/ResetPassInput.html","title":"class - ResetPassInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/reset-pw.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ValidateTokenInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/reset-pw.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         ValidateTokenInput\n\n                                \n                            \n                        \n                            \n                                    Defined in         ValidateTokenInput:8\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nimport { ValidateTokenInput } from './validate-token.dto';\n\nexport class ResetPassInput extends ValidateTokenInput {\n  @IsNotEmpty()\n  newPassword: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/roles.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/roles.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Request } from 'express';\nimport configuration from '~shared/config/configuration';\n\nimport { UserRole } from '../../users/models/user.entity';\nimport { JwtPayload } from '../models/jwt-payload';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const roles = this.reflector.get(\n      UserRole,\n      context.getHandler()\n    );\n    if (!roles || !configuration().isAuthEnabled) return true;\n\n    const request = context.switchToHttp().getRequest();\n    const { role } = request.user as JwtPayload;\n    return roles.includes(role);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionSerializer.html":{"url":"injectables/SessionSerializer.html","title":"injectable - SessionSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/session.serializer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    PassportSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserializeUser\n                            \n                            \n                                serializeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserializeUser\n                        \n                        \n                    \n                \n            \n            \n                \ndeserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serializeUser\n                        \n                        \n                    \n                \n            \n            \n                \nserializeUser(user: User, done: (err: Error,user: User) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/session.serializer.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    done\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportSerializer } from '@nestjs/passport';\n\nimport { User } from '../users/models/user.entity';\n\n@Injectable()\nexport class SessionSerializer extends PassportSerializer {\n  serializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n  deserializeUser(user: User, done: (err: Error, user: User) => void): any {\n    done(null, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\n\n@Global()\n@Module({\n  imports: [],\n  providers: [],\n  exports: []\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stage.html":{"url":"classes/Stage.html","title":"class - Stage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/stage.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                taskCount\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            taskCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Track', required: true, autopopulate: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/stage.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref, plugin } from '@typegoose/typegoose';\nimport * as autopopulate from 'mongoose-autopopulate';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { Track } from '../../tracks/models/track.entity';\n\n@plugin(autopopulate as any)\n@index({ title: 1 }, { unique: true })\nexport class Stage extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n  @prop({\n    required: true,\n    default: 0\n  })\n  readonly taskCount!: number;\n\n  @prop({\n    ref: 'Track',\n    required: true,\n    autopopulate: true\n  })\n  readonly track!: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StageDto.html":{"url":"classes/StageDto.html","title":"class - StageDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StageDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/models/dtos/stage.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Optional\n                                taskCount\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            taskCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@Min(0)@IsInt()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TrackDto\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@ApiProperty({type: TrackDto, readOnly: true})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/stages/models/dtos/stage.dto.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsAlphanumeric, IsInt, IsOptional, MaxLength, Min } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\n\n@Exclude()\nexport class StageDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @Expose()\n  @Min(0)\n  @IsInt()\n  @IsOptional()\n  taskCount?: number = 0;\n  @Expose()\n  @ApiProperty({ type: TrackDto, readOnly: true })\n  @Type(() => TrackDto)\n  readonly track: TrackDto;\n}\nexport class PagedListStageDto extends PagedListDto(StageDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StagesController.html":{"url":"classes/StagesController.html","title":"class - StagesController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StagesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stages/stages.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stageService: StagesService, trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/stages/stages.controller.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stageService\n                                                  \n                                                        \n                                                                        StagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateStageDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: StageDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/stages/stages.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateStageDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Body, ConflictException, HttpStatus, Inject, NotFoundException, Post, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { TracksService } from '../tracks/tracks.service';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateStageDto } from './models/dtos/create-stage.dto';\nimport { PagedListStageDto, StageDto } from './models/dtos/stage.dto';\nimport { Stage } from './models/stage.entity';\nimport { StagesService } from './stages.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Stage,\n  entityDto: StageDto,\n  createDto: CreateStageDto,\n  updateDto: CreateStageDto,\n  pagedListDto: PagedListStageDto,\n  auth: {\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n});\n\nexport class StagesController extends BaseCtrl {\n  constructor(\n    protected stageService: StagesService,\n    @Inject(TracksService)\n    private trackService: TracksService\n  ) {\n    super(stageService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: StageDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateStageDto): Promise {\n    const track = await this.trackService.findByIdAsync(input.track);\n    if (!track) {\n      throw new NotFoundException(\n        `Track with id ${input.track} does not exist`\n      );\n    }\n\n    const stage = await this.stageService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n\n    if (stage) {\n      throw new ConflictException(\n        `Stage with the title \"${stage.title}\" already exists`\n      );\n    }\n    return await super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StagesModule.html":{"url":"modules/StagesModule.html","title":"module - StagesModule","body":"\n                   \n\n\n\n\n    Modules\n    StagesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_imports\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_providers\n\n\n\n\nTracksModule\n\nTracksModule\n\n\n\nStagesModule\n\nStagesModule\n\nStagesModule -->\n\nTracksModule->StagesModule\n\n\n\n\n\nStagesService \n\nStagesService \n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stages/stages.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StagesService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TracksModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StagesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { TracksModule } from '../tracks/tracks.module';\nimport { Stage } from './models/stage.entity';\nimport { StagesController } from './stages.controller';\nimport { StagesService } from './stages.service';\n\nconst StageModel = MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n]);\nconst baseService = { provide: BaseService, useClass: StagesService };\n@Module({\n  imports: [StageModel, TracksModule],\n  providers: [StagesService, baseService],\n  controllers: [StagesController],\n  exports: [StageModel, StagesService, baseService]\n})\nexport class StagesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/task.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                deadline\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                stage\n                            \n                            \n                                    Readonly\n                                status\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                complete\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Date(new Date().setDate(new Date().getDate() + 7))\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Stage, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TaskStatus\n\n                        \n                    \n                    \n                        \n                            Default value : TaskStatus.STARTED\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TaskStatus, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: Track, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/task.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            complete\n                        \n                        \n                    \n                \n            \n            \n                \ncomplete()\n                \n            \n\n\n            \n                \n                    Defined in src/tasks/models/task.entity.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { Stage } from '../../stages/models/stage.entity';\nimport { Track } from '../../tracks/models/track.entity';\n\nexport enum TaskStatus {\n  STARTED = 'STARTED',\n  UNCOMPLETED = 'UNCOMPLETED',\n  COMPLETED = 'COMPLETED'\n}\n\n@index({ title: 1 }, { unique: true })\nexport class Task extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({\n    required: true,\n    type: Date,\n    default: new Date(new Date().setDate(new Date().getDate() + 7))\n  })\n  readonly deadline = new Date(new Date().setDate(new Date().getDate() + 7));\n\n  @prop({\n    enum: TaskStatus,\n    type: String,\n    required: true,\n    default: TaskStatus.STARTED\n  })\n  readonly status: TaskStatus = TaskStatus.STARTED;\n\n  @prop({ ref: Track, required: true })\n  readonly track!: Ref;\n\n  @prop({ ref: Stage, required: true })\n  readonly stage!: Ref;\n\n  complete(): void {\n    (this as Writable).status = TaskStatus.COMPLETED;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskDto.html":{"url":"classes/TaskDto.html","title":"class - TaskDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/models/dtos/task.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                deadline\n                            \n                            \n                                description\n                            \n                            \n                                stage\n                            \n                            \n                                title\n                            \n                            \n                                track\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            deadline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsDate()@MinDate(new Date(), {message: 'Date must be in future'})@IsOptional()@ApiProperty({type: Date})@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            track\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tasks/models/dtos/task.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport {\n  IsAlphanumeric,\n  IsDate,\n  IsMongoId,\n  IsOptional,\n  MaxLength,\n  MinDate\n} from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\n@Exclude()\nexport class TaskDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  description: string;\n  @IsMongoId()\n  @Expose()\n  track: string;\n  @IsMongoId()\n  @Expose()\n  stage: string;\n  @Expose()\n  @IsDate()\n  @MinDate(new Date(), { message: 'Date must be in future' })\n  @IsOptional()\n  @ApiProperty({ type: Date })\n  @Type(() => Date)\n  deadline?: Date;\n}\nexport class PagedListTaskDto extends PagedListDto(TaskDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TasksController.html":{"url":"classes/TasksController.html","title":"class - TasksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TasksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                submitTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tasksService: TasksService, stageService: StagesService, trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/tasks/tasks.controller.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tasksService\n                                                  \n                                                        \n                                                                        TasksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stageService\n                                                  \n                                                        \n                                                                        StagesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTaskDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiBearerAuth()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({type: TaskDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTaskDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            submitTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    submitTask(taskId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':taskId/submit')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined})@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.MENTEE)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpCode,\n  HttpStatus,\n  Inject,\n  NotFoundException,\n  Param,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { BaseCrudController } from '~shared/controllers';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { StagesService } from '../stages/stages.service';\nimport { TracksService } from '../tracks/tracks.service';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateTaskDto } from './models/dtos/create-task.dto';\nimport { PagedListTaskDto, TaskDto } from './models/dtos/task.dto';\nimport { Task } from './models/task.entity';\nimport { TasksService } from './tasks.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Task,\n  createDto: CreateTaskDto,\n  pagedListDto: PagedListTaskDto,\n  entityDto: TaskDto,\n  updateDto: CreateTaskDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n});\n\nexport class TasksController extends BaseCtrl {\n  constructor(\n    private tasksService: TasksService,\n    @Inject(StagesService)\n    private stageService: StagesService,\n    @Inject(TracksService)\n    private trackService: TracksService,\n  ) {\n    super(tasksService);\n  }\n\n  @Post()\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ type: TaskDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTaskDto): Promise {\n    const task = await this.tasksService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (task) {\n      throw new ConflictException(\n        `Task with the title \"${task.title}\" already exists`\n      );\n    }\n    const stage = await this.stageService.findByIdAsync(input.stage);\n    if (!stage)\n      throw new NotFoundException(`Stage with ${input.stage} not found`);\n    const track = await this.trackService.findByIdAsync(input.track);\n    if (!track)\n      throw new NotFoundException(`Track with ${input.track} not found`);\n    return await super.create(input);\n  }\n\n\n  @Post(':taskId/submit')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK })\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.MENTEE)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async submitTask(@Param('taskId') taskId: string): Promise {\n\n    const task = await this.tasksService.findByIdAsync(taskId);\n    if (!task) throw new NotFoundException(`Track with ${taskId} not found`);\n    await this.tasksService.submitTask(task);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_imports\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nStagesModule\n\nStagesModule\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nStagesModule->TasksModule\n\n\n\n\n\nTracksModule\n\nTracksModule\n\nTasksModule -->\n\nTracksModule->TasksModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTasksModule -->\n\nUsersModule->TasksModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            StagesModule\n                        \n                        \n                            TracksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { StagesModule } from '../stages/stages.module';\nimport { TracksModule } from '../tracks/tracks.module';\nimport { UsersModule } from '../users/users.module';\nimport { Task } from './models/task.entity';\nimport { TasksController } from './tasks.controller';\nimport { TasksService } from './tasks.service';\n\nconst TaskModel = MongooseModule.forFeature([\n  { name: Task.modelName, schema: Task.schema }\n]);\nconst baseService = { provide: BaseService, useClass: TasksService };\n@Module({\n  imports: [TaskModel, StagesModule, TracksModule, UsersModule],\n  providers: [TasksService, baseService],\n  controllers: [TasksController],\n  exports: [TaskModel, TasksService, baseService]\n})\nexport class TasksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TemporaryToken.html":{"url":"classes/TemporaryToken.html","title":"class - TemporaryToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TemporaryToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/temporary-token.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                expireAt\n                            \n                            \n                                    Readonly\n                                token\n                            \n                            \n                                    Readonly\n                                    Optional\n                                type\n                            \n                            \n                                    Readonly\n                                    Optional\n                                user\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            expireAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, type: Date})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TokenType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: TokenType, type: String, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: User, unique: false, required: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/temporary-token.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, modelOptions, prop, Ref } from '@typegoose/typegoose';\n\nimport { User } from '../../users/models/user.entity';\nimport { BaseEntity } from '../../shared/models/base.entity';\n\nexport enum TokenType {\n  PASSWORD = 'PASSWORD_TOKEN',\n  EMAIL = 'EMAIL_TOKEN'\n}\n\n@index({ user: 1, type: 1 }, { unique: true })\n@modelOptions({ options: { customName: 'temptokens' } })\n@index({ expireAt: 1 }, { expireAfterSeconds: 0 })\nexport class TemporaryToken extends BaseEntity {\n  @prop({ required: true })\n  readonly token!: string;\n\n  @prop({ required: true, type: Date })\n  readonly expireAt!: Date;\n\n  @prop({\n    enum: TokenType,\n    type: String,\n    unique: false,\n    required: true\n  })\n  readonly type?: TokenType;\n\n  @prop({ ref: User, unique: false, required: true })\n  readonly user?: Ref;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Track.html":{"url":"classes/Track.html","title":"class - Track","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Track\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/track.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                stages\n                            \n                            \n                                    Readonly\n                                thumbnailUrl\n                            \n                            \n                                    Readonly\n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            stages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Stage', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            thumbnailUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true, uppercase: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/track.entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { index, prop, Ref } from '@typegoose/typegoose';\nimport { columnSize } from '~shared/constants';\nimport { BaseEntity } from '~shared/models/base.entity';\n\nimport { Stage } from '../../stages/models/stage.entity';\n\n@index({ title: 1 }, { unique: true })\nexport class Track extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length32,\n    trim: true,\n    text: true,\n    uppercase: true,\n    unique: false\n  })\n  readonly title!: string;\n\n  @prop({\n    required: true,\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    unique: false\n  })\n  readonly description!: string;\n\n  @prop({ ref: 'Stage', default: null })\n  readonly stages: Ref[] = [];\n\n  @prop({\n    default: null\n  })\n  readonly thumbnailUrl: string = null;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackDto.html":{"url":"classes/TrackDto.html","title":"class - TrackDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/models/dto/track.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                    Readonly\n                                    Optional\n                                thumbnailUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length128)@Expose()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/track.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            thumbnailUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true})@Expose()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/track.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @MaxLength(columnSize.length32)@IsAlphanumeric()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tracks/models/dto/track.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsAlphanumeric, IsNotEmpty, IsOptional, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { PagedListDto } from '~shared/models/dto';\nimport { BaseDto } from '~shared/models/dto/base.dto';\n\n@Exclude()\nexport class TrackDto extends BaseDto {\n  @MaxLength(columnSize.length32)\n  @IsAlphanumeric()\n  @Expose()\n  title: string;\n  @MaxLength(columnSize.length128)\n  @Expose()\n  @IsNotEmpty()\n  description: string;\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly thumbnailUrl?: string;\n}\nexport class PagedTrackOutputDto extends PagedListDto(TrackDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TracksController.html":{"url":"classes/TracksController.html","title":"class - TracksController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TracksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tracks/tracks.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                assignedTasks\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createTrack\n                            \n                            \n                                    Async\n                                enroll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(trackService: TracksService)\n                    \n                \n                        \n                            \n                                Defined in src/tracks/tracks.controller.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        trackService\n                                                  \n                                                        \n                                                                        TracksService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            assignedTasks\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignedTasks(trackId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':trackId/stages')@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined})@UseGuards(JwtAuthGuard)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trackId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateTrackDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({type: TrackDto, status: undefined})@ApiResponse({status: undefined})@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createTrack\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTrack(input: CreateWithThumbnailTrackDto, thumbnail: BufferedFile, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('create_with_thumbnail')@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN, UserRole.MENTOR)@ApiResponse({type: TrackDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@UseInterceptors(undefined)@ApiConsumes('multipart/form-data')@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateWithThumbnailTrackDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    thumbnail\n                                    \n                                                BufferedFile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            enroll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enroll(trackId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':trackId/enroll')@UseGuards(JwtAuthGuard)@HttpCode(HttpStatus.OK)@ApiBearerAuth()@ApiResponse({status: undefined, type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/tracks/tracks.controller.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trackId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  ConflictException,\n  Get,\n  HttpCode,\n  HttpStatus,\n  NotFoundException,\n  Param,\n  Post,\n  Req,\n  UnsupportedMediaTypeException,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiConsumes, ApiResponse } from '@nestjs/swagger';\nimport { plainToClass } from 'class-transformer';\nimport { Request } from 'express';\nimport { BaseCrudController } from '~shared/controllers/base.controller';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\nimport { BufferedFile } from '~shared/interfaces';\nimport { uploadFileToCloud } from '~shared/utils/upload-img.util';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { StageDto } from '../stages/models/dtos/stage.dto';\nimport { UserRole } from '../users/models/user.entity';\nimport { CreateTrackDto, CreateWithThumbnailTrackDto } from './models/dto/create-track.dto';\nimport { PagedTrackOutputDto, TrackDto } from './models/dto/track.dto';\nimport { Track } from './models/track.entity';\nimport { TracksService } from './tracks.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedListDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n});\nconst ONE_KB = 1024;\nexport class TracksController extends BaseCtrl {\n  constructor(protected trackService: TracksService) {\n    super(trackService);\n  }\n\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ type: TrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN })\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async create(@Body() input: CreateTrackDto): Promise {\n    const exist = await this.trackService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Track with the title \"${exist.title}\" already exists`\n      );\n    return await super.create(input);\n  }\n\n  @Post(\"create_with_thumbnail\")\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN, UserRole.MENTOR)\n  @ApiResponse({ type: TrackDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @UseInterceptors(FileInterceptor(\"thumbnail\"))\n  @ApiConsumes('multipart/form-data')\n  @ApiBearerAuth()\n  async createTrack(@Body() input: CreateWithThumbnailTrackDto, @UploadedFile() thumbnail: BufferedFile, @Req() req: Request): Promise {\n    if (!thumbnail)\n      throw new BadRequestException(\"Thumbnail image cannot be empty\")\n\n    if (thumbnail.mimetype.split('/')[0] !== \"image\")\n      throw new UnsupportedMediaTypeException(\"File is not an image\");\n    if (thumbnail.size / ONE_KB > 200)\n      throw new BadRequestException(\"File cannot be larger than 200KB\")\n\n\n    const exist = await this.trackService.findOneAsync({\n      title: input.title.toUpperCase()\n    });\n    if (exist)\n      throw new ConflictException(\n        `Track with the title \"${exist.title}\" already exists`\n      );\n    const userId = req.user['userId'];\n\n    const thumbnailUrl = await uploadFileToCloud(thumbnail, \"avatars\", userId);\n    const dto = input as any;\n    dto.thumbnailUrl = thumbnailUrl;\n    delete dto.thumbnail\n    return await super.create(dto);\n  }\n\n  @Get(':trackId/stages')\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK })\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async assignedTasks(@Param(\"trackId\") trackId: string): Promise {\n    const track = await this.trackService.findByIdAsync(trackId);\n    if (!track) throw new NotFoundException(`Track with Id ${trackId} not found`)\n    const stages = await this.trackService.getStages(trackId);\n\n    return plainToClass(StageDto, stages, {\n      enableImplicitConversion: true,\n      excludeExtraneousValues: true\n    });\n\n  }\n\n  @Post(\":trackId/enroll\")\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(HttpStatus.OK)\n  @ApiBearerAuth()\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  async enroll(@Param(\"trackId\") trackId: string): Promise {\n    const track = await this.trackService.findByIdAsync(trackId);\n    if (!track) throw new NotFoundException(`Track with ${trackId} not found`);\n    await this.trackService.enroll(track.id);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TracksModule.html":{"url":"modules/TracksModule.html","title":"module - TracksModule","body":"\n                   \n\n\n\n\n    Modules\n    TracksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_imports\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nTracksModule\n\nTracksModule\n\nTracksModule -->\n\nUsersModule->TracksModule\n\n\n\n\n\nTracksService \n\nTracksService \n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tracks/tracks.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TracksService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TracksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { UsersModule } from '../users/users.module';\nimport { Track } from './models/track.entity';\nimport { TracksController } from './tracks.controller';\nimport { TracksService } from './tracks.service';\n\nconst TrackModel = MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n]);\nconst baseService = { provide: BaseService, useClass: TracksService };\n@Module({\n  imports: [TrackModel, UsersModule],\n  providers: [TracksService, baseService],\n  controllers: [TracksController],\n  exports: [TrackModel, TracksService, baseService]\n})\nexport class TracksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfileDto.html":{"url":"classes/UpdateProfileDto.html","title":"class - UpdateProfileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profile/dto/update-profile.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/swagger';\n\nimport { CreateUserDto } from '../../users/models/dto/create-user.dto';\n\nexport class UpdateProfileDto extends OmitType(CreateUserDto, ['email', 'role', 'photoUrl']) { }\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                failedSignInAttempts\n                            \n                            \n                                    Readonly\n                                firstName\n                            \n                            \n                                    Readonly\n                                isEmailVerified\n                            \n                            \n                                    Readonly\n                                lastName\n                            \n                            \n                                    Readonly\n                                    Optional\n                                lockOutEndDate\n                            \n                            \n                                    Readonly\n                                loginAttemptCount\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                photoUrl\n                            \n                            \n                                    Readonly\n                                role\n                            \n                            \n                                    Readonly\n                                technologies\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                createdBy\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                deletedBy\n                            \n                            \n                                id\n                            \n                            \n                                    Readonly\n                                isActive\n                            \n                            \n                                    Readonly\n                                isDeleted\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                            \n                                    Readonly\n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmEmail\n                            \n                            \n                                setRandomPass\n                            \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                            \n                                delete\n                            \n                            \n                                restore\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fullName\n                                \n                                \n                                    model\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, trim: true, text: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, lowercase: true, text: true, unique: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            failedSignInAttempts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isEmailVerified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:87\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined, trim: true, text: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            lockOutEndDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            loginAttemptCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Exclude()@prop({default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, maxlength: undefined})@Exclude()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({maxlength: undefined, trim: true, text: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            photoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({enum: UserRole, type: String, required: true, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            technologies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({type: String, default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:69\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tracks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({ref: 'Track', default: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/user.entity.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            deletedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: false})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({required: true, default: undefined})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:26\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            updatedBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ref\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @prop({default: undefined, ref: BaseEntity})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseEntity\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseEntity:16\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmEmail\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRandomPass\n                        \n                        \n                    \n                \n            \n            \n                \nsetRandomPass()\n                \n            \n\n\n            \n                \n                    Defined in src/users/models/user.entity.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            activate\n                        \n                        \n                    \n                \n            \n            \n                \nactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:71\n\n                \n            \n\n\n            \n                \n                    Sets isActive to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deactivate\n                        \n                        \n                    \n                \n            \n            \n                \ndeactivate()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:62\n\n                \n            \n\n\n            \n                \n                    Sets {isActive} to true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            restore\n                        \n                        \n                    \n                \n            \n            \n                \nrestore()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseEntity\n\n                \n            \n            \n                \n                        Defined in         BaseEntity:53\n\n                \n            \n\n\n            \n                \n                    Sets {isDeleted} to false\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fullName\n                    \n                \n\n                \n                    \n                        getfullName()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:100\n                                \n                            \n                    \n                        \n                                Get User's full name\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in src/users/models/user.entity.ts:112\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { InternalServerErrorException } from '@nestjs/common';\nimport { getModelForClass, index, pre, prop, Ref, ReturnModelType } from '@typegoose/typegoose';\nimport { hash } from 'bcrypt';\nimport { Exclude } from 'class-transformer';\nimport * as crypto from 'crypto';\nimport { Writable } from '~shared/types/abstract.type';\n\nimport { columnSize } from '../../shared/constants';\nimport { BaseEntity } from '../../shared/models/base.entity';\nimport { Track } from '../../tracks/models/track.entity';\n\nexport enum UserRole {\n  MENTEE = 'MENTEE',\n  MENTOR = 'MENTOR',\n  ADMIN = 'ADMIN'\n}\n\n@pre('save', async function () {\n  try {\n    (this as Writable).password = await hash(this.password, 10);\n  } catch (e) {\n    throw new InternalServerErrorException(e);\n  }\n})\n@index({ email: 1 }, { unique: true })\nexport class User extends BaseEntity {\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n  })\n  readonly firstName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n  })\n  readonly lastName!: string;\n  @prop({\n    required: true,\n    maxlength: columnSize.length64,\n    trim: true,\n    lowercase: true,\n    text: true,\n    unique: false\n  })\n  readonly email!: string;\n  @prop({\n    maxlength: columnSize.length64,\n    trim: true,\n    text: true,\n    default: null\n  })\n  readonly phoneNumber!: string;\n  @prop({\n    default: null\n  })\n  readonly photoUrl: string = null;\n  @prop({\n    maxlength: columnSize.length128,\n    trim: true,\n    text: true,\n    default: null\n  })\n  readonly description!: string;\n  @prop({ type: String, default: null })\n  readonly technologies: string[] = [];\n  @prop({ required: true, maxlength: columnSize.length64 })\n  @Exclude()\n  readonly password!: string;\n  @Exclude()\n  @prop({\n    default: 0\n  })\n  readonly loginAttemptCount!: number;\n  @prop({\n    enum: UserRole,\n    type: String,\n    required: true,\n    default: UserRole.MENTEE\n  })\n  readonly role = UserRole.MENTEE;\n\n  @prop({ required: true, default: false })\n  readonly isEmailVerified: boolean;\n  @prop({ default: undefined })\n  readonly lockOutEndDate?: Date;\n  @prop({ required: true, default: 0 })\n  readonly failedSignInAttempts!: number;\n  @prop({ ref: 'Track', default: [] })\n  readonly tracks: Ref[] = [];\n  /**\n   * Get User's full name\n   *\n   * @readonly\n   * @memberof User\n   */\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  setRandomPass(): void {\n    (this as Writable).password = crypto\n      .randomBytes(columnSize.length32)\n      .toString();\n  }\n  confirmEmail(): void {\n    (this as Writable).isEmailVerified = true;\n  }\n\n  static get model(): ReturnModelType {\n    return getModelForClass(this);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/models/dto/user.dto.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                phoneNumber\n                            \n                            \n                                    Readonly\n                                    Optional\n                                photoUrl\n                            \n                            \n                                    Optional\n                                role\n                            \n                            \n                                    Optional\n                                technologies\n                            \n                            \n                                    Readonly\n                                tracks\n                            \n                            \n                                    Readonly\n                                createdAt\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsOptional()@MaxLength(columnSize.length128)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@MaxLength(columnSize.length64)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsPhoneNumber('ZZ', {message: 'Invalid phone number. Valid phone number sample +2347063644568'})@MaxLength(columnSize.length64)@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            photoUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true})@Expose()@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            role\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserRole\n\n                        \n                    \n                    \n                        \n                            Default value : UserRole.MENTEE\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsEnum(UserRole)@ApiProperty({enum: UserRole})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            technologies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Expose()@IsArray()@Length(1, columnSize.length32, {each: true})@ApiProperty({isArray: true, type: String})@IsOptional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            tracks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TrackDto[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({readOnly: true, type: TrackDto, isArray: true})@Expose()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/models/dto/user.dto.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:14\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsMongoId()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         BaseDto\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseDto:11\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Type } from 'class-transformer';\nimport { IsArray, IsEmail, IsEnum, IsOptional, IsPhoneNumber, Length, MaxLength } from 'class-validator';\nimport { columnSize } from '~shared/constants';\nimport { BaseDto, PagedListDto } from '~shared/models/dto';\n\nimport { TrackDto } from '../../../tracks/models/dto/track.dto';\nimport { UserRole } from '../user.entity';\n\n@Exclude()\nexport class UserDto extends BaseDto {\n  @Expose()\n  @MaxLength(columnSize.length64)\n  firstName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  lastName: string;\n\n  @Expose()\n  @MaxLength(columnSize.length64)\n  @IsEmail()\n  email: string;\n\n  @Expose()\n  @IsEnum(UserRole)\n  @ApiProperty({ enum: UserRole })\n  role?: UserRole = UserRole.MENTEE;\n\n  @Expose()\n  @IsOptional()\n  @MaxLength(columnSize.length128)\n  description?: string;\n\n  @Expose()\n  @IsPhoneNumber(\"ZZ\", { message: 'Invalid phone number. Valid phone number sample +2347063644568' })\n  @MaxLength(columnSize.length64)\n  @IsOptional()\n  phoneNumber?: string;\n\n  @Expose()\n  @IsArray()\n  @Length(1, columnSize.length32, { each: true })\n  @ApiProperty({ isArray: true, type: String })\n  @IsOptional()\n  technologies?: string[];\n\n  @ApiProperty({ readOnly: true })\n  @Expose()\n  @IsOptional()\n  readonly photoUrl?: string;\n\n  @ApiProperty({ readOnly: true, type: TrackDto, isArray: true })\n  @Expose()\n  @Type(() => TrackDto)\n  readonly tracks: TrackDto[];\n}\n\nexport class PagedUserOutputDto extends PagedListDto(UserDto) { }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersController.html":{"url":"classes/UsersController.html","title":"class - UsersController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseCtrl\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.controller.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(input: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UseGuards(JwtAuthGuard, RolesGuard)@Roles(UserRole.ADMIN)@ApiResponse({type: UserDto, status: undefined})@ApiResponse({status: undefined, type: ApiException})@ApiResponse({status: undefined, type: ApiException})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Body,\n  ConflictException,\n  HttpStatus,\n  Post,\n  UseGuards\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiResponse } from '@nestjs/swagger';\nimport { Roles } from '~shared/decorators/roles.decorator';\nimport { ApiException } from '~shared/errors';\n\nimport { JwtAuthGuard, RolesGuard } from '../auth/guards';\nimport { BaseCrudController } from '../shared/controllers/base.controller';\nimport { CreateUserDto } from './models/dto/create-user.dto';\nimport { PagedUserOutputDto, UserDto } from './models/dto/user.dto';\nimport { User, UserRole } from './models/user.entity';\nimport { UsersService } from './users.service';\n\nconst BaseCtrl = BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedListDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n});\n\nexport class UsersController extends BaseCtrl {\n  constructor(protected readonly usersService: UsersService) {\n    super(usersService);\n  }\n  @Post()\n  @UseGuards(JwtAuthGuard, RolesGuard)\n  @Roles(UserRole.ADMIN)\n  @ApiResponse({ type: UserDto, status: HttpStatus.CREATED })\n  @ApiResponse({ status: HttpStatus.FORBIDDEN, type: ApiException })\n  @ApiResponse({ status: HttpStatus.BAD_REQUEST, type: ApiException })\n  @ApiBearerAuth()\n  async create(@Body() input: CreateUserDto): Promise {\n    const exist = await this.usersService.findOneAsync({\n      title: input.email.toLowerCase()\n    });\n    if (exist) {\n      throw new ConflictException(\n        `User with the email \"${exist.email}\" already exists`\n      );\n    }\n    return super.create(input);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { BaseService } from '~shared/services';\n\nimport { User } from './models/user.entity';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\n\nexport const UserModel = MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n]);\n@Module({\n  imports: [UserModel],\n  providers: [UsersService, { provide: BaseService, useClass: UsersService }],\n  controllers: [UsersController],\n  exports: [UsersService, UserModel]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidateTokenInput.html":{"url":"classes/ValidateTokenInput.html","title":"class - ValidateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/models/dto/validate-token.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/models/dto/validate-token.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nimport { LoginReqDto } from './auth.dto';\n\nexport class ValidateTokenInput extends PickType(LoginReqDto, ['email']) {\n  @IsNotEmpty()\n  token: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                merge-coverage.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.module.ts\n            \n            variable\n            Database\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/guards/auth.guard.ts\n            \n            guard\n            AuthenticationGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/acct-verification.dto.ts\n            \n            class\n            AcctVerifyDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginReqDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/models/dto/auth.dto.ts\n            \n            class\n            LoginResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/dto/reset-pw.dto.ts\n            \n            class\n            ResetPassInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/models/dto/validate-token.dto.ts\n            \n            class\n            ValidateTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/models/jwt-payload.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/models/temporary-token.entity.ts\n            \n            class\n            TemporaryToken\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/auth/session.serializer.ts\n            \n            injectable\n            SessionSerializer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/temp-token.service.ts\n            \n            injectable\n            TempTokensService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            class\n            CategoriesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.module.ts\n            \n            variable\n            CategoryModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            class\n            CategoriesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/categories/models/category.entity.ts\n            \n            class\n            Category\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            CategoryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/category.dto.ts\n            \n            class\n            PagedCategoryOutDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/models/dtos/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.controller.ts\n            \n            class\n            CoursesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/courses/courses.module.ts\n            \n            variable\n            CourseModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/courses.service.ts\n            \n            injectable\n            CoursesService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/courses/models/course.entity.ts\n            \n            class\n            Course\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            CourseDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/course.dto.ts\n            \n            class\n            PagedCourseOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/courses/models/dtos/create-course.dto.ts\n            \n            class\n            CreateCourseDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            variable\n            module\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/dto/avatar-upload.dto.ts\n            \n            class\n            AvatarUploadDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/profile/dto/update-profile.dto.ts\n            \n            class\n            UpdateProfileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profile/profile.controller.ts\n            \n            controller\n            ProfileController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profile/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Cloudinary\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Configuration\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Database\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/config/configuration.ts\n            \n            interface\n            Mailer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            AUTH_GUARD_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/constants.ts\n            \n            variable\n            columnSize\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/controllers/base.controller.ts\n            \n            function\n            BaseCrudController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/api-swagger-operation.decorator.ts\n            \n            variable\n            ApiSwaggerOperation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/authenticate.decorator.ts\n            \n            variable\n            Authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/file-upload.decorator.ts\n            \n            variable\n            ApiFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/errors/api-exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/shared/errors/auth.errors.ts\n            \n            variable\n            authErrors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/abstract-controller-options.interface.ts\n            \n            interface\n            AbstractControllerWithSwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithAuthOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller-opts-interface.ts\n            \n            interface\n            BaseControllerWithSwaggerOpts\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/interfaces/base-controller.interface.ts\n            \n            interface\n            IBaseController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/buffer-file.interface.ts\n            \n            interface\n            BufferedFile\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            AuthObj\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            ControllerAuth\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/interfaces/default-auth-object.interface.ts\n            \n            interface\n            DefaultAuthObject\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/shared/models/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/shared/models/dto/base.dto.ts\n            \n            class\n            BaseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/models/dto/find.dto.ts\n            \n            class\n            FindDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            interface\n            IPagedListDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/models/dto/paged-list.dto.ts\n            \n            function\n            PagedListDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/services/base.service.ts\n            \n            class\n            BaseService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            defaultAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/get-auth-obj.util.ts\n            \n            variable\n            getAuthObj\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/random-token.ts\n            \n            variable\n            generateRandomToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/utils/upload-img.util.ts\n            \n            variable\n            uploadFileToCloud\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/validations/env.validation.ts\n            \n            variable\n            envValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/create-stage.dto.ts\n            \n            class\n            CreateStageDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/stage.dto.ts\n            \n            class\n            PagedListStageDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/models/dtos/stage.dto.ts\n            \n            class\n            StageDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/stages/models/stage.entity.ts\n            \n            class\n            Stage\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/stages/stages.controller.ts\n            \n            class\n            StagesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stages/stages.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.module.ts\n            \n            variable\n            StageModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stages/stages.service.ts\n            \n            injectable\n            StagesService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/create-task.dto.ts\n            \n            class\n            CreateTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/task.dto.ts\n            \n            class\n            PagedListTaskDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/models/dtos/task.dto.ts\n            \n            class\n            TaskDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/tasks/models/task.entity.ts\n            \n            class\n            Task\n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            class\n            TasksController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tasks/tasks.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.module.ts\n            \n            variable\n            TaskModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateTrackDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/create-track.dto.ts\n            \n            class\n            CreateWithThumbnailTrackDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/track.dto.ts\n            \n            class\n            PagedTrackOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/models/dto/track.dto.ts\n            \n            class\n            TrackDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/tracks/models/track.entity.ts\n            \n            class\n            Track\n            \n                16 %\n                (3/18)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            class\n            TracksController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.controller.ts\n            \n            variable\n            ONE_KB\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            baseService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.module.ts\n            \n            variable\n            TrackModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tracks/tracks.service.ts\n            \n            injectable\n            TracksService\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/users/models/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/register-user.dto.ts\n            \n            class\n            RegisterUserResDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            PagedUserOutputDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/models/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/users/models/user.entity.ts\n            \n            class\n            User\n            \n                10 %\n                (3/30)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            class\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            variable\n            BaseCtrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.module.ts\n            \n            variable\n            UserModel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            dbFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            dbServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                test/helpers/db-test.module.ts\n            \n            variable\n            inMemoryDb\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/bull : ^0.1.2\n        \n            @nestjs/common : ^7.3.2\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.3.2\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.3.2\n        \n            @nestjs/schedule : ^0.4.0\n        \n            @nestjs/swagger : ^4.5.12\n        \n            @typegoose/typegoose : ^7.3.0\n        \n            bcrypt : ^5.0.0\n        \n            bull : ^3.15.0\n        \n            cache-manager : ^3.3.0\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            cloudinary : ^1.22.0\n        \n            compression : ^1.7.4\n        \n            connect-mongo : ^3.2.0\n        \n            cookie-parser : ^1.4.5\n        \n            cookie-session : ^1.4.0\n        \n            datauri : ^3.0.0\n        \n            express-rate-limit : ^5.1.3\n        \n            express-session : ^1.17.1\n        \n            helmet : ^3.23.3\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^5.9.23\n        \n            mongoose-autopopulate : ^0.12.2\n        \n            nodemailer : ^6.4.10\n        \n            nodemailer-mailgun-transport : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pluralize : ^8.0.0\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.0\n        \n            swagger-ui-express : ^4.1.4\n        \n            tsconfig-paths : ^3.9.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TaskStatus   (src/.../task.entity.ts)\n                        \n                        \n                            TokenType   (src/.../temporary-token.entity.ts)\n                        \n                        \n                            UserRole   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tasks/models/task.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TaskStatus\n                    \n                \n                        \n                            \n                                 STARTED\n                            \n                        \n                        \n                            \n                                Value : STARTED\n                            \n                        \n                        \n                            \n                                 UNCOMPLETED\n                            \n                        \n                        \n                            \n                                Value : UNCOMPLETED\n                            \n                        \n                        \n                            \n                                 COMPLETED\n                            \n                        \n                        \n                            \n                                Value : COMPLETED\n                            \n                        \n            \n        \n\n    src/auth/models/temporary-token.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        TokenType\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : PASSWORD_TOKEN\n                            \n                        \n                        \n                            \n                                 EMAIL\n                            \n                        \n                        \n                            \n                                Value : EMAIL_TOKEN\n                            \n                        \n            \n        \n\n    src/users/models/user.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRole\n                    \n                \n                        \n                            \n                                 MENTEE\n                            \n                        \n                        \n                            \n                                Value : MENTEE\n                            \n                        \n                        \n                            \n                                 MENTOR\n                            \n                        \n                        \n                            \n                                Value : MENTOR\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BaseCrudController   (src/.../base.controller.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            main   (merge-coverage.ts)\n                        \n                        \n                            PagedListDto   (src/.../paged-list.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/controllers/base.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            BaseCrudController\n                        \n                        \n                    \n                \n            \n            \n                \nBaseCrudController(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    merge-coverage.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            main\n                        \n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    src/shared/models/dto/paged-list.dto.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            PagedListDto\n                        \n                        \n                    \n                \n            \n            \n                \nPagedListDto(entityDto)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entityDto\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCode Clan Nigeria\n \nThe official website for code clan nigeria community\nWe are a community comprised of future innovators.\nFront-end developers, DevOps engineers, full stack developers, technical\nwriters, software engineers.\nThis community was created out of a desire to provide ongoing support\nto you wherever stage you are in your coding career.\nThis is codeclannigeria.dev\nAs part of the measures towards achieving out goal stated above, we propose to bring together the amazing talents of our community members to built a website and a mobile application that represents all that we\nstand for.\nHow You Come In\nTo get a complete documentation of the source code and the architectural structure of the application, click here.\nFeel free to put your skills to the test. Here is a suggested workflow for you to follow:\nNote: This is applicable to codeclannigeria community members only.\n\nFork this repository into your local computer\nCheck the issues pane for an issue that needs to be solved\nFind an issue that matches your current skill level and solve it\nMake your pull request to the develop branch\nWait for some feedback.\nRepeat the process\n\nWant more support? Join our slack\ncommunity and ask questions.\nThanks for your support\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2020 Fortune Ochi\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoursesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DbTest\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StagesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TracksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\ncluster_CoursesModule\n\n\n\ncluster_CoursesModule_exports\n\n\n\ncluster_CoursesModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_exports\n\n\n\ncluster_ProfileModule_providers\n\n\n\ncluster_StagesModule\n\n\n\ncluster_StagesModule_exports\n\n\n\ncluster_StagesModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_exports\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_TracksModule\n\n\n\ncluster_TracksModule_exports\n\n\n\ncluster_TracksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nCoursesModule\n\nCoursesModule\n\nAppModule -->\n\nCoursesModule->AppModule\n\n\n\n\n\nCoursesService \n\nCoursesService \n\nCoursesService  -->\n\nCoursesModule->CoursesService \n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nProfileModule\n\nProfileModule\n\nAppModule -->\n\nProfileModule->AppModule\n\n\n\n\n\nProfileService \n\nProfileService \n\nProfileService  -->\n\nProfileModule->ProfileService \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nStagesModule\n\nStagesModule\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nStagesModule->TasksModule\n\n\n\nAppModule -->\n\nStagesModule->AppModule\n\n\n\n\n\nStagesService \n\nStagesService \n\nStagesService  -->\n\nStagesModule->StagesService \n\n\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nTasksService \n\nTasksService \n\nTasksService  -->\n\nTasksModule->TasksService \n\n\n\n\n\nTracksModule\n\nTracksModule\n\nStagesModule -->\n\nTracksModule->StagesModule\n\n\n\nTasksModule -->\n\nTracksModule->TasksModule\n\n\n\nAppModule -->\n\nTracksModule->AppModule\n\n\n\n\n\nTracksService \n\nTracksService \n\nTracksService  -->\n\nTracksModule->TracksService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nProfileModule -->\n\nUsersModule->ProfileModule\n\n\n\nTasksModule -->\n\nUsersModule->TasksModule\n\n\n\nTracksModule -->\n\nUsersModule->TracksModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMailService\n\nMailService\n\nAuthModule -->\n\nMailService->AuthModule\n\n\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nSessionSerializer\n\nSessionSerializer\n\nAuthModule -->\n\nSessionSerializer->AuthModule\n\n\n\n\n\nTempTokensService\n\nTempTokensService\n\nAuthModule -->\n\nTempTokensService->AuthModule\n\n\n\n\n\nCoursesService\n\nCoursesService\n\nCoursesModule -->\n\nCoursesService->CoursesModule\n\n\n\n\n\nProfileService\n\nProfileService\n\nProfileModule -->\n\nProfileService->ProfileModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nProfileModule -->\n\nUsersService->ProfileModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nStagesService\n\nStagesService\n\nStagesModule -->\n\nStagesService->StagesModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\nTracksService\n\nTracksService\n\nTracksModule -->\n\nTracksService->TracksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    48 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AbstractDocument   (src/.../abstract.type.ts)\n                        \n                        \n                            ClassType   (src/.../abstract.type.ts)\n                        \n                        \n                            DeleteResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryItem   (src/.../abstract.type.ts)\n                        \n                        \n                            QueryList   (src/.../abstract.type.ts)\n                        \n                        \n                            UpdateResultType   (src/.../abstract.type.ts)\n                        \n                        \n                            Writable   (src/.../abstract.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/types/abstract.type.ts\n    \n    \n        \n            \n                \n                    \n                    AbstractDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClassType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DeleteResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryItem\n                \n            \n            \n                \n                        DocumentQuery | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryList\n                \n            \n            \n                \n                        DocumentQuery> | DocumentType>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UpdateResultType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Writable\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiFile   (src/.../file-upload.decorator.ts)\n                        \n                        \n                            ApiSwaggerOperation   (src/.../api-swagger-operation.decorator.ts)\n                        \n                        \n                            AUTH_GUARD_TYPE   (src/.../constants.ts)\n                        \n                        \n                            Authenticate   (src/.../authenticate.decorator.ts)\n                        \n                        \n                            authErrors   (src/.../auth.errors.ts)\n                        \n                        \n                            BaseCtrl   (src/.../categories.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../tasks.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../tracks.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../users.controller.ts)\n                        \n                        \n                            BaseCtrl   (src/.../stages.controller.ts)\n                        \n                        \n                            baseService   (src/.../tasks.module.ts)\n                        \n                        \n                            baseService   (src/.../tracks.module.ts)\n                        \n                        \n                            baseService   (src/.../stages.module.ts)\n                        \n                        \n                            CategoryModel   (src/.../categories.module.ts)\n                        \n                        \n                            columnSize   (src/.../constants.ts)\n                        \n                        \n                            Config   (src/.../app.module.ts)\n                        \n                        \n                            Config   (src/.../auth.module.ts)\n                        \n                        \n                            CourseModel   (src/.../courses.module.ts)\n                        \n                        \n                            Database   (src/.../app.module.ts)\n                        \n                        \n                            dbFactory   (test/.../db-test.module.ts)\n                        \n                        \n                            dbServer   (test/.../db-test.module.ts)\n                        \n                        \n                            defaultAuth   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            envValidation   (src/.../env.validation.ts)\n                        \n                        \n                            generateRandomToken   (src/.../random-token.ts)\n                        \n                        \n                            getAuthObj   (src/.../get-auth-obj.util.ts)\n                        \n                        \n                            inMemoryDb   (test/.../db-test.module.ts)\n                        \n                        \n                            module   (src/.../main.ts)\n                        \n                        \n                            ONE_KB   (src/.../tracks.controller.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            StageModel   (src/.../stages.module.ts)\n                        \n                        \n                            TaskModel   (src/.../tasks.module.ts)\n                        \n                        \n                            TrackModel   (src/.../tracks.module.ts)\n                        \n                        \n                            uploadFileToCloud   (src/.../upload-img.util.ts)\n                        \n                        \n                            UserModel   (src/.../users.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/shared/decorators/file-upload.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fileName = 'file', description?: string): MethodDecorator => (\n    target: any,\n    propertyKey: string,\n    descriptor: PropertyDescriptor,\n) => {\n    ApiBody({\n        required: true,\n        description,\n        schema: {\n            type: 'object',\n            required: ['true'],\n            properties: {\n                [fileName]: {\n                    type: 'string',\n                    format: 'binary',\n                },\n            },\n        },\n    })(target, propertyKey, descriptor);\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/api-swagger-operation.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiSwaggerOperation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (options: {\n  title: string;\n  description?: string;\n  operationId?: string;\n  deprecated?: boolean;\n}): MethodDecorator => {\n  return (target, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const controllerName = target.constructor.name;\n    ApiOperation({\n      ...options,\n      operationId: `${controllerName.substr(\n        0,\n        controllerName.indexOf('Controller'),\n      )}_${propertyKey}`,\n    })(target, propertyKey, descriptor);\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AUTH_GUARD_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'jwt'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  length8: 2 ** 3,\n  length16: 2 ** 4,\n  length32: 2 ** 5,\n  length64: 2 ** 6,\n  length128: 2 ** 7,\n  length256: 2 ** 8,\n  length512: 2 ** 9,\n  length1024: 2 ** 10\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/authenticate.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Authenticate\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  isAuthenticationEnabled: boolean,\n  decorator: MethodDecorator\n): MethodDecorator => {\n  return (target, key: string | symbol, value: any): any => {\n    if (isAuthenticationEnabled) {\n      decorator(target, key, value);\n    }\n  };\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/errors/auth.errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authErrors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  INVALID_LOGIN_ATTEMPT: new UnauthorizedException(\n    'Email or Password is incorrect'\n  ),\n  INVALID_TOKEN: new ForbiddenException('Invalid token'),\n  EXPIRED_TOKEN: new NotFoundException('Token expired')\n}\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  },\n  entity: Category,\n  entityDto: CategoryDto,\n  createDto: CategoryDto,\n  updateDto: CategoryDto,\n  pagedListDto: PagedCategoryOutDto\n})\n                        \n                    \n\n\n            \n        \n\n    src/tasks/tasks.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Task,\n  createDto: CreateTaskDto,\n  pagedListDto: PagedListTaskDto,\n  entityDto: TaskDto,\n  updateDto: CreateTaskDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Track,\n  entityDto: TrackDto,\n  createDto: CreateTrackDto,\n  updateDto: CreateTrackDto,\n  pagedListDto: PagedTrackOutputDto,\n  auth: {\n    update: [UserRole.ADMIN, UserRole.MENTOR],\n    delete: [UserRole.ADMIN, UserRole.MENTOR]\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ONE_KB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 1024\n                        \n                    \n\n\n            \n        \n\n    src/users/users.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: User,\n  entityDto: UserDto,\n  createDto: CreateUserDto,\n  updateDto: CreateUserDto,\n  pagedListDto: PagedUserOutputDto,\n  auth: {\n    find: [UserRole.ADMIN],\n    findById: [UserRole.ADMIN],\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/stages/stages.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            BaseCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : BaseCrudController({\n  entity: Stage,\n  entityDto: StageDto,\n  createDto: CreateStageDto,\n  updateDto: CreateStageDto,\n  pagedListDto: PagedListStageDto,\n  auth: {\n    update: [UserRole.ADMIN],\n    delete: [UserRole.ADMIN]\n  }\n})\n                        \n                    \n\n\n            \n        \n\n    src/tasks/tasks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: TasksService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TaskModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Task.modelName, schema: Task.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/tracks/tracks.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: TracksService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TrackModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Track.modelName, schema: Track.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/stages/stages.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            baseService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : { provide: BaseService, useClass: StagesService }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            StageModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Stage.modelName, schema: Stage.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/categories/categories.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CategoryModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Category.modelName, schema: Category.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    src/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : ConfigModule.forRoot({\n  isGlobal: true,\n  validationSchema: envValidation(),\n  expandVariables: true,\n  validationOptions: {\n    abortEarly: true\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Database\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRoot(configuration().database.uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true,\n  useFindAndModify: false\n})\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MongooseModule.forFeature([\n    { name: TemporaryToken.modelName, schema: TemporaryToken.schema }\n  ]),\n  PassportModule.register({ defaultStrategy: AUTH_GUARD_TYPE, session: true })\n]\n                        \n                    \n\n\n            \n        \n\n    src/courses/courses.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CourseModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: Course.modelName, schema: Course.schema }\n])\n                        \n                    \n\n\n            \n        \n\n    test/helpers/db-test.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forRootAsync({\n  useFactory: async () => {\n    const uri = await dbServer.getUri();\n    return {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      uri\n    };\n  }\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dbServer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new MongoMemoryServer()\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inMemoryDb\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : dbServer\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/get-auth-obj.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ControllerAuth\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  create: {\n    enableAuth: true,\n    authRoles: []\n  },\n  update: {\n    enableAuth: true,\n    authRoles: []\n  },\n  find: {\n    enableAuth: true,\n    authRoles: []\n  },\n  findById: {\n    enableAuth: true,\n    authRoles: []\n  },\n  delete: {\n    enableAuth: true,\n    authRoles: []\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAuthObj\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (\n  authObj: DefaultAuthObject | boolean\n): ControllerAuth => {\n  const roles = Object.values(UserRole);\n  defaultAuth.create.authRoles = roles;\n  defaultAuth.update.authRoles = roles;\n  defaultAuth.find.authRoles = roles;\n  defaultAuth.findById.authRoles = roles;\n  defaultAuth.delete.authRoles = roles;\n\n  if (typeof authObj === 'boolean') {\n    if (authObj === false) {\n      defaultAuth.create.enableAuth = false;\n      defaultAuth.update.enableAuth = false;\n      defaultAuth.find.enableAuth = false;\n      defaultAuth.findById.enableAuth = false;\n      defaultAuth.delete.enableAuth = false;\n      return defaultAuth;\n    }\n    if (authObj === true) return defaultAuth;\n  }\n\n  if (typeof authObj?.find === 'boolean') {\n    defaultAuth.find.enableAuth = authObj.find;\n  } else if (!!authObj?.find?.length) {\n    defaultAuth.find.authRoles = authObj.find;\n  }\n\n  if (typeof authObj?.findById === 'boolean') {\n    defaultAuth.findById.enableAuth = authObj.findById;\n  } else if (!!authObj?.findById?.length) {\n    defaultAuth.findById.authRoles = authObj.findById;\n  }\n\n  if (typeof authObj?.update === 'boolean') {\n    defaultAuth.update.enableAuth = authObj.update;\n  } else if (!!authObj?.update?.length) {\n    defaultAuth.update.authRoles = authObj.update;\n  }\n\n  if (typeof authObj?.create === 'boolean') {\n    defaultAuth.create.enableAuth = authObj.create;\n  } else if (!!authObj?.create?.length) {\n    defaultAuth.create.authRoles = authObj.create;\n  }\n\n  if (typeof authObj?.delete === 'boolean') {\n    defaultAuth.delete.enableAuth = authObj.delete;\n  } else if (!!authObj?.delete?.length) {\n    defaultAuth.delete.authRoles = authObj.delete;\n  }\n\n  return defaultAuth;\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/validations/env.validation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            envValidation\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): any => {\n  return Joi.object({\n    NODE_ENV: Joi.string()\n      .valid('development', 'production', 'test')\n      .default('development'),\n    PORT: Joi.number().default(3000),\n    JWT_SECRET: Joi.string().required(),\n    JWT_VALIDITY_HOURS: Joi.number().required(),\n    ROOT_URL: Joi.string().uri().required(),\n    REDIS_SERVER_URL: Joi.string().uri().default('redis://localhost:6379'),\n    DATABASE_PORT: Joi.number().default(27017),\n    DATABASE_HOST: Joi.string().default('localhost'),\n    DATABASE_NAME: Joi.string().required(),\n    MONGODB_URI: Joi.string().required(),\n    MAILER_API_KEY: Joi.string().required(),\n    MAILER_DOMAIN: Joi.string().required(),\n    API_AUTH_ENABLED: Joi.string().valid('true', 'false').default('true'),\n    APP_EMAIL: Joi.string().email().required(),\n    CLOUDINARY_API_KEY: Joi.string().required(),\n    CLOUDINARY_API_SECRET: Joi.string().required(),\n    CLOUDINARY_NAME: Joi.string().required()\n  });\n}\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/random-token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            generateRandomToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (size: number): string =>\n  randomBytes(size).toString('hex')\n                        \n                    \n\n\n            \n        \n\n    src/main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            module\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/shared/decorators/roles.decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (...roles: UserRole[]): CustomDecorator =>\n  SetMetadata(UserRole, roles)\n                        \n                    \n\n\n            \n        \n\n    src/shared/utils/upload-img.util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFileToCloud\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : async (file: BufferedFile, folderName: string, uniqId?: string): Promise => {\n\n    const { cloudinary: config } = configuration();\n    cloudinary.v2.config({\n        cloud_name: config.name,\n        api_key: config.key,\n        api_secret: config.secret\n    })\n\n    const dataUri = new DataURIParser()\n    const { content } = dataUri.format(`.${file.originalname.split('.')[0]}`, file.buffer)\n    const { secure_url } = await cloudinary.v2.uploader.upload(content,\n        { discard_original_filename: true, folder: `ccn/${folderName}`, public_id: uniqId });\n\n    return secure_url;\n}\n                        \n                    \n\n\n            \n        \n\n    src/users/users.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : MongooseModule.forFeature([\n  { name: User.modelName, schema: User.schema }\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
